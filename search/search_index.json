{"config":{"indexing":"full","lang":["en"],"min_search_length":3,"prebuild_index":false,"separator":"[\\s\\-]+"},"docs":[{"location":"01_project_overview/","text":"\u9879\u76ee\u6982\u89c8\u6587\u6863 \u672c\u76ee\u5f55\u5305\u542b\u9879\u76ee\u6574\u4f53\u72b6\u6001\u548c\u5206\u6790\u6587\u6863\uff0c\u9002\u5408\u6240\u6709\u56e2\u961f\u6210\u5458\u4e86\u89e3\u9879\u76ee\u5168\u8c8c\u3002 \u6587\u6863\u5217\u8868 \ud83d\udcca \u9879\u76ee\u72b6\u6001 project_status_2025_09_latest.md - \u9879\u76ee\u6700\u65b0\u72b6\u6001\u603b\u89c8\uff08\u2b50\u2b50\u2b50\u2b50\u2b50 \u5fc5\u8bfb\uff09 \u7cfb\u7edf\u67b6\u6784\u56fe \u529f\u80fd\u6a21\u5757\u6982\u8ff0 \u6280\u672f\u6808\u8be6\u60c5 \u5df2\u77e5\u95ee\u9898\u548c\u9650\u5236 \ud83d\udcc8 \u9879\u76ee\u5206\u6790 project_analysis_report.md - \u9879\u76ee\u5168\u9762\u5206\u6790\u62a5\u544a \u6280\u672f\u503a\u52a1\u5206\u6790 \u6027\u80fd\u8bc4\u4f30 \u6539\u8fdb\u5efa\u8bae \u9605\u8bfb\u5efa\u8bae \u65b0\u56e2\u961f\u6210\u5458 \u5148\u8bfb project_status_2025_09_latest.md \u4e86\u89e3\u9879\u76ee\u6574\u4f53\u60c5\u51b5 \u518d\u770b project_analysis_report.md \u6df1\u5165\u7406\u89e3\u6280\u672f\u7ec6\u8282 \u9879\u76ee\u51b3\u7b56\u8005 \u91cd\u70b9\u5173\u6ce8\u9879\u76ee\u5206\u6790\u62a5\u544a\u4e2d\u7684\u6539\u8fdb\u5efa\u8bae\u548c\u6280\u672f\u503a\u52a1\u90e8\u5206 \u66f4\u65b0\u9891\u7387 project_status: \u6708\u5ea6\u66f4\u65b0 project_analysis_report: \u5b63\u5ea6\u66f4\u65b0","title":"\u9879\u76ee\u6982\u89c8\u6587\u6863"},{"location":"01_project_overview/#_1","text":"\u672c\u76ee\u5f55\u5305\u542b\u9879\u76ee\u6574\u4f53\u72b6\u6001\u548c\u5206\u6790\u6587\u6863\uff0c\u9002\u5408\u6240\u6709\u56e2\u961f\u6210\u5458\u4e86\u89e3\u9879\u76ee\u5168\u8c8c\u3002","title":"\u9879\u76ee\u6982\u89c8\u6587\u6863"},{"location":"01_project_overview/#_2","text":"","title":"\u6587\u6863\u5217\u8868"},{"location":"01_project_overview/#_3","text":"project_status_2025_09_latest.md - \u9879\u76ee\u6700\u65b0\u72b6\u6001\u603b\u89c8\uff08\u2b50\u2b50\u2b50\u2b50\u2b50 \u5fc5\u8bfb\uff09 \u7cfb\u7edf\u67b6\u6784\u56fe \u529f\u80fd\u6a21\u5757\u6982\u8ff0 \u6280\u672f\u6808\u8be6\u60c5 \u5df2\u77e5\u95ee\u9898\u548c\u9650\u5236","title":"\ud83d\udcca \u9879\u76ee\u72b6\u6001"},{"location":"01_project_overview/#_4","text":"project_analysis_report.md - \u9879\u76ee\u5168\u9762\u5206\u6790\u62a5\u544a \u6280\u672f\u503a\u52a1\u5206\u6790 \u6027\u80fd\u8bc4\u4f30 \u6539\u8fdb\u5efa\u8bae","title":"\ud83d\udcc8 \u9879\u76ee\u5206\u6790"},{"location":"01_project_overview/#_5","text":"","title":"\u9605\u8bfb\u5efa\u8bae"},{"location":"01_project_overview/#_6","text":"\u5148\u8bfb project_status_2025_09_latest.md \u4e86\u89e3\u9879\u76ee\u6574\u4f53\u60c5\u51b5 \u518d\u770b project_analysis_report.md \u6df1\u5165\u7406\u89e3\u6280\u672f\u7ec6\u8282","title":"\u65b0\u56e2\u961f\u6210\u5458"},{"location":"01_project_overview/#_7","text":"\u91cd\u70b9\u5173\u6ce8\u9879\u76ee\u5206\u6790\u62a5\u544a\u4e2d\u7684\u6539\u8fdb\u5efa\u8bae\u548c\u6280\u672f\u503a\u52a1\u90e8\u5206","title":"\u9879\u76ee\u51b3\u7b56\u8005"},{"location":"01_project_overview/#_8","text":"project_status: \u6708\u5ea6\u66f4\u65b0 project_analysis_report: \u5b63\u5ea6\u66f4\u65b0","title":"\u66f4\u65b0\u9891\u7387"},{"location":"01_project_overview/project_analysis_report/","text":"\u80a1\u7968\u4f30\u503c\u7cfb\u7edf\u9879\u76ee\u5206\u6790\u62a5\u544a \u6587\u6863\u4fe1\u606f \u6587\u6863\u6807\u9898 : \u9879\u76ee\u5206\u6790\u62a5\u544a \u521b\u5efa\u65e5\u671f : 2025\u5e741\u6708 \u7248\u672c : v1.0 \u4f5c\u8005 : huliux \u5ba1\u6838\u72b6\u6001 : \u5f85\u5ba1\u6838 \u6574\u7406\u8bf4\u660e \u672c\u6587\u6863\u5df2\u6574\u5408\u4ee5\u4e0b\u5185\u5bb9\uff1a - \u539frefactor_roadmap.md\u7684\u91cd\u6784\u76ee\u6807\u548c\u5b9e\u65bd\u8def\u5f84 - \u539fimplementation_plan.md\u7684\u6280\u672f\u5b9e\u65bd\u65b9\u6848 \u6267\u884c\u6458\u8981 \u9879\u76ee\u6982\u51b5 \u9879\u76ee\u540d\u79f0 : \u80a1\u7968\u4f30\u503c\u7cfb\u7edf (Stock Valuation System) \u5206\u6790\u65e5\u671f : 2025\u5e749\u6708 \u4ee3\u7801\u89c4\u6a21 : \u7ea615,000\u884cPython\u4ee3\u7801 \u6838\u5fc3\u529f\u80fd : DCF\u4f30\u503c\u3001\u654f\u611f\u6027\u5206\u6790\uff08\u6269\u5c55\u8868\u4e0e\u5b88\u62a4\uff09\u3001\u80a1\u7968\u7b5b\u9009\u3001LLM\u5206\u6790 \u6280\u672f\u6808 : Python + FastAPI + Streamlit + Tushare + PostgreSQL \u6570\u636e\u67b6\u6784 : Tushare (\u4e3b) + PostgreSQL (\u5907) \u6df7\u5408\u67b6\u6784\uff08\u652f\u6301\u6309\u4f30\u503c\u65e5\u56de\u9000\u3001TTM\u80a1\u606f\u591a\u7ea7\u56de\u9000\uff09 \u5173\u952e\u53d1\u73b0\uff082025-09 \u66f4\u65b0\uff09 \u2705 \u529f\u80fd\u5b8c\u6574\u6027\uff1a\u6838\u5fc3\u4f30\u503c\u8def\u5f84\u7a33\u5b9a\uff0c\u654f\u611f\u6027\u5206\u6790\u6269\u5c55\u5e76\u66f4\u7a33\u5065\uff08\u65b0\u589e\u8868\u4e0e\u8fb9\u754c\u5b88\u62a4\uff09\u3002 \u2705 \u7a33\u5065\u6027\uff1aWACC \u5e02\u573a\u6743\u91cd\u5931\u8d25\u81ea\u52a8\u56de\u9000\u76ee\u6807\u7ed3\u6784\uff1bPGR\u2265WACC \u7ec4\u5408\u8df3\u8fc7\u5e76\u63d0\u793a\uff1bGDP \u4e0a\u9650\u53cc\u5c42\u4fdd\u62a4\u3002 \u2705 \u53ef\u89e3\u91ca\u6027\uff1a\u65b0\u589e ev_ebitda_terminal \u3001 implied_pgr \uff0c\u5e76\u5bf9 ev_ebitda \u53e3\u5f84\uff08LTM vs Terminal\uff09\u505a\u660e\u786e\u533a\u5206\u3002 \u2705 \u6d4b\u8bd5\u8fdb\u5c55\uff1a\u65b0\u589e\u654f\u611f\u6027\u6269\u5c55\u7684\u96c6\u6210\u6d4b\u8bd5\u7528\u4f8b\u5e76\u5168\u90e8\u901a\u8fc7\uff1b\u65e7\u7528\u4f8b\u517c\u5bb9\u3002 \u26a0\ufe0f \u67b6\u6784\u590d\u6742\u5ea6\uff1a\u670d\u52a1\u5c42\u7f16\u6392\u903b\u8f91\u589e\u52a0\uff0c\u9700\u5728\u4e0b\u4e00\u6b65\u5c06\u654f\u611f\u6027/\u60c5\u666f\u6846\u67b6\u62bd\u8c61\u4e3a\u72ec\u7acb\u7ec4\u4ef6\uff0c\u964d\u4f4e\u8026\u5408\u3002 \ud83c\udd95 \u6570\u636e\u5c42\uff1a\u4f30\u503c\u65e5\u56de\u9000\u3001TTM\u80a1\u606f\u591a\u7ea7\u56de\u9000\u4e0e LTM \u57fa\u671f\u5207\u6362\u903b\u8f91\u843d\u5730\uff0c\u6570\u636e\u53ef\u7528\u6027\u63d0\u5347\u3002 \u91cd\u6784\u5fc5\u8981\u6027\u8bc4\u4f30 \u91cd\u6784\u7d27\u8feb\u6027 : \ud83d\udd34 \u9ad8 \u4e1a\u52a1\u5f71\u54cd : \ud83d\udfe1 \u4e2d\u7b49 \u6280\u672f\u503a\u52a1 : \ud83d\udd34 \u4e25\u91cd \u7ef4\u62a4\u6210\u672c : \ud83d\udd34 \u9ad8 \u8be6\u7ec6\u5206\u6790\u7ed3\u679c 1. \u67b6\u6784\u5206\u6790 1.1 \u6df7\u5408\u67b6\u6784\u6982\u89c8 \u80a1\u7968\u4f30\u503c\u7cfb\u7edf\u6df7\u5408\u67b6\u6784 \u251c\u2500\u2500 \u524d\u7aef\u5c42 (Streamlit) \u2502 \u251c\u2500\u2500 streamlit_app.py (\u4e3b\u5e94\u7528) \u2502 \u2514\u2500\u2500 stock_screener_app.py (\u7b5b\u9009\u5668) \u251c\u2500\u2500 API\u5c42 (FastAPI) \u2502 \u251c\u2500\u2500 api/main.py (API\u5165\u53e3) \u2502 \u251c\u2500\u2500 api/models.py (\u6570\u636e\u6a21\u578b) \u2502 \u2514\u2500\u2500 api/sensitivity_models.py (\u654f\u611f\u6027\u6a21\u578b) \u251c\u2500\u2500 \u4e1a\u52a1\u903b\u8f91\u5c42 \u2502 \u251c\u2500\u2500 valuation_service.py (\u4f30\u503c\u670d\u52a1\uff1a\u7edf\u4e00\u7f16\u6392\u3001\u56de\u9000\u4e0e\u5b88\u62a4) \u2502 \u251c\u2500\u2500 financial_forecaster.py (\u8d22\u52a1\u9884\u6d4b) \u2502 \u2514\u2500\u2500 sensitivity_analyzer.py / \u670d\u52a1\u5185\u5b9e\u73b0\uff08\u654f\u611f\u6027\uff1a\u6269\u5c55\u8868\u3001\u8fb9\u754c\u8df3\u8fc7\u3001\u56de\u586b\u903b\u8f91\uff09 \u251c\u2500\u2500 \u8ba1\u7b97\u5f15\u64ce\u5c42 \u2502 \u251c\u2500\u2500 wacc_calculator.py (WACC\u8ba1\u7b97) \u2502 \u251c\u2500\u2500 present_value_calculator.py (\u73b0\u503c\u8ba1\u7b97) \u2502 \u251c\u2500\u2500 terminal_value_calculator.py (\u7ec8\u503c\u8ba1\u7b97) \u2502 \u2514\u2500\u2500 equity_bridge_calculator.py (\u6743\u76ca\u6865\u63a5) \u2514\u2500\u2500 \u6df7\u5408\u6570\u636e\u5c42 \u251c\u2500\u2500 data_source_manager.py (\u6570\u636e\u6e90\u7ba1\u7406) \u251c\u2500\u2500 tushare_data_fetcher.py (Tushare\u6570\u636e\u83b7\u53d6) \u251c\u2500\u2500 postgresql_data_fetcher.py (PostgreSQL\u6570\u636e\u83b7\u53d6) \u251c\u2500\u2500 data_cache_manager.py (\u7f13\u5b58\u7ba1\u7406) \u251c\u2500\u2500 data_processor.py (\u6570\u636e\u5904\u7406) \u2514\u2500\u2500 stock_screener_data.py (\u7b5b\u9009\u6570\u636e) 1.2 \u6570\u636e\u6e90\u67b6\u6784\u8bbe\u8ba1 \u6df7\u5408\u6570\u636e\u6e90\u67b6\u6784 \u250c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2510 \u2502 \u6570\u636e\u6e90\u7ba1\u7406\u5c42 \u2502 \u2502 \u250c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2510 \u250c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2510 \u2502 \u2502 \u2502 \u914d\u7f6e\u7ba1\u7406 \u2502 \u2502 \u964d\u7ea7\u7b56\u7565 \u2502 \u2502 \u2502 \u2502 (.env\u5f00\u5173\u63a7\u5236) \u2502 \u2502 (\u81ea\u52a8\u5207\u6362\u673a\u5236) \u2502 \u2502 \u2502 \u2514\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2518 \u2514\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2518 \u2502 \u2514\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2518 \u2502 \u2502 \u25bc \u25bc \u250c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2510 \u250c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2510 \u2502 Tushare API \u2502 \u2502 PostgreSQL \u2502 \u2502 (\u4e3b\u6570\u636e\u6e90) \u2502\u25c4\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u25ba\u2502 (\u5907\u6570\u636e\u6e90) \u2502 \u2502 \u2502 \u6545\u969c\u5207\u6362 \u2502 \u2502 \u2502 \u2022 \u5b9e\u65f6\u6570\u636e \u2502 \u2502 \u2022 \u5386\u53f2\u6570\u636e \u2502 \u2502 \u2022 \u9ad8\u9891\u66f4\u65b0 \u2502 \u2502 \u2022 \u7a33\u5b9a\u53ef\u9760 \u2502 \u2502 \u2022 \u4e30\u5bcc\u5b57\u6bb5 \u2502 \u2502 \u2022 \u672c\u5730\u7f13\u5b58 \u2502 \u2514\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2518 \u2514\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2518 \u2502 \u2502 \u2514\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u252c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2518 \u25bc \u250c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2510 \u2502 \u7f13\u5b58\u7ba1\u7406\u5c42 \u2502 \u2502 \u2502 \u2502 \u2022 Redis\u7f13\u5b58 \u2502 \u2502 \u2022 \u672c\u5730\u7f13\u5b58 \u2502 \u2502 \u2022 \u667a\u80fd\u8fc7\u671f \u2502 \u2514\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2518 1.3 \u6df7\u5408\u67b6\u6784\u4f18\u52bf \u5206\u5c42\u6e05\u6670 : \u524d\u7aef\u3001API\u3001\u4e1a\u52a1\u903b\u8f91\u3001\u8ba1\u7b97\u3001\u6570\u636e\u5c42\u5206\u79bb \u529f\u80fd\u6a21\u5757\u5316 : \u5404\u8ba1\u7b97\u5668\u72ec\u7acb\u5c01\u88c5 \u6280\u672f\u6808\u73b0\u4ee3 : \u4f7f\u7528FastAPI\u3001Streamlit\u7b49\u73b0\u4ee3\u6846\u67b6 \u6269\u5c55\u6027\u826f\u597d : \u652f\u6301\u591a\u79cd\u4f30\u503c\u65b9\u6cd5\u548c\u5206\u6790\u529f\u80fd \ud83c\udd95 \u6570\u636e\u53ef\u9760\u6027\uff1a\u53cc\u6570\u636e\u6e90 + \u4f30\u503c\u65e5\u56de\u9000 + \u80a1\u606fTTM\u591a\u7ea7\u56de\u9000\u3002 \ud83c\udd95 \u6027\u80fd\u4f18\u5316\uff1a\u654f\u611f\u6027\u5728\u5e38\u89c1\u89c4\u6a21\uff085\u00d75/7\u00d77\uff09\u4e0b\u7a33\u5b9a\uff1b\u540e\u7eed\u53ef\u5bf9\u4ec5\u6539WACC\u7684\u683c\u4f7f\u7528\u91cd\u6298\u73b0\u4f18\u5316\u3002 \ud83c\udd95 \u7075\u6d3b\u5207\u6362\uff1a\u901a\u8fc7 .env \u548c\u8bf7\u6c42\u53c2\u6570\u63a7\u5236 GDP \u4e0a\u9650\u4e0e LTM \u57fa\u671f\u7b49\u884c\u4e3a\u3002 \ud83c\udd95 \u6210\u672c\u63a7\u5236\uff1a\u4f18\u5148\u4f7f\u7528\u7f13\u5b58/\u5907\u6e90\uff0c\u51cf\u5c11\u9891\u7e41\u5916\u90e8\u8c03\u7528\u3002 1.4 \u5f85\u4f18\u5316\u95ee\u9898 \u6a21\u5757\u8026\u5408 : \u90e8\u5206\u6a21\u5757\u95f4\u4f9d\u8d56\u5173\u7cfb\u590d\u6742 \u4ee3\u7801\u91cd\u590d : \u5b58\u5728\u91cd\u590d\u7684\u6570\u636e\u5904\u7406\u903b\u8f91 \u9519\u8bef\u5904\u7406 : \u5df2\u589e\u5f3a WACC \u4e0e PGR \u8fb9\u754c\uff1b\u4ecd\u9700\u7edf\u4e00\u5f02\u5e38\u4e0e\u544a\u8b66\u5206\u7ea7\uff08error/warn/info\uff09\u3002 \u914d\u7f6e\u7ba1\u7406 : \u9700\u8981\u7edf\u4e00\u7684\u6570\u636e\u6e90\u914d\u7f6e\u7ba1\u7406 \ud83c\udd95 \u7f13\u5b58\u7b56\u7565 : \u9700\u8981\u4f18\u5316\u7f13\u5b58\u5931\u6548\u548c\u66f4\u65b0\u7b56\u7565 \ud83c\udd95 \u76d1\u63a7\u544a\u8b66 : \u9700\u8981\u5efa\u7acb\u6570\u636e\u6e90\u72b6\u6001\u76d1\u63a7\u673a\u5236 2. \u4ee3\u7801\u8d28\u91cf\u5206\u6790 2.1 Pylint\u5206\u6790\u7ed3\u679c \u603b\u4f53\u8bc4\u5206 : 3.89/10 \u26a0\ufe0f \u4e3b\u8981\u95ee\u9898\u5206\u5e03 : \u95ee\u9898\u7c7b\u578b | \u6570\u91cf | \u4e25\u91cd\u7a0b\u5ea6 ------------------------|-------|---------- \u5355\u884c\u591a\u8bed\u53e5 (C0321) | 45 | \u4e2d\u7b49 \u6355\u83b7\u8fc7\u4e8e\u5bbd\u6cdb\u5f02\u5e38 (W0718) | 23 | \u9ad8 \u5206\u652f\u8fc7\u591a (R0912) | 12 | \u9ad8 \u8bed\u53e5\u8fc7\u591a (R0915) | 8 | \u9ad8 \u91cd\u590d\u5bfc\u5165 (W0404) | 15 | \u4f4e \u5bfc\u5165\u4f4d\u7f6e\u4e0d\u6b63\u786e (C0413) | 18 | \u4e2d\u7b49 \u5bfc\u5165\u987a\u5e8f\u4e0d\u6b63\u786e (C0411) | 22 | \u4f4e \u672a\u4f7f\u7528\u5bfc\u5165 (W0611) | 31 | \u4f4e 2.2 \u4ee3\u7801\u590d\u6742\u5ea6\u5206\u6790 \u9ad8\u590d\u6742\u5ea6\u51fd\u6570 : - financial_forecaster.py::forecast_financials() - \u5faa\u73af\u590d\u6742\u5ea6: 15 - data_processor.py::process_financial_data() - \u5faa\u73af\u590d\u6742\u5ea6: 12 - streamlit_app.py::render_valuation_results() - \u5faa\u73af\u590d\u6742\u5ea6: 10 \u957f\u51fd\u6570\u95ee\u9898 : - \u5e73\u5747\u51fd\u6570\u957f\u5ea6: 45\u884c - \u8d85\u8fc7100\u884c\u7684\u51fd\u6570: 8\u4e2a - \u6700\u957f\u51fd\u6570: 180\u884c ( streamlit_app.py::main() ) 2.3 \u4ee3\u7801\u98ce\u683c\u95ee\u9898 \u547d\u540d\u4e0d\u4e00\u81f4 : \u6df7\u7528\u9a7c\u5cf0\u548c\u4e0b\u5212\u7ebf\u547d\u540d \u6ce8\u91ca\u4e0d\u8db3 : \u5173\u952e\u4e1a\u52a1\u903b\u8f91\u7f3a\u4e4f\u6ce8\u91ca \u9b54\u6cd5\u6570\u5b57 : \u5b58\u5728\u786c\u7f16\u7801\u7684\u6570\u503c\u5e38\u91cf \u5bfc\u5165\u6df7\u4e71 : \u5bfc\u5165\u8bed\u53e5\u7ec4\u7ec7\u4e0d\u89c4\u8303 3. \u529f\u80fd\u9700\u6c42\u5206\u6790 3.1 \u6838\u5fc3\u529f\u80fd\u6a21\u5757 \u4f30\u503c\u8ba1\u7b97\u6a21\u5757 : - \u2705 DCF\u4f30\u503c\u8ba1\u7b97 - \u2705 WACC\u8ba1\u7b97 (\u76ee\u6807\u6743\u91cd/\u5e02\u573a\u6743\u91cd) - \u2705 \u7ec8\u503c\u8ba1\u7b97 (\u6c38\u7eed\u589e\u957f/\u9000\u51fa\u500d\u6570) - \u2705 \u6743\u76ca\u4ef7\u503c\u8ba1\u7b97 - \u2705 \u654f\u611f\u6027\u5206\u6790\uff08\u65b0\u589e ev_ebitda_terminal \u3001 implied_pgr \u3001\u6309\u683c PE \u56de\u586b\uff1b\u975e\u6cd5\u7ec4\u5408\u8df3\u8fc7\uff09 \u6570\u636e\u5904\u7406\u6a21\u5757 : - \u2705 Tushare\u6570\u636e\u83b7\u53d6 (\u4e3b\u6570\u636e\u6e90) - \u2705 PostgreSQL\u6570\u636e\u83b7\u53d6 (\u5907\u6570\u636e\u6e90) - \u2705 \u667a\u80fd\u6570\u636e\u6e90\u5207\u6362\u673a\u5236 - \u2705 \u8d22\u52a1\u6570\u636e\u6e05\u6d17\u548c\u6807\u51c6\u5316 - \u2705 \u5386\u53f2\u6bd4\u7387\u8ba1\u7b97 - \u2705 \u591a\u5c42\u7ea7\u7f13\u5b58\u673a\u5236 - \ud83c\udd95 \u4f30\u503c\u57fa\u671f\uff1a\u652f\u6301 Annual/LTM \u5207\u6362\u4e0e LTM \u660e\u7ec6\u8c03\u8bd5\u5207\u7247\u3002 - \ud83c\udd95 \u6570\u636e\u6e90\u72b6\u6001\u76d1\u63a7\uff08\u89c4\u5212\u4e2d\uff09 - \ud83c\udd95 \u81ea\u52a8\u964d\u7ea7\u548c\u6062\u590d\u7b56\u7565\uff08\u89c4\u5212\u4e2d\uff09 \u524d\u7aef\u754c\u9762\u6a21\u5757 : - \u2705 Streamlit\u4e3b\u5e94\u7528\u754c\u9762 - \u4e13\u4e1a\u91d1\u878d\u6570\u636e\u53ef\u89c6\u5316\u5e73\u53f0 - \u2705 \u4ea4\u4e92\u5f0f\u53c2\u6570\u914d\u7f6e\u9762\u677f - \u652f\u6301\u5b9e\u65f6\u53c2\u6570\u8c03\u6574 - \u2705 \u52a8\u6001\u7ed3\u679c\u5c55\u793a\u754c\u9762 - \u4e30\u5bcc\u7684\u56fe\u8868\u548c\u6570\u636e\u5c55\u793a - \u2705 \u80a1\u7968\u7b5b\u9009\u5668 - \u591a\u7ef4\u5ea6\u7b5b\u9009\u548c\u6392\u5e8f\u529f\u80fd - \u2705 \u54cd\u5e94\u5f0f\u5e03\u5c40\u8bbe\u8ba1 - \u9002\u914d\u4e0d\u540c\u5c4f\u5e55\u5c3a\u5bf8 API\u670d\u52a1\u6a21\u5757 : - \u2705 RESTful API\u63a5\u53e3 - \u2705 \u8bf7\u6c42\u9a8c\u8bc1 - \u2705 \u54cd\u5e94\u683c\u5f0f\u5316 - \u2705 \u9519\u8bef\u5904\u7406 - \u2705 \u8c03\u8bd5\u5207\u7247\uff1a debug_request_slice \uff08\u542b\u884c\u4e1a\u9884\u8bbe\u4e0e\u504f\u79bb diff\uff09 3.2 \u4e1a\u52a1\u6d41\u7a0b\u5206\u6790 \u4e3b\u8981\u4e1a\u52a1\u6d41\u7a0b : 1. \u80a1\u7968\u4f30\u503c\u6d41\u7a0b : \u8f93\u5165\u80a1\u7968\u4ee3\u7801 \u2192 \u83b7\u53d6\u8d22\u52a1\u6570\u636e \u2192 \u6570\u636e\u6e05\u6d17 \u2192 \u8d22\u52a1\u9884\u6d4b \u2192 DCF\u8ba1\u7b97 \u2192 \u7ed3\u679c\u5c55\u793a \u654f\u611f\u6027\u5206\u6790\u6d41\u7a0b : \u8bbe\u7f6e\u5206\u6790\u53c2\u6570 \u2192 \u6279\u91cf\u8ba1\u7b97 \u2192 \u751f\u6210\u654f\u611f\u6027\u77e9\u9635 \u2192 \u53ef\u89c6\u5316\u5c55\u793a \u80a1\u7968\u7b5b\u9009\u6d41\u7a0b : \u8bbe\u7f6e\u7b5b\u9009\u6761\u4ef6 \u2192 \u83b7\u53d6\u5e02\u573a\u6570\u636e \u2192 \u5e94\u7528\u7b5b\u9009\u903b\u8f91 \u2192 \u7ed3\u679c\u6392\u5e8f\u5c55\u793a 3.3 \u7528\u6237\u9700\u6c42\u6ee1\u8db3\u5ea6 \u529f\u80fd\u5b8c\u6574\u6027 : 90% \u2705 \u6613\u7528\u6027 : 75% \ud83d\udfe1 \u6027\u80fd\u8868\u73b0 : 70% \ud83d\udfe1 \u7a33\u5b9a\u6027 : 65% \u26a0\ufe0f 4. \u6280\u672f\u503a\u52a1\u8bc4\u4f30 4.1 \u6280\u672f\u503a\u52a1\u5206\u7c7b \u4ee3\u7801\u503a\u52a1 (\u4e25\u91cd \ud83d\udd34): - \u4ee3\u7801\u8d28\u91cf\u4f4e\uff0c\u7ef4\u62a4\u56f0\u96be - \u51fd\u6570\u8fc7\u957f\uff0c\u903b\u8f91\u590d\u6742 - \u7f3a\u4e4f\u7edf\u4e00\u7684\u7f16\u7801\u89c4\u8303 - \u5f02\u5e38\u5904\u7406\u4e0d\u5b8c\u5584 \u67b6\u6784\u503a\u52a1 (\u4e2d\u7b49 \ud83d\udfe1): - \u6a21\u5757\u8026\u5408\u5ea6\u8f83\u9ad8 - \u7f3a\u4e4f\u6e05\u6670\u7684\u63a5\u53e3\u5b9a\u4e49 - \u914d\u7f6e\u7ba1\u7406\u5206\u6563 - \u7f3a\u4e4f\u7edf\u4e00\u7684\u65e5\u5fd7\u7cfb\u7edf - \ud83c\udd95 \u6570\u636e\u6e90\u62bd\u8c61\u5c42\u9700\u8981\u91cd\u6784 - \ud83c\udd95 \u7f13\u5b58\u7b56\u7565\u9700\u8981\u7edf\u4e00\u7ba1\u7406 - \ud83c\udd95 \u76d1\u63a7\u548c\u544a\u8b66\u673a\u5236\u5f85\u5efa\u7acb \u6d4b\u8bd5\u503a\u52a1 (\u8f7b\u5fae \ud83d\udfe2): - \u6d4b\u8bd5\u8986\u76d6\u7387\u9700\u63d0\u5347 - \u7f3a\u4e4f\u96c6\u6210\u6d4b\u8bd5 - \u6027\u80fd\u6d4b\u8bd5\u4e0d\u8db3 \u6587\u6863\u503a\u52a1 (\u4e2d\u7b49 \ud83d\udfe1): - API\u6587\u6863\u4e0d\u5b8c\u6574 - \u4e1a\u52a1\u903b\u8f91\u6587\u6863\u7f3a\u5931 - \u90e8\u7f72\u6587\u6863\u9700\u5b8c\u5584 4.2 \u503a\u52a1\u5f71\u54cd\u8bc4\u4f30 \u5f00\u53d1\u6548\u7387\u5f71\u54cd : - \u65b0\u529f\u80fd\u5f00\u53d1\u901f\u5ea6: -40% - Bug\u4fee\u590d\u65f6\u95f4: +60% - \u4ee3\u7801\u5ba1\u67e5\u65f6\u95f4: +80% \u7ef4\u62a4\u6210\u672c\u5f71\u54cd : - \u65e5\u5e38\u7ef4\u62a4\u6210\u672c: +50% - \u65b0\u4eba\u4e0a\u624b\u65f6\u95f4: +100% - \u7cfb\u7edf\u7a33\u5b9a\u6027\u98ce\u9669: +70% 5. \u6027\u80fd\u5206\u6790 5.1 \u6027\u80fd\u57fa\u51c6\u6d4b\u8bd5 API\u54cd\u5e94\u65f6\u95f4 : \u63a5\u53e3\u7c7b\u578b | \u5e73\u5747\u54cd\u5e94\u65f6\u95f4 | 95%\u5206\u4f4d\u6570 | \u76ee\u6807\u503c ------------------|-------------|-----------|-------- \u5355\u80a1\u7968\u4f30\u503c | 1.2s | 2.1s | <2s \u654f\u611f\u6027\u5206\u6790 | 3.5s | 5.8s | <5s\uff08\u5e38\u89c4 5\u00d75 \u7f51\u683c\uff1b\u542b\u8fb9\u754c\u8df3\u8fc7\uff09 \u80a1\u7968\u7b5b\u9009 | 0.8s | 1.3s | <1s \u6570\u636e\u83b7\u53d6 | 0.5s | 0.9s | <1s \u5185\u5b58\u4f7f\u7528\u60c5\u51b5 : - \u57fa\u7840\u5185\u5b58\u5360\u7528: ~150MB - \u5cf0\u503c\u5185\u5b58\u5360\u7528: ~400MB - \u5185\u5b58\u6cc4\u6f0f\u98ce\u9669: \u4f4e \u5e76\u53d1\u6027\u80fd : - \u6700\u5927\u5e76\u53d1\u7528\u6237: 20 - \u54cd\u5e94\u65f6\u95f4\u589e\u957f: \u7ebf\u6027 - \u7cfb\u7edf\u7a33\u5b9a\u6027: \u826f\u597d 5.2 \u6027\u80fd\u74f6\u9888\u8bc6\u522b \u8ba1\u7b97\u5bc6\u96c6\u578b\u64cd\u4f5c : - \u654f\u611f\u6027\u5206\u6790\u77e9\u9635\u8ba1\u7b97 - \u5927\u91cf\u5386\u53f2\u6570\u636e\u5904\u7406 - \u590d\u6742\u8d22\u52a1\u9884\u6d4b\u8ba1\u7b97 I/O\u5bc6\u96c6\u578b\u64cd\u4f5c : - Tushare API\u8c03\u7528 - \u6570\u636e\u5e93\u67e5\u8be2\u64cd\u4f5c - \u6587\u4ef6\u7f13\u5b58\u8bfb\u5199 \u4f18\u5316\u5efa\u8bae : - \u5b9e\u73b0\u8ba1\u7b97\u7ed3\u679c\u7f13\u5b58 - \u4f18\u5316\u6570\u636e\u5e93\u67e5\u8be2 - \u4f7f\u7528\u5f02\u6b65\u5904\u7406 - \u5b9e\u73b0\u8ba1\u7b97\u4efb\u52a1\u961f\u5217 6. \u5b89\u5168\u6027\u5206\u6790 6.1 \u5b89\u5168\u98ce\u9669\u8bc4\u4f30 \u6570\u636e\u5b89\u5168 (\u4e2d\u7b49\u98ce\u9669 \ud83d\udfe1): - API\u5bc6\u94a5\u660e\u6587\u5b58\u50a8\u98ce\u9669 - \u7528\u6237\u8f93\u5165\u9a8c\u8bc1\u4e0d\u5145\u5206 - \u654f\u611f\u6570\u636e\u65e5\u5fd7\u8bb0\u5f55 \u7cfb\u7edf\u5b89\u5168 (\u4f4e\u98ce\u9669 \ud83d\udfe2): - \u65e0\u660e\u663e\u7684\u6ce8\u5165\u653b\u51fb\u98ce\u9669 - \u8bbf\u95ee\u63a7\u5236\u57fa\u672c\u5b8c\u5584 - \u4f9d\u8d56\u5e93\u5b89\u5168\u6027\u826f\u597d \u7f51\u7edc\u5b89\u5168 (\u4f4e\u98ce\u9669 \ud83d\udfe2): - HTTPS\u901a\u4fe1 - CORS\u914d\u7f6e\u5408\u7406 - \u65e0\u660e\u663e\u7684\u7f51\u7edc\u653b\u51fb\u9762 6.2 \u5b89\u5168\u6539\u8fdb\u5efa\u8bae \u5b9e\u73b0\u73af\u5883\u53d8\u91cf\u7ba1\u7406 \u52a0\u5f3a\u8f93\u5165\u9a8c\u8bc1 \u5b9e\u73b0\u8bbf\u95ee\u65e5\u5fd7\u5ba1\u8ba1 \u5b9a\u671f\u66f4\u65b0\u4f9d\u8d56\u5e93 7. \u6d4b\u8bd5\u73b0\u72b6\u5206\u6790 7.1 \u6d4b\u8bd5\u8986\u76d6\u60c5\u51b5 \u6d4b\u8bd5\u7edf\u8ba1\uff08\u66f4\u65b0\uff09 : - \u6d4b\u8bd5\u7528\u4f8b\u603b\u6570: 100+\uff08\u65b0\u589e\u654f\u611f\u6027\u6269\u5c55\u7528\u4f8b\uff09 - \u6d4b\u8bd5\u901a\u8fc7\u7387: 100% - \u4ee3\u7801\u8986\u76d6\u7387: 62%+\uff08\u5355\u6587\u4ef6\u63d0\u5347\uff09 - \u6d4b\u8bd5\u6267\u884c\u65f6\u95f4: ~50\u79d2 \u8986\u76d6\u7387\u5206\u5e03 : \u6a21\u5757\u7c7b\u578b | \u8986\u76d6\u7387 | \u6d4b\u8bd5\u7528\u4f8b\u6570 ------------------|---------|---------- \u8ba1\u7b97\u5668\u6a21\u5757 | 85% | 45 API\u63a5\u53e3 | 45% | 12 \u6570\u636e\u5904\u7406 | 70% | 25 \u4e1a\u52a1\u903b\u8f91 | 55% | 15 7.2 \u6d4b\u8bd5\u8d28\u91cf\u8bc4\u4f30 \u6d4b\u8bd5\u4f18\u52bf : - \u6838\u5fc3\u8ba1\u7b97\u903b\u8f91\u6d4b\u8bd5\u5145\u5206 - \u6d4b\u8bd5\u7528\u4f8b\u8d28\u91cf\u8f83\u9ad8 - \u6d4b\u8bd5\u6267\u884c\u7a33\u5b9a \u6d4b\u8bd5\u4e0d\u8db3 : - \u96c6\u6210\u6d4b\u8bd5\u7f3a\u5931 - API\u6d4b\u8bd5\u8986\u76d6\u4e0d\u8db3 - \u6027\u80fd\u6d4b\u8bd5\u7f3a\u5931 - E2E\u6d4b\u8bd5\u7f3a\u5931 - \u60c5\u666f\u5206\u6790\uff08\u591a\u60c5\u666f\u5408\u6210\uff09\u4ec5\u6587\u6863\u65b9\u6848\uff0c\u5f85\u5b9e\u73b0\u4e0e\u6d4b\u8bd5 8. \u4f9d\u8d56\u5206\u6790 8.1 \u6838\u5fc3\u4f9d\u8d56 Python\u4f9d\u8d56 : \u4f9d\u8d56\u5e93 | \u7248\u672c | \u7528\u9014 | \u98ce\u9669\u8bc4\u4f30 -----------------|---------|----------------|---------- fastapi | 0.104.1 | Web\u6846\u67b6 | \u4f4e streamlit | 1.28.1 | \u524d\u7aef\u754c\u9762 | \u4f4e tushare | 1.2.89 | \u6570\u636e\u6e90 | \u4e2d pandas | 2.1.3 | \u6570\u636e\u5904\u7406 | \u4f4e numpy | 1.25.2 | \u6570\u503c\u8ba1\u7b97 | \u4f4e scipy | 1.11.4 | \u79d1\u5b66\u8ba1\u7b97 | \u4f4e plotly | 5.17.0 | \u6570\u636e\u53ef\u89c6\u5316 | \u4f4e \u7cfb\u7edf\u4f9d\u8d56 : - Python 3.9+ - \u64cd\u4f5c\u7cfb\u7edf: \u8de8\u5e73\u53f0\u652f\u6301 - \u5185\u5b58\u8981\u6c42: \u6700\u5c0f512MB - \u7f51\u7edc\u8981\u6c42: \u7a33\u5b9a\u7684\u4e92\u8054\u7f51\u8fde\u63a5 8.2 \u4f9d\u8d56\u98ce\u9669\u8bc4\u4f30 \u9ad8\u98ce\u9669\u4f9d\u8d56 : - Tushare: \u7b2c\u4e09\u65b9\u4ed8\u8d39\u6570\u636e\u6e90\uff0c\u5b58\u5728API\u9650\u6d41\u548c\u670d\u52a1\u4e2d\u65ad\u98ce\u9669 \u4e2d\u98ce\u9669\u4f9d\u8d56 : - PostgreSQL: \u6570\u636e\u5e93\u8fde\u63a5\u7a33\u5b9a\u6027\u4f9d\u8d56 - Redis: \u7f13\u5b58\u670d\u52a1\u53ef\u7528\u6027\u4f9d\u8d56 - \ud83c\udd95 \u6570\u636e\u6e90\u540c\u6b65\u673a\u5236: \u53cc\u6570\u636e\u6e90\u4e00\u81f4\u6027\u7ef4\u62a4\u590d\u6742\u5ea6 \u4f4e\u98ce\u9669\u4f9d\u8d56 : - \u5176\u4ed6\u6240\u6709\u4f9d\u8d56\u5e93\u5747\u4e3a\u6210\u719f\u7a33\u5b9a\u7684\u5f00\u6e90\u9879\u76ee 9. \u53ef\u7ef4\u62a4\u6027\u5206\u6790 9.1 \u524d\u7aef\u754c\u9762\u67b6\u6784 Streamlit\u6846\u67b6\u4f18\u52bf : 8/10 \ud83d\udfe2 - \u4e13\u4e1a\u7684\u91d1\u878d\u6570\u636e\u53ef\u89c6\u5316\u7ec4\u4ef6\u5e93 - \u539f\u751f\u652f\u6301\u5b9e\u65f6\u6570\u636e\u66f4\u65b0\u548c\u4ea4\u4e92 - \u4e30\u5bcc\u7684\u56fe\u8868\u7c7b\u578b\u548c\u81ea\u5b9a\u4e49\u9009\u9879 - \u54cd\u5e94\u5f0f\u5e03\u5c40\u548c\u73b0\u4ee3\u5316UI\u8bbe\u8ba1 \u7ec4\u4ef6\u5316\u7a0b\u5ea6 : 7/10 \ud83d\udfe1 - \u4e3b\u8981\u754c\u9762\u7ec4\u4ef6\u5df2\u6a21\u5757\u5316 - \u53ef\u590d\u7528\u7ec4\u4ef6\u9700\u8981\u8fdb\u4e00\u6b65\u62bd\u8c61 - \u72b6\u6001\u7ba1\u7406\u9700\u8981\u4f18\u5316 \u7528\u6237\u4f53\u9a8c : 8/10 \ud83d\udfe2 - \u76f4\u89c2\u7684\u53c2\u6570\u914d\u7f6e\u754c\u9762 - \u5b9e\u65f6\u7684\u8ba1\u7b97\u7ed3\u679c\u5c55\u793a - \u4e13\u4e1a\u7684\u91d1\u878d\u56fe\u8868\u53ef\u89c6\u5316 - \u6d41\u7545\u7684\u4ea4\u4e92\u54cd\u5e94 9.2 \u7ef4\u62a4\u6027\u6307\u6807 \u4ee3\u7801\u53ef\u8bfb\u6027 : 6/10 \ud83d\udfe1 - \u51fd\u6570\u547d\u540d\u57fa\u672c\u6e05\u6670 - \u6ce8\u91ca\u8986\u76d6\u7387\u4e0d\u8db3 - \u4ee3\u7801\u7ed3\u6784\u9700\u8981\u4f18\u5316 \u6a21\u5757\u5316\u7a0b\u5ea6 : 7/10 \ud83d\udfe2 - \u529f\u80fd\u6a21\u5757\u5212\u5206\u5408\u7406 - \u63a5\u53e3\u5b9a\u4e49\u57fa\u672c\u6e05\u6670 - \u4f9d\u8d56\u5173\u7cfb\u53ef\u4ee5\u4f18\u5316 \u6269\u5c55\u6027 : 8/10 \ud83d\udfe2 - \u67b6\u6784\u652f\u6301\u529f\u80fd\u6269\u5c55 - \u65b0\u589e\u8ba1\u7b97\u5668\u5bb9\u6613 - \u6570\u636e\u6e90\u53ef\u4ee5\u6269\u5c55 \u6d4b\u8bd5\u53cb\u597d\u6027 : 7/10 \ud83d\udfe2 - \u6838\u5fc3\u903b\u8f91\u6613\u4e8e\u6d4b\u8bd5 - \u4f9d\u8d56\u6ce8\u5165\u9700\u8981\u6539\u8fdb - Mock\u652f\u6301\u9700\u8981\u52a0\u5f3a 9.2 \u7ef4\u62a4\u6210\u672c\u8bc4\u4f30 \u5f53\u524d\u7ef4\u62a4\u6210\u672c : \u9ad8 \ud83d\udd34 - \u4ee3\u7801\u8d28\u91cf\u95ee\u9898\u5bfc\u81f4\u7ef4\u62a4\u56f0\u96be - \u7f3a\u4e4f\u5b8c\u5584\u7684\u6587\u6863 - \u65b0\u4eba\u4e0a\u624b\u6210\u672c\u9ad8 \u91cd\u6784\u540e\u9884\u671f : \u4e2d\u7b49 \ud83d\udfe1 - \u4ee3\u7801\u8d28\u91cf\u663e\u8457\u63d0\u5347 - \u6587\u6863\u5b8c\u5584 - \u7ef4\u62a4\u6548\u7387\u63d0\u9ad860% 10. \u4e1a\u52a1\u4ef7\u503c\u8bc4\u4f30 10.1 \u529f\u80fd\u4ef7\u503c \u6838\u5fc3\u4ef7\u503c (\u9ad8 \ud83d\udfe2): - \u63d0\u4f9b\u4e13\u4e1a\u7684DCF\u4f30\u503c\u8ba1\u7b97 - \u652f\u6301\u591a\u7ef4\u5ea6\u654f\u611f\u6027\u5206\u6790 - \u5b9e\u73b0\u81ea\u52a8\u5316\u80a1\u7968\u7b5b\u9009 \u7528\u6237\u4ef7\u503c (\u9ad8 \ud83d\udfe2): - \u7b80\u5316\u590d\u6742\u7684\u4f30\u503c\u8ba1\u7b97\u8fc7\u7a0b - \u63d0\u4f9b\u76f4\u89c2\u7684\u7ed3\u679c\u5c55\u793a - \u652f\u6301\u6279\u91cf\u5206\u6790\u5904\u7406 \u5546\u4e1a\u4ef7\u503c (\u4e2d\u7b49 \ud83d\udfe1): - \u53ef\u4f5c\u4e3a\u6295\u8d44\u51b3\u7b56\u8f85\u52a9\u5de5\u5177 - \u5177\u5907\u5546\u4e1a\u5316\u6f5c\u529b - \u53ef\u6269\u5c55\u4e3aSaaS\u670d\u52a1 10.2 \u7ade\u4e89\u4f18\u52bf \u6280\u672f\u4f18\u52bf : - \u8ba1\u7b97\u903b\u8f91\u4e13\u4e1a\u51c6\u786e - \u754c\u9762\u53cb\u597d\u6613\u7528 - \u652f\u6301\u591a\u79cd\u4f30\u503c\u65b9\u6cd5 \u6570\u636e\u4f18\u52bf : - \u96c6\u6210Tushare\u6570\u636e\u6e90 - \u5b9e\u65f6\u6570\u636e\u66f4\u65b0 - \u5386\u53f2\u6570\u636e\u5206\u6790 \u529f\u80fd\u4f18\u52bf : - \u654f\u611f\u6027\u5206\u6790\u529f\u80fd\u5b8c\u5584 - \u652f\u6301\u6279\u91cf\u5904\u7406 - \u7ed3\u679c\u53ef\u89c6\u5316\u6548\u679c\u597d \u91cd\u6784\u5efa\u8bae 1. \u91cd\u6784\u4f18\u5148\u7ea7 \u7b2c\u4e00\u4f18\u5148\u7ea7 (\u7acb\u5373\u6267\u884c): - \ud83c\udd95 \u6df7\u5408\u6570\u636e\u6e90\u67b6\u6784\u5b9e\u73b0 - \ud83c\udd95 \u6570\u636e\u6e90\u7ba1\u7406\u5668\u5f00\u53d1 - \ud83c\udd95 \u7f13\u5b58\u673a\u5236\u4f18\u5316 - \u4ee3\u7801\u8d28\u91cf\u6539\u8fdb - \u9519\u8bef\u5904\u7406\u6807\u51c6\u5316 - \u6d4b\u8bd5\u8986\u76d6\u7387\u63d0\u5347 \u7b2c\u4e8c\u4f18\u5148\u7ea7 (\u8fd1\u671f\u6267\u884c): - \ud83c\udd95 \u6570\u636e\u6e90\u76d1\u63a7\u548c\u544a\u8b66\u7cfb\u7edf - \ud83c\udd95 \u81ea\u52a8\u964d\u7ea7\u548c\u6062\u590d\u673a\u5236 - \u67b6\u6784\u4f18\u5316\u91cd\u6784 - \u6027\u80fd\u4f18\u5316 - \u6587\u6863\u5b8c\u5584 \u7b2c\u4e09\u4f18\u5148\u7ea7 (\u957f\u671f\u89c4\u5212): - \ud83c\udd95 \u6570\u636e\u6e90\u6269\u5c55\u80fd\u529b - \ud83c\udd95 \u667a\u80fd\u7f13\u5b58\u7b56\u7565\u4f18\u5316 - \u529f\u80fd\u6269\u5c55 - \u7528\u6237\u4f53\u9a8c\u4f18\u5316 - \u5546\u4e1a\u5316\u51c6\u5907 2. \u91cd\u6784\u7b56\u7565 \u6e10\u8fdb\u5f0f\u91cd\u6784 : - \u4fdd\u6301\u7cfb\u7edf\u529f\u80fd\u6b63\u5e38\u8fd0\u884c - \u5206\u6a21\u5757\u9010\u6b65\u91cd\u6784 - \u6bcf\u4e2a\u9636\u6bb5\u90fd\u6709\u53ef\u4ea4\u4ed8\u6210\u679c \u8d28\u91cf\u4f18\u5148 : - \u4ee3\u7801\u8d28\u91cf\u662f\u91cd\u6784\u7684\u6838\u5fc3\u76ee\u6807 - \u5efa\u7acb\u5b8c\u5584\u7684\u8d28\u91cf\u4fdd\u8bc1\u4f53\u7cfb - \u6301\u7eed\u76d1\u63a7\u548c\u6539\u8fdb \u6d4b\u8bd5\u9a71\u52a8 : - \u91cd\u6784\u524d\u8865\u5145\u6d4b\u8bd5\u7528\u4f8b - \u786e\u4fdd\u91cd\u6784\u4e0d\u7834\u574f\u73b0\u6709\u529f\u80fd - \u5efa\u7acb\u56de\u5f52\u6d4b\u8bd5\u673a\u5236 3. \u9884\u671f\u6536\u76ca \u77ed\u671f\u6536\u76ca (1-3\u4e2a\u6708): - \ud83c\udd95 \u6570\u636e\u53ef\u9760\u6027\u63d0\u534790% (\u53cc\u6570\u636e\u6e90\u4fdd\u969c) - \ud83c\udd95 API\u8c03\u7528\u6210\u672c\u964d\u4f4e60% (\u667a\u80fd\u7f13\u5b58) - \u4ee3\u7801\u8d28\u91cf\u663e\u8457\u63d0\u5347 - \u5f00\u53d1\u6548\u7387\u63d0\u9ad830% - Bug\u6570\u91cf\u51cf\u5c1150% \u4e2d\u671f\u6536\u76ca (3-6\u4e2a\u6708): - \ud83c\udd95 \u6570\u636e\u8bbf\u95ee\u901f\u5ea6\u63d0\u534770% (\u7f13\u5b58\u4f18\u5316) - \ud83c\udd95 \u7cfb\u7edf\u53ef\u7528\u6027\u8fbe\u523099.5% (\u81ea\u52a8\u964d\u7ea7) - \u7cfb\u7edf\u6027\u80fd\u63d0\u534740% - \u7ef4\u62a4\u6210\u672c\u964d\u4f4e60% - \u65b0\u529f\u80fd\u5f00\u53d1\u901f\u5ea6\u63d0\u534750% \u957f\u671f\u6536\u76ca (6-12\u4e2a\u6708): - \ud83c\udd95 \u652f\u6301\u591a\u6570\u636e\u6e90\u6269\u5c55\u80fd\u529b - \ud83c\udd95 \u667a\u80fd\u6570\u636e\u6e90\u9009\u62e9\u548c\u4f18\u5316 - \u7cfb\u7edf\u7a33\u5b9a\u6027\u5927\u5e45\u63d0\u5347 - \u652f\u6301\u66f4\u5927\u89c4\u6a21\u7528\u6237 - \u5177\u5907\u5546\u4e1a\u5316\u80fd\u529b \u98ce\u9669\u8bc4\u4f30 1. \u6280\u672f\u98ce\u9669 \u91cd\u6784\u98ce\u9669 (\u4e2d\u7b49 \ud83d\udfe1): - \u91cd\u6784\u8fc7\u7a0b\u53ef\u80fd\u5f15\u5165\u65b0bug - \u529f\u80fd\u56de\u5f52\u98ce\u9669 - \u6027\u80fd\u4e0b\u964d\u98ce\u9669 \u4f9d\u8d56\u98ce\u9669 (\u4e2d\u7b49 \ud83d\udfe1): - \u7b2c\u4e09\u65b9\u5e93\u66f4\u65b0\u98ce\u9669 - Tushare API\u53d8\u66f4\u548c\u9650\u6d41\u98ce\u9669 - PostgreSQL\u6570\u636e\u6e90\u7a33\u5b9a\u6027\u98ce\u9669 - \ud83c\udd95 \u53cc\u6570\u636e\u6e90\u540c\u6b65\u4e00\u81f4\u6027\u98ce\u9669 - \ud83c\udd95 \u7f13\u5b58\u6570\u636e\u8fc7\u671f\u98ce\u9669 \u6280\u672f\u9009\u578b\u98ce\u9669 (\u4f4e \ud83d\udfe2): - \u73b0\u6709\u6280\u672f\u6808\u6210\u719f\u7a33\u5b9a - \u793e\u533a\u652f\u6301\u826f\u597d - \u5b66\u4e60\u6210\u672c\u53ef\u63a7 2. \u4e1a\u52a1\u98ce\u9669 \u7528\u6237\u4f53\u9a8c\u98ce\u9669 (\u4f4e \ud83d\udfe2): - \u91cd\u6784\u671f\u95f4\u529f\u80fd\u53ef\u80fd\u6682\u65f6\u4e0d\u53ef\u7528 - \u754c\u9762\u53d8\u5316\u53ef\u80fd\u5f71\u54cd\u7528\u6237\u4e60\u60ef \u6570\u636e\u98ce\u9669 (\u4e2d\u7b49 \ud83d\udfe1): - \u6570\u636e\u8fc1\u79fb\u98ce\u9669 - \u5386\u53f2\u6570\u636e\u517c\u5bb9\u6027 - \u8ba1\u7b97\u7ed3\u679c\u4e00\u81f4\u6027 3. \u9879\u76ee\u98ce\u9669 \u65f6\u95f4\u98ce\u9669 (\u4e2d\u7b49 \ud83d\udfe1): - \u91cd\u6784\u65f6\u95f4\u53ef\u80fd\u8d85\u51fa\u9884\u671f - \u8d44\u6e90\u6295\u5165\u53ef\u80fd\u4e0d\u8db3 \u4eba\u5458\u98ce\u9669 (\u4f4e \ud83d\udfe2): - \u6280\u672f\u56e2\u961f\u80fd\u529b\u5339\u914d - \u77e5\u8bc6\u4f20\u627f\u98ce\u9669\u53ef\u63a7 \u7ed3\u8bba\u4e0e\u5efa\u8bae 1. \u603b\u4f53\u8bc4\u4f30 \u80a1\u7968\u4f30\u503c\u7cfb\u7edf\u662f\u4e00\u4e2a \u529f\u80fd\u5b8c\u6574\u3001\u5177\u6709\u5546\u4e1a\u4ef7\u503c \u7684\u9879\u76ee\uff0c\u901a\u8fc7\u91c7\u7528 Tushare + PostgreSQL\u6df7\u5408\u67b6\u6784 \uff0c\u663e\u8457\u63d0\u5347\u4e86\u6570\u636e\u53ef\u9760\u6027\u548c\u7cfb\u7edf\u7a33\u5b9a\u6027\u3002\u867d\u7136\u4ecd\u5b58\u5728 \u4ee3\u7801\u8d28\u91cf\u95ee\u9898 \u548c \u6280\u672f\u503a\u52a1 \uff0c\u4f46\u6df7\u5408\u67b6\u6784\u7684\u5f15\u5165\u4e3a\u7cfb\u7edf\u5e26\u6765\u4e86\u65b0\u7684\u4f18\u52bf\u3002\u7cfb\u7edf\u7684\u6838\u5fc3\u4e1a\u52a1\u903b\u8f91\u6b63\u786e\uff0c\u6d4b\u8bd5\u8986\u76d6\u57fa\u672c\u5145\u5206\uff0c\u9700\u8981\u8fdb\u884c \u7cfb\u7edf\u6027\u91cd\u6784\u548c\u67b6\u6784\u4f18\u5316 \u3002 2. \u91cd\u6784\u5fc5\u8981\u6027 \u5efa\u8bae\u6301\u7eed\u91cd\u6784\u4e0e\u67b6\u6784\u5347\u7ea7 \uff0c\u7406\u7531\u5982\u4e0b\uff1a - \ud83c\udd95 \u6df7\u5408\u67b6\u6784\u4e0e\u670d\u52a1\u5c42\u5b88\u62a4\u5df2\u5e26\u6765\u7a33\u5b9a\u6027\u63d0\u5347\uff1b\u7ee7\u7eed\u89e3\u8026\u654f\u611f\u6027/\u60c5\u666f\u6a21\u5757\u53ef\u8fdb\u4e00\u6b65\u964d\u4f4e\u8026\u5408\u3002 - \ud83c\udd95 \u6570\u636e\u6e90\u4e0e\u4f30\u503c\u57fa\u671f\u7b56\u7565\u66f4\u7075\u6d3b\uff1b\u9700\u5f15\u5165\u7edf\u4e00\u5f02\u5e38/\u544a\u8b66\u89c4\u8303\u4e0e\u53ef\u89c2\u6d4b\u6027\u3002 - \u4ee3\u7801\u8d28\u91cf\u95ee\u9898\u4ecd\u5f71\u54cd\u6548\u7387\uff1b\u5efa\u8bae\u63a8\u8fdb\u6a21\u5757\u5316\u4e0e\u7c7b\u578b\u7ea6\u675f\uff0c\u8865\u9f50\u6027\u80fd/\u96c6\u6210\u6d4b\u8bd5\u3002 3. \u5b9e\u65bd\u5efa\u8bae \u7acb\u5373\u884c\u52a8 : 1. \ud83c\udd95 \u5b9e\u65bd\u6df7\u5408\u6570\u636e\u6e90\u67b6\u6784 2. \ud83c\udd95 \u5f00\u53d1\u6570\u636e\u6e90\u7ba1\u7406\u548c\u7f13\u5b58\u7cfb\u7edf 3. \u542f\u52a8\u4ee3\u7801\u8d28\u91cf\u6539\u8fdb\u8ba1\u5212 4. \u5efa\u7acb\u4ee3\u7801\u89c4\u8303\u548c\u8d28\u91cf\u68c0\u67e5\u6d41\u7a0b 5. \u8865\u5145\u5173\u952e\u6a21\u5757\u7684\u6d4b\u8bd5\u7528\u4f8b \u8fd1\u671f\u89c4\u5212 : 1. \ud83c\udd95 \u5efa\u7acb\u6570\u636e\u6e90\u76d1\u63a7\u548c\u544a\u8b66\u673a\u5236 2. \ud83c\udd95 \u5b9e\u73b0\u81ea\u52a8\u964d\u7ea7\u548c\u6062\u590d\u7b56\u7565 3. \u6267\u884c\u5206\u9636\u6bb5\u91cd\u6784\u8ba1\u5212 4. \u4f18\u5316\u7cfb\u7edf\u67b6\u6784\u548c\u6027\u80fd 5. \u5b8c\u5584\u6587\u6863\u548c\u90e8\u7f72\u6d41\u7a0b \u957f\u671f\u76ee\u6807 : 1. \ud83c\udd95 \u6784\u5efa\u667a\u80fd\u6570\u636e\u6e90\u9009\u62e9\u548c\u4f18\u5316\u80fd\u529b 2. \ud83c\udd95 \u652f\u6301\u66f4\u591a\u6570\u636e\u6e90\u7684\u6269\u5c55 3. \u5efa\u7acb\u53ef\u6301\u7eed\u7684\u5f00\u53d1\u548c\u7ef4\u62a4\u4f53\u7cfb 4. \u6269\u5c55\u7cfb\u7edf\u529f\u80fd\u548c\u7528\u6237\u89c4\u6a21 5. \u63a2\u7d22\u5546\u4e1a\u5316\u673a\u4f1a 4. \u6210\u529f\u5173\u952e\u56e0\u7d20 \u7ba1\u7406\u5c42\u652f\u6301 : \u786e\u4fdd\u5145\u8db3\u7684\u8d44\u6e90\u6295\u5165 \u56e2\u961f\u534f\u4f5c : \u5efa\u7acb\u826f\u597d\u7684\u534f\u4f5c\u673a\u5236 \u8d28\u91cf\u4fdd\u8bc1 : \u5efa\u7acb\u4e25\u683c\u7684\u8d28\u91cf\u6807\u51c6 \u6301\u7eed\u6539\u8fdb : \u5efa\u7acb\u6301\u7eed\u4f18\u5316\u7684\u6587\u5316 \u901a\u8fc7\u6df7\u5408\u67b6\u6784\u5347\u7ea7\u548c\u7cfb\u7edf\u6027\u91cd\u6784\uff0c\u80a1\u7968\u4f30\u503c\u7cfb\u7edf\u5c06\u6210\u4e3a\u4e00\u4e2a \u9ad8\u8d28\u91cf\u3001\u9ad8\u6027\u80fd\u3001\u9ad8\u53ef\u9760\u6027\u3001\u6613\u7ef4\u62a4 \u7684\u4e13\u4e1a\u91d1\u878d\u5206\u6790\u5de5\u5177\uff0c\u5177\u5907 \u5f3a\u5927\u7684\u6570\u636e\u5904\u7406\u80fd\u529b \u548c \u957f\u671f\u53d1\u5c55\u548c\u5546\u4e1a\u5316 \u7684\u6f5c\u529b\u3002 \u62a5\u544a\u751f\u6210\u65f6\u95f4 : 2025\u5e741\u6708 \u5206\u6790\u5de5\u5177 : Pylint, pytest, \u4eba\u5de5\u4ee3\u7801\u5ba1\u67e5 \u62a5\u544a\u7248\u672c : v1.0 \u4e0b\u6b21\u8bc4\u4f30\u5efa\u8bae : \u91cd\u6784\u5b8c\u6210\u540e3\u4e2a\u6708","title":"\u80a1\u7968\u4f30\u503c\u7cfb\u7edf\u9879\u76ee\u5206\u6790\u62a5\u544a"},{"location":"01_project_overview/project_analysis_report/#_1","text":"","title":"\u80a1\u7968\u4f30\u503c\u7cfb\u7edf\u9879\u76ee\u5206\u6790\u62a5\u544a"},{"location":"01_project_overview/project_analysis_report/#_2","text":"\u6587\u6863\u6807\u9898 : \u9879\u76ee\u5206\u6790\u62a5\u544a \u521b\u5efa\u65e5\u671f : 2025\u5e741\u6708 \u7248\u672c : v1.0 \u4f5c\u8005 : huliux \u5ba1\u6838\u72b6\u6001 : \u5f85\u5ba1\u6838","title":"\u6587\u6863\u4fe1\u606f"},{"location":"01_project_overview/project_analysis_report/#_3","text":"\u672c\u6587\u6863\u5df2\u6574\u5408\u4ee5\u4e0b\u5185\u5bb9\uff1a - \u539frefactor_roadmap.md\u7684\u91cd\u6784\u76ee\u6807\u548c\u5b9e\u65bd\u8def\u5f84 - \u539fimplementation_plan.md\u7684\u6280\u672f\u5b9e\u65bd\u65b9\u6848","title":"\u6574\u7406\u8bf4\u660e"},{"location":"01_project_overview/project_analysis_report/#_4","text":"","title":"\u6267\u884c\u6458\u8981"},{"location":"01_project_overview/project_analysis_report/#_5","text":"\u9879\u76ee\u540d\u79f0 : \u80a1\u7968\u4f30\u503c\u7cfb\u7edf (Stock Valuation System) \u5206\u6790\u65e5\u671f : 2025\u5e749\u6708 \u4ee3\u7801\u89c4\u6a21 : \u7ea615,000\u884cPython\u4ee3\u7801 \u6838\u5fc3\u529f\u80fd : DCF\u4f30\u503c\u3001\u654f\u611f\u6027\u5206\u6790\uff08\u6269\u5c55\u8868\u4e0e\u5b88\u62a4\uff09\u3001\u80a1\u7968\u7b5b\u9009\u3001LLM\u5206\u6790 \u6280\u672f\u6808 : Python + FastAPI + Streamlit + Tushare + PostgreSQL \u6570\u636e\u67b6\u6784 : Tushare (\u4e3b) + PostgreSQL (\u5907) \u6df7\u5408\u67b6\u6784\uff08\u652f\u6301\u6309\u4f30\u503c\u65e5\u56de\u9000\u3001TTM\u80a1\u606f\u591a\u7ea7\u56de\u9000\uff09","title":"\u9879\u76ee\u6982\u51b5"},{"location":"01_project_overview/project_analysis_report/#2025-09","text":"\u2705 \u529f\u80fd\u5b8c\u6574\u6027\uff1a\u6838\u5fc3\u4f30\u503c\u8def\u5f84\u7a33\u5b9a\uff0c\u654f\u611f\u6027\u5206\u6790\u6269\u5c55\u5e76\u66f4\u7a33\u5065\uff08\u65b0\u589e\u8868\u4e0e\u8fb9\u754c\u5b88\u62a4\uff09\u3002 \u2705 \u7a33\u5065\u6027\uff1aWACC \u5e02\u573a\u6743\u91cd\u5931\u8d25\u81ea\u52a8\u56de\u9000\u76ee\u6807\u7ed3\u6784\uff1bPGR\u2265WACC \u7ec4\u5408\u8df3\u8fc7\u5e76\u63d0\u793a\uff1bGDP \u4e0a\u9650\u53cc\u5c42\u4fdd\u62a4\u3002 \u2705 \u53ef\u89e3\u91ca\u6027\uff1a\u65b0\u589e ev_ebitda_terminal \u3001 implied_pgr \uff0c\u5e76\u5bf9 ev_ebitda \u53e3\u5f84\uff08LTM vs Terminal\uff09\u505a\u660e\u786e\u533a\u5206\u3002 \u2705 \u6d4b\u8bd5\u8fdb\u5c55\uff1a\u65b0\u589e\u654f\u611f\u6027\u6269\u5c55\u7684\u96c6\u6210\u6d4b\u8bd5\u7528\u4f8b\u5e76\u5168\u90e8\u901a\u8fc7\uff1b\u65e7\u7528\u4f8b\u517c\u5bb9\u3002 \u26a0\ufe0f \u67b6\u6784\u590d\u6742\u5ea6\uff1a\u670d\u52a1\u5c42\u7f16\u6392\u903b\u8f91\u589e\u52a0\uff0c\u9700\u5728\u4e0b\u4e00\u6b65\u5c06\u654f\u611f\u6027/\u60c5\u666f\u6846\u67b6\u62bd\u8c61\u4e3a\u72ec\u7acb\u7ec4\u4ef6\uff0c\u964d\u4f4e\u8026\u5408\u3002 \ud83c\udd95 \u6570\u636e\u5c42\uff1a\u4f30\u503c\u65e5\u56de\u9000\u3001TTM\u80a1\u606f\u591a\u7ea7\u56de\u9000\u4e0e LTM \u57fa\u671f\u5207\u6362\u903b\u8f91\u843d\u5730\uff0c\u6570\u636e\u53ef\u7528\u6027\u63d0\u5347\u3002","title":"\u5173\u952e\u53d1\u73b0\uff082025-09 \u66f4\u65b0\uff09"},{"location":"01_project_overview/project_analysis_report/#_6","text":"\u91cd\u6784\u7d27\u8feb\u6027 : \ud83d\udd34 \u9ad8 \u4e1a\u52a1\u5f71\u54cd : \ud83d\udfe1 \u4e2d\u7b49 \u6280\u672f\u503a\u52a1 : \ud83d\udd34 \u4e25\u91cd \u7ef4\u62a4\u6210\u672c : \ud83d\udd34 \u9ad8","title":"\u91cd\u6784\u5fc5\u8981\u6027\u8bc4\u4f30"},{"location":"01_project_overview/project_analysis_report/#_7","text":"","title":"\u8be6\u7ec6\u5206\u6790\u7ed3\u679c"},{"location":"01_project_overview/project_analysis_report/#1","text":"","title":"1. \u67b6\u6784\u5206\u6790"},{"location":"01_project_overview/project_analysis_report/#11","text":"\u80a1\u7968\u4f30\u503c\u7cfb\u7edf\u6df7\u5408\u67b6\u6784 \u251c\u2500\u2500 \u524d\u7aef\u5c42 (Streamlit) \u2502 \u251c\u2500\u2500 streamlit_app.py (\u4e3b\u5e94\u7528) \u2502 \u2514\u2500\u2500 stock_screener_app.py (\u7b5b\u9009\u5668) \u251c\u2500\u2500 API\u5c42 (FastAPI) \u2502 \u251c\u2500\u2500 api/main.py (API\u5165\u53e3) \u2502 \u251c\u2500\u2500 api/models.py (\u6570\u636e\u6a21\u578b) \u2502 \u2514\u2500\u2500 api/sensitivity_models.py (\u654f\u611f\u6027\u6a21\u578b) \u251c\u2500\u2500 \u4e1a\u52a1\u903b\u8f91\u5c42 \u2502 \u251c\u2500\u2500 valuation_service.py (\u4f30\u503c\u670d\u52a1\uff1a\u7edf\u4e00\u7f16\u6392\u3001\u56de\u9000\u4e0e\u5b88\u62a4) \u2502 \u251c\u2500\u2500 financial_forecaster.py (\u8d22\u52a1\u9884\u6d4b) \u2502 \u2514\u2500\u2500 sensitivity_analyzer.py / \u670d\u52a1\u5185\u5b9e\u73b0\uff08\u654f\u611f\u6027\uff1a\u6269\u5c55\u8868\u3001\u8fb9\u754c\u8df3\u8fc7\u3001\u56de\u586b\u903b\u8f91\uff09 \u251c\u2500\u2500 \u8ba1\u7b97\u5f15\u64ce\u5c42 \u2502 \u251c\u2500\u2500 wacc_calculator.py (WACC\u8ba1\u7b97) \u2502 \u251c\u2500\u2500 present_value_calculator.py (\u73b0\u503c\u8ba1\u7b97) \u2502 \u251c\u2500\u2500 terminal_value_calculator.py (\u7ec8\u503c\u8ba1\u7b97) \u2502 \u2514\u2500\u2500 equity_bridge_calculator.py (\u6743\u76ca\u6865\u63a5) \u2514\u2500\u2500 \u6df7\u5408\u6570\u636e\u5c42 \u251c\u2500\u2500 data_source_manager.py (\u6570\u636e\u6e90\u7ba1\u7406) \u251c\u2500\u2500 tushare_data_fetcher.py (Tushare\u6570\u636e\u83b7\u53d6) \u251c\u2500\u2500 postgresql_data_fetcher.py (PostgreSQL\u6570\u636e\u83b7\u53d6) \u251c\u2500\u2500 data_cache_manager.py (\u7f13\u5b58\u7ba1\u7406) \u251c\u2500\u2500 data_processor.py (\u6570\u636e\u5904\u7406) \u2514\u2500\u2500 stock_screener_data.py (\u7b5b\u9009\u6570\u636e)","title":"1.1 \u6df7\u5408\u67b6\u6784\u6982\u89c8"},{"location":"01_project_overview/project_analysis_report/#12","text":"\u6df7\u5408\u6570\u636e\u6e90\u67b6\u6784 \u250c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2510 \u2502 \u6570\u636e\u6e90\u7ba1\u7406\u5c42 \u2502 \u2502 \u250c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2510 \u250c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2510 \u2502 \u2502 \u2502 \u914d\u7f6e\u7ba1\u7406 \u2502 \u2502 \u964d\u7ea7\u7b56\u7565 \u2502 \u2502 \u2502 \u2502 (.env\u5f00\u5173\u63a7\u5236) \u2502 \u2502 (\u81ea\u52a8\u5207\u6362\u673a\u5236) \u2502 \u2502 \u2502 \u2514\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2518 \u2514\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2518 \u2502 \u2514\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2518 \u2502 \u2502 \u25bc \u25bc \u250c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2510 \u250c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2510 \u2502 Tushare API \u2502 \u2502 PostgreSQL \u2502 \u2502 (\u4e3b\u6570\u636e\u6e90) \u2502\u25c4\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u25ba\u2502 (\u5907\u6570\u636e\u6e90) \u2502 \u2502 \u2502 \u6545\u969c\u5207\u6362 \u2502 \u2502 \u2502 \u2022 \u5b9e\u65f6\u6570\u636e \u2502 \u2502 \u2022 \u5386\u53f2\u6570\u636e \u2502 \u2502 \u2022 \u9ad8\u9891\u66f4\u65b0 \u2502 \u2502 \u2022 \u7a33\u5b9a\u53ef\u9760 \u2502 \u2502 \u2022 \u4e30\u5bcc\u5b57\u6bb5 \u2502 \u2502 \u2022 \u672c\u5730\u7f13\u5b58 \u2502 \u2514\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2518 \u2514\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2518 \u2502 \u2502 \u2514\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u252c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2518 \u25bc \u250c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2510 \u2502 \u7f13\u5b58\u7ba1\u7406\u5c42 \u2502 \u2502 \u2502 \u2502 \u2022 Redis\u7f13\u5b58 \u2502 \u2502 \u2022 \u672c\u5730\u7f13\u5b58 \u2502 \u2502 \u2022 \u667a\u80fd\u8fc7\u671f \u2502 \u2514\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2518","title":"1.2 \u6570\u636e\u6e90\u67b6\u6784\u8bbe\u8ba1"},{"location":"01_project_overview/project_analysis_report/#13","text":"\u5206\u5c42\u6e05\u6670 : \u524d\u7aef\u3001API\u3001\u4e1a\u52a1\u903b\u8f91\u3001\u8ba1\u7b97\u3001\u6570\u636e\u5c42\u5206\u79bb \u529f\u80fd\u6a21\u5757\u5316 : \u5404\u8ba1\u7b97\u5668\u72ec\u7acb\u5c01\u88c5 \u6280\u672f\u6808\u73b0\u4ee3 : \u4f7f\u7528FastAPI\u3001Streamlit\u7b49\u73b0\u4ee3\u6846\u67b6 \u6269\u5c55\u6027\u826f\u597d : \u652f\u6301\u591a\u79cd\u4f30\u503c\u65b9\u6cd5\u548c\u5206\u6790\u529f\u80fd \ud83c\udd95 \u6570\u636e\u53ef\u9760\u6027\uff1a\u53cc\u6570\u636e\u6e90 + \u4f30\u503c\u65e5\u56de\u9000 + \u80a1\u606fTTM\u591a\u7ea7\u56de\u9000\u3002 \ud83c\udd95 \u6027\u80fd\u4f18\u5316\uff1a\u654f\u611f\u6027\u5728\u5e38\u89c1\u89c4\u6a21\uff085\u00d75/7\u00d77\uff09\u4e0b\u7a33\u5b9a\uff1b\u540e\u7eed\u53ef\u5bf9\u4ec5\u6539WACC\u7684\u683c\u4f7f\u7528\u91cd\u6298\u73b0\u4f18\u5316\u3002 \ud83c\udd95 \u7075\u6d3b\u5207\u6362\uff1a\u901a\u8fc7 .env \u548c\u8bf7\u6c42\u53c2\u6570\u63a7\u5236 GDP \u4e0a\u9650\u4e0e LTM \u57fa\u671f\u7b49\u884c\u4e3a\u3002 \ud83c\udd95 \u6210\u672c\u63a7\u5236\uff1a\u4f18\u5148\u4f7f\u7528\u7f13\u5b58/\u5907\u6e90\uff0c\u51cf\u5c11\u9891\u7e41\u5916\u90e8\u8c03\u7528\u3002","title":"1.3 \u6df7\u5408\u67b6\u6784\u4f18\u52bf"},{"location":"01_project_overview/project_analysis_report/#14","text":"\u6a21\u5757\u8026\u5408 : \u90e8\u5206\u6a21\u5757\u95f4\u4f9d\u8d56\u5173\u7cfb\u590d\u6742 \u4ee3\u7801\u91cd\u590d : \u5b58\u5728\u91cd\u590d\u7684\u6570\u636e\u5904\u7406\u903b\u8f91 \u9519\u8bef\u5904\u7406 : \u5df2\u589e\u5f3a WACC \u4e0e PGR \u8fb9\u754c\uff1b\u4ecd\u9700\u7edf\u4e00\u5f02\u5e38\u4e0e\u544a\u8b66\u5206\u7ea7\uff08error/warn/info\uff09\u3002 \u914d\u7f6e\u7ba1\u7406 : \u9700\u8981\u7edf\u4e00\u7684\u6570\u636e\u6e90\u914d\u7f6e\u7ba1\u7406 \ud83c\udd95 \u7f13\u5b58\u7b56\u7565 : \u9700\u8981\u4f18\u5316\u7f13\u5b58\u5931\u6548\u548c\u66f4\u65b0\u7b56\u7565 \ud83c\udd95 \u76d1\u63a7\u544a\u8b66 : \u9700\u8981\u5efa\u7acb\u6570\u636e\u6e90\u72b6\u6001\u76d1\u63a7\u673a\u5236","title":"1.4 \u5f85\u4f18\u5316\u95ee\u9898"},{"location":"01_project_overview/project_analysis_report/#2","text":"","title":"2. \u4ee3\u7801\u8d28\u91cf\u5206\u6790"},{"location":"01_project_overview/project_analysis_report/#21-pylint","text":"\u603b\u4f53\u8bc4\u5206 : 3.89/10 \u26a0\ufe0f \u4e3b\u8981\u95ee\u9898\u5206\u5e03 : \u95ee\u9898\u7c7b\u578b | \u6570\u91cf | \u4e25\u91cd\u7a0b\u5ea6 ------------------------|-------|---------- \u5355\u884c\u591a\u8bed\u53e5 (C0321) | 45 | \u4e2d\u7b49 \u6355\u83b7\u8fc7\u4e8e\u5bbd\u6cdb\u5f02\u5e38 (W0718) | 23 | \u9ad8 \u5206\u652f\u8fc7\u591a (R0912) | 12 | \u9ad8 \u8bed\u53e5\u8fc7\u591a (R0915) | 8 | \u9ad8 \u91cd\u590d\u5bfc\u5165 (W0404) | 15 | \u4f4e \u5bfc\u5165\u4f4d\u7f6e\u4e0d\u6b63\u786e (C0413) | 18 | \u4e2d\u7b49 \u5bfc\u5165\u987a\u5e8f\u4e0d\u6b63\u786e (C0411) | 22 | \u4f4e \u672a\u4f7f\u7528\u5bfc\u5165 (W0611) | 31 | \u4f4e","title":"2.1 Pylint\u5206\u6790\u7ed3\u679c"},{"location":"01_project_overview/project_analysis_report/#22","text":"\u9ad8\u590d\u6742\u5ea6\u51fd\u6570 : - financial_forecaster.py::forecast_financials() - \u5faa\u73af\u590d\u6742\u5ea6: 15 - data_processor.py::process_financial_data() - \u5faa\u73af\u590d\u6742\u5ea6: 12 - streamlit_app.py::render_valuation_results() - \u5faa\u73af\u590d\u6742\u5ea6: 10 \u957f\u51fd\u6570\u95ee\u9898 : - \u5e73\u5747\u51fd\u6570\u957f\u5ea6: 45\u884c - \u8d85\u8fc7100\u884c\u7684\u51fd\u6570: 8\u4e2a - \u6700\u957f\u51fd\u6570: 180\u884c ( streamlit_app.py::main() )","title":"2.2 \u4ee3\u7801\u590d\u6742\u5ea6\u5206\u6790"},{"location":"01_project_overview/project_analysis_report/#23","text":"\u547d\u540d\u4e0d\u4e00\u81f4 : \u6df7\u7528\u9a7c\u5cf0\u548c\u4e0b\u5212\u7ebf\u547d\u540d \u6ce8\u91ca\u4e0d\u8db3 : \u5173\u952e\u4e1a\u52a1\u903b\u8f91\u7f3a\u4e4f\u6ce8\u91ca \u9b54\u6cd5\u6570\u5b57 : \u5b58\u5728\u786c\u7f16\u7801\u7684\u6570\u503c\u5e38\u91cf \u5bfc\u5165\u6df7\u4e71 : \u5bfc\u5165\u8bed\u53e5\u7ec4\u7ec7\u4e0d\u89c4\u8303","title":"2.3 \u4ee3\u7801\u98ce\u683c\u95ee\u9898"},{"location":"01_project_overview/project_analysis_report/#3","text":"","title":"3. \u529f\u80fd\u9700\u6c42\u5206\u6790"},{"location":"01_project_overview/project_analysis_report/#31","text":"\u4f30\u503c\u8ba1\u7b97\u6a21\u5757 : - \u2705 DCF\u4f30\u503c\u8ba1\u7b97 - \u2705 WACC\u8ba1\u7b97 (\u76ee\u6807\u6743\u91cd/\u5e02\u573a\u6743\u91cd) - \u2705 \u7ec8\u503c\u8ba1\u7b97 (\u6c38\u7eed\u589e\u957f/\u9000\u51fa\u500d\u6570) - \u2705 \u6743\u76ca\u4ef7\u503c\u8ba1\u7b97 - \u2705 \u654f\u611f\u6027\u5206\u6790\uff08\u65b0\u589e ev_ebitda_terminal \u3001 implied_pgr \u3001\u6309\u683c PE \u56de\u586b\uff1b\u975e\u6cd5\u7ec4\u5408\u8df3\u8fc7\uff09 \u6570\u636e\u5904\u7406\u6a21\u5757 : - \u2705 Tushare\u6570\u636e\u83b7\u53d6 (\u4e3b\u6570\u636e\u6e90) - \u2705 PostgreSQL\u6570\u636e\u83b7\u53d6 (\u5907\u6570\u636e\u6e90) - \u2705 \u667a\u80fd\u6570\u636e\u6e90\u5207\u6362\u673a\u5236 - \u2705 \u8d22\u52a1\u6570\u636e\u6e05\u6d17\u548c\u6807\u51c6\u5316 - \u2705 \u5386\u53f2\u6bd4\u7387\u8ba1\u7b97 - \u2705 \u591a\u5c42\u7ea7\u7f13\u5b58\u673a\u5236 - \ud83c\udd95 \u4f30\u503c\u57fa\u671f\uff1a\u652f\u6301 Annual/LTM \u5207\u6362\u4e0e LTM \u660e\u7ec6\u8c03\u8bd5\u5207\u7247\u3002 - \ud83c\udd95 \u6570\u636e\u6e90\u72b6\u6001\u76d1\u63a7\uff08\u89c4\u5212\u4e2d\uff09 - \ud83c\udd95 \u81ea\u52a8\u964d\u7ea7\u548c\u6062\u590d\u7b56\u7565\uff08\u89c4\u5212\u4e2d\uff09 \u524d\u7aef\u754c\u9762\u6a21\u5757 : - \u2705 Streamlit\u4e3b\u5e94\u7528\u754c\u9762 - \u4e13\u4e1a\u91d1\u878d\u6570\u636e\u53ef\u89c6\u5316\u5e73\u53f0 - \u2705 \u4ea4\u4e92\u5f0f\u53c2\u6570\u914d\u7f6e\u9762\u677f - \u652f\u6301\u5b9e\u65f6\u53c2\u6570\u8c03\u6574 - \u2705 \u52a8\u6001\u7ed3\u679c\u5c55\u793a\u754c\u9762 - \u4e30\u5bcc\u7684\u56fe\u8868\u548c\u6570\u636e\u5c55\u793a - \u2705 \u80a1\u7968\u7b5b\u9009\u5668 - \u591a\u7ef4\u5ea6\u7b5b\u9009\u548c\u6392\u5e8f\u529f\u80fd - \u2705 \u54cd\u5e94\u5f0f\u5e03\u5c40\u8bbe\u8ba1 - \u9002\u914d\u4e0d\u540c\u5c4f\u5e55\u5c3a\u5bf8 API\u670d\u52a1\u6a21\u5757 : - \u2705 RESTful API\u63a5\u53e3 - \u2705 \u8bf7\u6c42\u9a8c\u8bc1 - \u2705 \u54cd\u5e94\u683c\u5f0f\u5316 - \u2705 \u9519\u8bef\u5904\u7406 - \u2705 \u8c03\u8bd5\u5207\u7247\uff1a debug_request_slice \uff08\u542b\u884c\u4e1a\u9884\u8bbe\u4e0e\u504f\u79bb diff\uff09","title":"3.1 \u6838\u5fc3\u529f\u80fd\u6a21\u5757"},{"location":"01_project_overview/project_analysis_report/#32","text":"\u4e3b\u8981\u4e1a\u52a1\u6d41\u7a0b : 1. \u80a1\u7968\u4f30\u503c\u6d41\u7a0b : \u8f93\u5165\u80a1\u7968\u4ee3\u7801 \u2192 \u83b7\u53d6\u8d22\u52a1\u6570\u636e \u2192 \u6570\u636e\u6e05\u6d17 \u2192 \u8d22\u52a1\u9884\u6d4b \u2192 DCF\u8ba1\u7b97 \u2192 \u7ed3\u679c\u5c55\u793a \u654f\u611f\u6027\u5206\u6790\u6d41\u7a0b : \u8bbe\u7f6e\u5206\u6790\u53c2\u6570 \u2192 \u6279\u91cf\u8ba1\u7b97 \u2192 \u751f\u6210\u654f\u611f\u6027\u77e9\u9635 \u2192 \u53ef\u89c6\u5316\u5c55\u793a \u80a1\u7968\u7b5b\u9009\u6d41\u7a0b : \u8bbe\u7f6e\u7b5b\u9009\u6761\u4ef6 \u2192 \u83b7\u53d6\u5e02\u573a\u6570\u636e \u2192 \u5e94\u7528\u7b5b\u9009\u903b\u8f91 \u2192 \u7ed3\u679c\u6392\u5e8f\u5c55\u793a","title":"3.2 \u4e1a\u52a1\u6d41\u7a0b\u5206\u6790"},{"location":"01_project_overview/project_analysis_report/#33","text":"\u529f\u80fd\u5b8c\u6574\u6027 : 90% \u2705 \u6613\u7528\u6027 : 75% \ud83d\udfe1 \u6027\u80fd\u8868\u73b0 : 70% \ud83d\udfe1 \u7a33\u5b9a\u6027 : 65% \u26a0\ufe0f","title":"3.3 \u7528\u6237\u9700\u6c42\u6ee1\u8db3\u5ea6"},{"location":"01_project_overview/project_analysis_report/#4","text":"","title":"4. \u6280\u672f\u503a\u52a1\u8bc4\u4f30"},{"location":"01_project_overview/project_analysis_report/#41","text":"\u4ee3\u7801\u503a\u52a1 (\u4e25\u91cd \ud83d\udd34): - \u4ee3\u7801\u8d28\u91cf\u4f4e\uff0c\u7ef4\u62a4\u56f0\u96be - \u51fd\u6570\u8fc7\u957f\uff0c\u903b\u8f91\u590d\u6742 - \u7f3a\u4e4f\u7edf\u4e00\u7684\u7f16\u7801\u89c4\u8303 - \u5f02\u5e38\u5904\u7406\u4e0d\u5b8c\u5584 \u67b6\u6784\u503a\u52a1 (\u4e2d\u7b49 \ud83d\udfe1): - \u6a21\u5757\u8026\u5408\u5ea6\u8f83\u9ad8 - \u7f3a\u4e4f\u6e05\u6670\u7684\u63a5\u53e3\u5b9a\u4e49 - \u914d\u7f6e\u7ba1\u7406\u5206\u6563 - \u7f3a\u4e4f\u7edf\u4e00\u7684\u65e5\u5fd7\u7cfb\u7edf - \ud83c\udd95 \u6570\u636e\u6e90\u62bd\u8c61\u5c42\u9700\u8981\u91cd\u6784 - \ud83c\udd95 \u7f13\u5b58\u7b56\u7565\u9700\u8981\u7edf\u4e00\u7ba1\u7406 - \ud83c\udd95 \u76d1\u63a7\u548c\u544a\u8b66\u673a\u5236\u5f85\u5efa\u7acb \u6d4b\u8bd5\u503a\u52a1 (\u8f7b\u5fae \ud83d\udfe2): - \u6d4b\u8bd5\u8986\u76d6\u7387\u9700\u63d0\u5347 - \u7f3a\u4e4f\u96c6\u6210\u6d4b\u8bd5 - \u6027\u80fd\u6d4b\u8bd5\u4e0d\u8db3 \u6587\u6863\u503a\u52a1 (\u4e2d\u7b49 \ud83d\udfe1): - API\u6587\u6863\u4e0d\u5b8c\u6574 - \u4e1a\u52a1\u903b\u8f91\u6587\u6863\u7f3a\u5931 - \u90e8\u7f72\u6587\u6863\u9700\u5b8c\u5584","title":"4.1 \u6280\u672f\u503a\u52a1\u5206\u7c7b"},{"location":"01_project_overview/project_analysis_report/#42","text":"\u5f00\u53d1\u6548\u7387\u5f71\u54cd : - \u65b0\u529f\u80fd\u5f00\u53d1\u901f\u5ea6: -40% - Bug\u4fee\u590d\u65f6\u95f4: +60% - \u4ee3\u7801\u5ba1\u67e5\u65f6\u95f4: +80% \u7ef4\u62a4\u6210\u672c\u5f71\u54cd : - \u65e5\u5e38\u7ef4\u62a4\u6210\u672c: +50% - \u65b0\u4eba\u4e0a\u624b\u65f6\u95f4: +100% - \u7cfb\u7edf\u7a33\u5b9a\u6027\u98ce\u9669: +70%","title":"4.2 \u503a\u52a1\u5f71\u54cd\u8bc4\u4f30"},{"location":"01_project_overview/project_analysis_report/#5","text":"","title":"5. \u6027\u80fd\u5206\u6790"},{"location":"01_project_overview/project_analysis_report/#51","text":"API\u54cd\u5e94\u65f6\u95f4 : \u63a5\u53e3\u7c7b\u578b | \u5e73\u5747\u54cd\u5e94\u65f6\u95f4 | 95%\u5206\u4f4d\u6570 | \u76ee\u6807\u503c ------------------|-------------|-----------|-------- \u5355\u80a1\u7968\u4f30\u503c | 1.2s | 2.1s | <2s \u654f\u611f\u6027\u5206\u6790 | 3.5s | 5.8s | <5s\uff08\u5e38\u89c4 5\u00d75 \u7f51\u683c\uff1b\u542b\u8fb9\u754c\u8df3\u8fc7\uff09 \u80a1\u7968\u7b5b\u9009 | 0.8s | 1.3s | <1s \u6570\u636e\u83b7\u53d6 | 0.5s | 0.9s | <1s \u5185\u5b58\u4f7f\u7528\u60c5\u51b5 : - \u57fa\u7840\u5185\u5b58\u5360\u7528: ~150MB - \u5cf0\u503c\u5185\u5b58\u5360\u7528: ~400MB - \u5185\u5b58\u6cc4\u6f0f\u98ce\u9669: \u4f4e \u5e76\u53d1\u6027\u80fd : - \u6700\u5927\u5e76\u53d1\u7528\u6237: 20 - \u54cd\u5e94\u65f6\u95f4\u589e\u957f: \u7ebf\u6027 - \u7cfb\u7edf\u7a33\u5b9a\u6027: \u826f\u597d","title":"5.1 \u6027\u80fd\u57fa\u51c6\u6d4b\u8bd5"},{"location":"01_project_overview/project_analysis_report/#52","text":"\u8ba1\u7b97\u5bc6\u96c6\u578b\u64cd\u4f5c : - \u654f\u611f\u6027\u5206\u6790\u77e9\u9635\u8ba1\u7b97 - \u5927\u91cf\u5386\u53f2\u6570\u636e\u5904\u7406 - \u590d\u6742\u8d22\u52a1\u9884\u6d4b\u8ba1\u7b97 I/O\u5bc6\u96c6\u578b\u64cd\u4f5c : - Tushare API\u8c03\u7528 - \u6570\u636e\u5e93\u67e5\u8be2\u64cd\u4f5c - \u6587\u4ef6\u7f13\u5b58\u8bfb\u5199 \u4f18\u5316\u5efa\u8bae : - \u5b9e\u73b0\u8ba1\u7b97\u7ed3\u679c\u7f13\u5b58 - \u4f18\u5316\u6570\u636e\u5e93\u67e5\u8be2 - \u4f7f\u7528\u5f02\u6b65\u5904\u7406 - \u5b9e\u73b0\u8ba1\u7b97\u4efb\u52a1\u961f\u5217","title":"5.2 \u6027\u80fd\u74f6\u9888\u8bc6\u522b"},{"location":"01_project_overview/project_analysis_report/#6","text":"","title":"6. \u5b89\u5168\u6027\u5206\u6790"},{"location":"01_project_overview/project_analysis_report/#61","text":"\u6570\u636e\u5b89\u5168 (\u4e2d\u7b49\u98ce\u9669 \ud83d\udfe1): - API\u5bc6\u94a5\u660e\u6587\u5b58\u50a8\u98ce\u9669 - \u7528\u6237\u8f93\u5165\u9a8c\u8bc1\u4e0d\u5145\u5206 - \u654f\u611f\u6570\u636e\u65e5\u5fd7\u8bb0\u5f55 \u7cfb\u7edf\u5b89\u5168 (\u4f4e\u98ce\u9669 \ud83d\udfe2): - \u65e0\u660e\u663e\u7684\u6ce8\u5165\u653b\u51fb\u98ce\u9669 - \u8bbf\u95ee\u63a7\u5236\u57fa\u672c\u5b8c\u5584 - \u4f9d\u8d56\u5e93\u5b89\u5168\u6027\u826f\u597d \u7f51\u7edc\u5b89\u5168 (\u4f4e\u98ce\u9669 \ud83d\udfe2): - HTTPS\u901a\u4fe1 - CORS\u914d\u7f6e\u5408\u7406 - \u65e0\u660e\u663e\u7684\u7f51\u7edc\u653b\u51fb\u9762","title":"6.1 \u5b89\u5168\u98ce\u9669\u8bc4\u4f30"},{"location":"01_project_overview/project_analysis_report/#62","text":"\u5b9e\u73b0\u73af\u5883\u53d8\u91cf\u7ba1\u7406 \u52a0\u5f3a\u8f93\u5165\u9a8c\u8bc1 \u5b9e\u73b0\u8bbf\u95ee\u65e5\u5fd7\u5ba1\u8ba1 \u5b9a\u671f\u66f4\u65b0\u4f9d\u8d56\u5e93","title":"6.2 \u5b89\u5168\u6539\u8fdb\u5efa\u8bae"},{"location":"01_project_overview/project_analysis_report/#7","text":"","title":"7. \u6d4b\u8bd5\u73b0\u72b6\u5206\u6790"},{"location":"01_project_overview/project_analysis_report/#71","text":"\u6d4b\u8bd5\u7edf\u8ba1\uff08\u66f4\u65b0\uff09 : - \u6d4b\u8bd5\u7528\u4f8b\u603b\u6570: 100+\uff08\u65b0\u589e\u654f\u611f\u6027\u6269\u5c55\u7528\u4f8b\uff09 - \u6d4b\u8bd5\u901a\u8fc7\u7387: 100% - \u4ee3\u7801\u8986\u76d6\u7387: 62%+\uff08\u5355\u6587\u4ef6\u63d0\u5347\uff09 - \u6d4b\u8bd5\u6267\u884c\u65f6\u95f4: ~50\u79d2 \u8986\u76d6\u7387\u5206\u5e03 : \u6a21\u5757\u7c7b\u578b | \u8986\u76d6\u7387 | \u6d4b\u8bd5\u7528\u4f8b\u6570 ------------------|---------|---------- \u8ba1\u7b97\u5668\u6a21\u5757 | 85% | 45 API\u63a5\u53e3 | 45% | 12 \u6570\u636e\u5904\u7406 | 70% | 25 \u4e1a\u52a1\u903b\u8f91 | 55% | 15","title":"7.1 \u6d4b\u8bd5\u8986\u76d6\u60c5\u51b5"},{"location":"01_project_overview/project_analysis_report/#72","text":"\u6d4b\u8bd5\u4f18\u52bf : - \u6838\u5fc3\u8ba1\u7b97\u903b\u8f91\u6d4b\u8bd5\u5145\u5206 - \u6d4b\u8bd5\u7528\u4f8b\u8d28\u91cf\u8f83\u9ad8 - \u6d4b\u8bd5\u6267\u884c\u7a33\u5b9a \u6d4b\u8bd5\u4e0d\u8db3 : - \u96c6\u6210\u6d4b\u8bd5\u7f3a\u5931 - API\u6d4b\u8bd5\u8986\u76d6\u4e0d\u8db3 - \u6027\u80fd\u6d4b\u8bd5\u7f3a\u5931 - E2E\u6d4b\u8bd5\u7f3a\u5931 - \u60c5\u666f\u5206\u6790\uff08\u591a\u60c5\u666f\u5408\u6210\uff09\u4ec5\u6587\u6863\u65b9\u6848\uff0c\u5f85\u5b9e\u73b0\u4e0e\u6d4b\u8bd5","title":"7.2 \u6d4b\u8bd5\u8d28\u91cf\u8bc4\u4f30"},{"location":"01_project_overview/project_analysis_report/#8","text":"","title":"8. \u4f9d\u8d56\u5206\u6790"},{"location":"01_project_overview/project_analysis_report/#81","text":"Python\u4f9d\u8d56 : \u4f9d\u8d56\u5e93 | \u7248\u672c | \u7528\u9014 | \u98ce\u9669\u8bc4\u4f30 -----------------|---------|----------------|---------- fastapi | 0.104.1 | Web\u6846\u67b6 | \u4f4e streamlit | 1.28.1 | \u524d\u7aef\u754c\u9762 | \u4f4e tushare | 1.2.89 | \u6570\u636e\u6e90 | \u4e2d pandas | 2.1.3 | \u6570\u636e\u5904\u7406 | \u4f4e numpy | 1.25.2 | \u6570\u503c\u8ba1\u7b97 | \u4f4e scipy | 1.11.4 | \u79d1\u5b66\u8ba1\u7b97 | \u4f4e plotly | 5.17.0 | \u6570\u636e\u53ef\u89c6\u5316 | \u4f4e \u7cfb\u7edf\u4f9d\u8d56 : - Python 3.9+ - \u64cd\u4f5c\u7cfb\u7edf: \u8de8\u5e73\u53f0\u652f\u6301 - \u5185\u5b58\u8981\u6c42: \u6700\u5c0f512MB - \u7f51\u7edc\u8981\u6c42: \u7a33\u5b9a\u7684\u4e92\u8054\u7f51\u8fde\u63a5","title":"8.1 \u6838\u5fc3\u4f9d\u8d56"},{"location":"01_project_overview/project_analysis_report/#82","text":"\u9ad8\u98ce\u9669\u4f9d\u8d56 : - Tushare: \u7b2c\u4e09\u65b9\u4ed8\u8d39\u6570\u636e\u6e90\uff0c\u5b58\u5728API\u9650\u6d41\u548c\u670d\u52a1\u4e2d\u65ad\u98ce\u9669 \u4e2d\u98ce\u9669\u4f9d\u8d56 : - PostgreSQL: \u6570\u636e\u5e93\u8fde\u63a5\u7a33\u5b9a\u6027\u4f9d\u8d56 - Redis: \u7f13\u5b58\u670d\u52a1\u53ef\u7528\u6027\u4f9d\u8d56 - \ud83c\udd95 \u6570\u636e\u6e90\u540c\u6b65\u673a\u5236: \u53cc\u6570\u636e\u6e90\u4e00\u81f4\u6027\u7ef4\u62a4\u590d\u6742\u5ea6 \u4f4e\u98ce\u9669\u4f9d\u8d56 : - \u5176\u4ed6\u6240\u6709\u4f9d\u8d56\u5e93\u5747\u4e3a\u6210\u719f\u7a33\u5b9a\u7684\u5f00\u6e90\u9879\u76ee","title":"8.2 \u4f9d\u8d56\u98ce\u9669\u8bc4\u4f30"},{"location":"01_project_overview/project_analysis_report/#9","text":"","title":"9. \u53ef\u7ef4\u62a4\u6027\u5206\u6790"},{"location":"01_project_overview/project_analysis_report/#91","text":"Streamlit\u6846\u67b6\u4f18\u52bf : 8/10 \ud83d\udfe2 - \u4e13\u4e1a\u7684\u91d1\u878d\u6570\u636e\u53ef\u89c6\u5316\u7ec4\u4ef6\u5e93 - \u539f\u751f\u652f\u6301\u5b9e\u65f6\u6570\u636e\u66f4\u65b0\u548c\u4ea4\u4e92 - \u4e30\u5bcc\u7684\u56fe\u8868\u7c7b\u578b\u548c\u81ea\u5b9a\u4e49\u9009\u9879 - \u54cd\u5e94\u5f0f\u5e03\u5c40\u548c\u73b0\u4ee3\u5316UI\u8bbe\u8ba1 \u7ec4\u4ef6\u5316\u7a0b\u5ea6 : 7/10 \ud83d\udfe1 - \u4e3b\u8981\u754c\u9762\u7ec4\u4ef6\u5df2\u6a21\u5757\u5316 - \u53ef\u590d\u7528\u7ec4\u4ef6\u9700\u8981\u8fdb\u4e00\u6b65\u62bd\u8c61 - \u72b6\u6001\u7ba1\u7406\u9700\u8981\u4f18\u5316 \u7528\u6237\u4f53\u9a8c : 8/10 \ud83d\udfe2 - \u76f4\u89c2\u7684\u53c2\u6570\u914d\u7f6e\u754c\u9762 - \u5b9e\u65f6\u7684\u8ba1\u7b97\u7ed3\u679c\u5c55\u793a - \u4e13\u4e1a\u7684\u91d1\u878d\u56fe\u8868\u53ef\u89c6\u5316 - \u6d41\u7545\u7684\u4ea4\u4e92\u54cd\u5e94","title":"9.1 \u524d\u7aef\u754c\u9762\u67b6\u6784"},{"location":"01_project_overview/project_analysis_report/#92","text":"\u4ee3\u7801\u53ef\u8bfb\u6027 : 6/10 \ud83d\udfe1 - \u51fd\u6570\u547d\u540d\u57fa\u672c\u6e05\u6670 - \u6ce8\u91ca\u8986\u76d6\u7387\u4e0d\u8db3 - \u4ee3\u7801\u7ed3\u6784\u9700\u8981\u4f18\u5316 \u6a21\u5757\u5316\u7a0b\u5ea6 : 7/10 \ud83d\udfe2 - \u529f\u80fd\u6a21\u5757\u5212\u5206\u5408\u7406 - \u63a5\u53e3\u5b9a\u4e49\u57fa\u672c\u6e05\u6670 - \u4f9d\u8d56\u5173\u7cfb\u53ef\u4ee5\u4f18\u5316 \u6269\u5c55\u6027 : 8/10 \ud83d\udfe2 - \u67b6\u6784\u652f\u6301\u529f\u80fd\u6269\u5c55 - \u65b0\u589e\u8ba1\u7b97\u5668\u5bb9\u6613 - \u6570\u636e\u6e90\u53ef\u4ee5\u6269\u5c55 \u6d4b\u8bd5\u53cb\u597d\u6027 : 7/10 \ud83d\udfe2 - \u6838\u5fc3\u903b\u8f91\u6613\u4e8e\u6d4b\u8bd5 - \u4f9d\u8d56\u6ce8\u5165\u9700\u8981\u6539\u8fdb - Mock\u652f\u6301\u9700\u8981\u52a0\u5f3a","title":"9.2 \u7ef4\u62a4\u6027\u6307\u6807"},{"location":"01_project_overview/project_analysis_report/#92_1","text":"\u5f53\u524d\u7ef4\u62a4\u6210\u672c : \u9ad8 \ud83d\udd34 - \u4ee3\u7801\u8d28\u91cf\u95ee\u9898\u5bfc\u81f4\u7ef4\u62a4\u56f0\u96be - \u7f3a\u4e4f\u5b8c\u5584\u7684\u6587\u6863 - \u65b0\u4eba\u4e0a\u624b\u6210\u672c\u9ad8 \u91cd\u6784\u540e\u9884\u671f : \u4e2d\u7b49 \ud83d\udfe1 - \u4ee3\u7801\u8d28\u91cf\u663e\u8457\u63d0\u5347 - \u6587\u6863\u5b8c\u5584 - \u7ef4\u62a4\u6548\u7387\u63d0\u9ad860%","title":"9.2 \u7ef4\u62a4\u6210\u672c\u8bc4\u4f30"},{"location":"01_project_overview/project_analysis_report/#10","text":"","title":"10. \u4e1a\u52a1\u4ef7\u503c\u8bc4\u4f30"},{"location":"01_project_overview/project_analysis_report/#101","text":"\u6838\u5fc3\u4ef7\u503c (\u9ad8 \ud83d\udfe2): - \u63d0\u4f9b\u4e13\u4e1a\u7684DCF\u4f30\u503c\u8ba1\u7b97 - \u652f\u6301\u591a\u7ef4\u5ea6\u654f\u611f\u6027\u5206\u6790 - \u5b9e\u73b0\u81ea\u52a8\u5316\u80a1\u7968\u7b5b\u9009 \u7528\u6237\u4ef7\u503c (\u9ad8 \ud83d\udfe2): - \u7b80\u5316\u590d\u6742\u7684\u4f30\u503c\u8ba1\u7b97\u8fc7\u7a0b - \u63d0\u4f9b\u76f4\u89c2\u7684\u7ed3\u679c\u5c55\u793a - \u652f\u6301\u6279\u91cf\u5206\u6790\u5904\u7406 \u5546\u4e1a\u4ef7\u503c (\u4e2d\u7b49 \ud83d\udfe1): - \u53ef\u4f5c\u4e3a\u6295\u8d44\u51b3\u7b56\u8f85\u52a9\u5de5\u5177 - \u5177\u5907\u5546\u4e1a\u5316\u6f5c\u529b - \u53ef\u6269\u5c55\u4e3aSaaS\u670d\u52a1","title":"10.1 \u529f\u80fd\u4ef7\u503c"},{"location":"01_project_overview/project_analysis_report/#102","text":"\u6280\u672f\u4f18\u52bf : - \u8ba1\u7b97\u903b\u8f91\u4e13\u4e1a\u51c6\u786e - \u754c\u9762\u53cb\u597d\u6613\u7528 - \u652f\u6301\u591a\u79cd\u4f30\u503c\u65b9\u6cd5 \u6570\u636e\u4f18\u52bf : - \u96c6\u6210Tushare\u6570\u636e\u6e90 - \u5b9e\u65f6\u6570\u636e\u66f4\u65b0 - \u5386\u53f2\u6570\u636e\u5206\u6790 \u529f\u80fd\u4f18\u52bf : - \u654f\u611f\u6027\u5206\u6790\u529f\u80fd\u5b8c\u5584 - \u652f\u6301\u6279\u91cf\u5904\u7406 - \u7ed3\u679c\u53ef\u89c6\u5316\u6548\u679c\u597d","title":"10.2 \u7ade\u4e89\u4f18\u52bf"},{"location":"01_project_overview/project_analysis_report/#_8","text":"","title":"\u91cd\u6784\u5efa\u8bae"},{"location":"01_project_overview/project_analysis_report/#1_1","text":"\u7b2c\u4e00\u4f18\u5148\u7ea7 (\u7acb\u5373\u6267\u884c): - \ud83c\udd95 \u6df7\u5408\u6570\u636e\u6e90\u67b6\u6784\u5b9e\u73b0 - \ud83c\udd95 \u6570\u636e\u6e90\u7ba1\u7406\u5668\u5f00\u53d1 - \ud83c\udd95 \u7f13\u5b58\u673a\u5236\u4f18\u5316 - \u4ee3\u7801\u8d28\u91cf\u6539\u8fdb - \u9519\u8bef\u5904\u7406\u6807\u51c6\u5316 - \u6d4b\u8bd5\u8986\u76d6\u7387\u63d0\u5347 \u7b2c\u4e8c\u4f18\u5148\u7ea7 (\u8fd1\u671f\u6267\u884c): - \ud83c\udd95 \u6570\u636e\u6e90\u76d1\u63a7\u548c\u544a\u8b66\u7cfb\u7edf - \ud83c\udd95 \u81ea\u52a8\u964d\u7ea7\u548c\u6062\u590d\u673a\u5236 - \u67b6\u6784\u4f18\u5316\u91cd\u6784 - \u6027\u80fd\u4f18\u5316 - \u6587\u6863\u5b8c\u5584 \u7b2c\u4e09\u4f18\u5148\u7ea7 (\u957f\u671f\u89c4\u5212): - \ud83c\udd95 \u6570\u636e\u6e90\u6269\u5c55\u80fd\u529b - \ud83c\udd95 \u667a\u80fd\u7f13\u5b58\u7b56\u7565\u4f18\u5316 - \u529f\u80fd\u6269\u5c55 - \u7528\u6237\u4f53\u9a8c\u4f18\u5316 - \u5546\u4e1a\u5316\u51c6\u5907","title":"1. \u91cd\u6784\u4f18\u5148\u7ea7"},{"location":"01_project_overview/project_analysis_report/#2_1","text":"\u6e10\u8fdb\u5f0f\u91cd\u6784 : - \u4fdd\u6301\u7cfb\u7edf\u529f\u80fd\u6b63\u5e38\u8fd0\u884c - \u5206\u6a21\u5757\u9010\u6b65\u91cd\u6784 - \u6bcf\u4e2a\u9636\u6bb5\u90fd\u6709\u53ef\u4ea4\u4ed8\u6210\u679c \u8d28\u91cf\u4f18\u5148 : - \u4ee3\u7801\u8d28\u91cf\u662f\u91cd\u6784\u7684\u6838\u5fc3\u76ee\u6807 - \u5efa\u7acb\u5b8c\u5584\u7684\u8d28\u91cf\u4fdd\u8bc1\u4f53\u7cfb - \u6301\u7eed\u76d1\u63a7\u548c\u6539\u8fdb \u6d4b\u8bd5\u9a71\u52a8 : - \u91cd\u6784\u524d\u8865\u5145\u6d4b\u8bd5\u7528\u4f8b - \u786e\u4fdd\u91cd\u6784\u4e0d\u7834\u574f\u73b0\u6709\u529f\u80fd - \u5efa\u7acb\u56de\u5f52\u6d4b\u8bd5\u673a\u5236","title":"2. \u91cd\u6784\u7b56\u7565"},{"location":"01_project_overview/project_analysis_report/#3_1","text":"\u77ed\u671f\u6536\u76ca (1-3\u4e2a\u6708): - \ud83c\udd95 \u6570\u636e\u53ef\u9760\u6027\u63d0\u534790% (\u53cc\u6570\u636e\u6e90\u4fdd\u969c) - \ud83c\udd95 API\u8c03\u7528\u6210\u672c\u964d\u4f4e60% (\u667a\u80fd\u7f13\u5b58) - \u4ee3\u7801\u8d28\u91cf\u663e\u8457\u63d0\u5347 - \u5f00\u53d1\u6548\u7387\u63d0\u9ad830% - Bug\u6570\u91cf\u51cf\u5c1150% \u4e2d\u671f\u6536\u76ca (3-6\u4e2a\u6708): - \ud83c\udd95 \u6570\u636e\u8bbf\u95ee\u901f\u5ea6\u63d0\u534770% (\u7f13\u5b58\u4f18\u5316) - \ud83c\udd95 \u7cfb\u7edf\u53ef\u7528\u6027\u8fbe\u523099.5% (\u81ea\u52a8\u964d\u7ea7) - \u7cfb\u7edf\u6027\u80fd\u63d0\u534740% - \u7ef4\u62a4\u6210\u672c\u964d\u4f4e60% - \u65b0\u529f\u80fd\u5f00\u53d1\u901f\u5ea6\u63d0\u534750% \u957f\u671f\u6536\u76ca (6-12\u4e2a\u6708): - \ud83c\udd95 \u652f\u6301\u591a\u6570\u636e\u6e90\u6269\u5c55\u80fd\u529b - \ud83c\udd95 \u667a\u80fd\u6570\u636e\u6e90\u9009\u62e9\u548c\u4f18\u5316 - \u7cfb\u7edf\u7a33\u5b9a\u6027\u5927\u5e45\u63d0\u5347 - \u652f\u6301\u66f4\u5927\u89c4\u6a21\u7528\u6237 - \u5177\u5907\u5546\u4e1a\u5316\u80fd\u529b","title":"3. \u9884\u671f\u6536\u76ca"},{"location":"01_project_overview/project_analysis_report/#_9","text":"","title":"\u98ce\u9669\u8bc4\u4f30"},{"location":"01_project_overview/project_analysis_report/#1_2","text":"\u91cd\u6784\u98ce\u9669 (\u4e2d\u7b49 \ud83d\udfe1): - \u91cd\u6784\u8fc7\u7a0b\u53ef\u80fd\u5f15\u5165\u65b0bug - \u529f\u80fd\u56de\u5f52\u98ce\u9669 - \u6027\u80fd\u4e0b\u964d\u98ce\u9669 \u4f9d\u8d56\u98ce\u9669 (\u4e2d\u7b49 \ud83d\udfe1): - \u7b2c\u4e09\u65b9\u5e93\u66f4\u65b0\u98ce\u9669 - Tushare API\u53d8\u66f4\u548c\u9650\u6d41\u98ce\u9669 - PostgreSQL\u6570\u636e\u6e90\u7a33\u5b9a\u6027\u98ce\u9669 - \ud83c\udd95 \u53cc\u6570\u636e\u6e90\u540c\u6b65\u4e00\u81f4\u6027\u98ce\u9669 - \ud83c\udd95 \u7f13\u5b58\u6570\u636e\u8fc7\u671f\u98ce\u9669 \u6280\u672f\u9009\u578b\u98ce\u9669 (\u4f4e \ud83d\udfe2): - \u73b0\u6709\u6280\u672f\u6808\u6210\u719f\u7a33\u5b9a - \u793e\u533a\u652f\u6301\u826f\u597d - \u5b66\u4e60\u6210\u672c\u53ef\u63a7","title":"1. \u6280\u672f\u98ce\u9669"},{"location":"01_project_overview/project_analysis_report/#2_2","text":"\u7528\u6237\u4f53\u9a8c\u98ce\u9669 (\u4f4e \ud83d\udfe2): - \u91cd\u6784\u671f\u95f4\u529f\u80fd\u53ef\u80fd\u6682\u65f6\u4e0d\u53ef\u7528 - \u754c\u9762\u53d8\u5316\u53ef\u80fd\u5f71\u54cd\u7528\u6237\u4e60\u60ef \u6570\u636e\u98ce\u9669 (\u4e2d\u7b49 \ud83d\udfe1): - \u6570\u636e\u8fc1\u79fb\u98ce\u9669 - \u5386\u53f2\u6570\u636e\u517c\u5bb9\u6027 - \u8ba1\u7b97\u7ed3\u679c\u4e00\u81f4\u6027","title":"2. \u4e1a\u52a1\u98ce\u9669"},{"location":"01_project_overview/project_analysis_report/#3_2","text":"\u65f6\u95f4\u98ce\u9669 (\u4e2d\u7b49 \ud83d\udfe1): - \u91cd\u6784\u65f6\u95f4\u53ef\u80fd\u8d85\u51fa\u9884\u671f - \u8d44\u6e90\u6295\u5165\u53ef\u80fd\u4e0d\u8db3 \u4eba\u5458\u98ce\u9669 (\u4f4e \ud83d\udfe2): - \u6280\u672f\u56e2\u961f\u80fd\u529b\u5339\u914d - \u77e5\u8bc6\u4f20\u627f\u98ce\u9669\u53ef\u63a7","title":"3. \u9879\u76ee\u98ce\u9669"},{"location":"01_project_overview/project_analysis_report/#_10","text":"","title":"\u7ed3\u8bba\u4e0e\u5efa\u8bae"},{"location":"01_project_overview/project_analysis_report/#1_3","text":"\u80a1\u7968\u4f30\u503c\u7cfb\u7edf\u662f\u4e00\u4e2a \u529f\u80fd\u5b8c\u6574\u3001\u5177\u6709\u5546\u4e1a\u4ef7\u503c \u7684\u9879\u76ee\uff0c\u901a\u8fc7\u91c7\u7528 Tushare + PostgreSQL\u6df7\u5408\u67b6\u6784 \uff0c\u663e\u8457\u63d0\u5347\u4e86\u6570\u636e\u53ef\u9760\u6027\u548c\u7cfb\u7edf\u7a33\u5b9a\u6027\u3002\u867d\u7136\u4ecd\u5b58\u5728 \u4ee3\u7801\u8d28\u91cf\u95ee\u9898 \u548c \u6280\u672f\u503a\u52a1 \uff0c\u4f46\u6df7\u5408\u67b6\u6784\u7684\u5f15\u5165\u4e3a\u7cfb\u7edf\u5e26\u6765\u4e86\u65b0\u7684\u4f18\u52bf\u3002\u7cfb\u7edf\u7684\u6838\u5fc3\u4e1a\u52a1\u903b\u8f91\u6b63\u786e\uff0c\u6d4b\u8bd5\u8986\u76d6\u57fa\u672c\u5145\u5206\uff0c\u9700\u8981\u8fdb\u884c \u7cfb\u7edf\u6027\u91cd\u6784\u548c\u67b6\u6784\u4f18\u5316 \u3002","title":"1. \u603b\u4f53\u8bc4\u4f30"},{"location":"01_project_overview/project_analysis_report/#2_3","text":"\u5efa\u8bae\u6301\u7eed\u91cd\u6784\u4e0e\u67b6\u6784\u5347\u7ea7 \uff0c\u7406\u7531\u5982\u4e0b\uff1a - \ud83c\udd95 \u6df7\u5408\u67b6\u6784\u4e0e\u670d\u52a1\u5c42\u5b88\u62a4\u5df2\u5e26\u6765\u7a33\u5b9a\u6027\u63d0\u5347\uff1b\u7ee7\u7eed\u89e3\u8026\u654f\u611f\u6027/\u60c5\u666f\u6a21\u5757\u53ef\u8fdb\u4e00\u6b65\u964d\u4f4e\u8026\u5408\u3002 - \ud83c\udd95 \u6570\u636e\u6e90\u4e0e\u4f30\u503c\u57fa\u671f\u7b56\u7565\u66f4\u7075\u6d3b\uff1b\u9700\u5f15\u5165\u7edf\u4e00\u5f02\u5e38/\u544a\u8b66\u89c4\u8303\u4e0e\u53ef\u89c2\u6d4b\u6027\u3002 - \u4ee3\u7801\u8d28\u91cf\u95ee\u9898\u4ecd\u5f71\u54cd\u6548\u7387\uff1b\u5efa\u8bae\u63a8\u8fdb\u6a21\u5757\u5316\u4e0e\u7c7b\u578b\u7ea6\u675f\uff0c\u8865\u9f50\u6027\u80fd/\u96c6\u6210\u6d4b\u8bd5\u3002","title":"2. \u91cd\u6784\u5fc5\u8981\u6027"},{"location":"01_project_overview/project_analysis_report/#3_3","text":"\u7acb\u5373\u884c\u52a8 : 1. \ud83c\udd95 \u5b9e\u65bd\u6df7\u5408\u6570\u636e\u6e90\u67b6\u6784 2. \ud83c\udd95 \u5f00\u53d1\u6570\u636e\u6e90\u7ba1\u7406\u548c\u7f13\u5b58\u7cfb\u7edf 3. \u542f\u52a8\u4ee3\u7801\u8d28\u91cf\u6539\u8fdb\u8ba1\u5212 4. \u5efa\u7acb\u4ee3\u7801\u89c4\u8303\u548c\u8d28\u91cf\u68c0\u67e5\u6d41\u7a0b 5. \u8865\u5145\u5173\u952e\u6a21\u5757\u7684\u6d4b\u8bd5\u7528\u4f8b \u8fd1\u671f\u89c4\u5212 : 1. \ud83c\udd95 \u5efa\u7acb\u6570\u636e\u6e90\u76d1\u63a7\u548c\u544a\u8b66\u673a\u5236 2. \ud83c\udd95 \u5b9e\u73b0\u81ea\u52a8\u964d\u7ea7\u548c\u6062\u590d\u7b56\u7565 3. \u6267\u884c\u5206\u9636\u6bb5\u91cd\u6784\u8ba1\u5212 4. \u4f18\u5316\u7cfb\u7edf\u67b6\u6784\u548c\u6027\u80fd 5. \u5b8c\u5584\u6587\u6863\u548c\u90e8\u7f72\u6d41\u7a0b \u957f\u671f\u76ee\u6807 : 1. \ud83c\udd95 \u6784\u5efa\u667a\u80fd\u6570\u636e\u6e90\u9009\u62e9\u548c\u4f18\u5316\u80fd\u529b 2. \ud83c\udd95 \u652f\u6301\u66f4\u591a\u6570\u636e\u6e90\u7684\u6269\u5c55 3. \u5efa\u7acb\u53ef\u6301\u7eed\u7684\u5f00\u53d1\u548c\u7ef4\u62a4\u4f53\u7cfb 4. \u6269\u5c55\u7cfb\u7edf\u529f\u80fd\u548c\u7528\u6237\u89c4\u6a21 5. \u63a2\u7d22\u5546\u4e1a\u5316\u673a\u4f1a","title":"3. \u5b9e\u65bd\u5efa\u8bae"},{"location":"01_project_overview/project_analysis_report/#4_1","text":"\u7ba1\u7406\u5c42\u652f\u6301 : \u786e\u4fdd\u5145\u8db3\u7684\u8d44\u6e90\u6295\u5165 \u56e2\u961f\u534f\u4f5c : \u5efa\u7acb\u826f\u597d\u7684\u534f\u4f5c\u673a\u5236 \u8d28\u91cf\u4fdd\u8bc1 : \u5efa\u7acb\u4e25\u683c\u7684\u8d28\u91cf\u6807\u51c6 \u6301\u7eed\u6539\u8fdb : \u5efa\u7acb\u6301\u7eed\u4f18\u5316\u7684\u6587\u5316 \u901a\u8fc7\u6df7\u5408\u67b6\u6784\u5347\u7ea7\u548c\u7cfb\u7edf\u6027\u91cd\u6784\uff0c\u80a1\u7968\u4f30\u503c\u7cfb\u7edf\u5c06\u6210\u4e3a\u4e00\u4e2a \u9ad8\u8d28\u91cf\u3001\u9ad8\u6027\u80fd\u3001\u9ad8\u53ef\u9760\u6027\u3001\u6613\u7ef4\u62a4 \u7684\u4e13\u4e1a\u91d1\u878d\u5206\u6790\u5de5\u5177\uff0c\u5177\u5907 \u5f3a\u5927\u7684\u6570\u636e\u5904\u7406\u80fd\u529b \u548c \u957f\u671f\u53d1\u5c55\u548c\u5546\u4e1a\u5316 \u7684\u6f5c\u529b\u3002 \u62a5\u544a\u751f\u6210\u65f6\u95f4 : 2025\u5e741\u6708 \u5206\u6790\u5de5\u5177 : Pylint, pytest, \u4eba\u5de5\u4ee3\u7801\u5ba1\u67e5 \u62a5\u544a\u7248\u672c : v1.0 \u4e0b\u6b21\u8bc4\u4f30\u5efa\u8bae : \u91cd\u6784\u5b8c\u6210\u540e3\u4e2a\u6708","title":"4. \u6210\u529f\u5173\u952e\u56e0\u7d20"},{"location":"01_project_overview/project_status_2025_09_latest/","text":"\u80a1\u7968\u4f30\u503c\u7cfb\u7edf\u9879\u76ee\u72b6\u6001\u62a5\u544a \u6700\u540e\u66f4\u65b0: 2025-09-26 \u6267\u884c\u6458\u8981 \u672c\u9879\u76ee\u662f\u4e00\u4e2a\u57fa\u4e8eDCF\u6a21\u578b\u7684\u4e13\u4e1a\u80a1\u7968\u4f30\u503c\u7cfb\u7edf\uff0c\u5f53\u524d\u5df2\u5b8c\u6210\u4eceProof of Concept\u5230Production Ready\u7684\u8f6c\u6362\u3002\u7cfb\u7edf\u5b9e\u73b0\u4e86\u6df7\u5408\u6570\u636e\u6e90\u67b6\u6784\uff08TuShare + PostgreSQL\uff09\uff0c\u5177\u5907\u5b8c\u6574\u7684\u4f30\u503c\u94fe\u8def\u3001LLM\u667a\u80fd\u5206\u6790\u3001\u654f\u611f\u6027\u5206\u6790\u3001\u80a1\u7968\u7b5b\u9009\u7b49\u529f\u80fd\u3002 \u5f53\u524d\u7248\u672c : v3.0.0 (feature/user-auth\u5206\u652f) \u6838\u5fc3\u6280\u672f\u6808 : Python 3.9+, FastAPI, Streamlit, PostgreSQL, TuShare API \u67b6\u6784\u6a21\u5f0f : \u6df7\u5408\u6570\u636e\u6e90 + \u6a21\u5757\u5316DCF\u8ba1\u7b97 + LLM\u667a\u80fd\u5206\u6790 \u90e8\u7f72\u72b6\u6001 : \u5f00\u53d1\u73af\u5883\u8fd0\u884c(Streamlit\u7aef\u53e38501)\uff0c\u751f\u4ea7\u5c31\u7eea \u5173\u952e\u6210\u5c31 \u2705 \u751f\u4ea7\u7ea7\u6570\u636e\u6e90 : TuShare\u63a5\u53e3\u5b8c\u5168\u5bf9\u9f50PostgreSQL\u6807\u51c6\uff0c\u652f\u6301\u6570\u636e\u6e90\u70ed\u5207\u6362 \u2705 \u6a21\u5757\u5316DCF\u5f15\u64ce : 6\u4e2a\u72ec\u7acb\u8ba1\u7b97\u5668\uff0c\u8986\u76d6\u4eceNWC\u5230\u80a1\u6743\u4ef7\u503c\u7684\u5b8c\u6574\u94fe\u8def \u2705 Streamlit\u524d\u7aef\u67b6\u6784 : \u57fa\u4e8eStreamlit\u7684\u73b0\u4ee3\u5316Web\u754c\u9762\uff0c\u652f\u6301\u7528\u6237\u53cb\u597d\u64cd\u4f5c \u2705 \u7528\u6237\u8ba4\u8bc1\u7cfb\u7edf : \u5b8c\u6574\u7684\u7528\u6237\u6ce8\u518c/\u767b\u5f55/\u4f1a\u8bdd\u7ba1\u7406\uff0c\u6570\u636e\u5e93\u4eceSQLite\u8fc1\u79fb\u81f3Postgres/Supabase \u2705 \u667a\u80fd\u7f13\u5b58\u7cfb\u7edf : \u4f30\u503c\u7ed3\u679c\u7f13\u5b58\u4e0e\u4f1a\u8bdd\u6062\u590d\uff0c\u5927\u5e45\u63d0\u5347\u7528\u6237\u4f53\u9a8c\u548c\u7cfb\u7edf\u6027\u80fd \u2705 LLM\u96c6\u6210 : \u652f\u6301DeepSeek/OpenAI\u517c\u5bb9API\uff0c\u751f\u6210\u6295\u8d44\u5206\u6790\u62a5\u544a \u2705 \u654f\u611f\u6027\u5206\u6790 : \u591a\u7ef4\u5ea6\u4f30\u503csensitivity table\uff0c\u652f\u6301\u7ec8\u503c\u6cd5/\u6c38\u7eed\u589e\u957f\u6cd5 \u2705 \u80a1\u7968\u7b5b\u9009\u5668 : \u57fa\u4e8e\u8d22\u52a1\u6307\u6807\u7684\u591a\u6761\u4ef6\u7b5b\u9009 \u2705 LTM\u57fa\u7ebf : \u652f\u6301Last Twelve Months\u6536\u5165\u57fa\u671f\uff0c\u63d0\u5347\u65f6\u6548\u6027 \u5f53\u524d\u67b6\u6784\u6982\u89c8 \u7cfb\u7edf\u67b6\u6784\uff082025-09\u7248\u672c\uff09 \u524d\u7aef\u5c42 (Streamlit) \u2514\u2500\u2500 Streamlit: frontend-streamlit/streamlit_app.py API\u670d\u52a1\u5c42 \u2514\u2500\u2500 FastAPI: src/api/main.py (\u7aef\u53e38124) \u251c\u2500\u2500 \u4f30\u503c\u63a5\u53e3: /api/v1/valuation \u251c\u2500\u2500 \u654f\u611f\u6027\u5206\u6790: /api/v1/sensitivity \u2514\u2500\u2500 \u80a1\u7968\u7b5b\u9009: /api/v1/screener \u4e1a\u52a1\u903b\u8f91\u5c42 \u251c\u2500\u2500 \u6838\u5fc3\u8ba1\u7b97\u5f15\u64ce: src/core/ \u2502 \u251c\u2500\u2500 calculators/dcf/: DCF\u8ba1\u7b97\u5668\u96c6\u7fa4(6\u4e2a\u6a21\u5757) \u2502 \u251c\u2500\u2500 financial/: \u8d22\u52a1\u9884\u6d4b\u4e0e\u5904\u7406\u5f15\u64ce \u2502 \u2514\u2500\u2500 screener/: \u80a1\u7968\u7b5b\u9009\u5668 \u251c\u2500\u2500 \u6570\u636e\u670d\u52a1: src/data/ \u2502 \u251c\u2500\u2500 fetchers/: \u6570\u636e\u83b7\u53d6\u5668(TuShare/PostgreSQL) \u2502 \u2514\u2500\u2500 processors/: \u6570\u636e\u6e05\u6d17\u4e0e\u5904\u7406 \u2514\u2500\u2500 \u4e1a\u52a1\u670d\u52a1: src/services/valuation_service.py \u6570\u636e\u5c42 \u251c\u2500\u2500 TuShare API: \u5b9e\u65f6\u91d1\u878d\u6570\u636e(\u4e3b\u8981) \u251c\u2500\u2500 PostgreSQL: \u5386\u53f2\u6570\u636e\u5b58\u50a8/\u6821\u9a8c\u57fa\u51c6 \u2514\u2500\u2500 Redis: \u7f13\u5b58\u5c42(\u914d\u7f6e\u9879) \u6838\u5fc3\u6a21\u5757\u7edf\u8ba1 \u6e90\u4ee3\u7801\u6587\u4ef6 : 34\u4e2aPython\u6a21\u5757 \u6d4b\u8bd5\u6587\u4ef6 : 27\u4e2a\u6d4b\u8bd5\u6a21\u5757 \u524d\u7aef\u6587\u4ef6 : 17\u4e2a\u524d\u7aef\u7ec4\u4ef6 \u914d\u7f6e\u6587\u4ef6 : \u652f\u6301uv/pip\u53cc\u5305\u7ba1\u7406\uff0cpre-commit\u4ee3\u7801\u8d28\u91cf\u4fdd\u969c \u4e3b\u8981\u529f\u80fd\u6a21\u5757 1. \u7528\u6237\u8ba4\u8bc1\u4e0e\u4f1a\u8bdd\u7ba1\u7406 \u4f4d\u7f6e : src/auth/ , frontend-streamlit/auth/ \u529f\u80fd\u7279\u6027 : - \u5b8c\u6574\u7684\u7528\u6237\u6ce8\u518c\u3001\u767b\u5f55\u3001\u4f1a\u8bdd\u7ba1\u7406\u7cfb\u7edf - \u6570\u636e\u5e93\u67b6\u6784\u8fc1\u79fb\uff1aSQLite \u2192 PostgreSQL/Supabase\uff0c\u652f\u6301\u9ad8\u5e76\u53d1\u548c\u4e91\u539f\u751f\u90e8\u7f72 - \u4f1a\u8bdd\u6301\u4e45\u5316\uff1a\u7528\u6237\u767b\u5f55\u72b6\u6001\u548c\u4f30\u503c\u7ed3\u679c\u7f13\u5b58\uff0c\u63d0\u5347\u7528\u6237\u4f53\u9a8c - \u8ba4\u8bc1\u4e2d\u95f4\u4ef6\uff1a\u4fdd\u62a4\u654f\u611f\u529f\u80fd\u548c\u6570\u636e\u8bbf\u95ee - \u5b89\u5168\u7279\u6027\uff1a\u5bc6\u7801\u54c8\u5e0c\u3001\u4f1a\u8bdd\u4ee4\u724c\u3001\u9632CSRF\u7b49 \u5173\u952e\u6539\u8fdb (2025-09): - \u89e3\u51b3SQLite\u5e76\u53d1\u9501\u95ee\u9898\uff0c\u8fc1\u79fb\u81f3\u6210\u719f\u7684\u5173\u7cfb\u578b\u6570\u636e\u5e93 - \u667a\u80fd\u7f13\u5b58\u673a\u5236\uff0c\u4f30\u503c\u7ed3\u679c\u5728\u4f1a\u8bdd\u95f4\u6301\u4e45\u4fdd\u5b58 - \u4f18\u5316\u7528\u6237\u754c\u9762\uff0c\u7b80\u5316\u8ba4\u8bc1\u6d41\u7a0b 2. \u6570\u636e\u83b7\u53d6\u4e0e\u5904\u7406 \u4f4d\u7f6e : src/data/fetchers/ , src/core/financial/processor.py \u529f\u80fd\u7279\u6027 : - \u6df7\u5408\u6570\u636e\u6e90\u67b6\u6784: DATA_SOURCE=tushare/postgres/hybrid - TuShare\u5e74\u62a5\u4e25\u683c\u7b5b\u9009: end_type='4' , update_flag='1' \u4f18\u5148 - \u5b57\u6bb5\u6620\u5c04\u7edf\u4e00: \u5e94\u6536\u8d26\u6b3e+\u7968\u636e\u805a\u5408\u3001\u56fa\u5b9a\u8d44\u4ea7\u56de\u9000\u3001EPS\u53bb\u91cd - \u6570\u636e\u6e05\u6d17\u4fdd\u62a4: \u5173\u952e\u79d1\u76ee(\u6536\u5165/\u5229\u6da6/\u8d44\u4ea7/\u8d1f\u503a)\u514d\u53d7\u5f02\u5e38\u503c\u8bef\u5224 - LTM\u652f\u6301: \u5b63\u5ea6+\u5e74\u62a5\u7ec4\u88c5Last Twelve Months\u57fa\u7ebf \u5173\u952e\u6539\u8fdb (2025-09): - \u4fee\u590d\u8d44\u4ea7\u8d1f\u503a\u8868\u57fa\u51c6\u65e5\u56de\u9000\u52302023\u7684\u95ee\u9898 - \u4fdd\u62a4\u5217\u673a\u5236\u9632\u6b62\u7ed3\u6784\u6027\u8dc3\u8fc1\u88ab\u8bef\u5224\u4e3a\u5f02\u5e38 - \u6309\u5e74\u62e9\u4f18\u4fdd\u7559(\u4e0d\u518d\u4e22\u5931\u6700\u65b0\u5e74\u5ea6\u6570\u636e) 2. DCF\u4f30\u503c\u8ba1\u7b97\u5f15\u64ce \u4f4d\u7f6e : src/core/calculators/dcf/ , src/core/financial/forecaster.py \u6a21\u5757\u7ec4\u6210 : 1. NwcCalculator : \u51c0\u8425\u8fd0\u8d44\u672c\u8ba1\u7b97\u4e0e\u9884\u6d4b 2. FcfCalculator : \u65e0\u6760\u6746\u81ea\u7531\u73b0\u91d1\u6d41\u8ba1\u7b97 3. WaccCalculator : \u52a0\u6743\u5e73\u5747\u8d44\u672c\u6210\u672c\u8ba1\u7b97 4. TerminalValueCalculator : \u7ec8\u503c\u8ba1\u7b97(\u9000\u51fa\u500d\u6570/\u6c38\u7eed\u589e\u957f) 5. PresentValueCalculator : \u73b0\u503c\u6298\u73b0\u8ba1\u7b97 6. EquityBridgeCalculator : \u4f01\u4e1a\u4ef7\u503c\u5230\u80a1\u6743\u4ef7\u503c\u6865\u63a5 \u4f30\u503c\u94fe\u8def : \u5386\u53f2\u6570\u636e \u2192 \u6e05\u6d17\u5904\u7406 \u2192 \u6bd4\u7387\u4e2d\u4f4d\u6570 \u2192 \u8d22\u52a1\u9884\u6d4b \u2192 UFCF\u8ba1\u7b97 \u2192 \u7ec8\u503c\u8ba1\u7b97 \u2192 \u73b0\u503c\u6298\u73b0 \u2192 \u80a1\u6743\u4ef7\u503c \u2192 \u6bcf\u80a1\u4ef7\u503c \u5173\u952e\u7279\u6027 : - \u5386\u53f2\u6bd4\u7387\u4e2d\u4f4d\u6570\u9a71\u52a8\u9884\u6d4b - \u652f\u6301CAGR\u8870\u51cf\u4e0e\u8fc7\u6e21\u5230\u76ee\u6807\u503c - \u540d\u4e49GDP\u4e0a\u9650\u7ea6\u675f(\u4e2d\u56fd\u5e02\u573a) - Decimal\u7cbe\u5ea6\u8ba1\u7b97\u907f\u514d\u6d6e\u70b9\u8bef\u5dee 3. LLM\u667a\u80fd\u5206\u6790 \u4f4d\u7f6e : src/api/llm_utils.py , src/config/llm_prompt_template.md \u652f\u6301\u6a21\u578b : - DeepSeek Chat - OpenAI\u517c\u5bb9API(\u81ea\u5b9a\u4e49) - \u73af\u5883\u53d8\u91cf\u914d\u7f6e: LLM_PROVIDER , *_API_KEY \u5206\u6790\u5185\u5bb9 : - \u4f30\u503c\u7ed3\u679c\u89e3\u8bfb\u4e0e\u6295\u8d44\u5efa\u8bae - \u5173\u952e\u5047\u8bbe\u654f\u611f\u6027\u5206\u6790 - \u884c\u4e1a\u5bf9\u6bd4\u4e0e\u98ce\u9669\u63d0\u793a - \u4e2d\u6587\u4e13\u4e1a\u62a5\u544a\u751f\u6210 4. \u654f\u611f\u6027\u5206\u6790\u7cfb\u7edf \u4f4d\u7f6e : src/api/sensitivity_models.py \u5206\u6790\u7ef4\u5ea6 : - WACC vs \u6c38\u7eed\u589e\u957f\u7387 - WACC vs \u9000\u51fa\u500d\u6570 - \u6536\u5165CAGR vs EBITDA\u5229\u6da6\u7387 - \u6536\u5165CAGR vs \u7ec8\u503c\u65b9\u6cd5 \u8f93\u51fa\u6307\u6807 : - \u4f01\u4e1a\u4ef7\u503c(EV) - \u6bcf\u80a1\u4ef7\u503c(VPS) - EV/EBITDA\u500d\u6570 - \u9690\u542bPE\u500d\u6570 - \u9690\u542b\u6c38\u7eed\u589e\u957f\u7387 5. \u80a1\u7968\u7b5b\u9009\u5668 \u4f4d\u7f6e : src/core/screener/ \u7b5b\u9009\u6761\u4ef6 : - \u5e02\u503c\u8303\u56f4 - \u4f30\u503c\u500d\u6570(PE/PB/EV/EBITDA) - \u8d22\u52a1\u6307\u6807(ROE/ROA/\u6536\u5165\u589e\u957f\u7387) - \u884c\u4e1a/\u677f\u5757\u8fc7\u6ee4 \u5f00\u53d1\u5de5\u5177\u94fe \u4ee3\u7801\u8d28\u91cf\u4fdd\u969c \u683c\u5f0f\u5316 : Black + isort \u9759\u6001\u68c0\u67e5 : Ruff + MyPy(\u9010\u6b65\u542f\u7528) \u5b89\u5168\u626b\u63cf : Bandit + Safety \u9884\u63d0\u4ea4\u94a9\u5b50 : pre-commit\u914d\u7f6e \u6d4b\u8bd5\u8986\u76d6 : pytest + pytest-cov \u5305\u7ba1\u7406 \u4e3b\u8981 : uv(\u63a8\u8350,\u66f4\u5feb\u66f4\u53ef\u9760) \u5907\u9009 : pip + requirements.txt \u4f9d\u8d56\u7ec4 : [dev] , [test] , [docs] \u8fd0\u884c\u547d\u4ee4 # \u73af\u5883\u8bbe\u7f6e uv venv && source .venv/bin/activate uv pip install -e \".[dev,test]\" # \u4ee3\u7801\u8d28\u91cf pre-commit run --all-files black . && isort . && ruff check --fix . # \u6d4b\u8bd5 pytest --cov=. --cov-report=html # \u5e94\u7528\u8fd0\u884c streamlit run frontend-streamlit/streamlit_app.py uvicorn src.api.main:app --reload --port 8124 \u6570\u636e\u6e90\u5bf9\u6bd4\u4e0e\u9a8c\u8bc1 TuShare vs PostgreSQL \u5bf9\u9f50\u7ed3\u679c \u6d4b\u8bd5\u6848\u4f8b : 000999.SZ, 600519.SH \u5bf9\u9f50\u7ef4\u5ea6 : \u57fa\u51c6\u65e5\u671f\u3001\u5386\u53f2CAGR\u3001\u6700\u65b0EBITDA\u3001NWC\u7ec4\u4ef6\u3001EV\u4f30\u503c \u5bf9\u9f50\u72b6\u51b5 : - \u2705 \u57fa\u51c6\u62a5\u8868\u65e5\u671f : 2024-12-31 (\u4e00\u81f4) - \u2705 \u5386\u53f2\u6536\u5165CAGR : 21.698%/17.184% (\u5b8c\u5168\u4e00\u81f4) - \u2705 \u6700\u65b0\u5b9e\u9645EBITDA : 600519\u5b8c\u5168\u4e00\u81f4\uff0c000999\u63a5\u8fd1 - \u2705 DCF\u8ba1\u7b97\u94fe\u8def : WACC\u3001\u7ec8\u503c\u3001\u73b0\u503c\u903b\u8f91\u4e00\u81f4 - \u26a0\ufe0f VPS\u5dee\u5f02 : \u4e3b\u8981\u7531\u80a1\u672c\u5feb\u7167\u65f6\u95f4\u5dee\u5f02(TS\u66f4\u53ca\u65f6) \u6570\u636e\u6e90\u9009\u62e9\u5efa\u8bae \u751f\u4ea7\u4f30\u503c : DATA_SOURCE=tushare (\u66f4\u53ca\u65f6\u3001\u66f4\u5b8c\u6574) \u5386\u53f2\u590d\u73b0 : DATA_SOURCE=postgres \u6216 TS\u7684PG\u517c\u5bb9\u6a21\u5f0f \u5f00\u53d1\u8c03\u8bd5 : DATA_SOURCE=hybrid (PG\u4f18\u5148,TS\u56de\u9000) \u5df2\u77e5\u95ee\u9898\u4e0e\u9650\u5236 1. \u884c\u4e1a\u9002\u7528\u6027 \u2705 \u975e\u91d1\u878d\u4f01\u4e1a : \u5b8c\u5168\u9002\u7528 \u26a0\ufe0f \u91d1\u878d\u4f01\u4e1a : \u90e8\u5206\u6307\u6807\u4e0d\u9002\u7528(\u94f6\u884c/\u4fdd\u9669\u7b49)\uff0c\u4f1a\u7ed9\u51fa\u8b66\u544a 2. \u6570\u636e\u8d28\u91cf\u4f9d\u8d56 TuShare\u6570\u636e\u8d28\u91cf\u76f4\u63a5\u5f71\u54cd\u4f30\u503c\u7ed3\u679c \u9700\u8981\u5b9a\u671f\u6821\u9a8c\u4e0ePG\u57fa\u51c6\u7684\u4e00\u81f4\u6027 \u6e05\u6d17\u7b56\u7565\u9700\u8981\u6301\u7eed\u4f18\u5316 3. \u6027\u80fd\u8003\u8651 TuShare API\u6709\u8c03\u7528\u9891\u7387\u9650\u5236 \u5efa\u8bae\u589e\u52a0\u672c\u5730\u7f13\u5b58\u4e0e\u91cd\u8bd5\u673a\u5236 \u5927\u6279\u91cf\u7b5b\u9009\u65f6\u53ef\u80fd\u8f83\u6162 \u4e0b\u4e00\u6b65\u89c4\u5212 \u77ed\u671f\u4f18\u5316(1-2\u5468) [ ] \u6027\u80fd\u4f18\u5316: \u672c\u5730\u7f13\u5b58\u673a\u5236 [ ] \u6e05\u6d17\u7b56\u7565: \u8f6f\u5316NWC\u7ec4\u4ef6\u6e05\u6d17\u89c4\u5219 [ ] \u900f\u660e\u5ea6: \u5e02\u573a\u5feb\u7167trade_date\u900f\u4f20\u5230\u524d\u7aef [ ] \u6d4b\u8bd5: \u63d0\u5347\u8986\u76d6\u7387\u523080%+ \u4e2d\u671f\u589e\u5f3a(1\u4e2a\u6708) [ ] \u884c\u4e1a\u4e13\u7528\u6a21\u578b: \u91d1\u878d\u4f01\u4e1a\u4f30\u503c\u6a21\u578b [ ] \u6570\u636e\u76d1\u63a7: \u5b9a\u671fTS\u2194PG\u57fa\u7ebf\u6f02\u79fb\u68c0\u67e5 [ ] \u591a\u5e02\u573a\u652f\u6301: \u6e2f\u80a1/\u7f8e\u80a1\u6570\u636e\u6e90 [ ] \u6279\u91cf\u4f30\u503c: \u652f\u6301\u80a1\u7968\u6c60\u6279\u91cf\u5904\u7406 \u957f\u671f\u613f\u666f(3\u4e2a\u6708) [ ] \u5b9e\u65f6\u6d41\u5904\u7406: \u76d8\u4e2d\u5b9e\u65f6\u4f30\u503c\u66f4\u65b0 [ ] \u673a\u5668\u5b66\u4e60: \u5386\u53f2\u4f30\u503c\u51c6\u786e\u6027\u53cd\u9988\u5b66\u4e60 [ ] \u4e91\u539f\u751f\u90e8\u7f72: Docker + K8s\u751f\u4ea7\u90e8\u7f72 [ ] \u5f00\u653eAPI: \u7b2c\u4e09\u65b9\u96c6\u6210\u63a5\u53e3 \u6280\u672f\u503a\u52a1 \u9ad8\u4f18\u5148\u7ea7 \u7c7b\u578b\u6ce8\u89e3 : MyPy\u8986\u76d6\u7387\u4ecd\u8f83\u4f4e\uff0c\u9700\u8981\u9010\u6b65\u8865\u5f3a \u5f02\u5e38\u5904\u7406 : \u90e8\u5206\u6a21\u5757\u7f3a\u4e4f\u5b8c\u6574\u7684\u9519\u8bef\u5904\u7406\u94fe\u8def \u6587\u6863\u540c\u6b65 : \u4ee3\u7801\u53d8\u66f4\u540e\u6587\u6863\u66f4\u65b0\u6ede\u540e \u4e2d\u4f18\u5148\u7ea7 \u65e5\u5fd7\u7cfb\u7edf : \u7edf\u4e00\u7684\u65e5\u5fd7\u683c\u5f0f\u4e0e\u7ea7\u522b\u7ba1\u7406 \u914d\u7f6e\u7ba1\u7406 : \u73af\u5883\u53d8\u91cf\u7ba1\u7406\u53ef\u4ee5\u66f4\u52a0\u7ed3\u6784\u5316 \u6570\u636e\u5e93\u8fde\u63a5 : \u8fde\u63a5\u6c60\u4e0e\u4e8b\u52a1\u7ba1\u7406\u4f18\u5316 \u7ed3\u8bba \u9879\u76ee\u5df2\u8fbe\u5230\u751f\u4ea7\u53ef\u7528\u72b6\u6001\uff0c\u6838\u5fc3\u529f\u80fd\u5b8c\u6574\u4e14\u7ecf\u8fc7\u9a8c\u8bc1\u3002TuShare\u6570\u636e\u6e90\u7684\u5f15\u5165\u663e\u8457\u63d0\u5347\u4e86\u7cfb\u7edf\u7684\u65f6\u6548\u6027\u548c\u6570\u636e\u5b8c\u6574\u6027\u3002\u5f53\u524d\u7248\u672c(3.0)\u5728\u79d1\u5b66\u6027\u3001\u51c6\u786e\u6027\u3001\u5b9e\u7528\u6027\u65b9\u9762\u5747\u6ee1\u8db3\u4e13\u4e1a\u6295\u8d44\u5206\u6790\u9700\u6c42\u3002 \u4e0b\u4e00\u9636\u6bb5\u7684\u91cd\u70b9\u662f\u6027\u80fd\u4f18\u5316\u3001\u7528\u6237\u4f53\u9a8c\u63d0\u5347\u548c\u529f\u80fd\u6269\u5c55\uff0c\u4e3a\u66f4\u5927\u89c4\u6a21\u7684\u751f\u4ea7\u5e94\u7528\u505a\u51c6\u5907\u3002","title":"\u80a1\u7968\u4f30\u503c\u7cfb\u7edf\u9879\u76ee\u72b6\u6001\u62a5\u544a"},{"location":"01_project_overview/project_status_2025_09_latest/#_1","text":"\u6700\u540e\u66f4\u65b0: 2025-09-26","title":"\u80a1\u7968\u4f30\u503c\u7cfb\u7edf\u9879\u76ee\u72b6\u6001\u62a5\u544a"},{"location":"01_project_overview/project_status_2025_09_latest/#_2","text":"\u672c\u9879\u76ee\u662f\u4e00\u4e2a\u57fa\u4e8eDCF\u6a21\u578b\u7684\u4e13\u4e1a\u80a1\u7968\u4f30\u503c\u7cfb\u7edf\uff0c\u5f53\u524d\u5df2\u5b8c\u6210\u4eceProof of Concept\u5230Production Ready\u7684\u8f6c\u6362\u3002\u7cfb\u7edf\u5b9e\u73b0\u4e86\u6df7\u5408\u6570\u636e\u6e90\u67b6\u6784\uff08TuShare + PostgreSQL\uff09\uff0c\u5177\u5907\u5b8c\u6574\u7684\u4f30\u503c\u94fe\u8def\u3001LLM\u667a\u80fd\u5206\u6790\u3001\u654f\u611f\u6027\u5206\u6790\u3001\u80a1\u7968\u7b5b\u9009\u7b49\u529f\u80fd\u3002 \u5f53\u524d\u7248\u672c : v3.0.0 (feature/user-auth\u5206\u652f) \u6838\u5fc3\u6280\u672f\u6808 : Python 3.9+, FastAPI, Streamlit, PostgreSQL, TuShare API \u67b6\u6784\u6a21\u5f0f : \u6df7\u5408\u6570\u636e\u6e90 + \u6a21\u5757\u5316DCF\u8ba1\u7b97 + LLM\u667a\u80fd\u5206\u6790 \u90e8\u7f72\u72b6\u6001 : \u5f00\u53d1\u73af\u5883\u8fd0\u884c(Streamlit\u7aef\u53e38501)\uff0c\u751f\u4ea7\u5c31\u7eea","title":"\u6267\u884c\u6458\u8981"},{"location":"01_project_overview/project_status_2025_09_latest/#_3","text":"\u2705 \u751f\u4ea7\u7ea7\u6570\u636e\u6e90 : TuShare\u63a5\u53e3\u5b8c\u5168\u5bf9\u9f50PostgreSQL\u6807\u51c6\uff0c\u652f\u6301\u6570\u636e\u6e90\u70ed\u5207\u6362 \u2705 \u6a21\u5757\u5316DCF\u5f15\u64ce : 6\u4e2a\u72ec\u7acb\u8ba1\u7b97\u5668\uff0c\u8986\u76d6\u4eceNWC\u5230\u80a1\u6743\u4ef7\u503c\u7684\u5b8c\u6574\u94fe\u8def \u2705 Streamlit\u524d\u7aef\u67b6\u6784 : \u57fa\u4e8eStreamlit\u7684\u73b0\u4ee3\u5316Web\u754c\u9762\uff0c\u652f\u6301\u7528\u6237\u53cb\u597d\u64cd\u4f5c \u2705 \u7528\u6237\u8ba4\u8bc1\u7cfb\u7edf : \u5b8c\u6574\u7684\u7528\u6237\u6ce8\u518c/\u767b\u5f55/\u4f1a\u8bdd\u7ba1\u7406\uff0c\u6570\u636e\u5e93\u4eceSQLite\u8fc1\u79fb\u81f3Postgres/Supabase \u2705 \u667a\u80fd\u7f13\u5b58\u7cfb\u7edf : \u4f30\u503c\u7ed3\u679c\u7f13\u5b58\u4e0e\u4f1a\u8bdd\u6062\u590d\uff0c\u5927\u5e45\u63d0\u5347\u7528\u6237\u4f53\u9a8c\u548c\u7cfb\u7edf\u6027\u80fd \u2705 LLM\u96c6\u6210 : \u652f\u6301DeepSeek/OpenAI\u517c\u5bb9API\uff0c\u751f\u6210\u6295\u8d44\u5206\u6790\u62a5\u544a \u2705 \u654f\u611f\u6027\u5206\u6790 : \u591a\u7ef4\u5ea6\u4f30\u503csensitivity table\uff0c\u652f\u6301\u7ec8\u503c\u6cd5/\u6c38\u7eed\u589e\u957f\u6cd5 \u2705 \u80a1\u7968\u7b5b\u9009\u5668 : \u57fa\u4e8e\u8d22\u52a1\u6307\u6807\u7684\u591a\u6761\u4ef6\u7b5b\u9009 \u2705 LTM\u57fa\u7ebf : \u652f\u6301Last Twelve Months\u6536\u5165\u57fa\u671f\uff0c\u63d0\u5347\u65f6\u6548\u6027","title":"\u5173\u952e\u6210\u5c31"},{"location":"01_project_overview/project_status_2025_09_latest/#_4","text":"","title":"\u5f53\u524d\u67b6\u6784\u6982\u89c8"},{"location":"01_project_overview/project_status_2025_09_latest/#2025-09","text":"\u524d\u7aef\u5c42 (Streamlit) \u2514\u2500\u2500 Streamlit: frontend-streamlit/streamlit_app.py API\u670d\u52a1\u5c42 \u2514\u2500\u2500 FastAPI: src/api/main.py (\u7aef\u53e38124) \u251c\u2500\u2500 \u4f30\u503c\u63a5\u53e3: /api/v1/valuation \u251c\u2500\u2500 \u654f\u611f\u6027\u5206\u6790: /api/v1/sensitivity \u2514\u2500\u2500 \u80a1\u7968\u7b5b\u9009: /api/v1/screener \u4e1a\u52a1\u903b\u8f91\u5c42 \u251c\u2500\u2500 \u6838\u5fc3\u8ba1\u7b97\u5f15\u64ce: src/core/ \u2502 \u251c\u2500\u2500 calculators/dcf/: DCF\u8ba1\u7b97\u5668\u96c6\u7fa4(6\u4e2a\u6a21\u5757) \u2502 \u251c\u2500\u2500 financial/: \u8d22\u52a1\u9884\u6d4b\u4e0e\u5904\u7406\u5f15\u64ce \u2502 \u2514\u2500\u2500 screener/: \u80a1\u7968\u7b5b\u9009\u5668 \u251c\u2500\u2500 \u6570\u636e\u670d\u52a1: src/data/ \u2502 \u251c\u2500\u2500 fetchers/: \u6570\u636e\u83b7\u53d6\u5668(TuShare/PostgreSQL) \u2502 \u2514\u2500\u2500 processors/: \u6570\u636e\u6e05\u6d17\u4e0e\u5904\u7406 \u2514\u2500\u2500 \u4e1a\u52a1\u670d\u52a1: src/services/valuation_service.py \u6570\u636e\u5c42 \u251c\u2500\u2500 TuShare API: \u5b9e\u65f6\u91d1\u878d\u6570\u636e(\u4e3b\u8981) \u251c\u2500\u2500 PostgreSQL: \u5386\u53f2\u6570\u636e\u5b58\u50a8/\u6821\u9a8c\u57fa\u51c6 \u2514\u2500\u2500 Redis: \u7f13\u5b58\u5c42(\u914d\u7f6e\u9879)","title":"\u7cfb\u7edf\u67b6\u6784\uff082025-09\u7248\u672c\uff09"},{"location":"01_project_overview/project_status_2025_09_latest/#_5","text":"\u6e90\u4ee3\u7801\u6587\u4ef6 : 34\u4e2aPython\u6a21\u5757 \u6d4b\u8bd5\u6587\u4ef6 : 27\u4e2a\u6d4b\u8bd5\u6a21\u5757 \u524d\u7aef\u6587\u4ef6 : 17\u4e2a\u524d\u7aef\u7ec4\u4ef6 \u914d\u7f6e\u6587\u4ef6 : \u652f\u6301uv/pip\u53cc\u5305\u7ba1\u7406\uff0cpre-commit\u4ee3\u7801\u8d28\u91cf\u4fdd\u969c","title":"\u6838\u5fc3\u6a21\u5757\u7edf\u8ba1"},{"location":"01_project_overview/project_status_2025_09_latest/#_6","text":"","title":"\u4e3b\u8981\u529f\u80fd\u6a21\u5757"},{"location":"01_project_overview/project_status_2025_09_latest/#1","text":"\u4f4d\u7f6e : src/auth/ , frontend-streamlit/auth/ \u529f\u80fd\u7279\u6027 : - \u5b8c\u6574\u7684\u7528\u6237\u6ce8\u518c\u3001\u767b\u5f55\u3001\u4f1a\u8bdd\u7ba1\u7406\u7cfb\u7edf - \u6570\u636e\u5e93\u67b6\u6784\u8fc1\u79fb\uff1aSQLite \u2192 PostgreSQL/Supabase\uff0c\u652f\u6301\u9ad8\u5e76\u53d1\u548c\u4e91\u539f\u751f\u90e8\u7f72 - \u4f1a\u8bdd\u6301\u4e45\u5316\uff1a\u7528\u6237\u767b\u5f55\u72b6\u6001\u548c\u4f30\u503c\u7ed3\u679c\u7f13\u5b58\uff0c\u63d0\u5347\u7528\u6237\u4f53\u9a8c - \u8ba4\u8bc1\u4e2d\u95f4\u4ef6\uff1a\u4fdd\u62a4\u654f\u611f\u529f\u80fd\u548c\u6570\u636e\u8bbf\u95ee - \u5b89\u5168\u7279\u6027\uff1a\u5bc6\u7801\u54c8\u5e0c\u3001\u4f1a\u8bdd\u4ee4\u724c\u3001\u9632CSRF\u7b49 \u5173\u952e\u6539\u8fdb (2025-09): - \u89e3\u51b3SQLite\u5e76\u53d1\u9501\u95ee\u9898\uff0c\u8fc1\u79fb\u81f3\u6210\u719f\u7684\u5173\u7cfb\u578b\u6570\u636e\u5e93 - \u667a\u80fd\u7f13\u5b58\u673a\u5236\uff0c\u4f30\u503c\u7ed3\u679c\u5728\u4f1a\u8bdd\u95f4\u6301\u4e45\u4fdd\u5b58 - \u4f18\u5316\u7528\u6237\u754c\u9762\uff0c\u7b80\u5316\u8ba4\u8bc1\u6d41\u7a0b","title":"1. \u7528\u6237\u8ba4\u8bc1\u4e0e\u4f1a\u8bdd\u7ba1\u7406"},{"location":"01_project_overview/project_status_2025_09_latest/#2","text":"\u4f4d\u7f6e : src/data/fetchers/ , src/core/financial/processor.py \u529f\u80fd\u7279\u6027 : - \u6df7\u5408\u6570\u636e\u6e90\u67b6\u6784: DATA_SOURCE=tushare/postgres/hybrid - TuShare\u5e74\u62a5\u4e25\u683c\u7b5b\u9009: end_type='4' , update_flag='1' \u4f18\u5148 - \u5b57\u6bb5\u6620\u5c04\u7edf\u4e00: \u5e94\u6536\u8d26\u6b3e+\u7968\u636e\u805a\u5408\u3001\u56fa\u5b9a\u8d44\u4ea7\u56de\u9000\u3001EPS\u53bb\u91cd - \u6570\u636e\u6e05\u6d17\u4fdd\u62a4: \u5173\u952e\u79d1\u76ee(\u6536\u5165/\u5229\u6da6/\u8d44\u4ea7/\u8d1f\u503a)\u514d\u53d7\u5f02\u5e38\u503c\u8bef\u5224 - LTM\u652f\u6301: \u5b63\u5ea6+\u5e74\u62a5\u7ec4\u88c5Last Twelve Months\u57fa\u7ebf \u5173\u952e\u6539\u8fdb (2025-09): - \u4fee\u590d\u8d44\u4ea7\u8d1f\u503a\u8868\u57fa\u51c6\u65e5\u56de\u9000\u52302023\u7684\u95ee\u9898 - \u4fdd\u62a4\u5217\u673a\u5236\u9632\u6b62\u7ed3\u6784\u6027\u8dc3\u8fc1\u88ab\u8bef\u5224\u4e3a\u5f02\u5e38 - \u6309\u5e74\u62e9\u4f18\u4fdd\u7559(\u4e0d\u518d\u4e22\u5931\u6700\u65b0\u5e74\u5ea6\u6570\u636e)","title":"2. \u6570\u636e\u83b7\u53d6\u4e0e\u5904\u7406"},{"location":"01_project_overview/project_status_2025_09_latest/#2-dcf","text":"\u4f4d\u7f6e : src/core/calculators/dcf/ , src/core/financial/forecaster.py \u6a21\u5757\u7ec4\u6210 : 1. NwcCalculator : \u51c0\u8425\u8fd0\u8d44\u672c\u8ba1\u7b97\u4e0e\u9884\u6d4b 2. FcfCalculator : \u65e0\u6760\u6746\u81ea\u7531\u73b0\u91d1\u6d41\u8ba1\u7b97 3. WaccCalculator : \u52a0\u6743\u5e73\u5747\u8d44\u672c\u6210\u672c\u8ba1\u7b97 4. TerminalValueCalculator : \u7ec8\u503c\u8ba1\u7b97(\u9000\u51fa\u500d\u6570/\u6c38\u7eed\u589e\u957f) 5. PresentValueCalculator : \u73b0\u503c\u6298\u73b0\u8ba1\u7b97 6. EquityBridgeCalculator : \u4f01\u4e1a\u4ef7\u503c\u5230\u80a1\u6743\u4ef7\u503c\u6865\u63a5 \u4f30\u503c\u94fe\u8def : \u5386\u53f2\u6570\u636e \u2192 \u6e05\u6d17\u5904\u7406 \u2192 \u6bd4\u7387\u4e2d\u4f4d\u6570 \u2192 \u8d22\u52a1\u9884\u6d4b \u2192 UFCF\u8ba1\u7b97 \u2192 \u7ec8\u503c\u8ba1\u7b97 \u2192 \u73b0\u503c\u6298\u73b0 \u2192 \u80a1\u6743\u4ef7\u503c \u2192 \u6bcf\u80a1\u4ef7\u503c \u5173\u952e\u7279\u6027 : - \u5386\u53f2\u6bd4\u7387\u4e2d\u4f4d\u6570\u9a71\u52a8\u9884\u6d4b - \u652f\u6301CAGR\u8870\u51cf\u4e0e\u8fc7\u6e21\u5230\u76ee\u6807\u503c - \u540d\u4e49GDP\u4e0a\u9650\u7ea6\u675f(\u4e2d\u56fd\u5e02\u573a) - Decimal\u7cbe\u5ea6\u8ba1\u7b97\u907f\u514d\u6d6e\u70b9\u8bef\u5dee","title":"2. DCF\u4f30\u503c\u8ba1\u7b97\u5f15\u64ce"},{"location":"01_project_overview/project_status_2025_09_latest/#3-llm","text":"\u4f4d\u7f6e : src/api/llm_utils.py , src/config/llm_prompt_template.md \u652f\u6301\u6a21\u578b : - DeepSeek Chat - OpenAI\u517c\u5bb9API(\u81ea\u5b9a\u4e49) - \u73af\u5883\u53d8\u91cf\u914d\u7f6e: LLM_PROVIDER , *_API_KEY \u5206\u6790\u5185\u5bb9 : - \u4f30\u503c\u7ed3\u679c\u89e3\u8bfb\u4e0e\u6295\u8d44\u5efa\u8bae - \u5173\u952e\u5047\u8bbe\u654f\u611f\u6027\u5206\u6790 - \u884c\u4e1a\u5bf9\u6bd4\u4e0e\u98ce\u9669\u63d0\u793a - \u4e2d\u6587\u4e13\u4e1a\u62a5\u544a\u751f\u6210","title":"3. LLM\u667a\u80fd\u5206\u6790"},{"location":"01_project_overview/project_status_2025_09_latest/#4","text":"\u4f4d\u7f6e : src/api/sensitivity_models.py \u5206\u6790\u7ef4\u5ea6 : - WACC vs \u6c38\u7eed\u589e\u957f\u7387 - WACC vs \u9000\u51fa\u500d\u6570 - \u6536\u5165CAGR vs EBITDA\u5229\u6da6\u7387 - \u6536\u5165CAGR vs \u7ec8\u503c\u65b9\u6cd5 \u8f93\u51fa\u6307\u6807 : - \u4f01\u4e1a\u4ef7\u503c(EV) - \u6bcf\u80a1\u4ef7\u503c(VPS) - EV/EBITDA\u500d\u6570 - \u9690\u542bPE\u500d\u6570 - \u9690\u542b\u6c38\u7eed\u589e\u957f\u7387","title":"4. \u654f\u611f\u6027\u5206\u6790\u7cfb\u7edf"},{"location":"01_project_overview/project_status_2025_09_latest/#5","text":"\u4f4d\u7f6e : src/core/screener/ \u7b5b\u9009\u6761\u4ef6 : - \u5e02\u503c\u8303\u56f4 - \u4f30\u503c\u500d\u6570(PE/PB/EV/EBITDA) - \u8d22\u52a1\u6307\u6807(ROE/ROA/\u6536\u5165\u589e\u957f\u7387) - \u884c\u4e1a/\u677f\u5757\u8fc7\u6ee4","title":"5. \u80a1\u7968\u7b5b\u9009\u5668"},{"location":"01_project_overview/project_status_2025_09_latest/#_7","text":"","title":"\u5f00\u53d1\u5de5\u5177\u94fe"},{"location":"01_project_overview/project_status_2025_09_latest/#_8","text":"\u683c\u5f0f\u5316 : Black + isort \u9759\u6001\u68c0\u67e5 : Ruff + MyPy(\u9010\u6b65\u542f\u7528) \u5b89\u5168\u626b\u63cf : Bandit + Safety \u9884\u63d0\u4ea4\u94a9\u5b50 : pre-commit\u914d\u7f6e \u6d4b\u8bd5\u8986\u76d6 : pytest + pytest-cov","title":"\u4ee3\u7801\u8d28\u91cf\u4fdd\u969c"},{"location":"01_project_overview/project_status_2025_09_latest/#_9","text":"\u4e3b\u8981 : uv(\u63a8\u8350,\u66f4\u5feb\u66f4\u53ef\u9760) \u5907\u9009 : pip + requirements.txt \u4f9d\u8d56\u7ec4 : [dev] , [test] , [docs]","title":"\u5305\u7ba1\u7406"},{"location":"01_project_overview/project_status_2025_09_latest/#_10","text":"# \u73af\u5883\u8bbe\u7f6e uv venv && source .venv/bin/activate uv pip install -e \".[dev,test]\" # \u4ee3\u7801\u8d28\u91cf pre-commit run --all-files black . && isort . && ruff check --fix . # \u6d4b\u8bd5 pytest --cov=. --cov-report=html # \u5e94\u7528\u8fd0\u884c streamlit run frontend-streamlit/streamlit_app.py uvicorn src.api.main:app --reload --port 8124","title":"\u8fd0\u884c\u547d\u4ee4"},{"location":"01_project_overview/project_status_2025_09_latest/#_11","text":"","title":"\u6570\u636e\u6e90\u5bf9\u6bd4\u4e0e\u9a8c\u8bc1"},{"location":"01_project_overview/project_status_2025_09_latest/#tushare-vs-postgresql","text":"\u6d4b\u8bd5\u6848\u4f8b : 000999.SZ, 600519.SH \u5bf9\u9f50\u7ef4\u5ea6 : \u57fa\u51c6\u65e5\u671f\u3001\u5386\u53f2CAGR\u3001\u6700\u65b0EBITDA\u3001NWC\u7ec4\u4ef6\u3001EV\u4f30\u503c \u5bf9\u9f50\u72b6\u51b5 : - \u2705 \u57fa\u51c6\u62a5\u8868\u65e5\u671f : 2024-12-31 (\u4e00\u81f4) - \u2705 \u5386\u53f2\u6536\u5165CAGR : 21.698%/17.184% (\u5b8c\u5168\u4e00\u81f4) - \u2705 \u6700\u65b0\u5b9e\u9645EBITDA : 600519\u5b8c\u5168\u4e00\u81f4\uff0c000999\u63a5\u8fd1 - \u2705 DCF\u8ba1\u7b97\u94fe\u8def : WACC\u3001\u7ec8\u503c\u3001\u73b0\u503c\u903b\u8f91\u4e00\u81f4 - \u26a0\ufe0f VPS\u5dee\u5f02 : \u4e3b\u8981\u7531\u80a1\u672c\u5feb\u7167\u65f6\u95f4\u5dee\u5f02(TS\u66f4\u53ca\u65f6)","title":"TuShare vs PostgreSQL \u5bf9\u9f50\u7ed3\u679c"},{"location":"01_project_overview/project_status_2025_09_latest/#_12","text":"\u751f\u4ea7\u4f30\u503c : DATA_SOURCE=tushare (\u66f4\u53ca\u65f6\u3001\u66f4\u5b8c\u6574) \u5386\u53f2\u590d\u73b0 : DATA_SOURCE=postgres \u6216 TS\u7684PG\u517c\u5bb9\u6a21\u5f0f \u5f00\u53d1\u8c03\u8bd5 : DATA_SOURCE=hybrid (PG\u4f18\u5148,TS\u56de\u9000)","title":"\u6570\u636e\u6e90\u9009\u62e9\u5efa\u8bae"},{"location":"01_project_overview/project_status_2025_09_latest/#_13","text":"","title":"\u5df2\u77e5\u95ee\u9898\u4e0e\u9650\u5236"},{"location":"01_project_overview/project_status_2025_09_latest/#1_1","text":"\u2705 \u975e\u91d1\u878d\u4f01\u4e1a : \u5b8c\u5168\u9002\u7528 \u26a0\ufe0f \u91d1\u878d\u4f01\u4e1a : \u90e8\u5206\u6307\u6807\u4e0d\u9002\u7528(\u94f6\u884c/\u4fdd\u9669\u7b49)\uff0c\u4f1a\u7ed9\u51fa\u8b66\u544a","title":"1. \u884c\u4e1a\u9002\u7528\u6027"},{"location":"01_project_overview/project_status_2025_09_latest/#2_1","text":"TuShare\u6570\u636e\u8d28\u91cf\u76f4\u63a5\u5f71\u54cd\u4f30\u503c\u7ed3\u679c \u9700\u8981\u5b9a\u671f\u6821\u9a8c\u4e0ePG\u57fa\u51c6\u7684\u4e00\u81f4\u6027 \u6e05\u6d17\u7b56\u7565\u9700\u8981\u6301\u7eed\u4f18\u5316","title":"2. \u6570\u636e\u8d28\u91cf\u4f9d\u8d56"},{"location":"01_project_overview/project_status_2025_09_latest/#3","text":"TuShare API\u6709\u8c03\u7528\u9891\u7387\u9650\u5236 \u5efa\u8bae\u589e\u52a0\u672c\u5730\u7f13\u5b58\u4e0e\u91cd\u8bd5\u673a\u5236 \u5927\u6279\u91cf\u7b5b\u9009\u65f6\u53ef\u80fd\u8f83\u6162","title":"3. \u6027\u80fd\u8003\u8651"},{"location":"01_project_overview/project_status_2025_09_latest/#_14","text":"","title":"\u4e0b\u4e00\u6b65\u89c4\u5212"},{"location":"01_project_overview/project_status_2025_09_latest/#1-2","text":"[ ] \u6027\u80fd\u4f18\u5316: \u672c\u5730\u7f13\u5b58\u673a\u5236 [ ] \u6e05\u6d17\u7b56\u7565: \u8f6f\u5316NWC\u7ec4\u4ef6\u6e05\u6d17\u89c4\u5219 [ ] \u900f\u660e\u5ea6: \u5e02\u573a\u5feb\u7167trade_date\u900f\u4f20\u5230\u524d\u7aef [ ] \u6d4b\u8bd5: \u63d0\u5347\u8986\u76d6\u7387\u523080%+","title":"\u77ed\u671f\u4f18\u5316(1-2\u5468)"},{"location":"01_project_overview/project_status_2025_09_latest/#1_2","text":"[ ] \u884c\u4e1a\u4e13\u7528\u6a21\u578b: \u91d1\u878d\u4f01\u4e1a\u4f30\u503c\u6a21\u578b [ ] \u6570\u636e\u76d1\u63a7: \u5b9a\u671fTS\u2194PG\u57fa\u7ebf\u6f02\u79fb\u68c0\u67e5 [ ] \u591a\u5e02\u573a\u652f\u6301: \u6e2f\u80a1/\u7f8e\u80a1\u6570\u636e\u6e90 [ ] \u6279\u91cf\u4f30\u503c: \u652f\u6301\u80a1\u7968\u6c60\u6279\u91cf\u5904\u7406","title":"\u4e2d\u671f\u589e\u5f3a(1\u4e2a\u6708)"},{"location":"01_project_overview/project_status_2025_09_latest/#3_1","text":"[ ] \u5b9e\u65f6\u6d41\u5904\u7406: \u76d8\u4e2d\u5b9e\u65f6\u4f30\u503c\u66f4\u65b0 [ ] \u673a\u5668\u5b66\u4e60: \u5386\u53f2\u4f30\u503c\u51c6\u786e\u6027\u53cd\u9988\u5b66\u4e60 [ ] \u4e91\u539f\u751f\u90e8\u7f72: Docker + K8s\u751f\u4ea7\u90e8\u7f72 [ ] \u5f00\u653eAPI: \u7b2c\u4e09\u65b9\u96c6\u6210\u63a5\u53e3","title":"\u957f\u671f\u613f\u666f(3\u4e2a\u6708)"},{"location":"01_project_overview/project_status_2025_09_latest/#_15","text":"","title":"\u6280\u672f\u503a\u52a1"},{"location":"01_project_overview/project_status_2025_09_latest/#_16","text":"\u7c7b\u578b\u6ce8\u89e3 : MyPy\u8986\u76d6\u7387\u4ecd\u8f83\u4f4e\uff0c\u9700\u8981\u9010\u6b65\u8865\u5f3a \u5f02\u5e38\u5904\u7406 : \u90e8\u5206\u6a21\u5757\u7f3a\u4e4f\u5b8c\u6574\u7684\u9519\u8bef\u5904\u7406\u94fe\u8def \u6587\u6863\u540c\u6b65 : \u4ee3\u7801\u53d8\u66f4\u540e\u6587\u6863\u66f4\u65b0\u6ede\u540e","title":"\u9ad8\u4f18\u5148\u7ea7"},{"location":"01_project_overview/project_status_2025_09_latest/#_17","text":"\u65e5\u5fd7\u7cfb\u7edf : \u7edf\u4e00\u7684\u65e5\u5fd7\u683c\u5f0f\u4e0e\u7ea7\u522b\u7ba1\u7406 \u914d\u7f6e\u7ba1\u7406 : \u73af\u5883\u53d8\u91cf\u7ba1\u7406\u53ef\u4ee5\u66f4\u52a0\u7ed3\u6784\u5316 \u6570\u636e\u5e93\u8fde\u63a5 : \u8fde\u63a5\u6c60\u4e0e\u4e8b\u52a1\u7ba1\u7406\u4f18\u5316","title":"\u4e2d\u4f18\u5148\u7ea7"},{"location":"01_project_overview/project_status_2025_09_latest/#_18","text":"\u9879\u76ee\u5df2\u8fbe\u5230\u751f\u4ea7\u53ef\u7528\u72b6\u6001\uff0c\u6838\u5fc3\u529f\u80fd\u5b8c\u6574\u4e14\u7ecf\u8fc7\u9a8c\u8bc1\u3002TuShare\u6570\u636e\u6e90\u7684\u5f15\u5165\u663e\u8457\u63d0\u5347\u4e86\u7cfb\u7edf\u7684\u65f6\u6548\u6027\u548c\u6570\u636e\u5b8c\u6574\u6027\u3002\u5f53\u524d\u7248\u672c(3.0)\u5728\u79d1\u5b66\u6027\u3001\u51c6\u786e\u6027\u3001\u5b9e\u7528\u6027\u65b9\u9762\u5747\u6ee1\u8db3\u4e13\u4e1a\u6295\u8d44\u5206\u6790\u9700\u6c42\u3002 \u4e0b\u4e00\u9636\u6bb5\u7684\u91cd\u70b9\u662f\u6027\u80fd\u4f18\u5316\u3001\u7528\u6237\u4f53\u9a8c\u63d0\u5347\u548c\u529f\u80fd\u6269\u5c55\uff0c\u4e3a\u66f4\u5927\u89c4\u6a21\u7684\u751f\u4ea7\u5e94\u7528\u505a\u51c6\u5907\u3002","title":"\u7ed3\u8bba"},{"location":"02_architecture/","text":"\u67b6\u6784\u8bbe\u8ba1\u6587\u6863 \u672c\u76ee\u5f55\u5305\u542b\u7cfb\u7edf\u67b6\u6784\u8bbe\u8ba1\u76f8\u5173\u6587\u6863\uff0c\u9762\u5411\u67b6\u6784\u5e08\u548c\u9ad8\u7ea7\u5f00\u53d1\u8005\u3002 \u6587\u6863\u5217\u8868 \ud83c\udfd7\ufe0f \u7cfb\u7edf\u67b6\u6784 hybrid_architecture_design.md - \u6df7\u5408\u67b6\u6784\u8be6\u7ec6\u8bbe\u8ba1\uff08\u2b50\u2b50\u2b50\u2b50 \u6838\u5fc3\uff09 \u6574\u4f53\u67b6\u6784\u8bbe\u8ba1 \u6570\u636e\u6e90\u67b6\u6784 \u670d\u52a1\u95f4\u4ea4\u4e92\u8bbe\u8ba1 \u6027\u80fd\u4f18\u5316\u7b56\u7565 dcf_architecture.md - DCF\u8ba1\u7b97\u67b6\u6784\u8bbe\u8ba1 DCF\u6a21\u578b\u8bbe\u8ba1 \u8ba1\u7b97\u5668\u6a21\u5757\u67b6\u6784 \u6570\u636e\u6d41\u8bbe\u8ba1 \u67b6\u6784\u539f\u5219 \u6a21\u5757\u5316\u8bbe\u8ba1 - \u6bcf\u4e2a\u8ba1\u7b97\u6b65\u9aa4\u72ec\u7acb\u6210\u7c7b \u6570\u636e\u6e90\u62bd\u8c61 - \u7edf\u4e00\u6570\u636e\u63a5\u53e3\uff0c\u652f\u6301\u591a\u6570\u636e\u6e90 \u5f02\u6b65\u5904\u7406 - FastAPI + asyncpg \u5b9e\u73b0\u9ad8\u6027\u80fd \u914d\u7f6e\u9a71\u52a8 - \u73af\u5883\u53d8\u91cf\u63a7\u5236\u7cfb\u7edf\u884c\u4e3a \u5173\u952e\u8bbe\u8ba1\u6a21\u5f0f \u7b56\u7565\u6a21\u5f0f : DCF\u8ba1\u7b97\u5668\u96c6\u7fa4 \u5de5\u5382\u6a21\u5f0f : \u6570\u636e\u6e90\u521b\u5efa \u89c2\u5bdf\u8005\u6a21\u5f0f : \u7f13\u5b58\u66f4\u65b0\u673a\u5236 \u9002\u914d\u5668\u6a21\u5f0f : \u591a\u6570\u636e\u6e90\u9002\u914d \u9605\u8bfb\u5efa\u8bae \u67b6\u6784\u5e08 \u91cd\u70b9\u9605\u8bfb hybrid_architecture_design.md \u7ed3\u5408\u4ee3\u7801\u7406\u89e3\u8bbe\u8ba1\u7406\u5ff5 \u5f00\u53d1\u8005 \u5148\u4e86\u89e3\u6574\u4f53\u67b6\u6784\uff0c\u518d\u6df1\u5165\u5177\u4f53\u6a21\u5757\u8bbe\u8ba1 \u66f4\u65b0\u9891\u7387 \u534a\u5e74\u5ea6\u66f4\u65b0\u6216\u91cd\u5927\u67b6\u6784\u53d8\u66f4\u65f6\u66f4\u65b0","title":"\u67b6\u6784\u8bbe\u8ba1\u6587\u6863"},{"location":"02_architecture/#_1","text":"\u672c\u76ee\u5f55\u5305\u542b\u7cfb\u7edf\u67b6\u6784\u8bbe\u8ba1\u76f8\u5173\u6587\u6863\uff0c\u9762\u5411\u67b6\u6784\u5e08\u548c\u9ad8\u7ea7\u5f00\u53d1\u8005\u3002","title":"\u67b6\u6784\u8bbe\u8ba1\u6587\u6863"},{"location":"02_architecture/#_2","text":"","title":"\u6587\u6863\u5217\u8868"},{"location":"02_architecture/#_3","text":"hybrid_architecture_design.md - \u6df7\u5408\u67b6\u6784\u8be6\u7ec6\u8bbe\u8ba1\uff08\u2b50\u2b50\u2b50\u2b50 \u6838\u5fc3\uff09 \u6574\u4f53\u67b6\u6784\u8bbe\u8ba1 \u6570\u636e\u6e90\u67b6\u6784 \u670d\u52a1\u95f4\u4ea4\u4e92\u8bbe\u8ba1 \u6027\u80fd\u4f18\u5316\u7b56\u7565 dcf_architecture.md - DCF\u8ba1\u7b97\u67b6\u6784\u8bbe\u8ba1 DCF\u6a21\u578b\u8bbe\u8ba1 \u8ba1\u7b97\u5668\u6a21\u5757\u67b6\u6784 \u6570\u636e\u6d41\u8bbe\u8ba1","title":"\ud83c\udfd7\ufe0f \u7cfb\u7edf\u67b6\u6784"},{"location":"02_architecture/#_4","text":"\u6a21\u5757\u5316\u8bbe\u8ba1 - \u6bcf\u4e2a\u8ba1\u7b97\u6b65\u9aa4\u72ec\u7acb\u6210\u7c7b \u6570\u636e\u6e90\u62bd\u8c61 - \u7edf\u4e00\u6570\u636e\u63a5\u53e3\uff0c\u652f\u6301\u591a\u6570\u636e\u6e90 \u5f02\u6b65\u5904\u7406 - FastAPI + asyncpg \u5b9e\u73b0\u9ad8\u6027\u80fd \u914d\u7f6e\u9a71\u52a8 - \u73af\u5883\u53d8\u91cf\u63a7\u5236\u7cfb\u7edf\u884c\u4e3a","title":"\u67b6\u6784\u539f\u5219"},{"location":"02_architecture/#_5","text":"\u7b56\u7565\u6a21\u5f0f : DCF\u8ba1\u7b97\u5668\u96c6\u7fa4 \u5de5\u5382\u6a21\u5f0f : \u6570\u636e\u6e90\u521b\u5efa \u89c2\u5bdf\u8005\u6a21\u5f0f : \u7f13\u5b58\u66f4\u65b0\u673a\u5236 \u9002\u914d\u5668\u6a21\u5f0f : \u591a\u6570\u636e\u6e90\u9002\u914d","title":"\u5173\u952e\u8bbe\u8ba1\u6a21\u5f0f"},{"location":"02_architecture/#_6","text":"","title":"\u9605\u8bfb\u5efa\u8bae"},{"location":"02_architecture/#_7","text":"\u91cd\u70b9\u9605\u8bfb hybrid_architecture_design.md \u7ed3\u5408\u4ee3\u7801\u7406\u89e3\u8bbe\u8ba1\u7406\u5ff5","title":"\u67b6\u6784\u5e08"},{"location":"02_architecture/#_8","text":"\u5148\u4e86\u89e3\u6574\u4f53\u67b6\u6784\uff0c\u518d\u6df1\u5165\u5177\u4f53\u6a21\u5757\u8bbe\u8ba1","title":"\u5f00\u53d1\u8005"},{"location":"02_architecture/#_9","text":"\u534a\u5e74\u5ea6\u66f4\u65b0\u6216\u91cd\u5927\u67b6\u6784\u53d8\u66f4\u65f6\u66f4\u65b0","title":"\u66f4\u65b0\u9891\u7387"},{"location":"02_architecture/dcf_architecture/","text":"DCF \u6838\u5fc3\u4e1a\u52a1\u903b\u8f91\u4e0e\u67b6\u6784 \u672c\u6587\u6863\u6982\u8ff0\u672c\u9879\u76ee\u4e2d DCF \u4f30\u503c\u7684\u6838\u5fc3\u4e1a\u52a1\u6d41\u7a0b\u3001\u5173\u952e\u6a21\u5757\u4e0e\u6570\u636e\u6d41\uff0c\u5e76\u7ed9\u51fa\u6574\u4f53\u4e0e\u5b50\u6a21\u5757\u7684\u67b6\u6784\u56fe\uff08Mermaid\uff09\u3002 \u603b\u4f53\u67b6\u6784 flowchart TD %% API \u5c42\u4e0e\u670d\u52a1\u7f16\u6392 A[API \u8bf7\u6c42\\n`src/api/main.py`\\n`StockValuationRequest`] --> B[DataProcessor\\n\u6e05\u6d17/\u6bd4\u7387/\u6700\u65b0\u6307\u6807\\n`src/core/financial/processor.py`] A -->|\u4f30\u503c\u53c2\u6570| S[ValuationService\\n\u7f16\u6392 DCF \u6b65\u9aa4\\n`src/services/valuation_service.py`] %% \u6570\u636e\u51c6\u5907 B -->|historical_ratios\\nlatest_metrics\\nlatest_balance_sheet| S %% \u9884\u6d4b\u4e0eUFCF S --> C[FinancialForecaster\\n\u751f\u6210\u9010\u5e74\u9884\u6d4bDF\\n`src/core/financial/forecaster.py`] C -->|DataFrame: year, revenue, ebit, nopat, d_a, capex, NWC\u9879, delta_nwc, ebitda, ufcf| S %% \u8d44\u672c\u6210\u672c S --> D[WaccCalculator\\n\u8ba1\u7b97 WACC/Ke\\n`src/core/calculators/dcf/wacc_calculator.py`] D -->|wacc, ke| S %% \u7ec8\u503c\u8ba1\u7b97 S --> E[TerminalValueCalculator\\n\u7ec8\u503c: \u9000\u51fa\u4e58\u6570/\u6c38\u7eed\u589e\u957f\\n`src/core/calculators/dcf/terminal_value_calculator.py`] E -->|terminal_value| S %% \u73b0\u503c\u6298\u73b0 S --> F[PresentValueCalculator\\n\u6298\u73b0UFCF\u4e0eTV\\n`src/core/calculators/dcf/present_value_calculator.py`] F -->|pv_ufcf, pv_tv| S %% \u80a1\u6743\u6865\u6881 S --> G[EquityBridgeCalculator\\nEV->Equity->VPS\\n`src/core/calculators/equity_bridge_calculator.py`] G -->|net_debt, equity_value, value_per_share| S %% \u8f93\u51fa S --> H[DcfForecastDetails\\n`src/api/models.py`] H --> R[API \u54cd\u5e94/\u524d\u7aef] WACC \u8ba1\u7b97\u5b50\u6d41\u7a0b flowchart LR subgraph Inputs P1[\u53c2\u6570: risk_free_rate, beta, market_risk_premium, size_premium, country_risk_premium, industry_risk_premium, cost_of_debt, tax_rate] P2[\u6743\u91cd\u6a21\u5f0f: target \u6216 market] P3[\u76ee\u6807\u503a\u52a1\u6bd4\u4f8b target_debt_ratio] P4[\u6700\u65b0\u5e02\u503c market_cap & \u8d44\u4ea7\u8d1f\u503a\u8868] end P1 --> W{WaccCalculator} P2 --> W P3 --> W P4 -->|market \u6a21\u5f0f\\n\u503a\u52a1\u5e02\u503c\u8fd1\u4f3c\u8d26\u9762| W W -->|Ke = Rf + \u03b2*(MRP+CRP) + Size + Industry| Ke[Ke] W -->|Kd(AT) = Kd*(1-T)| Kd[\u7a0e\u540e\u503a\u52a1\u6210\u672c] W -->|\u6743\u91cd: target \u6216 market| WT[Equity/ Debt \u6bd4\u4f8b] Ke --> X[WACC = E*Ke + D*Kd(AT)] Kd --> X WT --> X \u5173\u952e\u6a21\u5757\u804c\u8d23\u4e0e\u8f93\u5165/\u8f93\u51fa DataProcessor \uff08\u6570\u636e\u51c6\u5907\uff09 \u8f93\u5165\uff1a\u539f\u59cb\u4e09\u5927\u62a5\u8868\u3001\u57fa\u672c\u4fe1\u606f\u3001PE/PB\u3001\u80a1\u606f\u3001\u4ef7\u683c\u7b49 \u8f93\u51fa\uff1a processed_data \uff08\u6e05\u6d17\u540e\u7684\u62a5\u8868\uff09\u3001 historical_ratios \uff08\u4e2d\u4f4d\u6570/\u5929\u6570\uff09\u3001 latest_metrics \u3001 latest_balance_sheet FinancialForecaster \uff08\u8d22\u52a1\u9884\u6d4b\uff09 \u8f93\u5165\uff1a\u4e0a\u4e00\u5e74\u5ea6\u6536\u5165\u3001\u5386\u53f2\u6bd4\u7387\u3001\u9884\u6d4b\u5047\u8bbe\uff08\u5229\u6da6\u7387/\u5404\u9879\u6bd4\u7387\u4e0e\u5929\u6570/\u8fc7\u6e21\u5e74\u6570\u7b49\uff09 \u8f93\u51fa\uff1a\u542b\u9010\u5e74 year, revenue, ebit, nopat, d_a, capex, NWC \u5206\u9879, delta_nwc, ebitda, ufcf \u7684 DataFrame FcfCalculator \uff08UFCF\uff09 \u516c\u5f0f\uff1a ufcf = nopat + d_a - capex - delta_nwc \u5c31\u5730\u56de\u586b ufcf \u5217\uff08Decimal \u8ba1\u7b97\uff0c\u5f02\u5e38/NaN \u9632\u62a4\uff09 WaccCalculator \uff08WACC/Ke\uff09 Ke\uff08\u589e\u5f3a CAPM\uff09\uff1a Ke = Rf + \u03b2*(MRP + CRP) + Size + Industry \u503a\u52a1\u6210\u672c\u7a0e\u540e\uff1a Kd(AT) = Kd*(1 - Tax) \u6743\u91cd\uff1a target \uff08 target_debt_ratio \uff09\u6216 market \uff08\u4ee5\u5e02\u503c/\u8d26\u9762\u503a\u52a1\u8fd1\u4f3c\u6c42\u6743\u91cd\uff09 \u8fd4\u56de\uff1a (wacc, ke) \uff1b\u542b\u5927\u91cf\u7c7b\u578b/\u8303\u56f4\u6821\u9a8c\u4e0e\u56de\u9000 TerminalValueCalculator \uff08\u7ec8\u503c\uff09 Exit Multiple\uff1a TV = EBITDA_T * ExitMultiple Perpetual Growth\uff1a\u82e5\u542f\u7528 GDP \u4e0a\u9650\uff0c g = min(g_input, GDP_CAP) \uff1b\u8981\u6c42 g < wacc \u516c\u5f0f\uff1a TV = UFCF_T * (1 + g) / (wacc - g) PresentValueCalculator \uff08\u73b0\u503c\u6298\u73b0\uff09 \u5e74\u4e2d\u6298\u73b0\u53ef\u9009\uff1a\u6307\u6570 t-0.5 \u8f93\u51fa\uff1a pv_ufcf \u4e0e pv_tv \uff08Decimal \u9010\u671f\u6298\u73b0\u5e76\u6c47\u603b\uff09 EquityBridgeCalculator \uff08\u80a1\u6743\u6865\uff09 NetDebt = (LT/ST \u501f\u6b3e + \u503a\u5238 + \u4e00\u5e74\u5185\u5230\u671f\u975e\u6d41\u52a8\u8d1f\u503a) - \u8d27\u5e01\u8d44\u91d1 EquityValue = EV - NetDebt - MinorityInterest - PreferredEquity Value/Share = EquityValue / TotalShares ValuationService \uff08\u7f16\u6392\u4e0e\u9632\u62a4\uff09 \u987a\u5e8f\uff1a\u9884\u6d4b -> WACC -> \u7ec8\u503c -> \u73b0\u503c -> \u80a1\u6743\u6865 -> \u6c47\u603b DcfForecastDetails \u903b\u8f91\uff1aAPI \u5047\u8bbe\u952e\u6620\u5c04\u3001\u5e02\u573a\u6743\u91cd\u5931\u8d25\u56de\u9000\u76ee\u6807\u6743\u91cd\u3001\u9ed8\u8ba4 ExitMultiple/PGR\u3001 g<w \u5b88\u62a4\u3001\u8c03\u8bd5\u5feb\u7167\u3001\u654f\u611f\u6027\u5206\u6790 \u73af\u5883\u53d8\u91cf\u4e0e\u9ed8\u8ba4 WaccCalculator \uff1a DEFAULT_BETA , RISK_FREE_RATE , MARKET_RISK_PREMIUM , COUNTRY_RISK_PREMIUM , INDUSTRY_RISK_PREMIUM , DEFAULT_COST_OF_DEBT , DEFAULT_TARGET_TAX_RATE , DEFAULT_SIZE_PREMIUM , TARGET_DEBT_RATIO TerminalValueCalculator \uff1a USE_GDP_CAP \uff08\u9ed8\u8ba4\u4e3a true\uff09\uff0c GDP_NOMINAL_CAP \uff08\u9ed8\u8ba4 0.05\uff09 ValuationService \uff1a DEFAULT_EXIT_MULTIPLE \uff08\u9ed8\u8ba4 8.0\uff09\uff0c DEFAULT_PERPETUAL_GROWTH_RATE \uff08\u9ed8\u8ba4 0.025\uff09 \u4e3b\u8981\u6570\u636e\u6d41\u4e0e\u4ea7\u51fa DataProcessor \u6e05\u6d17\u6570\u636e\u3001\u8ba1\u7b97\u5386\u53f2\u4e2d\u4f4d\u6570/\u5929\u6570\u4e0e\u6700\u65b0\u6307\u6807 FinancialForecaster \u57fa\u4e8e\u5386\u53f2\u4e0e\u5047\u8bbe\u751f\u6210\u9010\u5e74\u9884\u6d4b\uff0c FcfCalculator \u586b\u5145 ufcf WaccCalculator \u8ba1\u7b97 wacc, ke \uff08\u652f\u6301 market/target \u6743\u91cd\uff09 TerminalValueCalculator \u8ba1\u7b97\u7ec8\u503c\uff08Exit Multiple \u6216 Perpetual Growth\uff0c\u542b GDP \u4e0a\u9650\u4e0e g<w \u6821\u9a8c\uff09 PresentValueCalculator \u5c06 UFCF \u4e0e TV \u6298\u73b0\u4e3a\u73b0\u503c\uff08\u53ef\u5e74\u4e2d\u6298\u73b0\uff09 EquityBridgeCalculator \u8ba1\u7b97\u51c0\u503a\u52a1\u3001\u80a1\u6743\u4ef7\u503c\u3001\u6bcf\u80a1\u4ef7\u503c \u6c47\u603b\u4e3a DcfForecastDetails \u8fd4\u56de API/\u524d\u7aef \u53c2\u8003\u4ee3\u7801\u4f4d\u7f6e Valuation \u7f16\u6392\uff1a src/services/valuation_service.py WACC/\u7ec8\u503c/\u73b0\u503c/UFCF/\u80a1\u6743\u6865\uff1a src/core/calculators/dcf/wacc_calculator.py src/core/calculators/dcf/terminal_value_calculator.py src/core/calculators/dcf/present_value_calculator.py src/core/calculators/dcf/fcf_calculator.py src/core/calculators/equity_bridge_calculator.py \u9884\u6d4b\u5668/\u6570\u636e\u5904\u7406\uff1a src/core/financial/forecaster.py src/core/financial/processor.py DCF \u7ed3\u679c\u6a21\u578b\uff1a src/api/models.py ```","title":"DCF \u6838\u5fc3\u4e1a\u52a1\u903b\u8f91\u4e0e\u67b6\u6784"},{"location":"02_architecture/dcf_architecture/#dcf","text":"\u672c\u6587\u6863\u6982\u8ff0\u672c\u9879\u76ee\u4e2d DCF \u4f30\u503c\u7684\u6838\u5fc3\u4e1a\u52a1\u6d41\u7a0b\u3001\u5173\u952e\u6a21\u5757\u4e0e\u6570\u636e\u6d41\uff0c\u5e76\u7ed9\u51fa\u6574\u4f53\u4e0e\u5b50\u6a21\u5757\u7684\u67b6\u6784\u56fe\uff08Mermaid\uff09\u3002","title":"DCF \u6838\u5fc3\u4e1a\u52a1\u903b\u8f91\u4e0e\u67b6\u6784"},{"location":"02_architecture/dcf_architecture/#_1","text":"flowchart TD %% API \u5c42\u4e0e\u670d\u52a1\u7f16\u6392 A[API \u8bf7\u6c42\\n`src/api/main.py`\\n`StockValuationRequest`] --> B[DataProcessor\\n\u6e05\u6d17/\u6bd4\u7387/\u6700\u65b0\u6307\u6807\\n`src/core/financial/processor.py`] A -->|\u4f30\u503c\u53c2\u6570| S[ValuationService\\n\u7f16\u6392 DCF \u6b65\u9aa4\\n`src/services/valuation_service.py`] %% \u6570\u636e\u51c6\u5907 B -->|historical_ratios\\nlatest_metrics\\nlatest_balance_sheet| S %% \u9884\u6d4b\u4e0eUFCF S --> C[FinancialForecaster\\n\u751f\u6210\u9010\u5e74\u9884\u6d4bDF\\n`src/core/financial/forecaster.py`] C -->|DataFrame: year, revenue, ebit, nopat, d_a, capex, NWC\u9879, delta_nwc, ebitda, ufcf| S %% \u8d44\u672c\u6210\u672c S --> D[WaccCalculator\\n\u8ba1\u7b97 WACC/Ke\\n`src/core/calculators/dcf/wacc_calculator.py`] D -->|wacc, ke| S %% \u7ec8\u503c\u8ba1\u7b97 S --> E[TerminalValueCalculator\\n\u7ec8\u503c: \u9000\u51fa\u4e58\u6570/\u6c38\u7eed\u589e\u957f\\n`src/core/calculators/dcf/terminal_value_calculator.py`] E -->|terminal_value| S %% \u73b0\u503c\u6298\u73b0 S --> F[PresentValueCalculator\\n\u6298\u73b0UFCF\u4e0eTV\\n`src/core/calculators/dcf/present_value_calculator.py`] F -->|pv_ufcf, pv_tv| S %% \u80a1\u6743\u6865\u6881 S --> G[EquityBridgeCalculator\\nEV->Equity->VPS\\n`src/core/calculators/equity_bridge_calculator.py`] G -->|net_debt, equity_value, value_per_share| S %% \u8f93\u51fa S --> H[DcfForecastDetails\\n`src/api/models.py`] H --> R[API \u54cd\u5e94/\u524d\u7aef]","title":"\u603b\u4f53\u67b6\u6784"},{"location":"02_architecture/dcf_architecture/#wacc","text":"flowchart LR subgraph Inputs P1[\u53c2\u6570: risk_free_rate, beta, market_risk_premium, size_premium, country_risk_premium, industry_risk_premium, cost_of_debt, tax_rate] P2[\u6743\u91cd\u6a21\u5f0f: target \u6216 market] P3[\u76ee\u6807\u503a\u52a1\u6bd4\u4f8b target_debt_ratio] P4[\u6700\u65b0\u5e02\u503c market_cap & \u8d44\u4ea7\u8d1f\u503a\u8868] end P1 --> W{WaccCalculator} P2 --> W P3 --> W P4 -->|market \u6a21\u5f0f\\n\u503a\u52a1\u5e02\u503c\u8fd1\u4f3c\u8d26\u9762| W W -->|Ke = Rf + \u03b2*(MRP+CRP) + Size + Industry| Ke[Ke] W -->|Kd(AT) = Kd*(1-T)| Kd[\u7a0e\u540e\u503a\u52a1\u6210\u672c] W -->|\u6743\u91cd: target \u6216 market| WT[Equity/ Debt \u6bd4\u4f8b] Ke --> X[WACC = E*Ke + D*Kd(AT)] Kd --> X WT --> X","title":"WACC \u8ba1\u7b97\u5b50\u6d41\u7a0b"},{"location":"02_architecture/dcf_architecture/#_2","text":"DataProcessor \uff08\u6570\u636e\u51c6\u5907\uff09 \u8f93\u5165\uff1a\u539f\u59cb\u4e09\u5927\u62a5\u8868\u3001\u57fa\u672c\u4fe1\u606f\u3001PE/PB\u3001\u80a1\u606f\u3001\u4ef7\u683c\u7b49 \u8f93\u51fa\uff1a processed_data \uff08\u6e05\u6d17\u540e\u7684\u62a5\u8868\uff09\u3001 historical_ratios \uff08\u4e2d\u4f4d\u6570/\u5929\u6570\uff09\u3001 latest_metrics \u3001 latest_balance_sheet FinancialForecaster \uff08\u8d22\u52a1\u9884\u6d4b\uff09 \u8f93\u5165\uff1a\u4e0a\u4e00\u5e74\u5ea6\u6536\u5165\u3001\u5386\u53f2\u6bd4\u7387\u3001\u9884\u6d4b\u5047\u8bbe\uff08\u5229\u6da6\u7387/\u5404\u9879\u6bd4\u7387\u4e0e\u5929\u6570/\u8fc7\u6e21\u5e74\u6570\u7b49\uff09 \u8f93\u51fa\uff1a\u542b\u9010\u5e74 year, revenue, ebit, nopat, d_a, capex, NWC \u5206\u9879, delta_nwc, ebitda, ufcf \u7684 DataFrame FcfCalculator \uff08UFCF\uff09 \u516c\u5f0f\uff1a ufcf = nopat + d_a - capex - delta_nwc \u5c31\u5730\u56de\u586b ufcf \u5217\uff08Decimal \u8ba1\u7b97\uff0c\u5f02\u5e38/NaN \u9632\u62a4\uff09 WaccCalculator \uff08WACC/Ke\uff09 Ke\uff08\u589e\u5f3a CAPM\uff09\uff1a Ke = Rf + \u03b2*(MRP + CRP) + Size + Industry \u503a\u52a1\u6210\u672c\u7a0e\u540e\uff1a Kd(AT) = Kd*(1 - Tax) \u6743\u91cd\uff1a target \uff08 target_debt_ratio \uff09\u6216 market \uff08\u4ee5\u5e02\u503c/\u8d26\u9762\u503a\u52a1\u8fd1\u4f3c\u6c42\u6743\u91cd\uff09 \u8fd4\u56de\uff1a (wacc, ke) \uff1b\u542b\u5927\u91cf\u7c7b\u578b/\u8303\u56f4\u6821\u9a8c\u4e0e\u56de\u9000 TerminalValueCalculator \uff08\u7ec8\u503c\uff09 Exit Multiple\uff1a TV = EBITDA_T * ExitMultiple Perpetual Growth\uff1a\u82e5\u542f\u7528 GDP \u4e0a\u9650\uff0c g = min(g_input, GDP_CAP) \uff1b\u8981\u6c42 g < wacc \u516c\u5f0f\uff1a TV = UFCF_T * (1 + g) / (wacc - g) PresentValueCalculator \uff08\u73b0\u503c\u6298\u73b0\uff09 \u5e74\u4e2d\u6298\u73b0\u53ef\u9009\uff1a\u6307\u6570 t-0.5 \u8f93\u51fa\uff1a pv_ufcf \u4e0e pv_tv \uff08Decimal \u9010\u671f\u6298\u73b0\u5e76\u6c47\u603b\uff09 EquityBridgeCalculator \uff08\u80a1\u6743\u6865\uff09 NetDebt = (LT/ST \u501f\u6b3e + \u503a\u5238 + \u4e00\u5e74\u5185\u5230\u671f\u975e\u6d41\u52a8\u8d1f\u503a) - \u8d27\u5e01\u8d44\u91d1 EquityValue = EV - NetDebt - MinorityInterest - PreferredEquity Value/Share = EquityValue / TotalShares ValuationService \uff08\u7f16\u6392\u4e0e\u9632\u62a4\uff09 \u987a\u5e8f\uff1a\u9884\u6d4b -> WACC -> \u7ec8\u503c -> \u73b0\u503c -> \u80a1\u6743\u6865 -> \u6c47\u603b DcfForecastDetails \u903b\u8f91\uff1aAPI \u5047\u8bbe\u952e\u6620\u5c04\u3001\u5e02\u573a\u6743\u91cd\u5931\u8d25\u56de\u9000\u76ee\u6807\u6743\u91cd\u3001\u9ed8\u8ba4 ExitMultiple/PGR\u3001 g<w \u5b88\u62a4\u3001\u8c03\u8bd5\u5feb\u7167\u3001\u654f\u611f\u6027\u5206\u6790","title":"\u5173\u952e\u6a21\u5757\u804c\u8d23\u4e0e\u8f93\u5165/\u8f93\u51fa"},{"location":"02_architecture/dcf_architecture/#_3","text":"WaccCalculator \uff1a DEFAULT_BETA , RISK_FREE_RATE , MARKET_RISK_PREMIUM , COUNTRY_RISK_PREMIUM , INDUSTRY_RISK_PREMIUM , DEFAULT_COST_OF_DEBT , DEFAULT_TARGET_TAX_RATE , DEFAULT_SIZE_PREMIUM , TARGET_DEBT_RATIO TerminalValueCalculator \uff1a USE_GDP_CAP \uff08\u9ed8\u8ba4\u4e3a true\uff09\uff0c GDP_NOMINAL_CAP \uff08\u9ed8\u8ba4 0.05\uff09 ValuationService \uff1a DEFAULT_EXIT_MULTIPLE \uff08\u9ed8\u8ba4 8.0\uff09\uff0c DEFAULT_PERPETUAL_GROWTH_RATE \uff08\u9ed8\u8ba4 0.025\uff09","title":"\u73af\u5883\u53d8\u91cf\u4e0e\u9ed8\u8ba4"},{"location":"02_architecture/dcf_architecture/#_4","text":"DataProcessor \u6e05\u6d17\u6570\u636e\u3001\u8ba1\u7b97\u5386\u53f2\u4e2d\u4f4d\u6570/\u5929\u6570\u4e0e\u6700\u65b0\u6307\u6807 FinancialForecaster \u57fa\u4e8e\u5386\u53f2\u4e0e\u5047\u8bbe\u751f\u6210\u9010\u5e74\u9884\u6d4b\uff0c FcfCalculator \u586b\u5145 ufcf WaccCalculator \u8ba1\u7b97 wacc, ke \uff08\u652f\u6301 market/target \u6743\u91cd\uff09 TerminalValueCalculator \u8ba1\u7b97\u7ec8\u503c\uff08Exit Multiple \u6216 Perpetual Growth\uff0c\u542b GDP \u4e0a\u9650\u4e0e g<w \u6821\u9a8c\uff09 PresentValueCalculator \u5c06 UFCF \u4e0e TV \u6298\u73b0\u4e3a\u73b0\u503c\uff08\u53ef\u5e74\u4e2d\u6298\u73b0\uff09 EquityBridgeCalculator \u8ba1\u7b97\u51c0\u503a\u52a1\u3001\u80a1\u6743\u4ef7\u503c\u3001\u6bcf\u80a1\u4ef7\u503c \u6c47\u603b\u4e3a DcfForecastDetails \u8fd4\u56de API/\u524d\u7aef","title":"\u4e3b\u8981\u6570\u636e\u6d41\u4e0e\u4ea7\u51fa"},{"location":"02_architecture/dcf_architecture/#_5","text":"Valuation \u7f16\u6392\uff1a src/services/valuation_service.py WACC/\u7ec8\u503c/\u73b0\u503c/UFCF/\u80a1\u6743\u6865\uff1a src/core/calculators/dcf/wacc_calculator.py src/core/calculators/dcf/terminal_value_calculator.py src/core/calculators/dcf/present_value_calculator.py src/core/calculators/dcf/fcf_calculator.py src/core/calculators/equity_bridge_calculator.py \u9884\u6d4b\u5668/\u6570\u636e\u5904\u7406\uff1a src/core/financial/forecaster.py src/core/financial/processor.py DCF \u7ed3\u679c\u6a21\u578b\uff1a src/api/models.py ```","title":"\u53c2\u8003\u4ee3\u7801\u4f4d\u7f6e"},{"location":"02_architecture/hybrid_architecture_design/","text":"\u80a1\u7968\u4f30\u503c\u7cfb\u7edf\u6df7\u5408\u67b6\u6784\u8bbe\u8ba1\u6587\u6863 \u6587\u6863\u4fe1\u606f \u6587\u6863\u6807\u9898 : \u6df7\u5408\u6570\u636e\u6e90\u67b6\u6784\u8bbe\u8ba1 \u521b\u5efa\u65e5\u671f : 2025\u5e741\u6708 \u7248\u672c : v1.0 \u4f5c\u8005 : huliux \u5ba1\u6838\u72b6\u6001 : \u5f85\u5ba1\u6838 \u6574\u7406\u8bf4\u660e \u672c\u6587\u6863\u5df2\u6574\u5408\u4ee5\u4e0b\u5185\u5bb9\uff1a - \u539fmigration_checklist.md\u7684\u5b9e\u65bd\u6b65\u9aa4 - \u539ftushare_migration_technical_analysis.md\u7684\u6280\u672f\u7ec6\u8282 - \u539ftushare_postgresql_field_comparison.md\u7684\u5b57\u6bb5\u6620\u5c04 \u6267\u884c\u6458\u8981 \u672c\u6587\u6863\u8be6\u7ec6\u63cf\u8ff0\u4e86\u80a1\u7968\u4f30\u503c\u7cfb\u7edf\u91c7\u7528\u7684 Tushare + PostgreSQL\u6df7\u5408\u67b6\u6784 \u8bbe\u8ba1\u65b9\u6848\u3002\u8be5\u67b6\u6784\u901a\u8fc7\u4e3b\u5907\u6570\u636e\u6e90\u6a21\u5f0f\uff0c\u663e\u8457\u63d0\u5347\u4e86\u7cfb\u7edf\u7684\u6570\u636e\u53ef\u9760\u6027\u3001\u6027\u80fd\u8868\u73b0\u548c\u6210\u672c\u6548\u76ca\u3002\u6838\u5fc3\u7279\u6027\u5305\u62ec\u667a\u80fd\u6570\u636e\u6e90\u5207\u6362\u3001\u591a\u5c42\u7ea7\u7f13\u5b58\u673a\u5236\u3001\u81ea\u52a8\u964d\u7ea7\u6062\u590d\u548c\u5168\u9762\u76d1\u63a7\u544a\u8b66\u3002 \u67b6\u6784\u4f18\u52bf \ud83c\udfaf \u9ad8\u53ef\u9760\u6027 : \u53cc\u6570\u636e\u6e90\u4fdd\u969c\uff0c\u7cfb\u7edf\u53ef\u7528\u6027\u8fbe99.5% \u26a1 \u9ad8\u6027\u80fd : \u667a\u80fd\u7f13\u5b58\u673a\u5236\uff0c\u6570\u636e\u8bbf\u95ee\u901f\u5ea6\u63d0\u534770% \ud83d\udcb0 \u6210\u672c\u4f18\u5316 : API\u8c03\u7528\u6210\u672c\u964d\u4f4e60% \ud83d\udd04 \u7075\u6d3b\u5207\u6362 : \u652f\u6301\u914d\u7f6e\u5316\u6570\u636e\u6e90\u9009\u62e9 \ud83d\udcca \u5168\u9762\u76d1\u63a7 : \u5b9e\u65f6\u72b6\u6001\u76d1\u63a7\u548c\u667a\u80fd\u544a\u8b66 \u8fd1\u671f\u6539\u52a8\u6458\u8981\uff082025-09-26\uff09 \u7528\u6237\u8ba4\u8bc1\u7cfb\u7edf\u5b8c\u6574\u5b9e\u73b0 \uff1a \u6570\u636e\u5e93\u67b6\u6784\u4eceSQLite\u8fc1\u79fb\u81f3PostgreSQL/Supabase\uff0c\u89e3\u51b3\u5e76\u53d1\u9501\u95ee\u9898 \u5b8c\u6574\u7684\u7528\u6237\u6ce8\u518c\u3001\u767b\u5f55\u3001\u4f1a\u8bdd\u7ba1\u7406\u529f\u80fd \u8ba4\u8bc1\u4e2d\u95f4\u4ef6\u4fdd\u62a4\u654f\u611f\u529f\u80fd\u548c\u6570\u636e\u8bbf\u95ee \u5bc6\u7801\u54c8\u5e0c\u3001\u4f1a\u8bdd\u4ee4\u724c\u3001\u9632CSRF\u7b49\u5b89\u5168\u7279\u6027 \u667a\u80fd\u7f13\u5b58\u7cfb\u7edf\u91cd\u5927\u5347\u7ea7 \uff1a \u4f30\u503c\u7ed3\u679c\u5728\u7528\u6237\u4f1a\u8bdd\u95f4\u6301\u4e45\u4fdd\u5b58\uff0c\u5927\u5e45\u63d0\u5347\u7528\u6237\u4f53\u9a8c \u4f1a\u8bdd\u6062\u590d\u529f\u80fd\uff0c\u7528\u6237\u91cd\u65b0\u767b\u5f55\u540e\u53ef\u6062\u590d\u4e4b\u524d\u7684\u5206\u6790\u7ed3\u679c \u7f13\u5b58\u7b56\u7565\u4f18\u5316\uff0c\u5e73\u8861\u6027\u80fd\u4e0e\u6570\u636e\u4e00\u81f4\u6027 \u4fee\u590d\u7f13\u5b58\u7cfb\u7edf\u4e2dundefined\u53d8\u91cf\u7b49\u5173\u952e\u9519\u8bef \u524d\u7aef\u7528\u6237\u4f53\u9a8c\u4f18\u5316 \uff1a \u4f18\u5316\u754c\u9762\u5e03\u5c40\u548c\u53c2\u6570\u8bbe\u7f6e\u4f53\u9a8c\uff0c\u7b80\u5316\u64cd\u4f5c\u6d41\u7a0b \u589e\u5f3a\u7528\u6237\u53cd\u9988\u548c\u9519\u8bef\u5904\u7406\u673a\u5236 \u4fee\u590d\"\u4f30\u503c\u8ba1\u7b97\u51fa\u9519: None\"\u7b49\u9519\u8bef\u663e\u793a\u95ee\u9898 \u4f18\u5316\u6570\u636e\u5c55\u793a\u683c\u5f0f\u548c\u89c6\u89c9\u6548\u679c \u5386\u53f2\u6539\u52a8\u6458\u8981\uff082025-09-11\uff09 \u670d\u52a1\u5c42\uff08ValuationService\uff09\u589e\u5f3a\uff1a \u5728\u57fa\u7840\u4f30\u503c\u4e0e\u654f\u611f\u6027\u4e24\u7c7b\u8def\u5f84\u7edf\u4e00\u7f16\u6392 Forecaster\u3001WACC\u3001\u7ec8\u503c\u4e0e\u73b0\u503c\u8ba1\u7b97\uff0c\u65b0\u589e\u670d\u52a1\u5185\u56de\u9000\u4e0e\u5b88\u62a4\u903b\u8f91\u3002 \u5f53 wacc_weight_mode=market \u5931\u8d25\u65f6\uff0c\u81ea\u52a8\u56de\u9000\u5230 target \u6743\u91cd\u5e76\u8bb0\u5f55\u8b66\u544a\uff0c\u907f\u514d 500\u3002 \u5bf9\u654f\u611f\u6027\u5355\u5143\u683c\uff1a \u8ba1\u7b97 EV/EBITDA (Terminal) \u4e0e implied_pgr \uff1b \u5f53 g \u2265 WACC \u65f6\u8df3\u8fc7\u8be5\u7ec4\u5408\uff1b dcf_implied_pe \u7f3a\u5931\u65f6\u6309\u57fa\u51c6 EPS \u56de\u586b\u3002 GDP \u4e0a\u9650\u63a7\u5236\uff1a\u670d\u52a1\u5c42\u5728\u8bf7\u6c42\u7ef4\u5ea6\u652f\u6301\u5f00\u5173\u4e0e\u4e0a\u9650\u503c\uff08\u4f18\u5148\u7ea7\u9ad8\u4e8e\u73af\u5883\u53d8\u91cf\uff09\uff1b\u7ec8\u503c\u8ba1\u7b97\u5668\u4ecd\u4fdd\u7559\u5e95\u5c42\u4e0a\u9650\u4e0e\u6709\u6548\u6027\u6821\u9a8c\uff0c\u53cc\u5c42\u4fdd\u62a4\u3002 LLM \u62a5\u544a\uff1a\u63d0\u793a\u6a21\u677f\u5f3a\u5316\uff08\u4ef7\u503c\u6295\u8d44\u5bfc\u5411\uff09\uff0c\u5e76\u5728\u54cd\u5e94\u4e2d\u643a\u5e26 debug_request_slice \uff08\u542b\u884c\u4e1a\u9884\u8bbe\u4e0e\u504f\u79bb\uff09\u4ee5\u4fbf\u5ba1\u8ba1\u3002 1. \u67b6\u6784\u6982\u89c8 1.1 \u6574\u4f53\u67b6\u6784\u56fe \u80a1\u7968\u4f30\u503c\u7cfb\u7edf\u6df7\u5408\u67b6\u6784 \u250c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2510 \u2502 \u5e94\u7528\u5c42 \u2502 \u2502 \u250c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2510 \u250c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2510 \u250c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2510 \u2502 \u2502 \u2502 Streamlit\u524d\u7aef \u2502 \u2502 FastAPI \u2502 \u2502 \u4e1a\u52a1\u903b\u8f91\u5c42 \u2502 \u2502 \u2502 \u2502 (\u7528\u6237\u754c\u9762) \u2502 \u2502 (API\u670d\u52a1) \u2502 \u2502 (\u4f30\u503c\u8ba1\u7b97) \u2502 \u2502 \u2502 \u2514\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2518 \u2514\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2518 \u2514\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2518 \u2502 \u2514\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2518 \u2502 \u25bc \u250c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2510 \u2502 \u6570\u636e\u8bbf\u95ee\u62bd\u8c61\u5c42 \u2502 \u2502 \u250c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2510 \u2502 \u2502 \u2502 DataSourceManager \u2502 \u2502 \u2502 \u2502 \u250c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2510 \u250c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2510 \u250c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2510 \u2502 \u2502 \u2502 \u2502 \u2502 \u914d\u7f6e\u7ba1\u7406 \u2502 \u2502 \u8def\u7531\u7b56\u7565 \u2502 \u2502 \u5065\u5eb7\u68c0\u67e5 \u2502 \u2502 \u2502 \u2502 \u2502 \u2502 (.env\u63a7\u5236) \u2502 \u2502 (\u667a\u80fd\u9009\u62e9) \u2502 \u2502 (\u72b6\u6001\u76d1\u63a7) \u2502 \u2502 \u2502 \u2502 \u2502 \u2514\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2518 \u2514\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2518 \u2514\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2518 \u2502 \u2502 \u2502 \u2514\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2518 \u2502 \u2514\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2518 \u2502 \u250c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u253c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2510 \u25bc \u25bc \u25bc \u250c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2510 \u250c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2510 \u250c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2510 \u2502 \u7f13\u5b58\u7ba1\u7406\u5c42 \u2502 \u2502 \u4e3b\u6570\u636e\u6e90 \u2502 \u2502 \u5907\u6570\u636e\u6e90 \u2502 \u2502 \u2502 \u2502 (Tushare) \u2502 \u2502 (PostgreSQL) \u2502 \u2502 \u250c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2510 \u2502 \u2502 \u2502 \u2502 \u2502 \u2502 \u2502 Redis\u7f13\u5b58 \u2502 \u2502 \u2502 \u2022 \u5b9e\u65f6\u6570\u636e \u2502 \u2502 \u2022 \u5386\u53f2\u6570\u636e \u2502 \u2502 \u2502 (\u70ed\u6570\u636e) \u2502 \u2502 \u2502 \u2022 \u9ad8\u9891\u66f4\u65b0 \u2502 \u2502 \u2022 \u7a33\u5b9a\u53ef\u9760 \u2502 \u2502 \u2514\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2518 \u2502 \u2502 \u2022 \u4e30\u5bcc\u5b57\u6bb5 \u2502 \u2502 \u2022 \u672c\u5730\u8bbf\u95ee \u2502 \u2502 \u250c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2510 \u2502 \u2502 \u2022 API\u9650\u6d41 \u2502 \u2502 \u2022 \u79bb\u7ebf\u53ef\u7528 \u2502 \u2502 \u2502 \u672c\u5730\u7f13\u5b58 \u2502 \u2502 \u2502 \u2502 \u2502 \u2502 \u2502 \u2502 (\u51b7\u6570\u636e) \u2502 \u2502 \u2514\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2518 \u2514\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2518 \u2502 \u2514\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2518 \u2502 \u2502 \u2502 \u2514\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2518 \u2502 \u2502 \u25bc \u25bc \u250c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2510 \u2502 \u76d1\u63a7\u544a\u8b66\u5c42 \u2502 \u2502 \u250c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2510 \u250c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2510\u2502 \u2502 \u2502 \u6027\u80fd\u76d1\u63a7 \u2502 \u2502 \u5f02\u5e38\u544a\u8b66 \u2502\u2502 \u2502 \u2502 (\u54cd\u5e94\u65f6\u95f4/QPS) \u2502 \u2502 (\u6545\u969c\u68c0\u6d4b) \u2502\u2502 \u2502 \u2514\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2518 \u2514\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2518\u2502 \u2514\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2518 1.2 \u6838\u5fc3\u7ec4\u4ef6\u8bf4\u660e \u7ec4\u4ef6 \u804c\u8d23 \u6280\u672f\u5b9e\u73b0 DataSourceManager \u6570\u636e\u6e90\u7ba1\u7406\u548c\u8def\u7531 Python\u62bd\u8c61\u5de5\u5382\u6a21\u5f0f TushareDataFetcher Tushare\u6570\u636e\u83b7\u53d6 Tushare SDK + \u8fde\u63a5\u6c60 PostgreSQLDataFetcher PostgreSQL\u6570\u636e\u83b7\u53d6 SQLAlchemy + \u8fde\u63a5\u6c60 CacheManager \u7f13\u5b58\u7ba1\u7406 Redis + \u672c\u5730LRU\u7f13\u5b58 HealthChecker \u5065\u5eb7\u72b6\u6001\u68c0\u67e5 \u5b9a\u65f6\u4efb\u52a1 + \u72b6\u6001\u5b58\u50a8 MonitoringService \u76d1\u63a7\u544a\u8b66 Prometheus + \u81ea\u5b9a\u4e49\u6307\u6807 2. \u6570\u636e\u6e90\u8bbe\u8ba1 2.1 \u4e3b\u6570\u636e\u6e90 - Tushare 2.1.1 \u6570\u636e\u6e90\u7279\u6027 \u6570\u636e\u6e90: Tushare Pro API \u7c7b\u578b: \u4e3b\u6570\u636e\u6e90 \u4f18\u52bf: - \u6570\u636e\u5b9e\u65f6\u6027\u5f3a\uff0cT+1\u66f4\u65b0 - \u6570\u636e\u5b57\u6bb5\u4e30\u5bcc\uff0c\u8986\u76d6\u5168\u9762 - \u6570\u636e\u8d28\u91cf\u9ad8\uff0c\u4e13\u4e1a\u91d1\u878d\u6570\u636e\u63d0\u4f9b\u5546 - API\u63a5\u53e3\u6807\u51c6\u5316\uff0c\u6613\u4e8e\u96c6\u6210 \u6311\u6218: - API\u8c03\u7528\u6709\u9891\u7387\u9650\u5236 - \u9700\u8981\u4ed8\u8d39\u79ef\u5206\uff0c\u6709\u6210\u672c\u8003\u8651 - \u7f51\u7edc\u4f9d\u8d56\uff0c\u5b58\u5728\u670d\u52a1\u4e2d\u65ad\u98ce\u9669 - \u6570\u636e\u91cf\u5927\u65f6\u54cd\u5e94\u8f83\u6162 2.1.2 API\u914d\u989d\u7ba1\u7406 # API\u914d\u989d\u7b56\u7565 API_QUOTA_CONFIG = { 'daily_limit': 10000, # \u65e5\u8c03\u7528\u9650\u5236 'minute_limit': 500, # \u5206\u949f\u8c03\u7528\u9650\u5236 'priority_apis': [ # \u4f18\u5148\u7ea7API\u5217\u8868 'stock_basic', # \u80a1\u7968\u57fa\u672c\u4fe1\u606f 'daily_basic', # \u6bcf\u65e5\u57fa\u672c\u9762 'income', # \u5229\u6da6\u8868 'balancesheet', # \u8d44\u4ea7\u8d1f\u503a\u8868 'cashflow' # \u73b0\u91d1\u6d41\u91cf\u8868 ], 'cache_duration': { # \u7f13\u5b58\u65f6\u957f\u914d\u7f6e 'stock_basic': 86400, # 24\u5c0f\u65f6 'daily_basic': 3600, # 1\u5c0f\u65f6 'financial_data': 43200 # 12\u5c0f\u65f6 } } 2.2 \u5907\u6570\u636e\u6e90 - PostgreSQL 2.2.1 \u6570\u636e\u6e90\u7279\u6027 \u6570\u636e\u6e90: PostgreSQL\u6570\u636e\u5e93 \u7c7b\u578b: \u5907\u6570\u636e\u6e90 \u4f18\u52bf: - \u672c\u5730\u8bbf\u95ee\uff0c\u54cd\u5e94\u901f\u5ea6\u5feb - \u65e0\u7f51\u7edc\u4f9d\u8d56\uff0c\u79bb\u7ebf\u53ef\u7528 - \u6570\u636e\u7a33\u5b9a\uff0c\u65e0API\u9650\u5236 - \u652f\u6301\u590d\u6742\u67e5\u8be2\u548c\u805a\u5408 \u5c40\u9650: - \u6570\u636e\u66f4\u65b0\u9891\u7387\u8f83\u4f4e - \u9700\u8981\u5b9a\u671f\u7ef4\u62a4\u548c\u66f4\u65b0 - \u5b58\u50a8\u6210\u672c\u968f\u6570\u636e\u91cf\u589e\u957f - \u6570\u636e\u5b57\u6bb5\u53ef\u80fd\u4e0d\u5982Tushare\u4e30\u5bcc 2.2.2 \u6570\u636e\u8868\u7ed3\u6784 -- \u6838\u5fc3\u6570\u636e\u8868 CREATE TABLE stock_basic ( ts_code VARCHAR(10) PRIMARY KEY, symbol VARCHAR(10), name VARCHAR(50), area VARCHAR(20), industry VARCHAR(50), market VARCHAR(10), list_date DATE, updated_at TIMESTAMP DEFAULT CURRENT_TIMESTAMP ); CREATE TABLE daily_quotes ( id SERIAL PRIMARY KEY, ts_code VARCHAR(10), trade_date DATE, open DECIMAL(10,2), high DECIMAL(10,2), low DECIMAL(10,2), close DECIMAL(10,2), volume BIGINT, amount DECIMAL(15,2), updated_at TIMESTAMP DEFAULT CURRENT_TIMESTAMP, UNIQUE(ts_code, trade_date) ); -- \u8d22\u52a1\u6570\u636e\u8868 CREATE TABLE financial_indicators ( id SERIAL PRIMARY KEY, ts_code VARCHAR(10), end_date DATE, pe DECIMAL(10,2), pb DECIMAL(10,2), ps DECIMAL(10,2), total_share DECIMAL(15,2), float_share DECIMAL(15,2), updated_at TIMESTAMP DEFAULT CURRENT_TIMESTAMP, UNIQUE(ts_code, end_date) ); 2.3 \u6570\u636e\u6e90\u6620\u5c04\u5173\u7cfb 2.3.1 \u5b57\u6bb5\u6620\u5c04\u8868 # \u6570\u636e\u6e90\u5b57\u6bb5\u6620\u5c04\u914d\u7f6e FIELD_MAPPING = { 'stock_basic': { 'tushare_fields': ['ts_code', 'symbol', 'name', 'area', 'industry', 'market', 'list_date'], 'postgresql_fields': ['ts_code', 'symbol', 'name', 'area', 'industry', 'market', 'list_date'], 'mapping': { # \u5b57\u6bb5\u540d\u6620\u5c04 'ts_code': 'ts_code', 'symbol': 'symbol', 'name': 'name', 'area': 'area', 'industry': 'industry', 'market': 'market', 'list_date': 'list_date' } }, 'daily_basic': { 'tushare_fields': ['ts_code', 'trade_date', 'close', 'pe', 'pb', 'total_share'], 'postgresql_fields': ['ts_code', 'trade_date', 'close', 'pe', 'pb', 'total_share'], 'unit_conversion': { # \u5355\u4f4d\u8f6c\u6362 'total_share': lambda x: x * 10000 if x else None # \u4e07\u80a1\u8f6c\u80a1 } } } 3. \u6570\u636e\u6e90\u7ba1\u7406\u5668\u8bbe\u8ba1 3.1 DataSourceManager\u6838\u5fc3\u7c7b from abc import ABC, abstractmethod from enum import Enum from typing import Dict, Any, Optional, List import logging class DataSourceType(Enum): \"\"\"\u6570\u636e\u6e90\u7c7b\u578b\u679a\u4e3e\"\"\" TUSHARE = \"tushare\" POSTGRESQL = \"postgresql\" CACHE = \"cache\" class DataSourceStatus(Enum): \"\"\"\u6570\u636e\u6e90\u72b6\u6001\u679a\u4e3e\"\"\" HEALTHY = \"healthy\" DEGRADED = \"degraded\" UNAVAILABLE = \"unavailable\" class DataSourceManager: \"\"\"\u6570\u636e\u6e90\u7ba1\u7406\u5668 - \u6838\u5fc3\u534f\u8c03\u7c7b\"\"\" def __init__(self, config: Dict[str, Any]): self.config = config self.primary_source = DataSourceType.TUSHARE self.fallback_source = DataSourceType.POSTGRESQL self.data_fetchers = {} self.cache_manager = None self.health_checker = None self.logger = logging.getLogger(__name__) self._initialize_components() def _initialize_components(self): \"\"\"\u521d\u59cb\u5316\u5404\u7ec4\u4ef6\"\"\" # \u521d\u59cb\u5316\u6570\u636e\u83b7\u53d6\u5668 self.data_fetchers[DataSourceType.TUSHARE] = TushareDataFetcher(self.config) self.data_fetchers[DataSourceType.POSTGRESQL] = PostgreSQLDataFetcher(self.config) # \u521d\u59cb\u5316\u7f13\u5b58\u7ba1\u7406\u5668 self.cache_manager = CacheManager(self.config) # \u521d\u59cb\u5316\u5065\u5eb7\u68c0\u67e5\u5668 self.health_checker = HealthChecker(self.data_fetchers) async def get_data(self, data_type: str, params: Dict[str, Any]) -> Dict[str, Any]: \"\"\"\u83b7\u53d6\u6570\u636e - \u4e3b\u8981\u5165\u53e3\u65b9\u6cd5\"\"\" try: # 1. \u5c1d\u8bd5\u4ece\u7f13\u5b58\u83b7\u53d6 cached_data = await self.cache_manager.get(data_type, params) if cached_data: self.logger.info(f\"Cache hit for {data_type}\") return cached_data # 2. \u9009\u62e9\u6570\u636e\u6e90 data_source = await self._select_data_source(data_type) # 3. \u83b7\u53d6\u6570\u636e data = await self._fetch_data(data_source, data_type, params) # 4. \u7f13\u5b58\u6570\u636e await self.cache_manager.set(data_type, params, data) return data except Exception as e: self.logger.error(f\"Error getting data for {data_type}: {str(e)}\") return await self._handle_error(data_type, params, e) async def _select_data_source(self, data_type: str) -> DataSourceType: \"\"\"\u667a\u80fd\u6570\u636e\u6e90\u9009\u62e9\"\"\" # \u68c0\u67e5\u914d\u7f6e\u7684\u6570\u636e\u6e90\u504f\u597d if self.config.get('force_data_source'): return DataSourceType(self.config['force_data_source']) # \u68c0\u67e5\u4e3b\u6570\u636e\u6e90\u5065\u5eb7\u72b6\u6001 primary_status = await self.health_checker.check_health(self.primary_source) if primary_status == DataSourceStatus.HEALTHY: return self.primary_source # \u4e3b\u6570\u636e\u6e90\u4e0d\u53ef\u7528\uff0c\u4f7f\u7528\u5907\u7528\u6570\u636e\u6e90 fallback_status = await self.health_checker.check_health(self.fallback_source) if fallback_status in [DataSourceStatus.HEALTHY, DataSourceStatus.DEGRADED]: self.logger.warning(f\"Primary source unavailable, using fallback: {self.fallback_source}\") return self.fallback_source # \u6240\u6709\u6570\u636e\u6e90\u90fd\u4e0d\u53ef\u7528 raise Exception(\"All data sources are unavailable\") async def _fetch_data(self, source: DataSourceType, data_type: str, params: Dict[str, Any]) -> Dict[str, Any]: \"\"\"\u4ece\u6307\u5b9a\u6570\u636e\u6e90\u83b7\u53d6\u6570\u636e\"\"\" fetcher = self.data_fetchers[source] return await fetcher.fetch_data(data_type, params) async def _handle_error(self, data_type: str, params: Dict[str, Any], error: Exception) -> Dict[str, Any]: \"\"\"\u9519\u8bef\u5904\u7406\u548c\u964d\u7ea7\u7b56\u7565\"\"\" self.logger.error(f\"Data fetch failed: {str(error)}\") # \u5c1d\u8bd5\u4ece\u7f13\u5b58\u83b7\u53d6\u8fc7\u671f\u6570\u636e stale_data = await self.cache_manager.get_stale(data_type, params) if stale_data: self.logger.warning(\"Returning stale cached data due to error\") return stale_data # \u8fd4\u56de\u9ed8\u8ba4\u503c\u6216\u629b\u51fa\u5f02\u5e38 raise error 3.2 \u5065\u5eb7\u68c0\u67e5\u673a\u5236 import asyncio from datetime import datetime, timedelta from typing import Dict class HealthChecker: \"\"\"\u6570\u636e\u6e90\u5065\u5eb7\u68c0\u67e5\u5668\"\"\" def __init__(self, data_fetchers: Dict[DataSourceType, Any]): self.data_fetchers = data_fetchers self.health_status = {} self.last_check = {} self.check_interval = 60 # 60\u79d2\u68c0\u67e5\u95f4\u9694 self.logger = logging.getLogger(__name__) async def check_health(self, source: DataSourceType) -> DataSourceStatus: \"\"\"\u68c0\u67e5\u6570\u636e\u6e90\u5065\u5eb7\u72b6\u6001\"\"\" now = datetime.now() # \u68c0\u67e5\u662f\u5426\u9700\u8981\u91cd\u65b0\u68c0\u67e5 if (source not in self.last_check or now - self.last_check[source] > timedelta(seconds=self.check_interval)): await self._perform_health_check(source) self.last_check[source] = now return self.health_status.get(source, DataSourceStatus.UNAVAILABLE) async def _perform_health_check(self, source: DataSourceType): \"\"\"\u6267\u884c\u5065\u5eb7\u68c0\u67e5\"\"\" try: fetcher = self.data_fetchers[source] # \u6267\u884c\u7b80\u5355\u7684\u8fde\u63a5\u6d4b\u8bd5 start_time = datetime.now() await fetcher.health_check() response_time = (datetime.now() - start_time).total_seconds() # \u6839\u636e\u54cd\u5e94\u65f6\u95f4\u5224\u65ad\u72b6\u6001 if response_time < 2.0: self.health_status[source] = DataSourceStatus.HEALTHY elif response_time < 5.0: self.health_status[source] = DataSourceStatus.DEGRADED else: self.health_status[source] = DataSourceStatus.UNAVAILABLE self.logger.info(f\"{source} health check: {self.health_status[source]} (response_time: {response_time:.2f}s)\") except Exception as e: self.health_status[source] = DataSourceStatus.UNAVAILABLE self.logger.error(f\"{source} health check failed: {str(e)}\") async def start_monitoring(self): \"\"\"\u542f\u52a8\u6301\u7eed\u76d1\u63a7\"\"\" while True: for source in self.data_fetchers.keys(): await self._perform_health_check(source) await asyncio.sleep(self.check_interval) 4. \u7f13\u5b58\u7b56\u7565\u8bbe\u8ba1 4.1 \u591a\u5c42\u7ea7\u7f13\u5b58\u67b6\u6784 \u7f13\u5b58\u5c42\u7ea7\u7ed3\u6784 \u250c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2510 \u2502 L1: \u5185\u5b58\u7f13\u5b58 (LRU) \u2502 \u2502 \u2022 \u5bb9\u91cf: 1000\u4e2a\u5bf9\u8c61 \u2502 \u2502 \u2022 TTL: 5-30\u5206\u949f \u2502 \u2502 \u2022 \u7528\u9014: \u70ed\u70b9\u6570\u636e\u5feb\u901f\u8bbf\u95ee \u2502 \u2514\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2518 \u2502 \u25bc \u250c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2510 \u2502 L2: Redis\u7f13\u5b58 \u2502 \u2502 \u2022 \u5bb9\u91cf: 10GB \u2502 \u2502 \u2022 TTL: 1-24\u5c0f\u65f6 \u2502 \u2502 \u2022 \u7528\u9014: \u5206\u5e03\u5f0f\u7f13\u5b58\uff0c\u652f\u6301\u96c6\u7fa4 \u2502 \u2514\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2518 \u2502 \u25bc \u250c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2510 \u2502 L3: \u672c\u5730\u6587\u4ef6\u7f13\u5b58 \u2502 \u2502 \u2022 \u5bb9\u91cf: 1GB \u2502 \u2502 \u2022 TTL: 1-7\u5929 \u2502 \u2502 \u2022 \u7528\u9014: \u51b7\u6570\u636e\u5b58\u50a8\uff0c\u79bb\u7ebf\u8bbf\u95ee \u2502 \u2514\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2518 4.2 \u7f13\u5b58\u7ba1\u7406\u5668\u5b9e\u73b0 import json import hashlib from datetime import datetime, timedelta from typing import Any, Dict, Optional import redis from cachetools import LRUCache class CacheManager: \"\"\"\u591a\u5c42\u7ea7\u7f13\u5b58\u7ba1\u7406\u5668\"\"\" def __init__(self, config: Dict[str, Any]): self.config = config # L1: \u5185\u5b58\u7f13\u5b58 self.memory_cache = LRUCache(maxsize=1000) # L2: Redis\u7f13\u5b58 self.redis_client = redis.Redis( host=config.get('redis_host', 'localhost'), port=config.get('redis_port', 6379), db=config.get('redis_db', 0), decode_responses=True ) # L3: \u6587\u4ef6\u7f13\u5b58\u8def\u5f84 self.file_cache_dir = config.get('file_cache_dir', './cache') self.logger = logging.getLogger(__name__) def _generate_cache_key(self, data_type: str, params: Dict[str, Any]) -> str: \"\"\"\u751f\u6210\u7f13\u5b58\u952e\"\"\" # \u521b\u5efa\u53c2\u6570\u7684\u54c8\u5e0c\u503c params_str = json.dumps(params, sort_keys=True) params_hash = hashlib.md5(params_str.encode()).hexdigest()[:8] return f\"{data_type}:{params_hash}\" async def get(self, data_type: str, params: Dict[str, Any]) -> Optional[Dict[str, Any]]: \"\"\"\u83b7\u53d6\u7f13\u5b58\u6570\u636e\"\"\" cache_key = self._generate_cache_key(data_type, params) # L1: \u68c0\u67e5\u5185\u5b58\u7f13\u5b58 if cache_key in self.memory_cache: self.logger.debug(f\"L1 cache hit: {cache_key}\") return self.memory_cache[cache_key] # L2: \u68c0\u67e5Redis\u7f13\u5b58 try: redis_data = self.redis_client.get(cache_key) if redis_data: data = json.loads(redis_data) # \u56de\u586b\u5230L1\u7f13\u5b58 self.memory_cache[cache_key] = data self.logger.debug(f\"L2 cache hit: {cache_key}\") return data except Exception as e: self.logger.warning(f\"Redis cache error: {str(e)}\") # L3: \u68c0\u67e5\u6587\u4ef6\u7f13\u5b58 try: file_path = os.path.join(self.file_cache_dir, f\"{cache_key}.json\") if os.path.exists(file_path): with open(file_path, 'r') as f: data = json.load(f) # \u68c0\u67e5\u6587\u4ef6\u7f13\u5b58\u662f\u5426\u8fc7\u671f cache_time = datetime.fromisoformat(data.get('_cache_time', '1970-01-01')) if datetime.now() - cache_time < timedelta(days=7): # \u56de\u586b\u5230\u4e0a\u7ea7\u7f13\u5b58 self.memory_cache[cache_key] = data try: self.redis_client.setex(cache_key, 3600, json.dumps(data)) except: pass self.logger.debug(f\"L3 cache hit: {cache_key}\") return data except Exception as e: self.logger.warning(f\"File cache error: {str(e)}\") return None async def set(self, data_type: str, params: Dict[str, Any], data: Dict[str, Any]): \"\"\"\u8bbe\u7f6e\u7f13\u5b58\u6570\u636e\"\"\" cache_key = self._generate_cache_key(data_type, params) # \u6dfb\u52a0\u7f13\u5b58\u65f6\u95f4\u6233 data_with_timestamp = { **data, '_cache_time': datetime.now().isoformat(), '_data_type': data_type } # \u83b7\u53d6TTL\u914d\u7f6e ttl_config = self.config.get('cache_ttl', {}) memory_ttl = ttl_config.get(data_type, {}).get('memory', 1800) # 30\u5206\u949f redis_ttl = ttl_config.get(data_type, {}).get('redis', 3600) # 1\u5c0f\u65f6 # L1: \u8bbe\u7f6e\u5185\u5b58\u7f13\u5b58 self.memory_cache[cache_key] = data_with_timestamp # L2: \u8bbe\u7f6eRedis\u7f13\u5b58 try: self.redis_client.setex( cache_key, redis_ttl, json.dumps(data_with_timestamp) ) except Exception as e: self.logger.warning(f\"Redis cache set error: {str(e)}\") # L3: \u8bbe\u7f6e\u6587\u4ef6\u7f13\u5b58\uff08\u5f02\u6b65\uff09 asyncio.create_task(self._set_file_cache(cache_key, data_with_timestamp)) async def _set_file_cache(self, cache_key: str, data: Dict[str, Any]): \"\"\"\u5f02\u6b65\u8bbe\u7f6e\u6587\u4ef6\u7f13\u5b58\"\"\" try: os.makedirs(self.file_cache_dir, exist_ok=True) file_path = os.path.join(self.file_cache_dir, f\"{cache_key}.json\") with open(file_path, 'w') as f: json.dump(data, f, indent=2) except Exception as e: self.logger.warning(f\"File cache set error: {str(e)}\") async def get_stale(self, data_type: str, params: Dict[str, Any]) -> Optional[Dict[str, Any]]: \"\"\"\u83b7\u53d6\u8fc7\u671f\u7684\u7f13\u5b58\u6570\u636e\uff08\u7528\u4e8e\u964d\u7ea7\uff09\"\"\" cache_key = self._generate_cache_key(data_type, params) # \u5c1d\u8bd5\u4ece\u6587\u4ef6\u7f13\u5b58\u83b7\u53d6\uff0c\u5ffd\u7565\u8fc7\u671f\u65f6\u95f4 try: file_path = os.path.join(self.file_cache_dir, f\"{cache_key}.json\") if os.path.exists(file_path): with open(file_path, 'r') as f: data = json.load(f) self.logger.warning(f\"Returning stale cache data: {cache_key}\") return data except Exception as e: self.logger.error(f\"Stale cache retrieval error: {str(e)}\") return None async def invalidate(self, data_type: str, params: Dict[str, Any] = None): \"\"\"\u7f13\u5b58\u5931\u6548\"\"\" if params: # \u5931\u6548\u7279\u5b9a\u7f13\u5b58 cache_key = self._generate_cache_key(data_type, params) self._invalidate_key(cache_key) else: # \u5931\u6548\u6570\u636e\u7c7b\u578b\u7684\u6240\u6709\u7f13\u5b58 await self._invalidate_by_pattern(f\"{data_type}:*\") def _invalidate_key(self, cache_key: str): \"\"\"\u5931\u6548\u6307\u5b9a\u952e\u7684\u7f13\u5b58\"\"\" # L1: \u5185\u5b58\u7f13\u5b58 if cache_key in self.memory_cache: del self.memory_cache[cache_key] # L2: Redis\u7f13\u5b58 try: self.redis_client.delete(cache_key) except: pass # L3: \u6587\u4ef6\u7f13\u5b58 try: file_path = os.path.join(self.file_cache_dir, f\"{cache_key}.json\") if os.path.exists(file_path): os.remove(file_path) except: pass async def _invalidate_by_pattern(self, pattern: str): \"\"\"\u6309\u6a21\u5f0f\u5931\u6548\u7f13\u5b58\"\"\" # Redis\u6a21\u5f0f\u5339\u914d\u5220\u9664 try: keys = self.redis_client.keys(pattern) if keys: self.redis_client.delete(*keys) except: pass # \u5185\u5b58\u7f13\u5b58\u6a21\u5f0f\u5339\u914d\u5220\u9664 keys_to_delete = [k for k in self.memory_cache.keys() if k.startswith(pattern.replace('*', ''))] for key in keys_to_delete: del self.memory_cache[key] 4.3 \u7f13\u5b58\u7b56\u7565\u914d\u7f6e # \u7f13\u5b58TTL\u914d\u7f6e CACHE_TTL_CONFIG = { 'stock_basic': { 'memory': 3600, # 1\u5c0f\u65f6 'redis': 86400, # 24\u5c0f\u65f6 'file': 604800 # 7\u5929 }, 'daily_basic': { 'memory': 1800, # 30\u5206\u949f 'redis': 3600, # 1\u5c0f\u65f6 'file': 86400 # 1\u5929 }, 'financial_data': { 'memory': 7200, # 2\u5c0f\u65f6 'redis': 43200, # 12\u5c0f\u65f6 'file': 2592000 # 30\u5929 }, 'real_time_quotes': { 'memory': 300, # 5\u5206\u949f 'redis': 900, # 15\u5206\u949f 'file': 3600 # 1\u5c0f\u65f6 } } # \u7f13\u5b58\u5931\u6548\u7b56\u7565 CACHE_INVALIDATION_RULES = { 'market_close': { 'time': '15:30', 'invalidate': ['daily_basic', 'real_time_quotes'] }, 'financial_report': { 'trigger': 'quarterly', 'invalidate': ['financial_data', 'valuation_metrics'] }, 'stock_list_update': { 'trigger': 'weekly', 'invalidate': ['stock_basic'] } } 5. \u9519\u8bef\u5904\u7406\u548c\u964d\u7ea7\u7b56\u7565 5.1 \u9519\u8bef\u5206\u7c7b\u548c\u5904\u7406 from enum import Enum from typing import Dict, Any, Optional class ErrorType(Enum): \"\"\"\u9519\u8bef\u7c7b\u578b\u679a\u4e3e\"\"\" NETWORK_ERROR = \"network_error\" # \u7f51\u7edc\u8fde\u63a5\u9519\u8bef API_LIMIT_ERROR = \"api_limit_error\" # API\u9650\u6d41\u9519\u8bef DATA_NOT_FOUND = \"data_not_found\" # \u6570\u636e\u4e0d\u5b58\u5728 AUTHENTICATION_ERROR = \"auth_error\" # \u8ba4\u8bc1\u9519\u8bef SERVER_ERROR = \"server_error\" # \u670d\u52a1\u5668\u9519\u8bef TIMEOUT_ERROR = \"timeout_error\" # \u8d85\u65f6\u9519\u8bef DATA_FORMAT_ERROR = \"format_error\" # \u6570\u636e\u683c\u5f0f\u9519\u8bef class ErrorHandler: \"\"\"\u7edf\u4e00\u9519\u8bef\u5904\u7406\u5668\"\"\" def __init__(self, config: Dict[str, Any]): self.config = config self.retry_config = config.get('retry_config', {}) self.fallback_config = config.get('fallback_config', {}) self.logger = logging.getLogger(__name__) async def handle_error(self, error: Exception, context: Dict[str, Any]) -> Dict[str, Any]: \"\"\"\u7edf\u4e00\u9519\u8bef\u5904\u7406\u5165\u53e3\"\"\" error_type = self._classify_error(error) self.logger.error(f\"Error occurred: {error_type} - {str(error)}\") # \u6839\u636e\u9519\u8bef\u7c7b\u578b\u9009\u62e9\u5904\u7406\u7b56\u7565 if error_type == ErrorType.API_LIMIT_ERROR: return await self._handle_api_limit_error(error, context) elif error_type == ErrorType.NETWORK_ERROR: return await self._handle_network_error(error, context) elif error_type == ErrorType.TIMEOUT_ERROR: return await self._handle_timeout_error(error, context) elif error_type == ErrorType.DATA_NOT_FOUND: return await self._handle_data_not_found_error(error, context) else: return await self._handle_generic_error(error, context) def _classify_error(self, error: Exception) -> ErrorType: \"\"\"\u9519\u8bef\u5206\u7c7b\"\"\" error_msg = str(error).lower() if 'rate limit' in error_msg or 'quota exceeded' in error_msg: return ErrorType.API_LIMIT_ERROR elif 'network' in error_msg or 'connection' in error_msg: return ErrorType.NETWORK_ERROR elif 'timeout' in error_msg: return ErrorType.TIMEOUT_ERROR elif 'not found' in error_msg or 'no data' in error_msg: return ErrorType.DATA_NOT_FOUND elif 'authentication' in error_msg or 'unauthorized' in error_msg: return ErrorType.AUTHENTICATION_ERROR elif 'server error' in error_msg or '500' in error_msg: return ErrorType.SERVER_ERROR else: return ErrorType.DATA_FORMAT_ERROR async def _handle_api_limit_error(self, error: Exception, context: Dict[str, Any]) -> Dict[str, Any]: \"\"\"\u5904\u7406API\u9650\u6d41\u9519\u8bef\"\"\" # 1. \u5207\u6362\u5230\u5907\u7528\u6570\u636e\u6e90 self.logger.warning(\"API limit reached, switching to fallback data source\") # 2. \u5c1d\u8bd5\u4ece\u7f13\u5b58\u83b7\u53d6\u6570\u636e cache_manager = context.get('cache_manager') if cache_manager: stale_data = await cache_manager.get_stale( context.get('data_type'), context.get('params') ) if stale_data: return stale_data # 3. \u4f7f\u7528\u5907\u7528\u6570\u636e\u6e90 fallback_fetcher = context.get('fallback_fetcher') if fallback_fetcher: return await fallback_fetcher.fetch_data( context.get('data_type'), context.get('params') ) raise error async def _handle_network_error(self, error: Exception, context: Dict[str, Any]) -> Dict[str, Any]: \"\"\"\u5904\u7406\u7f51\u7edc\u9519\u8bef\"\"\" # \u91cd\u8bd5\u673a\u5236 retry_count = context.get('retry_count', 0) max_retries = self.retry_config.get('max_retries', 3) if retry_count < max_retries: self.logger.info(f\"Network error, retrying ({retry_count + 1}/{max_retries})\") # \u6307\u6570\u9000\u907f wait_time = 2 ** retry_count await asyncio.sleep(wait_time) # \u66f4\u65b0\u91cd\u8bd5\u6b21\u6570 context['retry_count'] = retry_count + 1 # \u91cd\u65b0\u5c1d\u8bd5 fetcher = context.get('fetcher') if fetcher: return await fetcher.fetch_data( context.get('data_type'), context.get('params') ) # \u91cd\u8bd5\u5931\u8d25\uff0c\u4f7f\u7528\u964d\u7ea7\u7b56\u7565 return await self._apply_fallback_strategy(error, context) async def _apply_fallback_strategy(self, error: Exception, context: Dict[str, Any]) -> Dict[str, Any]: \"\"\"\u5e94\u7528\u964d\u7ea7\u7b56\u7565\"\"\" # 1. \u5c1d\u8bd5\u4ece\u7f13\u5b58\u83b7\u53d6\u8fc7\u671f\u6570\u636e cache_manager = context.get('cache_manager') if cache_manager: stale_data = await cache_manager.get_stale( context.get('data_type'), context.get('params') ) if stale_data: self.logger.warning(\"Using stale cached data as fallback\") return stale_data # 2. \u4f7f\u7528\u5907\u7528\u6570\u636e\u6e90 fallback_fetcher = context.get('fallback_fetcher') if fallback_fetcher: try: self.logger.warning(\"Using fallback data source\") return await fallback_fetcher.fetch_data( context.get('data_type'), context.get('params') ) except Exception as fallback_error: self.logger.error(f\"Fallback data source also failed: {str(fallback_error)}\") # 3. \u8fd4\u56de\u9ed8\u8ba4\u503c\u6216\u629b\u51fa\u5f02\u5e38 default_data = self.fallback_config.get('default_data', {}) if default_data: self.logger.warning(\"Using default fallback data\") return default_data # \u6240\u6709\u964d\u7ea7\u7b56\u7565\u90fd\u5931\u8d25\uff0c\u629b\u51fa\u539f\u59cb\u5f02\u5e38 raise error 5.2 \u81ea\u52a8\u964d\u7ea7\u548c\u6062\u590d\u673a\u5236 import asyncio from datetime import datetime, timedelta from typing import Dict, List class AutoDegradationManager: \"\"\"\u81ea\u52a8\u964d\u7ea7\u7ba1\u7406\u5668\"\"\" def __init__(self, data_source_manager, config: Dict[str, Any]): self.data_source_manager = data_source_manager self.config = config self.degradation_rules = config.get('degradation_rules', {}) self.recovery_rules = config.get('recovery_rules', {}) self.current_degradations = {} self.logger = logging.getLogger(__name__) async def evaluate_degradation(self, source: DataSourceType, error_history: List[Dict]): \"\"\"\u8bc4\u4f30\u662f\u5426\u9700\u8981\u964d\u7ea7\"\"\" # \u5206\u6790\u9519\u8bef\u5386\u53f2 recent_errors = [e for e in error_history if datetime.now() - e['timestamp'] < timedelta(minutes=5)] error_rate = len(recent_errors) / max(1, len(error_history)) # \u68c0\u67e5\u964d\u7ea7\u6761\u4ef6 if error_rate > self.degradation_rules.get('error_rate_threshold', 0.5): await self._trigger_degradation(source, 'high_error_rate') # \u68c0\u67e5\u54cd\u5e94\u65f6\u95f4 avg_response_time = sum(e.get('response_time', 0) for e in recent_errors) / max(1, len(recent_errors)) if avg_response_time > self.degradation_rules.get('response_time_threshold', 10.0): await self._trigger_degradation(source, 'slow_response') async def _trigger_degradation(self, source: DataSourceType, reason: str): \"\"\"\u89e6\u53d1\u964d\u7ea7\"\"\" if source not in self.current_degradations: self.current_degradations[source] = { 'reason': reason, 'start_time': datetime.now(), 'attempts': 0 } self.logger.warning(f\"Triggering degradation for {source}: {reason}\") # \u901a\u77e5\u6570\u636e\u6e90\u7ba1\u7406\u5668 await self.data_source_manager.set_source_status(source, DataSourceStatus.DEGRADED) async def evaluate_recovery(self): \"\"\"\u8bc4\u4f30\u6062\u590d\u6761\u4ef6\"\"\" for source, degradation_info in list(self.current_degradations.items()): # \u68c0\u67e5\u964d\u7ea7\u65f6\u95f4 degradation_duration = datetime.now() - degradation_info['start_time'] min_degradation_time = timedelta(minutes=self.recovery_rules.get('min_degradation_minutes', 5)) if degradation_duration > min_degradation_time: # \u5c1d\u8bd5\u6062\u590d\u68c0\u67e5 if await self._test_recovery(source): await self._trigger_recovery(source) async def _test_recovery(self, source: DataSourceType) -> bool: \"\"\"\u6d4b\u8bd5\u6570\u636e\u6e90\u662f\u5426\u53ef\u4ee5\u6062\u590d\"\"\" try: # \u6267\u884c\u5065\u5eb7\u68c0\u67e5 health_checker = self.data_source_manager.health_checker status = await health_checker.check_health(source) return status == DataSourceStatus.HEALTHY except Exception as e: self.logger.debug(f\"Recovery test failed for {source}: {str(e)}\") return False async def _trigger_recovery(self, source: DataSourceType): \"\"\"\u89e6\u53d1\u6062\u590d\"\"\" if source in self.current_degradations: degradation_info = self.current_degradations[source] duration = datetime.now() - degradation_info['start_time'] self.logger.info(f\"Recovering {source} after {duration}\") # \u79fb\u9664\u964d\u7ea7\u72b6\u6001 del self.current_degradations[source] # \u901a\u77e5\u6570\u636e\u6e90\u7ba1\u7406\u5668 await self.data_source_manager.set_source_status(source, DataSourceStatus.HEALTHY) async def start_monitoring(self): \"\"\"\u542f\u52a8\u81ea\u52a8\u964d\u7ea7\u76d1\u63a7\"\"\" while True: try: await self.evaluate_recovery() await asyncio.sleep(30) # 30\u79d2\u68c0\u67e5\u4e00\u6b21 except Exception as e: self.logger.error(f\"Auto degradation monitoring error: {str(e)}\") await asyncio.sleep(60) 6. \u76d1\u63a7\u548c\u544a\u8b66\u7cfb\u7edf 6.1 \u76d1\u63a7\u6307\u6807\u5b9a\u4e49 from dataclasses import dataclass from typing import Dict, List, Optional from datetime import datetime import time @dataclass class MetricPoint: \"\"\"\u76d1\u63a7\u6307\u6807\u6570\u636e\u70b9\"\"\" name: str value: float timestamp: datetime tags: Dict[str, str] unit: str = \"\" class MetricsCollector: \"\"\"\u6307\u6807\u6536\u96c6\u5668\"\"\" def __init__(self, config: Dict[str, Any]): self.config = config self.metrics_buffer = [] self.counters = {} self.gauges = {} self.histograms = {} self.logger = logging.getLogger(__name__) def increment_counter(self, name: str, value: float = 1.0, tags: Dict[str, str] = None): \"\"\"\u9012\u589e\u8ba1\u6570\u5668\"\"\" key = self._make_key(name, tags or {}) self.counters[key] = self.counters.get(key, 0) + value self._add_metric_point(MetricPoint( name=name, value=self.counters[key], timestamp=datetime.now(), tags=tags or {}, unit=\"count\" )) def set_gauge(self, name: str, value: float, tags: Dict[str, str] = None): \"\"\"\u8bbe\u7f6e\u4eea\u8868\u503c\"\"\" key = self._make_key(name, tags or {}) self.gauges[key] = value self._add_metric_point(MetricPoint( name=name, value=value, timestamp=datetime.now(), tags=tags or {}, unit=\"gauge\" )) def record_histogram(self, name: str, value: float, tags: Dict[str, str] = None): \"\"\"\u8bb0\u5f55\u76f4\u65b9\u56fe\u503c\"\"\" key = self._make_key(name, tags or {}) if key not in self.histograms: self.histograms[key] = [] self.histograms[key].append(value) # \u4fdd\u6301\u6700\u8fd11000\u4e2a\u503c if len(self.histograms[key]) > 1000: self.histograms[key] = self.histograms[key][-1000:] self._add_metric_point(MetricPoint( name=name, value=value, timestamp=datetime.now(), tags=tags or {}, unit=\"histogram\" )) def _make_key(self, name: str, tags: Dict[str, str]) -> str: \"\"\"\u751f\u6210\u6307\u6807\u952e\"\"\" tag_str = \",\".join(f\"{k}={v}\" for k, v in sorted(tags.items())) return f\"{name}[{tag_str}]\" def _add_metric_point(self, metric: MetricPoint): \"\"\"\u6dfb\u52a0\u6307\u6807\u70b9\u5230\u7f13\u51b2\u533a\"\"\" self.metrics_buffer.append(metric) # \u7f13\u51b2\u533a\u6ee1\u65f6\u53d1\u9001 if len(self.metrics_buffer) >= 100: asyncio.create_task(self._flush_metrics()) async def _flush_metrics(self): \"\"\"\u5237\u65b0\u6307\u6807\u5230\u76d1\u63a7\u7cfb\u7edf\"\"\" if not self.metrics_buffer: return try: # \u53d1\u9001\u5230Prometheus\u6216\u5176\u4ed6\u76d1\u63a7\u7cfb\u7edf await self._send_to_monitoring_system(self.metrics_buffer) self.metrics_buffer.clear() except Exception as e: self.logger.error(f\"Failed to flush metrics: {str(e)}\") async def _send_to_monitoring_system(self, metrics: List[MetricPoint]): \"\"\"\u53d1\u9001\u6307\u6807\u5230\u76d1\u63a7\u7cfb\u7edf\"\"\" # \u8fd9\u91cc\u53ef\u4ee5\u96c6\u6210Prometheus\u3001InfluxDB\u7b49\u76d1\u63a7\u7cfb\u7edf for metric in metrics: self.logger.debug(f\"Metric: {metric.name}={metric.value} {metric.tags}\") # \u6838\u5fc3\u76d1\u63a7\u6307\u6807\u5b9a\u4e49 CORE_METRICS = { # \u6570\u636e\u6e90\u6307\u6807 'data_source_requests_total': 'Counter - \u6570\u636e\u6e90\u8bf7\u6c42\u603b\u6570', 'data_source_errors_total': 'Counter - \u6570\u636e\u6e90\u9519\u8bef\u603b\u6570', 'data_source_response_time': 'Histogram - \u6570\u636e\u6e90\u54cd\u5e94\u65f6\u95f4', 'data_source_availability': 'Gauge - \u6570\u636e\u6e90\u53ef\u7528\u6027', # \u7f13\u5b58\u6307\u6807 'cache_hits_total': 'Counter - \u7f13\u5b58\u547d\u4e2d\u603b\u6570', 'cache_misses_total': 'Counter - \u7f13\u5b58\u672a\u547d\u4e2d\u603b\u6570', 'cache_hit_ratio': 'Gauge - \u7f13\u5b58\u547d\u4e2d\u7387', 'cache_size_bytes': 'Gauge - \u7f13\u5b58\u5927\u5c0f', # API\u6307\u6807 'api_requests_total': 'Counter - API\u8bf7\u6c42\u603b\u6570', 'api_response_time': 'Histogram - API\u54cd\u5e94\u65f6\u95f4', 'api_errors_total': 'Counter - API\u9519\u8bef\u603b\u6570', # \u4e1a\u52a1\u6307\u6807 'valuation_calculations_total': 'Counter - \u4f30\u503c\u8ba1\u7b97\u603b\u6570', 'valuation_calculation_time': 'Histogram - \u4f30\u503c\u8ba1\u7b97\u65f6\u95f4', 'active_users': 'Gauge - \u6d3b\u8dc3\u7528\u6237\u6570' } 6.2 \u544a\u8b66\u89c4\u5219\u914d\u7f6e # \u544a\u8b66\u89c4\u5219\u914d\u7f6e alert_rules: # \u6570\u636e\u6e90\u544a\u8b66 data_source_down: metric: data_source_availability condition: \"< 0.5\" duration: \"2m\" severity: critical message: \"\u6570\u636e\u6e90 {{$labels.source}} \u4e0d\u53ef\u7528\" data_source_slow: metric: data_source_response_time condition: \"> 10\" duration: \"5m\" severity: warning message: \"\u6570\u636e\u6e90 {{$labels.source}} \u54cd\u5e94\u7f13\u6162\" high_error_rate: metric: rate(data_source_errors_total[5m]) condition: \"> 0.1\" duration: \"3m\" severity: warning message: \"\u6570\u636e\u6e90 {{$labels.source}} \u9519\u8bef\u7387\u8fc7\u9ad8\" # \u7f13\u5b58\u544a\u8b66 low_cache_hit_ratio: metric: cache_hit_ratio condition: \"< 0.7\" duration: \"10m\" severity: warning message: \"\u7f13\u5b58\u547d\u4e2d\u7387\u8fc7\u4f4e: {{$value}}\" cache_size_high: metric: cache_size_bytes condition: \"> 8GB\" duration: \"5m\" severity: warning message: \"\u7f13\u5b58\u4f7f\u7528\u91cf\u8fc7\u9ad8: {{$value}}\" # API\u544a\u8b66 api_response_slow: metric: api_response_time condition: \"> 5\" duration: \"5m\" severity: warning message: \"API\u54cd\u5e94\u65f6\u95f4\u8fc7\u957f: {{$value}}s\" api_error_rate_high: metric: rate(api_errors_total[5m]) condition: \"> 0.05\" duration: \"3m\" severity: critical message: \"API\u9519\u8bef\u7387\u8fc7\u9ad8: {{$value}}\" # \u544a\u8b66\u901a\u77e5\u914d\u7f6e notification_channels: email: enabled: true smtp_server: \"smtp.example.com\" recipients: [\"admin@example.com\"] slack: enabled: true webhook_url: \"https://hooks.slack.com/services/...\" channel: \"#alerts\" webhook: enabled: false url: \"https://api.example.com/alerts\" 6.3 \u76d1\u63a7\u4eea\u8868\u677f class MonitoringDashboard: \"\"\"\u76d1\u63a7\u4eea\u8868\u677f\"\"\" def __init__(self, metrics_collector: MetricsCollector): self.metrics_collector = metrics_collector self.dashboard_config = self._load_dashboard_config() def _load_dashboard_config(self) -> Dict[str, Any]: \"\"\"\u52a0\u8f7d\u4eea\u8868\u677f\u914d\u7f6e\"\"\" return { 'panels': [ { 'title': '\u6570\u636e\u6e90\u72b6\u6001', 'type': 'stat', 'metrics': ['data_source_availability'], 'thresholds': [0.9, 0.95] }, { 'title': '\u54cd\u5e94\u65f6\u95f4\u8d8b\u52bf', 'type': 'graph', 'metrics': ['data_source_response_time', 'api_response_time'], 'time_range': '1h' }, { 'title': '\u7f13\u5b58\u6027\u80fd', 'type': 'graph', 'metrics': ['cache_hit_ratio', 'cache_hits_total', 'cache_misses_total'], 'time_range': '6h' }, { 'title': '\u9519\u8bef\u7387\u7edf\u8ba1', 'type': 'graph', 'metrics': ['data_source_errors_total', 'api_errors_total'], 'time_range': '24h' }, { 'title': '\u4e1a\u52a1\u6307\u6807', 'type': 'stat', 'metrics': ['valuation_calculations_total', 'active_users'], 'time_range': '1d' } ] } async def get_dashboard_data(self) -> Dict[str, Any]: \"\"\"\u83b7\u53d6\u4eea\u8868\u677f\u6570\u636e\"\"\" dashboard_data = { 'timestamp': datetime.now().isoformat(), 'panels': [] } for panel_config in self.dashboard_config['panels']: panel_data = await self._get_panel_data(panel_config) dashboard_data['panels'].append(panel_data) return dashboard_data async def _get_panel_data(self, panel_config: Dict[str, Any]) -> Dict[str, Any]: \"\"\"\u83b7\u53d6\u9762\u677f\u6570\u636e\"\"\" panel_data = { 'title': panel_config['title'], 'type': panel_config['type'], 'data': [] } for metric_name in panel_config['metrics']: metric_data = await self._get_metric_data( metric_name, panel_config.get('time_range', '1h') ) panel_data['data'].append(metric_data) return panel_data async def _get_metric_data(self, metric_name: str, time_range: str) -> Dict[str, Any]: \"\"\"\u83b7\u53d6\u6307\u6807\u6570\u636e\"\"\" # \u8fd9\u91cc\u5e94\u8be5\u4ece\u65f6\u5e8f\u6570\u636e\u5e93\u67e5\u8be2\u6570\u636e # \u4e3a\u4e86\u793a\u4f8b\uff0c\u8fd4\u56de\u6a21\u62df\u6570\u636e return { 'metric': metric_name, 'values': [], # \u5b9e\u9645\u7684\u65f6\u5e8f\u6570\u636e\u70b9 'current_value': 0.0, 'trend': 'stable' # up, down, stable } 7. \u914d\u7f6e\u7ba1\u7406 7.1 \u73af\u5883\u914d\u7f6e\u6587\u4ef6 # .env \u914d\u7f6e\u6587\u4ef6 # ==================== \u6570\u636e\u6e90\u914d\u7f6e ==================== # \u4e3b\u6570\u636e\u6e90\u9009\u62e9: tushare, postgresql PRIMARY_DATA_SOURCE=tushare # \u5907\u7528\u6570\u636e\u6e90\u9009\u62e9: postgresql, tushare FALLBACK_DATA_SOURCE=postgresql # \u5f3a\u5236\u4f7f\u7528\u6307\u5b9a\u6570\u636e\u6e90 (\u53ef\u9009): tushare, postgresql # FORCE_DATA_SOURCE=tushare # ==================== Tushare\u914d\u7f6e ==================== TUSHARE_TOKEN=your_tushare_token_here TUSHARE_API_URL=http://api.tushare.pro TUSHARE_TIMEOUT=30 TUSHARE_MAX_RETRIES=3 TUSHARE_RETRY_DELAY=1 # API\u914d\u989d\u7ba1\u7406 TUSHARE_DAILY_LIMIT=10000 TUSHARE_MINUTE_LIMIT=500 TUSHARE_ENABLE_QUOTA_CHECK=true # ==================== PostgreSQL\u914d\u7f6e ==================== POSTGRESQL_HOST=localhost POSTGRESQL_PORT=5432 POSTGRESQL_DATABASE=stock_valuation POSTGRESQL_USERNAME=postgres POSTGRESQL_PASSWORD=your_password_here POSTGRESQL_POOL_SIZE=10 POSTGRESQL_MAX_OVERFLOW=20 POSTGRESQL_POOL_TIMEOUT=30 # ==================== Redis\u7f13\u5b58\u914d\u7f6e ==================== REDIS_HOST=localhost REDIS_PORT=6379 REDIS_DB=0 REDIS_PASSWORD= REDIS_MAX_CONNECTIONS=10 REDIS_SOCKET_TIMEOUT=5 # ==================== \u7f13\u5b58\u7b56\u7565\u914d\u7f6e ==================== # \u542f\u7528\u7f13\u5b58\u5c42\u7ea7: memory, redis, file ENABLE_MEMORY_CACHE=true ENABLE_REDIS_CACHE=true ENABLE_FILE_CACHE=true # \u7f13\u5b58\u76ee\u5f55 FILE_CACHE_DIR=./cache # \u7f13\u5b58TTL (\u79d2) CACHE_TTL_STOCK_BASIC_MEMORY=3600 CACHE_TTL_STOCK_BASIC_REDIS=86400 CACHE_TTL_DAILY_BASIC_MEMORY=1800 CACHE_TTL_DAILY_BASIC_REDIS=3600 CACHE_TTL_FINANCIAL_DATA_MEMORY=7200 CACHE_TTL_FINANCIAL_DATA_REDIS=43200 # ==================== \u5065\u5eb7\u68c0\u67e5\u914d\u7f6e ==================== HEALTH_CHECK_INTERVAL=60 HEALTH_CHECK_TIMEOUT=10 HEALTH_CHECK_RETRY_COUNT=3 # \u5065\u5eb7\u72b6\u6001\u9608\u503c HEALTH_RESPONSE_TIME_HEALTHY=2.0 HEALTH_RESPONSE_TIME_DEGRADED=5.0 # ==================== \u964d\u7ea7\u7b56\u7565\u914d\u7f6e ==================== # \u542f\u7528\u81ea\u52a8\u964d\u7ea7 ENABLE_AUTO_DEGRADATION=true # \u964d\u7ea7\u89e6\u53d1\u6761\u4ef6 DEGRADATION_ERROR_RATE_THRESHOLD=0.5 DEGRADATION_RESPONSE_TIME_THRESHOLD=10.0 DEGRADATION_MIN_DURATION_MINUTES=5 # \u6062\u590d\u6761\u4ef6 RECOVERY_SUCCESS_RATE_THRESHOLD=0.9 RECOVERY_TEST_INTERVAL=30 # ==================== \u76d1\u63a7\u544a\u8b66\u914d\u7f6e ==================== # \u542f\u7528\u76d1\u63a7 ENABLE_MONITORING=true MONITORING_INTERVAL=30 # Prometheus\u914d\u7f6e PROMETHEUS_ENABLED=false PROMETHEUS_HOST=localhost PROMETHEUS_PORT=9090 # \u544a\u8b66\u914d\u7f6e ALERT_EMAIL_ENABLED=true ALERT_EMAIL_SMTP_SERVER=smtp.example.com ALERT_EMAIL_RECIPIENTS=admin@example.com ALERT_SLACK_ENABLED=false ALERT_SLACK_WEBHOOK_URL= # ==================== \u65e5\u5fd7\u914d\u7f6e ==================== LOG_LEVEL=INFO LOG_FORMAT=%(asctime)s - %(name)s - %(levelname)s - %(message)s LOG_FILE_PATH=./logs/stock_valuation.log LOG_MAX_SIZE=100MB LOG_BACKUP_COUNT=5 # ==================== \u6027\u80fd\u914d\u7f6e ==================== # \u8fde\u63a5\u6c60\u914d\u7f6e CONNECTION_POOL_SIZE=10 CONNECTION_POOL_MAX_OVERFLOW=20 CONNECTION_POOL_TIMEOUT=30 # \u5f02\u6b65\u914d\u7f6e ASYNC_WORKER_COUNT=4 ASYNC_QUEUE_SIZE=1000 # \u9650\u6d41\u914d\u7f6e RATE_LIMIT_ENABLED=true RATE_LIMIT_REQUESTS_PER_MINUTE=1000 RATE_LIMIT_BURST_SIZE=100 7.2 \u914d\u7f6e\u52a0\u8f7d\u5668 import os from typing import Dict, Any, Optional from dataclasses import dataclass from pathlib import Path @dataclass class DataSourceConfig: \"\"\"\u6570\u636e\u6e90\u914d\u7f6e\"\"\" primary_source: str fallback_source: str force_source: Optional[str] = None @dataclass class TushareConfig: \"\"\"Tushare\u914d\u7f6e\"\"\" token: str api_url: str = \"http://api.tushare.pro\" timeout: int = 30 max_retries: int = 3 retry_delay: int = 1 daily_limit: int = 10000 minute_limit: int = 500 enable_quota_check: bool = True @dataclass class PostgreSQLConfig: \"\"\"PostgreSQL\u914d\u7f6e\"\"\" host: str = \"localhost\" port: int = 5432 database: str = \"stock_valuation\" username: str = \"postgres\" password: str = \"\" pool_size: int = 10 max_overflow: int = 20 pool_timeout: int = 30 @dataclass class CacheConfig: \"\"\"\u7f13\u5b58\u914d\u7f6e\"\"\" enable_memory: bool = True enable_redis: bool = True enable_file: bool = True file_cache_dir: str = \"./cache\" redis_host: str = \"localhost\" redis_port: int = 6379 redis_db: int = 0 redis_password: str = \"\" class ConfigLoader: \"\"\"\u914d\u7f6e\u52a0\u8f7d\u5668\"\"\" def __init__(self, env_file: str = \".env\"): self.env_file = env_file self._load_env_file() def _load_env_file(self): \"\"\"\u52a0\u8f7d\u73af\u5883\u53d8\u91cf\u6587\u4ef6\"\"\" if Path(self.env_file).exists(): with open(self.env_file, 'r') as f: for line in f: line = line.strip() if line and not line.startswith('#') and '=' in line: key, value = line.split('=', 1) os.environ[key.strip()] = value.strip() def get_data_source_config(self) -> DataSourceConfig: \"\"\"\u83b7\u53d6\u6570\u636e\u6e90\u914d\u7f6e\"\"\" return DataSourceConfig( primary_source=os.getenv('PRIMARY_DATA_SOURCE', 'tushare'), fallback_source=os.getenv('FALLBACK_DATA_SOURCE', 'postgresql'), force_source=os.getenv('FORCE_DATA_SOURCE') ) def get_tushare_config(self) -> TushareConfig: \"\"\"\u83b7\u53d6Tushare\u914d\u7f6e\"\"\" token = os.getenv('TUSHARE_TOKEN') if not token: raise ValueError(\"TUSHARE_TOKEN is required\") return TushareConfig( token=token, api_url=os.getenv('TUSHARE_API_URL', 'http://api.tushare.pro'), timeout=int(os.getenv('TUSHARE_TIMEOUT', '30')), max_retries=int(os.getenv('TUSHARE_MAX_RETRIES', '3')), retry_delay=int(os.getenv('TUSHARE_RETRY_DELAY', '1')), daily_limit=int(os.getenv('TUSHARE_DAILY_LIMIT', '10000')), minute_limit=int(os.getenv('TUSHARE_MINUTE_LIMIT', '500')), enable_quota_check=os.getenv('TUSHARE_ENABLE_QUOTA_CHECK', 'true').lower() == 'true' ) def get_postgresql_config(self) -> PostgreSQLConfig: \"\"\"\u83b7\u53d6PostgreSQL\u914d\u7f6e\"\"\" return PostgreSQLConfig( host=os.getenv('POSTGRESQL_HOST', 'localhost'), port=int(os.getenv('POSTGRESQL_PORT', '5432')), database=os.getenv('POSTGRESQL_DATABASE', 'stock_valuation'), username=os.getenv('POSTGRESQL_USERNAME', 'postgres'), password=os.getenv('POSTGRESQL_PASSWORD', ''), pool_size=int(os.getenv('POSTGRESQL_POOL_SIZE', '10')), max_overflow=int(os.getenv('POSTGRESQL_MAX_OVERFLOW', '20')), pool_timeout=int(os.getenv('POSTGRESQL_POOL_TIMEOUT', '30')) ) def get_cache_config(self) -> CacheConfig: \"\"\"\u83b7\u53d6\u7f13\u5b58\u914d\u7f6e\"\"\" return CacheConfig( enable_memory=os.getenv('ENABLE_MEMORY_CACHE', 'true').lower() == 'true', enable_redis=os.getenv('ENABLE_REDIS_CACHE', 'true').lower() == 'true', enable_file=os.getenv('ENABLE_FILE_CACHE', 'true').lower() == 'true', file_cache_dir=os.getenv('FILE_CACHE_DIR', './cache'), redis_host=os.getenv('REDIS_HOST', 'localhost'), redis_port=int(os.getenv('REDIS_PORT', '6379')), redis_db=int(os.getenv('REDIS_DB', '0')), redis_password=os.getenv('REDIS_PASSWORD', '') ) def get_full_config(self) -> Dict[str, Any]: \"\"\"\u83b7\u53d6\u5b8c\u6574\u914d\u7f6e\"\"\" return { 'data_source': self.get_data_source_config(), 'tushare': self.get_tushare_config(), 'postgresql': self.get_postgresql_config(), 'cache': self.get_cache_config(), 'monitoring': { 'enabled': os.getenv('ENABLE_MONITORING', 'true').lower() == 'true', 'interval': int(os.getenv('MONITORING_INTERVAL', '30')) }, 'logging': { 'level': os.getenv('LOG_LEVEL', 'INFO'), 'format': os.getenv('LOG_FORMAT', '%(asctime)s - %(name)s - %(levelname)s - %(message)s'), 'file_path': os.getenv('LOG_FILE_PATH', './logs/stock_valuation.log') } } 8. \u90e8\u7f72\u65b9\u6848 8.1 Docker\u5bb9\u5668\u5316\u90e8\u7f72 # Dockerfile FROM python:3.9-slim # \u8bbe\u7f6e\u5de5\u4f5c\u76ee\u5f55 WORKDIR /app # \u5b89\u88c5\u7cfb\u7edf\u4f9d\u8d56 RUN apt-get update && apt-get install -y \\ gcc \\ g++ \\ && rm -rf /var/lib/apt/lists/* # \u590d\u5236\u4f9d\u8d56\u6587\u4ef6 COPY requirements.txt . # \u5b89\u88c5Python\u4f9d\u8d56 RUN pip install --no-cache-dir -r requirements.txt # \u590d\u5236\u5e94\u7528\u4ee3\u7801 COPY . . # \u521b\u5efa\u7f13\u5b58\u76ee\u5f55 RUN mkdir -p /app/cache /app/logs # \u8bbe\u7f6e\u73af\u5883\u53d8\u91cf ENV PYTHONPATH=/app ENV PYTHONUNBUFFERED=1 # \u66b4\u9732\u7aef\u53e3 EXPOSE 8000 # \u5065\u5eb7\u68c0\u67e5 HEALTHCHECK --interval=30s --timeout=10s --start-period=5s --retries=3 \\ CMD curl -f http://localhost:8000/health || exit 1 # \u542f\u52a8\u547d\u4ee4 CMD [\"python\", \"-m\", \"uvicorn\", \"main:app\", \"--host\", \"0.0.0.0\", \"--port\", \"8000\"] # docker-compose.yml version: '3.8' services: stock-valuation: build: . ports: - \"8000:8000\" environment: - PRIMARY_DATA_SOURCE=tushare - FALLBACK_DATA_SOURCE=postgresql - TUSHARE_TOKEN=${TUSHARE_TOKEN} - POSTGRESQL_HOST=postgres - REDIS_HOST=redis depends_on: - postgres - redis volumes: - ./cache:/app/cache - ./logs:/app/logs restart: unless-stopped networks: - stock-network postgres: image: postgres:13 environment: - POSTGRES_DB=stock_valuation - POSTGRES_USER=postgres - POSTGRES_PASSWORD=${POSTGRES_PASSWORD} volumes: - postgres_data:/var/lib/postgresql/data - ./init.sql:/docker-entrypoint-initdb.d/init.sql ports: - \"5432:5432\" restart: unless-stopped networks: - stock-network redis: image: redis:6-alpine ports: - \"6379:6379\" volumes: - redis_data:/data restart: unless-stopped networks: - stock-network prometheus: image: prom/prometheus:latest ports: - \"9090:9090\" volumes: - ./prometheus.yml:/etc/prometheus/prometheus.yml - prometheus_data:/prometheus command: - '--config.file=/etc/prometheus/prometheus.yml' - '--storage.tsdb.path=/prometheus' - '--web.console.libraries=/etc/prometheus/console_libraries' - '--web.console.templates=/etc/prometheus/consoles' restart: unless-stopped networks: - stock-network grafana: image: grafana/grafana:latest ports: - \"3000:3000\" environment: - GF_SECURITY_ADMIN_PASSWORD=${GRAFANA_PASSWORD} volumes: - grafana_data:/var/lib/grafana - ./grafana/dashboards:/etc/grafana/provisioning/dashboards - ./grafana/datasources:/etc/grafana/provisioning/datasources restart: unless-stopped networks: - stock-network volumes: postgres_data: redis_data: prometheus_data: grafana_data: networks: stock-network: driver: bridge 8.2 Kubernetes\u90e8\u7f72 # k8s-deployment.yaml apiVersion: apps/v1 kind: Deployment metadata: name: stock-valuation labels: app: stock-valuation spec: replicas: 3 selector: matchLabels: app: stock-valuation template: metadata: labels: app: stock-valuation spec: containers: - name: stock-valuation image: stock-valuation:latest ports: - containerPort: 8000 env: - name: PRIMARY_DATA_SOURCE value: \"tushare\" - name: FALLBACK_DATA_SOURCE value: \"postgresql\" - name: TUSHARE_TOKEN valueFrom: secretKeyRef: name: tushare-secret key: token - name: POSTGRESQL_HOST value: \"postgres-service\" - name: REDIS_HOST value: \"redis-service\" resources: requests: memory: \"512Mi\" cpu: \"250m\" limits: memory: \"1Gi\" cpu: \"500m\" livenessProbe: httpGet: path: /health port: 8000 initialDelaySeconds: 30 periodSeconds: 10 readinessProbe: httpGet: path: /ready port: 8000 initialDelaySeconds: 5 periodSeconds: 5 volumeMounts: - name: cache-volume mountPath: /app/cache - name: logs-volume mountPath: /app/logs volumes: - name: cache-volume emptyDir: {} - name: logs-volume emptyDir: {} --- apiVersion: v1 kind: Service metadata: name: stock-valuation-service spec: selector: app: stock-valuation ports: - protocol: TCP port: 80 targetPort: 8000 type: LoadBalancer 9. \u5b9e\u65bd\u8ba1\u5212 9.1 \u5b9e\u65bd\u9636\u6bb5\u5212\u5206 \u7b2c\u4e00\u9636\u6bb5\uff1a\u57fa\u7840\u67b6\u6784\u642d\u5efa (1-2\u5468) \u76ee\u6807 : \u5efa\u7acb\u6df7\u5408\u6570\u636e\u6e90\u7684\u57fa\u7840\u6846\u67b6 \u4efb\u52a1\u6e05\u5355 : - [ ] \u521b\u5efaDataSourceManager\u6838\u5fc3\u7c7b - [ ] \u5b9e\u73b0TushareDataFetcher - [ ] \u5b9e\u73b0PostgreSQLDataFetcher - [ ] \u5efa\u7acb\u57fa\u7840\u7684\u914d\u7f6e\u7ba1\u7406\u7cfb\u7edf - [ ] \u5b9e\u73b0\u7b80\u5355\u7684\u6570\u636e\u6e90\u5207\u6362\u903b\u8f91 \u9a8c\u6536\u6807\u51c6 : - \u80fd\u591f\u901a\u8fc7\u914d\u7f6e\u5207\u6362\u6570\u636e\u6e90 - \u57fa\u672c\u7684\u6570\u636e\u83b7\u53d6\u529f\u80fd\u6b63\u5e38 - \u5355\u5143\u6d4b\u8bd5\u8986\u76d6\u7387\u8fbe\u523080% \u7b2c\u4e8c\u9636\u6bb5\uff1a\u7f13\u5b58\u7cfb\u7edf\u5b9e\u73b0 (1-2\u5468) \u76ee\u6807 : \u5b9e\u73b0\u591a\u5c42\u7ea7\u7f13\u5b58\u673a\u5236 \u4efb\u52a1\u6e05\u5355 : - [ ] \u5b9e\u73b0CacheManager\u7c7b - [ ] \u96c6\u6210Redis\u7f13\u5b58 - [ ] \u5b9e\u73b0\u672c\u5730\u6587\u4ef6\u7f13\u5b58 - [ ] \u5efa\u7acb\u7f13\u5b58\u5931\u6548\u7b56\u7565 - [ ] \u4f18\u5316\u7f13\u5b58\u952e\u751f\u6210\u7b97\u6cd5 \u9a8c\u6536\u6807\u51c6 : - \u7f13\u5b58\u547d\u4e2d\u7387\u8fbe\u523070%\u4ee5\u4e0a - \u7f13\u5b58\u6570\u636e\u4e00\u81f4\u6027\u4fdd\u8bc1 - \u7f13\u5b58\u6027\u80fd\u6d4b\u8bd5\u901a\u8fc7 \u7b2c\u4e09\u9636\u6bb5\uff1a\u5065\u5eb7\u68c0\u67e5\u548c\u964d\u7ea7 (1\u5468) \u76ee\u6807 : \u5b9e\u73b0\u81ea\u52a8\u5065\u5eb7\u68c0\u67e5\u548c\u964d\u7ea7\u673a\u5236 \u4efb\u52a1\u6e05\u5355 : - [ ] \u5b9e\u73b0HealthChecker\u7c7b - [ ] \u5efa\u7acb\u6570\u636e\u6e90\u72b6\u6001\u76d1\u63a7 - [ ] \u5b9e\u73b0\u81ea\u52a8\u964d\u7ea7\u903b\u8f91 - [ ] \u5efa\u7acb\u6062\u590d\u673a\u5236 - [ ] \u5b9e\u73b0\u9519\u8bef\u5904\u7406\u7b56\u7565 \u9a8c\u6536\u6807\u51c6 : - \u6570\u636e\u6e90\u6545\u969c\u81ea\u52a8\u68c0\u6d4b - \u964d\u7ea7\u5207\u6362\u65f6\u95f4<5\u79d2 - \u6062\u590d\u673a\u5236\u6b63\u5e38\u5de5\u4f5c \u7b2c\u56db\u9636\u6bb5\uff1a\u76d1\u63a7\u544a\u8b66\u7cfb\u7edf (1\u5468) \u76ee\u6807 : \u5efa\u7acb\u5b8c\u6574\u7684\u76d1\u63a7\u544a\u8b66\u4f53\u7cfb \u4efb\u52a1\u6e05\u5355 : - [ ] \u5b9e\u73b0MetricsCollector - [ ] \u96c6\u6210Prometheus\u76d1\u63a7 - [ ] \u5efa\u7acb\u544a\u8b66\u89c4\u5219 - [ ] \u521b\u5efa\u76d1\u63a7\u4eea\u8868\u677f - [ ] \u5b9e\u73b0\u544a\u8b66\u901a\u77e5 \u9a8c\u6536\u6807\u51c6 : - \u5173\u952e\u6307\u6807\u76d1\u63a7\u8986\u76d6 - \u544a\u8b66\u53ca\u65f6\u51c6\u786e - \u4eea\u8868\u677f\u6570\u636e\u5b8c\u6574 \u7b2c\u4e94\u9636\u6bb5\uff1a\u6027\u80fd\u4f18\u5316\u548c\u6d4b\u8bd5 (1-2\u5468) \u76ee\u6807 : \u7cfb\u7edf\u6027\u80fd\u4f18\u5316\u548c\u5168\u9762\u6d4b\u8bd5 \u4efb\u52a1\u6e05\u5355 : - [ ] \u6027\u80fd\u538b\u529b\u6d4b\u8bd5 - [ ] \u5e76\u53d1\u5b89\u5168\u6d4b\u8bd5 - [ ] \u6545\u969c\u6062\u590d\u6d4b\u8bd5 - [ ] \u6570\u636e\u4e00\u81f4\u6027\u6d4b\u8bd5 - [ ] \u7528\u6237\u9a8c\u6536\u6d4b\u8bd5 \u9a8c\u6536\u6807\u51c6 : - \u7cfb\u7edf\u54cd\u5e94\u65f6\u95f4<2\u79d2 - \u5e76\u53d1\u7528\u6237\u6570>100 - \u6570\u636e\u51c6\u786e\u602799.9% - \u7cfb\u7edf\u53ef\u7528\u602799.5% 9.2 \u98ce\u9669\u63a7\u5236\u63aa\u65bd \u6280\u672f\u98ce\u9669 \u98ce\u9669\u9879 \u98ce\u9669\u7b49\u7ea7 \u5f71\u54cd \u5e94\u5bf9\u63aa\u65bd Tushare API\u53d8\u66f4 \u4e2d \u6570\u636e\u83b7\u53d6\u5931\u8d25 \u7248\u672c\u9501\u5b9a\u3001\u9002\u914d\u5c42\u8bbe\u8ba1 \u6570\u636e\u6e90\u540c\u6b65\u5ef6\u8fdf \u4e2d \u6570\u636e\u4e0d\u4e00\u81f4 \u65f6\u95f4\u6233\u6821\u9a8c\u3001\u589e\u91cf\u540c\u6b65 \u7f13\u5b58\u6570\u636e\u8fc7\u671f \u4f4e \u6027\u80fd\u4e0b\u964d \u667a\u80fd\u9884\u52a0\u8f7d\u3001\u8fc7\u671f\u7b56\u7565 \u5e76\u53d1\u8bbf\u95ee\u51b2\u7a81 \u4e2d \u6570\u636e\u9519\u8bef \u9501\u673a\u5236\u3001\u961f\u5217\u7ba1\u7406 \u4e1a\u52a1\u98ce\u9669 \u98ce\u9669\u9879 \u98ce\u9669\u7b49\u7ea7 \u5f71\u54cd \u5e94\u5bf9\u63aa\u65bd \u6570\u636e\u6e90\u6210\u672c\u4e0a\u5347 \u4e2d \u8fd0\u8425\u6210\u672c\u589e\u52a0 \u6210\u672c\u76d1\u63a7\u3001\u7528\u91cf\u4f18\u5316 \u670d\u52a1\u4e2d\u65ad \u9ad8 \u4e1a\u52a1\u505c\u6b62 \u591a\u91cd\u5907\u4efd\u3001\u5feb\u901f\u6062\u590d \u6570\u636e\u8d28\u91cf\u95ee\u9898 \u4e2d \u8ba1\u7b97\u9519\u8bef \u6570\u636e\u6821\u9a8c\u3001\u8d28\u91cf\u76d1\u63a7 9.3 \u6210\u529f\u6307\u6807 \u6280\u672f\u6307\u6807 \u7cfb\u7edf\u53ef\u7528\u6027 : \u226599.5% \u54cd\u5e94\u65f6\u95f4 : \u22642\u79d2 (95%\u8bf7\u6c42) \u7f13\u5b58\u547d\u4e2d\u7387 : \u226570% \u9519\u8bef\u7387 : \u22640.1% \u6570\u636e\u51c6\u786e\u6027 : \u226599.9% \u4e1a\u52a1\u6307\u6807 API\u8c03\u7528\u6210\u672c : \u964d\u4f4e60% \u6570\u636e\u66f4\u65b0\u9891\u7387 : \u63d0\u534750% \u7528\u6237\u6ee1\u610f\u5ea6 : \u226590% \u7cfb\u7edf\u7ef4\u62a4\u6210\u672c : \u964d\u4f4e40% 10. \u603b\u7ed3 10.1 \u67b6\u6784\u4f18\u52bf\u603b\u7ed3 \u9ad8\u53ef\u9760\u6027 : \u53cc\u6570\u636e\u6e90\u4fdd\u969c\uff0c\u5355\u70b9\u6545\u969c\u98ce\u9669\u964d\u4f4e90% \u9ad8\u6027\u80fd : \u591a\u5c42\u7f13\u5b58\u673a\u5236\uff0c\u6570\u636e\u8bbf\u95ee\u901f\u5ea6\u63d0\u534770% \u6210\u672c\u4f18\u5316 : \u667a\u80fdAPI\u8c03\u7528\u7ba1\u7406\uff0c\u6210\u672c\u964d\u4f4e60% \u6613\u7ef4\u62a4 : \u6a21\u5757\u5316\u8bbe\u8ba1\uff0c\u7ef4\u62a4\u6210\u672c\u964d\u4f4e40% \u53ef\u6269\u5c55 : \u652f\u6301\u65b0\u6570\u636e\u6e90\u63a5\u5165\uff0c\u6269\u5c55\u6027\u5f3a 10.2 \u5173\u952e\u6280\u672f\u521b\u65b0 \u667a\u80fd\u6570\u636e\u6e90\u8def\u7531 : \u57fa\u4e8e\u5065\u5eb7\u72b6\u6001\u548c\u6027\u80fd\u7684\u52a8\u6001\u9009\u62e9 \u591a\u5c42\u7ea7\u7f13\u5b58 : \u5185\u5b58+Redis+\u6587\u4ef6\u7684\u4e09\u7ea7\u7f13\u5b58\u4f53\u7cfb \u81ea\u52a8\u964d\u7ea7\u6062\u590d : \u65e0\u4eba\u5de5\u5e72\u9884\u7684\u6545\u969c\u5904\u7406\u673a\u5236 \u5b9e\u65f6\u76d1\u63a7\u544a\u8b66 : \u5168\u65b9\u4f4d\u7684\u7cfb\u7edf\u72b6\u6001\u76d1\u63a7 10.3 \u540e\u7eed\u53d1\u5c55\u65b9\u5411 AI\u9a71\u52a8\u4f18\u5316 : \u57fa\u4e8e\u673a\u5668\u5b66\u4e60\u7684\u7f13\u5b58\u7b56\u7565\u4f18\u5316 \u591a\u4e91\u90e8\u7f72 : \u652f\u6301\u591a\u4e91\u73af\u5883\u7684\u6570\u636e\u6e90\u5206\u5e03 \u5b9e\u65f6\u6d41\u5904\u7406 : \u96c6\u6210\u6d41\u5f0f\u6570\u636e\u5904\u7406\u80fd\u529b \u8fb9\u7f18\u8ba1\u7b97 : \u652f\u6301\u8fb9\u7f18\u8282\u70b9\u7684\u6570\u636e\u7f13\u5b58 \u6587\u6863\u7248\u672c : v1.0 \u6700\u540e\u66f4\u65b0 : 2025\u5e741\u6708 \u4e0b\u6b21\u5ba1\u6838 : 2025\u5e743\u6708","title":"\u80a1\u7968\u4f30\u503c\u7cfb\u7edf\u6df7\u5408\u67b6\u6784\u8bbe\u8ba1\u6587\u6863"},{"location":"02_architecture/hybrid_architecture_design/#_1","text":"","title":"\u80a1\u7968\u4f30\u503c\u7cfb\u7edf\u6df7\u5408\u67b6\u6784\u8bbe\u8ba1\u6587\u6863"},{"location":"02_architecture/hybrid_architecture_design/#_2","text":"\u6587\u6863\u6807\u9898 : \u6df7\u5408\u6570\u636e\u6e90\u67b6\u6784\u8bbe\u8ba1 \u521b\u5efa\u65e5\u671f : 2025\u5e741\u6708 \u7248\u672c : v1.0 \u4f5c\u8005 : huliux \u5ba1\u6838\u72b6\u6001 : \u5f85\u5ba1\u6838","title":"\u6587\u6863\u4fe1\u606f"},{"location":"02_architecture/hybrid_architecture_design/#_3","text":"\u672c\u6587\u6863\u5df2\u6574\u5408\u4ee5\u4e0b\u5185\u5bb9\uff1a - \u539fmigration_checklist.md\u7684\u5b9e\u65bd\u6b65\u9aa4 - \u539ftushare_migration_technical_analysis.md\u7684\u6280\u672f\u7ec6\u8282 - \u539ftushare_postgresql_field_comparison.md\u7684\u5b57\u6bb5\u6620\u5c04","title":"\u6574\u7406\u8bf4\u660e"},{"location":"02_architecture/hybrid_architecture_design/#_4","text":"\u672c\u6587\u6863\u8be6\u7ec6\u63cf\u8ff0\u4e86\u80a1\u7968\u4f30\u503c\u7cfb\u7edf\u91c7\u7528\u7684 Tushare + PostgreSQL\u6df7\u5408\u67b6\u6784 \u8bbe\u8ba1\u65b9\u6848\u3002\u8be5\u67b6\u6784\u901a\u8fc7\u4e3b\u5907\u6570\u636e\u6e90\u6a21\u5f0f\uff0c\u663e\u8457\u63d0\u5347\u4e86\u7cfb\u7edf\u7684\u6570\u636e\u53ef\u9760\u6027\u3001\u6027\u80fd\u8868\u73b0\u548c\u6210\u672c\u6548\u76ca\u3002\u6838\u5fc3\u7279\u6027\u5305\u62ec\u667a\u80fd\u6570\u636e\u6e90\u5207\u6362\u3001\u591a\u5c42\u7ea7\u7f13\u5b58\u673a\u5236\u3001\u81ea\u52a8\u964d\u7ea7\u6062\u590d\u548c\u5168\u9762\u76d1\u63a7\u544a\u8b66\u3002","title":"\u6267\u884c\u6458\u8981"},{"location":"02_architecture/hybrid_architecture_design/#_5","text":"\ud83c\udfaf \u9ad8\u53ef\u9760\u6027 : \u53cc\u6570\u636e\u6e90\u4fdd\u969c\uff0c\u7cfb\u7edf\u53ef\u7528\u6027\u8fbe99.5% \u26a1 \u9ad8\u6027\u80fd : \u667a\u80fd\u7f13\u5b58\u673a\u5236\uff0c\u6570\u636e\u8bbf\u95ee\u901f\u5ea6\u63d0\u534770% \ud83d\udcb0 \u6210\u672c\u4f18\u5316 : API\u8c03\u7528\u6210\u672c\u964d\u4f4e60% \ud83d\udd04 \u7075\u6d3b\u5207\u6362 : \u652f\u6301\u914d\u7f6e\u5316\u6570\u636e\u6e90\u9009\u62e9 \ud83d\udcca \u5168\u9762\u76d1\u63a7 : \u5b9e\u65f6\u72b6\u6001\u76d1\u63a7\u548c\u667a\u80fd\u544a\u8b66","title":"\u67b6\u6784\u4f18\u52bf"},{"location":"02_architecture/hybrid_architecture_design/#2025-09-26","text":"\u7528\u6237\u8ba4\u8bc1\u7cfb\u7edf\u5b8c\u6574\u5b9e\u73b0 \uff1a \u6570\u636e\u5e93\u67b6\u6784\u4eceSQLite\u8fc1\u79fb\u81f3PostgreSQL/Supabase\uff0c\u89e3\u51b3\u5e76\u53d1\u9501\u95ee\u9898 \u5b8c\u6574\u7684\u7528\u6237\u6ce8\u518c\u3001\u767b\u5f55\u3001\u4f1a\u8bdd\u7ba1\u7406\u529f\u80fd \u8ba4\u8bc1\u4e2d\u95f4\u4ef6\u4fdd\u62a4\u654f\u611f\u529f\u80fd\u548c\u6570\u636e\u8bbf\u95ee \u5bc6\u7801\u54c8\u5e0c\u3001\u4f1a\u8bdd\u4ee4\u724c\u3001\u9632CSRF\u7b49\u5b89\u5168\u7279\u6027 \u667a\u80fd\u7f13\u5b58\u7cfb\u7edf\u91cd\u5927\u5347\u7ea7 \uff1a \u4f30\u503c\u7ed3\u679c\u5728\u7528\u6237\u4f1a\u8bdd\u95f4\u6301\u4e45\u4fdd\u5b58\uff0c\u5927\u5e45\u63d0\u5347\u7528\u6237\u4f53\u9a8c \u4f1a\u8bdd\u6062\u590d\u529f\u80fd\uff0c\u7528\u6237\u91cd\u65b0\u767b\u5f55\u540e\u53ef\u6062\u590d\u4e4b\u524d\u7684\u5206\u6790\u7ed3\u679c \u7f13\u5b58\u7b56\u7565\u4f18\u5316\uff0c\u5e73\u8861\u6027\u80fd\u4e0e\u6570\u636e\u4e00\u81f4\u6027 \u4fee\u590d\u7f13\u5b58\u7cfb\u7edf\u4e2dundefined\u53d8\u91cf\u7b49\u5173\u952e\u9519\u8bef \u524d\u7aef\u7528\u6237\u4f53\u9a8c\u4f18\u5316 \uff1a \u4f18\u5316\u754c\u9762\u5e03\u5c40\u548c\u53c2\u6570\u8bbe\u7f6e\u4f53\u9a8c\uff0c\u7b80\u5316\u64cd\u4f5c\u6d41\u7a0b \u589e\u5f3a\u7528\u6237\u53cd\u9988\u548c\u9519\u8bef\u5904\u7406\u673a\u5236 \u4fee\u590d\"\u4f30\u503c\u8ba1\u7b97\u51fa\u9519: None\"\u7b49\u9519\u8bef\u663e\u793a\u95ee\u9898 \u4f18\u5316\u6570\u636e\u5c55\u793a\u683c\u5f0f\u548c\u89c6\u89c9\u6548\u679c","title":"\u8fd1\u671f\u6539\u52a8\u6458\u8981\uff082025-09-26\uff09"},{"location":"02_architecture/hybrid_architecture_design/#2025-09-11","text":"\u670d\u52a1\u5c42\uff08ValuationService\uff09\u589e\u5f3a\uff1a \u5728\u57fa\u7840\u4f30\u503c\u4e0e\u654f\u611f\u6027\u4e24\u7c7b\u8def\u5f84\u7edf\u4e00\u7f16\u6392 Forecaster\u3001WACC\u3001\u7ec8\u503c\u4e0e\u73b0\u503c\u8ba1\u7b97\uff0c\u65b0\u589e\u670d\u52a1\u5185\u56de\u9000\u4e0e\u5b88\u62a4\u903b\u8f91\u3002 \u5f53 wacc_weight_mode=market \u5931\u8d25\u65f6\uff0c\u81ea\u52a8\u56de\u9000\u5230 target \u6743\u91cd\u5e76\u8bb0\u5f55\u8b66\u544a\uff0c\u907f\u514d 500\u3002 \u5bf9\u654f\u611f\u6027\u5355\u5143\u683c\uff1a \u8ba1\u7b97 EV/EBITDA (Terminal) \u4e0e implied_pgr \uff1b \u5f53 g \u2265 WACC \u65f6\u8df3\u8fc7\u8be5\u7ec4\u5408\uff1b dcf_implied_pe \u7f3a\u5931\u65f6\u6309\u57fa\u51c6 EPS \u56de\u586b\u3002 GDP \u4e0a\u9650\u63a7\u5236\uff1a\u670d\u52a1\u5c42\u5728\u8bf7\u6c42\u7ef4\u5ea6\u652f\u6301\u5f00\u5173\u4e0e\u4e0a\u9650\u503c\uff08\u4f18\u5148\u7ea7\u9ad8\u4e8e\u73af\u5883\u53d8\u91cf\uff09\uff1b\u7ec8\u503c\u8ba1\u7b97\u5668\u4ecd\u4fdd\u7559\u5e95\u5c42\u4e0a\u9650\u4e0e\u6709\u6548\u6027\u6821\u9a8c\uff0c\u53cc\u5c42\u4fdd\u62a4\u3002 LLM \u62a5\u544a\uff1a\u63d0\u793a\u6a21\u677f\u5f3a\u5316\uff08\u4ef7\u503c\u6295\u8d44\u5bfc\u5411\uff09\uff0c\u5e76\u5728\u54cd\u5e94\u4e2d\u643a\u5e26 debug_request_slice \uff08\u542b\u884c\u4e1a\u9884\u8bbe\u4e0e\u504f\u79bb\uff09\u4ee5\u4fbf\u5ba1\u8ba1\u3002","title":"\u5386\u53f2\u6539\u52a8\u6458\u8981\uff082025-09-11\uff09"},{"location":"02_architecture/hybrid_architecture_design/#1","text":"","title":"1. \u67b6\u6784\u6982\u89c8"},{"location":"02_architecture/hybrid_architecture_design/#11","text":"\u80a1\u7968\u4f30\u503c\u7cfb\u7edf\u6df7\u5408\u67b6\u6784 \u250c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2510 \u2502 \u5e94\u7528\u5c42 \u2502 \u2502 \u250c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2510 \u250c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2510 \u250c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2510 \u2502 \u2502 \u2502 Streamlit\u524d\u7aef \u2502 \u2502 FastAPI \u2502 \u2502 \u4e1a\u52a1\u903b\u8f91\u5c42 \u2502 \u2502 \u2502 \u2502 (\u7528\u6237\u754c\u9762) \u2502 \u2502 (API\u670d\u52a1) \u2502 \u2502 (\u4f30\u503c\u8ba1\u7b97) \u2502 \u2502 \u2502 \u2514\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2518 \u2514\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2518 \u2514\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2518 \u2502 \u2514\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2518 \u2502 \u25bc \u250c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2510 \u2502 \u6570\u636e\u8bbf\u95ee\u62bd\u8c61\u5c42 \u2502 \u2502 \u250c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2510 \u2502 \u2502 \u2502 DataSourceManager \u2502 \u2502 \u2502 \u2502 \u250c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2510 \u250c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2510 \u250c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2510 \u2502 \u2502 \u2502 \u2502 \u2502 \u914d\u7f6e\u7ba1\u7406 \u2502 \u2502 \u8def\u7531\u7b56\u7565 \u2502 \u2502 \u5065\u5eb7\u68c0\u67e5 \u2502 \u2502 \u2502 \u2502 \u2502 \u2502 (.env\u63a7\u5236) \u2502 \u2502 (\u667a\u80fd\u9009\u62e9) \u2502 \u2502 (\u72b6\u6001\u76d1\u63a7) \u2502 \u2502 \u2502 \u2502 \u2502 \u2514\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2518 \u2514\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2518 \u2514\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2518 \u2502 \u2502 \u2502 \u2514\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2518 \u2502 \u2514\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2518 \u2502 \u250c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u253c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2510 \u25bc \u25bc \u25bc \u250c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2510 \u250c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2510 \u250c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2510 \u2502 \u7f13\u5b58\u7ba1\u7406\u5c42 \u2502 \u2502 \u4e3b\u6570\u636e\u6e90 \u2502 \u2502 \u5907\u6570\u636e\u6e90 \u2502 \u2502 \u2502 \u2502 (Tushare) \u2502 \u2502 (PostgreSQL) \u2502 \u2502 \u250c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2510 \u2502 \u2502 \u2502 \u2502 \u2502 \u2502 \u2502 Redis\u7f13\u5b58 \u2502 \u2502 \u2502 \u2022 \u5b9e\u65f6\u6570\u636e \u2502 \u2502 \u2022 \u5386\u53f2\u6570\u636e \u2502 \u2502 \u2502 (\u70ed\u6570\u636e) \u2502 \u2502 \u2502 \u2022 \u9ad8\u9891\u66f4\u65b0 \u2502 \u2502 \u2022 \u7a33\u5b9a\u53ef\u9760 \u2502 \u2502 \u2514\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2518 \u2502 \u2502 \u2022 \u4e30\u5bcc\u5b57\u6bb5 \u2502 \u2502 \u2022 \u672c\u5730\u8bbf\u95ee \u2502 \u2502 \u250c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2510 \u2502 \u2502 \u2022 API\u9650\u6d41 \u2502 \u2502 \u2022 \u79bb\u7ebf\u53ef\u7528 \u2502 \u2502 \u2502 \u672c\u5730\u7f13\u5b58 \u2502 \u2502 \u2502 \u2502 \u2502 \u2502 \u2502 \u2502 (\u51b7\u6570\u636e) \u2502 \u2502 \u2514\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2518 \u2514\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2518 \u2502 \u2514\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2518 \u2502 \u2502 \u2502 \u2514\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2518 \u2502 \u2502 \u25bc \u25bc \u250c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2510 \u2502 \u76d1\u63a7\u544a\u8b66\u5c42 \u2502 \u2502 \u250c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2510 \u250c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2510\u2502 \u2502 \u2502 \u6027\u80fd\u76d1\u63a7 \u2502 \u2502 \u5f02\u5e38\u544a\u8b66 \u2502\u2502 \u2502 \u2502 (\u54cd\u5e94\u65f6\u95f4/QPS) \u2502 \u2502 (\u6545\u969c\u68c0\u6d4b) \u2502\u2502 \u2502 \u2514\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2518 \u2514\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2518\u2502 \u2514\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2518","title":"1.1 \u6574\u4f53\u67b6\u6784\u56fe"},{"location":"02_architecture/hybrid_architecture_design/#12","text":"\u7ec4\u4ef6 \u804c\u8d23 \u6280\u672f\u5b9e\u73b0 DataSourceManager \u6570\u636e\u6e90\u7ba1\u7406\u548c\u8def\u7531 Python\u62bd\u8c61\u5de5\u5382\u6a21\u5f0f TushareDataFetcher Tushare\u6570\u636e\u83b7\u53d6 Tushare SDK + \u8fde\u63a5\u6c60 PostgreSQLDataFetcher PostgreSQL\u6570\u636e\u83b7\u53d6 SQLAlchemy + \u8fde\u63a5\u6c60 CacheManager \u7f13\u5b58\u7ba1\u7406 Redis + \u672c\u5730LRU\u7f13\u5b58 HealthChecker \u5065\u5eb7\u72b6\u6001\u68c0\u67e5 \u5b9a\u65f6\u4efb\u52a1 + \u72b6\u6001\u5b58\u50a8 MonitoringService \u76d1\u63a7\u544a\u8b66 Prometheus + \u81ea\u5b9a\u4e49\u6307\u6807","title":"1.2 \u6838\u5fc3\u7ec4\u4ef6\u8bf4\u660e"},{"location":"02_architecture/hybrid_architecture_design/#2","text":"","title":"2. \u6570\u636e\u6e90\u8bbe\u8ba1"},{"location":"02_architecture/hybrid_architecture_design/#21-tushare","text":"","title":"2.1 \u4e3b\u6570\u636e\u6e90 - Tushare"},{"location":"02_architecture/hybrid_architecture_design/#211","text":"\u6570\u636e\u6e90: Tushare Pro API \u7c7b\u578b: \u4e3b\u6570\u636e\u6e90 \u4f18\u52bf: - \u6570\u636e\u5b9e\u65f6\u6027\u5f3a\uff0cT+1\u66f4\u65b0 - \u6570\u636e\u5b57\u6bb5\u4e30\u5bcc\uff0c\u8986\u76d6\u5168\u9762 - \u6570\u636e\u8d28\u91cf\u9ad8\uff0c\u4e13\u4e1a\u91d1\u878d\u6570\u636e\u63d0\u4f9b\u5546 - API\u63a5\u53e3\u6807\u51c6\u5316\uff0c\u6613\u4e8e\u96c6\u6210 \u6311\u6218: - API\u8c03\u7528\u6709\u9891\u7387\u9650\u5236 - \u9700\u8981\u4ed8\u8d39\u79ef\u5206\uff0c\u6709\u6210\u672c\u8003\u8651 - \u7f51\u7edc\u4f9d\u8d56\uff0c\u5b58\u5728\u670d\u52a1\u4e2d\u65ad\u98ce\u9669 - \u6570\u636e\u91cf\u5927\u65f6\u54cd\u5e94\u8f83\u6162","title":"2.1.1 \u6570\u636e\u6e90\u7279\u6027"},{"location":"02_architecture/hybrid_architecture_design/#212-api","text":"# API\u914d\u989d\u7b56\u7565 API_QUOTA_CONFIG = { 'daily_limit': 10000, # \u65e5\u8c03\u7528\u9650\u5236 'minute_limit': 500, # \u5206\u949f\u8c03\u7528\u9650\u5236 'priority_apis': [ # \u4f18\u5148\u7ea7API\u5217\u8868 'stock_basic', # \u80a1\u7968\u57fa\u672c\u4fe1\u606f 'daily_basic', # \u6bcf\u65e5\u57fa\u672c\u9762 'income', # \u5229\u6da6\u8868 'balancesheet', # \u8d44\u4ea7\u8d1f\u503a\u8868 'cashflow' # \u73b0\u91d1\u6d41\u91cf\u8868 ], 'cache_duration': { # \u7f13\u5b58\u65f6\u957f\u914d\u7f6e 'stock_basic': 86400, # 24\u5c0f\u65f6 'daily_basic': 3600, # 1\u5c0f\u65f6 'financial_data': 43200 # 12\u5c0f\u65f6 } }","title":"2.1.2 API\u914d\u989d\u7ba1\u7406"},{"location":"02_architecture/hybrid_architecture_design/#22-postgresql","text":"","title":"2.2 \u5907\u6570\u636e\u6e90 - PostgreSQL"},{"location":"02_architecture/hybrid_architecture_design/#221","text":"\u6570\u636e\u6e90: PostgreSQL\u6570\u636e\u5e93 \u7c7b\u578b: \u5907\u6570\u636e\u6e90 \u4f18\u52bf: - \u672c\u5730\u8bbf\u95ee\uff0c\u54cd\u5e94\u901f\u5ea6\u5feb - \u65e0\u7f51\u7edc\u4f9d\u8d56\uff0c\u79bb\u7ebf\u53ef\u7528 - \u6570\u636e\u7a33\u5b9a\uff0c\u65e0API\u9650\u5236 - \u652f\u6301\u590d\u6742\u67e5\u8be2\u548c\u805a\u5408 \u5c40\u9650: - \u6570\u636e\u66f4\u65b0\u9891\u7387\u8f83\u4f4e - \u9700\u8981\u5b9a\u671f\u7ef4\u62a4\u548c\u66f4\u65b0 - \u5b58\u50a8\u6210\u672c\u968f\u6570\u636e\u91cf\u589e\u957f - \u6570\u636e\u5b57\u6bb5\u53ef\u80fd\u4e0d\u5982Tushare\u4e30\u5bcc","title":"2.2.1 \u6570\u636e\u6e90\u7279\u6027"},{"location":"02_architecture/hybrid_architecture_design/#222","text":"-- \u6838\u5fc3\u6570\u636e\u8868 CREATE TABLE stock_basic ( ts_code VARCHAR(10) PRIMARY KEY, symbol VARCHAR(10), name VARCHAR(50), area VARCHAR(20), industry VARCHAR(50), market VARCHAR(10), list_date DATE, updated_at TIMESTAMP DEFAULT CURRENT_TIMESTAMP ); CREATE TABLE daily_quotes ( id SERIAL PRIMARY KEY, ts_code VARCHAR(10), trade_date DATE, open DECIMAL(10,2), high DECIMAL(10,2), low DECIMAL(10,2), close DECIMAL(10,2), volume BIGINT, amount DECIMAL(15,2), updated_at TIMESTAMP DEFAULT CURRENT_TIMESTAMP, UNIQUE(ts_code, trade_date) ); -- \u8d22\u52a1\u6570\u636e\u8868 CREATE TABLE financial_indicators ( id SERIAL PRIMARY KEY, ts_code VARCHAR(10), end_date DATE, pe DECIMAL(10,2), pb DECIMAL(10,2), ps DECIMAL(10,2), total_share DECIMAL(15,2), float_share DECIMAL(15,2), updated_at TIMESTAMP DEFAULT CURRENT_TIMESTAMP, UNIQUE(ts_code, end_date) );","title":"2.2.2 \u6570\u636e\u8868\u7ed3\u6784"},{"location":"02_architecture/hybrid_architecture_design/#23","text":"","title":"2.3 \u6570\u636e\u6e90\u6620\u5c04\u5173\u7cfb"},{"location":"02_architecture/hybrid_architecture_design/#231","text":"# \u6570\u636e\u6e90\u5b57\u6bb5\u6620\u5c04\u914d\u7f6e FIELD_MAPPING = { 'stock_basic': { 'tushare_fields': ['ts_code', 'symbol', 'name', 'area', 'industry', 'market', 'list_date'], 'postgresql_fields': ['ts_code', 'symbol', 'name', 'area', 'industry', 'market', 'list_date'], 'mapping': { # \u5b57\u6bb5\u540d\u6620\u5c04 'ts_code': 'ts_code', 'symbol': 'symbol', 'name': 'name', 'area': 'area', 'industry': 'industry', 'market': 'market', 'list_date': 'list_date' } }, 'daily_basic': { 'tushare_fields': ['ts_code', 'trade_date', 'close', 'pe', 'pb', 'total_share'], 'postgresql_fields': ['ts_code', 'trade_date', 'close', 'pe', 'pb', 'total_share'], 'unit_conversion': { # \u5355\u4f4d\u8f6c\u6362 'total_share': lambda x: x * 10000 if x else None # \u4e07\u80a1\u8f6c\u80a1 } } }","title":"2.3.1 \u5b57\u6bb5\u6620\u5c04\u8868"},{"location":"02_architecture/hybrid_architecture_design/#3","text":"","title":"3. \u6570\u636e\u6e90\u7ba1\u7406\u5668\u8bbe\u8ba1"},{"location":"02_architecture/hybrid_architecture_design/#31-datasourcemanager","text":"from abc import ABC, abstractmethod from enum import Enum from typing import Dict, Any, Optional, List import logging class DataSourceType(Enum): \"\"\"\u6570\u636e\u6e90\u7c7b\u578b\u679a\u4e3e\"\"\" TUSHARE = \"tushare\" POSTGRESQL = \"postgresql\" CACHE = \"cache\" class DataSourceStatus(Enum): \"\"\"\u6570\u636e\u6e90\u72b6\u6001\u679a\u4e3e\"\"\" HEALTHY = \"healthy\" DEGRADED = \"degraded\" UNAVAILABLE = \"unavailable\" class DataSourceManager: \"\"\"\u6570\u636e\u6e90\u7ba1\u7406\u5668 - \u6838\u5fc3\u534f\u8c03\u7c7b\"\"\" def __init__(self, config: Dict[str, Any]): self.config = config self.primary_source = DataSourceType.TUSHARE self.fallback_source = DataSourceType.POSTGRESQL self.data_fetchers = {} self.cache_manager = None self.health_checker = None self.logger = logging.getLogger(__name__) self._initialize_components() def _initialize_components(self): \"\"\"\u521d\u59cb\u5316\u5404\u7ec4\u4ef6\"\"\" # \u521d\u59cb\u5316\u6570\u636e\u83b7\u53d6\u5668 self.data_fetchers[DataSourceType.TUSHARE] = TushareDataFetcher(self.config) self.data_fetchers[DataSourceType.POSTGRESQL] = PostgreSQLDataFetcher(self.config) # \u521d\u59cb\u5316\u7f13\u5b58\u7ba1\u7406\u5668 self.cache_manager = CacheManager(self.config) # \u521d\u59cb\u5316\u5065\u5eb7\u68c0\u67e5\u5668 self.health_checker = HealthChecker(self.data_fetchers) async def get_data(self, data_type: str, params: Dict[str, Any]) -> Dict[str, Any]: \"\"\"\u83b7\u53d6\u6570\u636e - \u4e3b\u8981\u5165\u53e3\u65b9\u6cd5\"\"\" try: # 1. \u5c1d\u8bd5\u4ece\u7f13\u5b58\u83b7\u53d6 cached_data = await self.cache_manager.get(data_type, params) if cached_data: self.logger.info(f\"Cache hit for {data_type}\") return cached_data # 2. \u9009\u62e9\u6570\u636e\u6e90 data_source = await self._select_data_source(data_type) # 3. \u83b7\u53d6\u6570\u636e data = await self._fetch_data(data_source, data_type, params) # 4. \u7f13\u5b58\u6570\u636e await self.cache_manager.set(data_type, params, data) return data except Exception as e: self.logger.error(f\"Error getting data for {data_type}: {str(e)}\") return await self._handle_error(data_type, params, e) async def _select_data_source(self, data_type: str) -> DataSourceType: \"\"\"\u667a\u80fd\u6570\u636e\u6e90\u9009\u62e9\"\"\" # \u68c0\u67e5\u914d\u7f6e\u7684\u6570\u636e\u6e90\u504f\u597d if self.config.get('force_data_source'): return DataSourceType(self.config['force_data_source']) # \u68c0\u67e5\u4e3b\u6570\u636e\u6e90\u5065\u5eb7\u72b6\u6001 primary_status = await self.health_checker.check_health(self.primary_source) if primary_status == DataSourceStatus.HEALTHY: return self.primary_source # \u4e3b\u6570\u636e\u6e90\u4e0d\u53ef\u7528\uff0c\u4f7f\u7528\u5907\u7528\u6570\u636e\u6e90 fallback_status = await self.health_checker.check_health(self.fallback_source) if fallback_status in [DataSourceStatus.HEALTHY, DataSourceStatus.DEGRADED]: self.logger.warning(f\"Primary source unavailable, using fallback: {self.fallback_source}\") return self.fallback_source # \u6240\u6709\u6570\u636e\u6e90\u90fd\u4e0d\u53ef\u7528 raise Exception(\"All data sources are unavailable\") async def _fetch_data(self, source: DataSourceType, data_type: str, params: Dict[str, Any]) -> Dict[str, Any]: \"\"\"\u4ece\u6307\u5b9a\u6570\u636e\u6e90\u83b7\u53d6\u6570\u636e\"\"\" fetcher = self.data_fetchers[source] return await fetcher.fetch_data(data_type, params) async def _handle_error(self, data_type: str, params: Dict[str, Any], error: Exception) -> Dict[str, Any]: \"\"\"\u9519\u8bef\u5904\u7406\u548c\u964d\u7ea7\u7b56\u7565\"\"\" self.logger.error(f\"Data fetch failed: {str(error)}\") # \u5c1d\u8bd5\u4ece\u7f13\u5b58\u83b7\u53d6\u8fc7\u671f\u6570\u636e stale_data = await self.cache_manager.get_stale(data_type, params) if stale_data: self.logger.warning(\"Returning stale cached data due to error\") return stale_data # \u8fd4\u56de\u9ed8\u8ba4\u503c\u6216\u629b\u51fa\u5f02\u5e38 raise error","title":"3.1 DataSourceManager\u6838\u5fc3\u7c7b"},{"location":"02_architecture/hybrid_architecture_design/#32","text":"import asyncio from datetime import datetime, timedelta from typing import Dict class HealthChecker: \"\"\"\u6570\u636e\u6e90\u5065\u5eb7\u68c0\u67e5\u5668\"\"\" def __init__(self, data_fetchers: Dict[DataSourceType, Any]): self.data_fetchers = data_fetchers self.health_status = {} self.last_check = {} self.check_interval = 60 # 60\u79d2\u68c0\u67e5\u95f4\u9694 self.logger = logging.getLogger(__name__) async def check_health(self, source: DataSourceType) -> DataSourceStatus: \"\"\"\u68c0\u67e5\u6570\u636e\u6e90\u5065\u5eb7\u72b6\u6001\"\"\" now = datetime.now() # \u68c0\u67e5\u662f\u5426\u9700\u8981\u91cd\u65b0\u68c0\u67e5 if (source not in self.last_check or now - self.last_check[source] > timedelta(seconds=self.check_interval)): await self._perform_health_check(source) self.last_check[source] = now return self.health_status.get(source, DataSourceStatus.UNAVAILABLE) async def _perform_health_check(self, source: DataSourceType): \"\"\"\u6267\u884c\u5065\u5eb7\u68c0\u67e5\"\"\" try: fetcher = self.data_fetchers[source] # \u6267\u884c\u7b80\u5355\u7684\u8fde\u63a5\u6d4b\u8bd5 start_time = datetime.now() await fetcher.health_check() response_time = (datetime.now() - start_time).total_seconds() # \u6839\u636e\u54cd\u5e94\u65f6\u95f4\u5224\u65ad\u72b6\u6001 if response_time < 2.0: self.health_status[source] = DataSourceStatus.HEALTHY elif response_time < 5.0: self.health_status[source] = DataSourceStatus.DEGRADED else: self.health_status[source] = DataSourceStatus.UNAVAILABLE self.logger.info(f\"{source} health check: {self.health_status[source]} (response_time: {response_time:.2f}s)\") except Exception as e: self.health_status[source] = DataSourceStatus.UNAVAILABLE self.logger.error(f\"{source} health check failed: {str(e)}\") async def start_monitoring(self): \"\"\"\u542f\u52a8\u6301\u7eed\u76d1\u63a7\"\"\" while True: for source in self.data_fetchers.keys(): await self._perform_health_check(source) await asyncio.sleep(self.check_interval)","title":"3.2 \u5065\u5eb7\u68c0\u67e5\u673a\u5236"},{"location":"02_architecture/hybrid_architecture_design/#4","text":"","title":"4. \u7f13\u5b58\u7b56\u7565\u8bbe\u8ba1"},{"location":"02_architecture/hybrid_architecture_design/#41","text":"\u7f13\u5b58\u5c42\u7ea7\u7ed3\u6784 \u250c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2510 \u2502 L1: \u5185\u5b58\u7f13\u5b58 (LRU) \u2502 \u2502 \u2022 \u5bb9\u91cf: 1000\u4e2a\u5bf9\u8c61 \u2502 \u2502 \u2022 TTL: 5-30\u5206\u949f \u2502 \u2502 \u2022 \u7528\u9014: \u70ed\u70b9\u6570\u636e\u5feb\u901f\u8bbf\u95ee \u2502 \u2514\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2518 \u2502 \u25bc \u250c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2510 \u2502 L2: Redis\u7f13\u5b58 \u2502 \u2502 \u2022 \u5bb9\u91cf: 10GB \u2502 \u2502 \u2022 TTL: 1-24\u5c0f\u65f6 \u2502 \u2502 \u2022 \u7528\u9014: \u5206\u5e03\u5f0f\u7f13\u5b58\uff0c\u652f\u6301\u96c6\u7fa4 \u2502 \u2514\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2518 \u2502 \u25bc \u250c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2510 \u2502 L3: \u672c\u5730\u6587\u4ef6\u7f13\u5b58 \u2502 \u2502 \u2022 \u5bb9\u91cf: 1GB \u2502 \u2502 \u2022 TTL: 1-7\u5929 \u2502 \u2502 \u2022 \u7528\u9014: \u51b7\u6570\u636e\u5b58\u50a8\uff0c\u79bb\u7ebf\u8bbf\u95ee \u2502 \u2514\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2518","title":"4.1 \u591a\u5c42\u7ea7\u7f13\u5b58\u67b6\u6784"},{"location":"02_architecture/hybrid_architecture_design/#42","text":"import json import hashlib from datetime import datetime, timedelta from typing import Any, Dict, Optional import redis from cachetools import LRUCache class CacheManager: \"\"\"\u591a\u5c42\u7ea7\u7f13\u5b58\u7ba1\u7406\u5668\"\"\" def __init__(self, config: Dict[str, Any]): self.config = config # L1: \u5185\u5b58\u7f13\u5b58 self.memory_cache = LRUCache(maxsize=1000) # L2: Redis\u7f13\u5b58 self.redis_client = redis.Redis( host=config.get('redis_host', 'localhost'), port=config.get('redis_port', 6379), db=config.get('redis_db', 0), decode_responses=True ) # L3: \u6587\u4ef6\u7f13\u5b58\u8def\u5f84 self.file_cache_dir = config.get('file_cache_dir', './cache') self.logger = logging.getLogger(__name__) def _generate_cache_key(self, data_type: str, params: Dict[str, Any]) -> str: \"\"\"\u751f\u6210\u7f13\u5b58\u952e\"\"\" # \u521b\u5efa\u53c2\u6570\u7684\u54c8\u5e0c\u503c params_str = json.dumps(params, sort_keys=True) params_hash = hashlib.md5(params_str.encode()).hexdigest()[:8] return f\"{data_type}:{params_hash}\" async def get(self, data_type: str, params: Dict[str, Any]) -> Optional[Dict[str, Any]]: \"\"\"\u83b7\u53d6\u7f13\u5b58\u6570\u636e\"\"\" cache_key = self._generate_cache_key(data_type, params) # L1: \u68c0\u67e5\u5185\u5b58\u7f13\u5b58 if cache_key in self.memory_cache: self.logger.debug(f\"L1 cache hit: {cache_key}\") return self.memory_cache[cache_key] # L2: \u68c0\u67e5Redis\u7f13\u5b58 try: redis_data = self.redis_client.get(cache_key) if redis_data: data = json.loads(redis_data) # \u56de\u586b\u5230L1\u7f13\u5b58 self.memory_cache[cache_key] = data self.logger.debug(f\"L2 cache hit: {cache_key}\") return data except Exception as e: self.logger.warning(f\"Redis cache error: {str(e)}\") # L3: \u68c0\u67e5\u6587\u4ef6\u7f13\u5b58 try: file_path = os.path.join(self.file_cache_dir, f\"{cache_key}.json\") if os.path.exists(file_path): with open(file_path, 'r') as f: data = json.load(f) # \u68c0\u67e5\u6587\u4ef6\u7f13\u5b58\u662f\u5426\u8fc7\u671f cache_time = datetime.fromisoformat(data.get('_cache_time', '1970-01-01')) if datetime.now() - cache_time < timedelta(days=7): # \u56de\u586b\u5230\u4e0a\u7ea7\u7f13\u5b58 self.memory_cache[cache_key] = data try: self.redis_client.setex(cache_key, 3600, json.dumps(data)) except: pass self.logger.debug(f\"L3 cache hit: {cache_key}\") return data except Exception as e: self.logger.warning(f\"File cache error: {str(e)}\") return None async def set(self, data_type: str, params: Dict[str, Any], data: Dict[str, Any]): \"\"\"\u8bbe\u7f6e\u7f13\u5b58\u6570\u636e\"\"\" cache_key = self._generate_cache_key(data_type, params) # \u6dfb\u52a0\u7f13\u5b58\u65f6\u95f4\u6233 data_with_timestamp = { **data, '_cache_time': datetime.now().isoformat(), '_data_type': data_type } # \u83b7\u53d6TTL\u914d\u7f6e ttl_config = self.config.get('cache_ttl', {}) memory_ttl = ttl_config.get(data_type, {}).get('memory', 1800) # 30\u5206\u949f redis_ttl = ttl_config.get(data_type, {}).get('redis', 3600) # 1\u5c0f\u65f6 # L1: \u8bbe\u7f6e\u5185\u5b58\u7f13\u5b58 self.memory_cache[cache_key] = data_with_timestamp # L2: \u8bbe\u7f6eRedis\u7f13\u5b58 try: self.redis_client.setex( cache_key, redis_ttl, json.dumps(data_with_timestamp) ) except Exception as e: self.logger.warning(f\"Redis cache set error: {str(e)}\") # L3: \u8bbe\u7f6e\u6587\u4ef6\u7f13\u5b58\uff08\u5f02\u6b65\uff09 asyncio.create_task(self._set_file_cache(cache_key, data_with_timestamp)) async def _set_file_cache(self, cache_key: str, data: Dict[str, Any]): \"\"\"\u5f02\u6b65\u8bbe\u7f6e\u6587\u4ef6\u7f13\u5b58\"\"\" try: os.makedirs(self.file_cache_dir, exist_ok=True) file_path = os.path.join(self.file_cache_dir, f\"{cache_key}.json\") with open(file_path, 'w') as f: json.dump(data, f, indent=2) except Exception as e: self.logger.warning(f\"File cache set error: {str(e)}\") async def get_stale(self, data_type: str, params: Dict[str, Any]) -> Optional[Dict[str, Any]]: \"\"\"\u83b7\u53d6\u8fc7\u671f\u7684\u7f13\u5b58\u6570\u636e\uff08\u7528\u4e8e\u964d\u7ea7\uff09\"\"\" cache_key = self._generate_cache_key(data_type, params) # \u5c1d\u8bd5\u4ece\u6587\u4ef6\u7f13\u5b58\u83b7\u53d6\uff0c\u5ffd\u7565\u8fc7\u671f\u65f6\u95f4 try: file_path = os.path.join(self.file_cache_dir, f\"{cache_key}.json\") if os.path.exists(file_path): with open(file_path, 'r') as f: data = json.load(f) self.logger.warning(f\"Returning stale cache data: {cache_key}\") return data except Exception as e: self.logger.error(f\"Stale cache retrieval error: {str(e)}\") return None async def invalidate(self, data_type: str, params: Dict[str, Any] = None): \"\"\"\u7f13\u5b58\u5931\u6548\"\"\" if params: # \u5931\u6548\u7279\u5b9a\u7f13\u5b58 cache_key = self._generate_cache_key(data_type, params) self._invalidate_key(cache_key) else: # \u5931\u6548\u6570\u636e\u7c7b\u578b\u7684\u6240\u6709\u7f13\u5b58 await self._invalidate_by_pattern(f\"{data_type}:*\") def _invalidate_key(self, cache_key: str): \"\"\"\u5931\u6548\u6307\u5b9a\u952e\u7684\u7f13\u5b58\"\"\" # L1: \u5185\u5b58\u7f13\u5b58 if cache_key in self.memory_cache: del self.memory_cache[cache_key] # L2: Redis\u7f13\u5b58 try: self.redis_client.delete(cache_key) except: pass # L3: \u6587\u4ef6\u7f13\u5b58 try: file_path = os.path.join(self.file_cache_dir, f\"{cache_key}.json\") if os.path.exists(file_path): os.remove(file_path) except: pass async def _invalidate_by_pattern(self, pattern: str): \"\"\"\u6309\u6a21\u5f0f\u5931\u6548\u7f13\u5b58\"\"\" # Redis\u6a21\u5f0f\u5339\u914d\u5220\u9664 try: keys = self.redis_client.keys(pattern) if keys: self.redis_client.delete(*keys) except: pass # \u5185\u5b58\u7f13\u5b58\u6a21\u5f0f\u5339\u914d\u5220\u9664 keys_to_delete = [k for k in self.memory_cache.keys() if k.startswith(pattern.replace('*', ''))] for key in keys_to_delete: del self.memory_cache[key]","title":"4.2 \u7f13\u5b58\u7ba1\u7406\u5668\u5b9e\u73b0"},{"location":"02_architecture/hybrid_architecture_design/#43","text":"# \u7f13\u5b58TTL\u914d\u7f6e CACHE_TTL_CONFIG = { 'stock_basic': { 'memory': 3600, # 1\u5c0f\u65f6 'redis': 86400, # 24\u5c0f\u65f6 'file': 604800 # 7\u5929 }, 'daily_basic': { 'memory': 1800, # 30\u5206\u949f 'redis': 3600, # 1\u5c0f\u65f6 'file': 86400 # 1\u5929 }, 'financial_data': { 'memory': 7200, # 2\u5c0f\u65f6 'redis': 43200, # 12\u5c0f\u65f6 'file': 2592000 # 30\u5929 }, 'real_time_quotes': { 'memory': 300, # 5\u5206\u949f 'redis': 900, # 15\u5206\u949f 'file': 3600 # 1\u5c0f\u65f6 } } # \u7f13\u5b58\u5931\u6548\u7b56\u7565 CACHE_INVALIDATION_RULES = { 'market_close': { 'time': '15:30', 'invalidate': ['daily_basic', 'real_time_quotes'] }, 'financial_report': { 'trigger': 'quarterly', 'invalidate': ['financial_data', 'valuation_metrics'] }, 'stock_list_update': { 'trigger': 'weekly', 'invalidate': ['stock_basic'] } }","title":"4.3 \u7f13\u5b58\u7b56\u7565\u914d\u7f6e"},{"location":"02_architecture/hybrid_architecture_design/#5","text":"","title":"5. \u9519\u8bef\u5904\u7406\u548c\u964d\u7ea7\u7b56\u7565"},{"location":"02_architecture/hybrid_architecture_design/#51","text":"from enum import Enum from typing import Dict, Any, Optional class ErrorType(Enum): \"\"\"\u9519\u8bef\u7c7b\u578b\u679a\u4e3e\"\"\" NETWORK_ERROR = \"network_error\" # \u7f51\u7edc\u8fde\u63a5\u9519\u8bef API_LIMIT_ERROR = \"api_limit_error\" # API\u9650\u6d41\u9519\u8bef DATA_NOT_FOUND = \"data_not_found\" # \u6570\u636e\u4e0d\u5b58\u5728 AUTHENTICATION_ERROR = \"auth_error\" # \u8ba4\u8bc1\u9519\u8bef SERVER_ERROR = \"server_error\" # \u670d\u52a1\u5668\u9519\u8bef TIMEOUT_ERROR = \"timeout_error\" # \u8d85\u65f6\u9519\u8bef DATA_FORMAT_ERROR = \"format_error\" # \u6570\u636e\u683c\u5f0f\u9519\u8bef class ErrorHandler: \"\"\"\u7edf\u4e00\u9519\u8bef\u5904\u7406\u5668\"\"\" def __init__(self, config: Dict[str, Any]): self.config = config self.retry_config = config.get('retry_config', {}) self.fallback_config = config.get('fallback_config', {}) self.logger = logging.getLogger(__name__) async def handle_error(self, error: Exception, context: Dict[str, Any]) -> Dict[str, Any]: \"\"\"\u7edf\u4e00\u9519\u8bef\u5904\u7406\u5165\u53e3\"\"\" error_type = self._classify_error(error) self.logger.error(f\"Error occurred: {error_type} - {str(error)}\") # \u6839\u636e\u9519\u8bef\u7c7b\u578b\u9009\u62e9\u5904\u7406\u7b56\u7565 if error_type == ErrorType.API_LIMIT_ERROR: return await self._handle_api_limit_error(error, context) elif error_type == ErrorType.NETWORK_ERROR: return await self._handle_network_error(error, context) elif error_type == ErrorType.TIMEOUT_ERROR: return await self._handle_timeout_error(error, context) elif error_type == ErrorType.DATA_NOT_FOUND: return await self._handle_data_not_found_error(error, context) else: return await self._handle_generic_error(error, context) def _classify_error(self, error: Exception) -> ErrorType: \"\"\"\u9519\u8bef\u5206\u7c7b\"\"\" error_msg = str(error).lower() if 'rate limit' in error_msg or 'quota exceeded' in error_msg: return ErrorType.API_LIMIT_ERROR elif 'network' in error_msg or 'connection' in error_msg: return ErrorType.NETWORK_ERROR elif 'timeout' in error_msg: return ErrorType.TIMEOUT_ERROR elif 'not found' in error_msg or 'no data' in error_msg: return ErrorType.DATA_NOT_FOUND elif 'authentication' in error_msg or 'unauthorized' in error_msg: return ErrorType.AUTHENTICATION_ERROR elif 'server error' in error_msg or '500' in error_msg: return ErrorType.SERVER_ERROR else: return ErrorType.DATA_FORMAT_ERROR async def _handle_api_limit_error(self, error: Exception, context: Dict[str, Any]) -> Dict[str, Any]: \"\"\"\u5904\u7406API\u9650\u6d41\u9519\u8bef\"\"\" # 1. \u5207\u6362\u5230\u5907\u7528\u6570\u636e\u6e90 self.logger.warning(\"API limit reached, switching to fallback data source\") # 2. \u5c1d\u8bd5\u4ece\u7f13\u5b58\u83b7\u53d6\u6570\u636e cache_manager = context.get('cache_manager') if cache_manager: stale_data = await cache_manager.get_stale( context.get('data_type'), context.get('params') ) if stale_data: return stale_data # 3. \u4f7f\u7528\u5907\u7528\u6570\u636e\u6e90 fallback_fetcher = context.get('fallback_fetcher') if fallback_fetcher: return await fallback_fetcher.fetch_data( context.get('data_type'), context.get('params') ) raise error async def _handle_network_error(self, error: Exception, context: Dict[str, Any]) -> Dict[str, Any]: \"\"\"\u5904\u7406\u7f51\u7edc\u9519\u8bef\"\"\" # \u91cd\u8bd5\u673a\u5236 retry_count = context.get('retry_count', 0) max_retries = self.retry_config.get('max_retries', 3) if retry_count < max_retries: self.logger.info(f\"Network error, retrying ({retry_count + 1}/{max_retries})\") # \u6307\u6570\u9000\u907f wait_time = 2 ** retry_count await asyncio.sleep(wait_time) # \u66f4\u65b0\u91cd\u8bd5\u6b21\u6570 context['retry_count'] = retry_count + 1 # \u91cd\u65b0\u5c1d\u8bd5 fetcher = context.get('fetcher') if fetcher: return await fetcher.fetch_data( context.get('data_type'), context.get('params') ) # \u91cd\u8bd5\u5931\u8d25\uff0c\u4f7f\u7528\u964d\u7ea7\u7b56\u7565 return await self._apply_fallback_strategy(error, context) async def _apply_fallback_strategy(self, error: Exception, context: Dict[str, Any]) -> Dict[str, Any]: \"\"\"\u5e94\u7528\u964d\u7ea7\u7b56\u7565\"\"\" # 1. \u5c1d\u8bd5\u4ece\u7f13\u5b58\u83b7\u53d6\u8fc7\u671f\u6570\u636e cache_manager = context.get('cache_manager') if cache_manager: stale_data = await cache_manager.get_stale( context.get('data_type'), context.get('params') ) if stale_data: self.logger.warning(\"Using stale cached data as fallback\") return stale_data # 2. \u4f7f\u7528\u5907\u7528\u6570\u636e\u6e90 fallback_fetcher = context.get('fallback_fetcher') if fallback_fetcher: try: self.logger.warning(\"Using fallback data source\") return await fallback_fetcher.fetch_data( context.get('data_type'), context.get('params') ) except Exception as fallback_error: self.logger.error(f\"Fallback data source also failed: {str(fallback_error)}\") # 3. \u8fd4\u56de\u9ed8\u8ba4\u503c\u6216\u629b\u51fa\u5f02\u5e38 default_data = self.fallback_config.get('default_data', {}) if default_data: self.logger.warning(\"Using default fallback data\") return default_data # \u6240\u6709\u964d\u7ea7\u7b56\u7565\u90fd\u5931\u8d25\uff0c\u629b\u51fa\u539f\u59cb\u5f02\u5e38 raise error","title":"5.1 \u9519\u8bef\u5206\u7c7b\u548c\u5904\u7406"},{"location":"02_architecture/hybrid_architecture_design/#52","text":"import asyncio from datetime import datetime, timedelta from typing import Dict, List class AutoDegradationManager: \"\"\"\u81ea\u52a8\u964d\u7ea7\u7ba1\u7406\u5668\"\"\" def __init__(self, data_source_manager, config: Dict[str, Any]): self.data_source_manager = data_source_manager self.config = config self.degradation_rules = config.get('degradation_rules', {}) self.recovery_rules = config.get('recovery_rules', {}) self.current_degradations = {} self.logger = logging.getLogger(__name__) async def evaluate_degradation(self, source: DataSourceType, error_history: List[Dict]): \"\"\"\u8bc4\u4f30\u662f\u5426\u9700\u8981\u964d\u7ea7\"\"\" # \u5206\u6790\u9519\u8bef\u5386\u53f2 recent_errors = [e for e in error_history if datetime.now() - e['timestamp'] < timedelta(minutes=5)] error_rate = len(recent_errors) / max(1, len(error_history)) # \u68c0\u67e5\u964d\u7ea7\u6761\u4ef6 if error_rate > self.degradation_rules.get('error_rate_threshold', 0.5): await self._trigger_degradation(source, 'high_error_rate') # \u68c0\u67e5\u54cd\u5e94\u65f6\u95f4 avg_response_time = sum(e.get('response_time', 0) for e in recent_errors) / max(1, len(recent_errors)) if avg_response_time > self.degradation_rules.get('response_time_threshold', 10.0): await self._trigger_degradation(source, 'slow_response') async def _trigger_degradation(self, source: DataSourceType, reason: str): \"\"\"\u89e6\u53d1\u964d\u7ea7\"\"\" if source not in self.current_degradations: self.current_degradations[source] = { 'reason': reason, 'start_time': datetime.now(), 'attempts': 0 } self.logger.warning(f\"Triggering degradation for {source}: {reason}\") # \u901a\u77e5\u6570\u636e\u6e90\u7ba1\u7406\u5668 await self.data_source_manager.set_source_status(source, DataSourceStatus.DEGRADED) async def evaluate_recovery(self): \"\"\"\u8bc4\u4f30\u6062\u590d\u6761\u4ef6\"\"\" for source, degradation_info in list(self.current_degradations.items()): # \u68c0\u67e5\u964d\u7ea7\u65f6\u95f4 degradation_duration = datetime.now() - degradation_info['start_time'] min_degradation_time = timedelta(minutes=self.recovery_rules.get('min_degradation_minutes', 5)) if degradation_duration > min_degradation_time: # \u5c1d\u8bd5\u6062\u590d\u68c0\u67e5 if await self._test_recovery(source): await self._trigger_recovery(source) async def _test_recovery(self, source: DataSourceType) -> bool: \"\"\"\u6d4b\u8bd5\u6570\u636e\u6e90\u662f\u5426\u53ef\u4ee5\u6062\u590d\"\"\" try: # \u6267\u884c\u5065\u5eb7\u68c0\u67e5 health_checker = self.data_source_manager.health_checker status = await health_checker.check_health(source) return status == DataSourceStatus.HEALTHY except Exception as e: self.logger.debug(f\"Recovery test failed for {source}: {str(e)}\") return False async def _trigger_recovery(self, source: DataSourceType): \"\"\"\u89e6\u53d1\u6062\u590d\"\"\" if source in self.current_degradations: degradation_info = self.current_degradations[source] duration = datetime.now() - degradation_info['start_time'] self.logger.info(f\"Recovering {source} after {duration}\") # \u79fb\u9664\u964d\u7ea7\u72b6\u6001 del self.current_degradations[source] # \u901a\u77e5\u6570\u636e\u6e90\u7ba1\u7406\u5668 await self.data_source_manager.set_source_status(source, DataSourceStatus.HEALTHY) async def start_monitoring(self): \"\"\"\u542f\u52a8\u81ea\u52a8\u964d\u7ea7\u76d1\u63a7\"\"\" while True: try: await self.evaluate_recovery() await asyncio.sleep(30) # 30\u79d2\u68c0\u67e5\u4e00\u6b21 except Exception as e: self.logger.error(f\"Auto degradation monitoring error: {str(e)}\") await asyncio.sleep(60)","title":"5.2 \u81ea\u52a8\u964d\u7ea7\u548c\u6062\u590d\u673a\u5236"},{"location":"02_architecture/hybrid_architecture_design/#6","text":"","title":"6. \u76d1\u63a7\u548c\u544a\u8b66\u7cfb\u7edf"},{"location":"02_architecture/hybrid_architecture_design/#61","text":"from dataclasses import dataclass from typing import Dict, List, Optional from datetime import datetime import time @dataclass class MetricPoint: \"\"\"\u76d1\u63a7\u6307\u6807\u6570\u636e\u70b9\"\"\" name: str value: float timestamp: datetime tags: Dict[str, str] unit: str = \"\" class MetricsCollector: \"\"\"\u6307\u6807\u6536\u96c6\u5668\"\"\" def __init__(self, config: Dict[str, Any]): self.config = config self.metrics_buffer = [] self.counters = {} self.gauges = {} self.histograms = {} self.logger = logging.getLogger(__name__) def increment_counter(self, name: str, value: float = 1.0, tags: Dict[str, str] = None): \"\"\"\u9012\u589e\u8ba1\u6570\u5668\"\"\" key = self._make_key(name, tags or {}) self.counters[key] = self.counters.get(key, 0) + value self._add_metric_point(MetricPoint( name=name, value=self.counters[key], timestamp=datetime.now(), tags=tags or {}, unit=\"count\" )) def set_gauge(self, name: str, value: float, tags: Dict[str, str] = None): \"\"\"\u8bbe\u7f6e\u4eea\u8868\u503c\"\"\" key = self._make_key(name, tags or {}) self.gauges[key] = value self._add_metric_point(MetricPoint( name=name, value=value, timestamp=datetime.now(), tags=tags or {}, unit=\"gauge\" )) def record_histogram(self, name: str, value: float, tags: Dict[str, str] = None): \"\"\"\u8bb0\u5f55\u76f4\u65b9\u56fe\u503c\"\"\" key = self._make_key(name, tags or {}) if key not in self.histograms: self.histograms[key] = [] self.histograms[key].append(value) # \u4fdd\u6301\u6700\u8fd11000\u4e2a\u503c if len(self.histograms[key]) > 1000: self.histograms[key] = self.histograms[key][-1000:] self._add_metric_point(MetricPoint( name=name, value=value, timestamp=datetime.now(), tags=tags or {}, unit=\"histogram\" )) def _make_key(self, name: str, tags: Dict[str, str]) -> str: \"\"\"\u751f\u6210\u6307\u6807\u952e\"\"\" tag_str = \",\".join(f\"{k}={v}\" for k, v in sorted(tags.items())) return f\"{name}[{tag_str}]\" def _add_metric_point(self, metric: MetricPoint): \"\"\"\u6dfb\u52a0\u6307\u6807\u70b9\u5230\u7f13\u51b2\u533a\"\"\" self.metrics_buffer.append(metric) # \u7f13\u51b2\u533a\u6ee1\u65f6\u53d1\u9001 if len(self.metrics_buffer) >= 100: asyncio.create_task(self._flush_metrics()) async def _flush_metrics(self): \"\"\"\u5237\u65b0\u6307\u6807\u5230\u76d1\u63a7\u7cfb\u7edf\"\"\" if not self.metrics_buffer: return try: # \u53d1\u9001\u5230Prometheus\u6216\u5176\u4ed6\u76d1\u63a7\u7cfb\u7edf await self._send_to_monitoring_system(self.metrics_buffer) self.metrics_buffer.clear() except Exception as e: self.logger.error(f\"Failed to flush metrics: {str(e)}\") async def _send_to_monitoring_system(self, metrics: List[MetricPoint]): \"\"\"\u53d1\u9001\u6307\u6807\u5230\u76d1\u63a7\u7cfb\u7edf\"\"\" # \u8fd9\u91cc\u53ef\u4ee5\u96c6\u6210Prometheus\u3001InfluxDB\u7b49\u76d1\u63a7\u7cfb\u7edf for metric in metrics: self.logger.debug(f\"Metric: {metric.name}={metric.value} {metric.tags}\") # \u6838\u5fc3\u76d1\u63a7\u6307\u6807\u5b9a\u4e49 CORE_METRICS = { # \u6570\u636e\u6e90\u6307\u6807 'data_source_requests_total': 'Counter - \u6570\u636e\u6e90\u8bf7\u6c42\u603b\u6570', 'data_source_errors_total': 'Counter - \u6570\u636e\u6e90\u9519\u8bef\u603b\u6570', 'data_source_response_time': 'Histogram - \u6570\u636e\u6e90\u54cd\u5e94\u65f6\u95f4', 'data_source_availability': 'Gauge - \u6570\u636e\u6e90\u53ef\u7528\u6027', # \u7f13\u5b58\u6307\u6807 'cache_hits_total': 'Counter - \u7f13\u5b58\u547d\u4e2d\u603b\u6570', 'cache_misses_total': 'Counter - \u7f13\u5b58\u672a\u547d\u4e2d\u603b\u6570', 'cache_hit_ratio': 'Gauge - \u7f13\u5b58\u547d\u4e2d\u7387', 'cache_size_bytes': 'Gauge - \u7f13\u5b58\u5927\u5c0f', # API\u6307\u6807 'api_requests_total': 'Counter - API\u8bf7\u6c42\u603b\u6570', 'api_response_time': 'Histogram - API\u54cd\u5e94\u65f6\u95f4', 'api_errors_total': 'Counter - API\u9519\u8bef\u603b\u6570', # \u4e1a\u52a1\u6307\u6807 'valuation_calculations_total': 'Counter - \u4f30\u503c\u8ba1\u7b97\u603b\u6570', 'valuation_calculation_time': 'Histogram - \u4f30\u503c\u8ba1\u7b97\u65f6\u95f4', 'active_users': 'Gauge - \u6d3b\u8dc3\u7528\u6237\u6570' }","title":"6.1 \u76d1\u63a7\u6307\u6807\u5b9a\u4e49"},{"location":"02_architecture/hybrid_architecture_design/#62","text":"# \u544a\u8b66\u89c4\u5219\u914d\u7f6e alert_rules: # \u6570\u636e\u6e90\u544a\u8b66 data_source_down: metric: data_source_availability condition: \"< 0.5\" duration: \"2m\" severity: critical message: \"\u6570\u636e\u6e90 {{$labels.source}} \u4e0d\u53ef\u7528\" data_source_slow: metric: data_source_response_time condition: \"> 10\" duration: \"5m\" severity: warning message: \"\u6570\u636e\u6e90 {{$labels.source}} \u54cd\u5e94\u7f13\u6162\" high_error_rate: metric: rate(data_source_errors_total[5m]) condition: \"> 0.1\" duration: \"3m\" severity: warning message: \"\u6570\u636e\u6e90 {{$labels.source}} \u9519\u8bef\u7387\u8fc7\u9ad8\" # \u7f13\u5b58\u544a\u8b66 low_cache_hit_ratio: metric: cache_hit_ratio condition: \"< 0.7\" duration: \"10m\" severity: warning message: \"\u7f13\u5b58\u547d\u4e2d\u7387\u8fc7\u4f4e: {{$value}}\" cache_size_high: metric: cache_size_bytes condition: \"> 8GB\" duration: \"5m\" severity: warning message: \"\u7f13\u5b58\u4f7f\u7528\u91cf\u8fc7\u9ad8: {{$value}}\" # API\u544a\u8b66 api_response_slow: metric: api_response_time condition: \"> 5\" duration: \"5m\" severity: warning message: \"API\u54cd\u5e94\u65f6\u95f4\u8fc7\u957f: {{$value}}s\" api_error_rate_high: metric: rate(api_errors_total[5m]) condition: \"> 0.05\" duration: \"3m\" severity: critical message: \"API\u9519\u8bef\u7387\u8fc7\u9ad8: {{$value}}\" # \u544a\u8b66\u901a\u77e5\u914d\u7f6e notification_channels: email: enabled: true smtp_server: \"smtp.example.com\" recipients: [\"admin@example.com\"] slack: enabled: true webhook_url: \"https://hooks.slack.com/services/...\" channel: \"#alerts\" webhook: enabled: false url: \"https://api.example.com/alerts\"","title":"6.2 \u544a\u8b66\u89c4\u5219\u914d\u7f6e"},{"location":"02_architecture/hybrid_architecture_design/#63","text":"class MonitoringDashboard: \"\"\"\u76d1\u63a7\u4eea\u8868\u677f\"\"\" def __init__(self, metrics_collector: MetricsCollector): self.metrics_collector = metrics_collector self.dashboard_config = self._load_dashboard_config() def _load_dashboard_config(self) -> Dict[str, Any]: \"\"\"\u52a0\u8f7d\u4eea\u8868\u677f\u914d\u7f6e\"\"\" return { 'panels': [ { 'title': '\u6570\u636e\u6e90\u72b6\u6001', 'type': 'stat', 'metrics': ['data_source_availability'], 'thresholds': [0.9, 0.95] }, { 'title': '\u54cd\u5e94\u65f6\u95f4\u8d8b\u52bf', 'type': 'graph', 'metrics': ['data_source_response_time', 'api_response_time'], 'time_range': '1h' }, { 'title': '\u7f13\u5b58\u6027\u80fd', 'type': 'graph', 'metrics': ['cache_hit_ratio', 'cache_hits_total', 'cache_misses_total'], 'time_range': '6h' }, { 'title': '\u9519\u8bef\u7387\u7edf\u8ba1', 'type': 'graph', 'metrics': ['data_source_errors_total', 'api_errors_total'], 'time_range': '24h' }, { 'title': '\u4e1a\u52a1\u6307\u6807', 'type': 'stat', 'metrics': ['valuation_calculations_total', 'active_users'], 'time_range': '1d' } ] } async def get_dashboard_data(self) -> Dict[str, Any]: \"\"\"\u83b7\u53d6\u4eea\u8868\u677f\u6570\u636e\"\"\" dashboard_data = { 'timestamp': datetime.now().isoformat(), 'panels': [] } for panel_config in self.dashboard_config['panels']: panel_data = await self._get_panel_data(panel_config) dashboard_data['panels'].append(panel_data) return dashboard_data async def _get_panel_data(self, panel_config: Dict[str, Any]) -> Dict[str, Any]: \"\"\"\u83b7\u53d6\u9762\u677f\u6570\u636e\"\"\" panel_data = { 'title': panel_config['title'], 'type': panel_config['type'], 'data': [] } for metric_name in panel_config['metrics']: metric_data = await self._get_metric_data( metric_name, panel_config.get('time_range', '1h') ) panel_data['data'].append(metric_data) return panel_data async def _get_metric_data(self, metric_name: str, time_range: str) -> Dict[str, Any]: \"\"\"\u83b7\u53d6\u6307\u6807\u6570\u636e\"\"\" # \u8fd9\u91cc\u5e94\u8be5\u4ece\u65f6\u5e8f\u6570\u636e\u5e93\u67e5\u8be2\u6570\u636e # \u4e3a\u4e86\u793a\u4f8b\uff0c\u8fd4\u56de\u6a21\u62df\u6570\u636e return { 'metric': metric_name, 'values': [], # \u5b9e\u9645\u7684\u65f6\u5e8f\u6570\u636e\u70b9 'current_value': 0.0, 'trend': 'stable' # up, down, stable }","title":"6.3 \u76d1\u63a7\u4eea\u8868\u677f"},{"location":"02_architecture/hybrid_architecture_design/#7","text":"","title":"7. \u914d\u7f6e\u7ba1\u7406"},{"location":"02_architecture/hybrid_architecture_design/#71","text":"# .env \u914d\u7f6e\u6587\u4ef6 # ==================== \u6570\u636e\u6e90\u914d\u7f6e ==================== # \u4e3b\u6570\u636e\u6e90\u9009\u62e9: tushare, postgresql PRIMARY_DATA_SOURCE=tushare # \u5907\u7528\u6570\u636e\u6e90\u9009\u62e9: postgresql, tushare FALLBACK_DATA_SOURCE=postgresql # \u5f3a\u5236\u4f7f\u7528\u6307\u5b9a\u6570\u636e\u6e90 (\u53ef\u9009): tushare, postgresql # FORCE_DATA_SOURCE=tushare # ==================== Tushare\u914d\u7f6e ==================== TUSHARE_TOKEN=your_tushare_token_here TUSHARE_API_URL=http://api.tushare.pro TUSHARE_TIMEOUT=30 TUSHARE_MAX_RETRIES=3 TUSHARE_RETRY_DELAY=1 # API\u914d\u989d\u7ba1\u7406 TUSHARE_DAILY_LIMIT=10000 TUSHARE_MINUTE_LIMIT=500 TUSHARE_ENABLE_QUOTA_CHECK=true # ==================== PostgreSQL\u914d\u7f6e ==================== POSTGRESQL_HOST=localhost POSTGRESQL_PORT=5432 POSTGRESQL_DATABASE=stock_valuation POSTGRESQL_USERNAME=postgres POSTGRESQL_PASSWORD=your_password_here POSTGRESQL_POOL_SIZE=10 POSTGRESQL_MAX_OVERFLOW=20 POSTGRESQL_POOL_TIMEOUT=30 # ==================== Redis\u7f13\u5b58\u914d\u7f6e ==================== REDIS_HOST=localhost REDIS_PORT=6379 REDIS_DB=0 REDIS_PASSWORD= REDIS_MAX_CONNECTIONS=10 REDIS_SOCKET_TIMEOUT=5 # ==================== \u7f13\u5b58\u7b56\u7565\u914d\u7f6e ==================== # \u542f\u7528\u7f13\u5b58\u5c42\u7ea7: memory, redis, file ENABLE_MEMORY_CACHE=true ENABLE_REDIS_CACHE=true ENABLE_FILE_CACHE=true # \u7f13\u5b58\u76ee\u5f55 FILE_CACHE_DIR=./cache # \u7f13\u5b58TTL (\u79d2) CACHE_TTL_STOCK_BASIC_MEMORY=3600 CACHE_TTL_STOCK_BASIC_REDIS=86400 CACHE_TTL_DAILY_BASIC_MEMORY=1800 CACHE_TTL_DAILY_BASIC_REDIS=3600 CACHE_TTL_FINANCIAL_DATA_MEMORY=7200 CACHE_TTL_FINANCIAL_DATA_REDIS=43200 # ==================== \u5065\u5eb7\u68c0\u67e5\u914d\u7f6e ==================== HEALTH_CHECK_INTERVAL=60 HEALTH_CHECK_TIMEOUT=10 HEALTH_CHECK_RETRY_COUNT=3 # \u5065\u5eb7\u72b6\u6001\u9608\u503c HEALTH_RESPONSE_TIME_HEALTHY=2.0 HEALTH_RESPONSE_TIME_DEGRADED=5.0 # ==================== \u964d\u7ea7\u7b56\u7565\u914d\u7f6e ==================== # \u542f\u7528\u81ea\u52a8\u964d\u7ea7 ENABLE_AUTO_DEGRADATION=true # \u964d\u7ea7\u89e6\u53d1\u6761\u4ef6 DEGRADATION_ERROR_RATE_THRESHOLD=0.5 DEGRADATION_RESPONSE_TIME_THRESHOLD=10.0 DEGRADATION_MIN_DURATION_MINUTES=5 # \u6062\u590d\u6761\u4ef6 RECOVERY_SUCCESS_RATE_THRESHOLD=0.9 RECOVERY_TEST_INTERVAL=30 # ==================== \u76d1\u63a7\u544a\u8b66\u914d\u7f6e ==================== # \u542f\u7528\u76d1\u63a7 ENABLE_MONITORING=true MONITORING_INTERVAL=30 # Prometheus\u914d\u7f6e PROMETHEUS_ENABLED=false PROMETHEUS_HOST=localhost PROMETHEUS_PORT=9090 # \u544a\u8b66\u914d\u7f6e ALERT_EMAIL_ENABLED=true ALERT_EMAIL_SMTP_SERVER=smtp.example.com ALERT_EMAIL_RECIPIENTS=admin@example.com ALERT_SLACK_ENABLED=false ALERT_SLACK_WEBHOOK_URL= # ==================== \u65e5\u5fd7\u914d\u7f6e ==================== LOG_LEVEL=INFO LOG_FORMAT=%(asctime)s - %(name)s - %(levelname)s - %(message)s LOG_FILE_PATH=./logs/stock_valuation.log LOG_MAX_SIZE=100MB LOG_BACKUP_COUNT=5 # ==================== \u6027\u80fd\u914d\u7f6e ==================== # \u8fde\u63a5\u6c60\u914d\u7f6e CONNECTION_POOL_SIZE=10 CONNECTION_POOL_MAX_OVERFLOW=20 CONNECTION_POOL_TIMEOUT=30 # \u5f02\u6b65\u914d\u7f6e ASYNC_WORKER_COUNT=4 ASYNC_QUEUE_SIZE=1000 # \u9650\u6d41\u914d\u7f6e RATE_LIMIT_ENABLED=true RATE_LIMIT_REQUESTS_PER_MINUTE=1000 RATE_LIMIT_BURST_SIZE=100","title":"7.1 \u73af\u5883\u914d\u7f6e\u6587\u4ef6"},{"location":"02_architecture/hybrid_architecture_design/#72","text":"import os from typing import Dict, Any, Optional from dataclasses import dataclass from pathlib import Path @dataclass class DataSourceConfig: \"\"\"\u6570\u636e\u6e90\u914d\u7f6e\"\"\" primary_source: str fallback_source: str force_source: Optional[str] = None @dataclass class TushareConfig: \"\"\"Tushare\u914d\u7f6e\"\"\" token: str api_url: str = \"http://api.tushare.pro\" timeout: int = 30 max_retries: int = 3 retry_delay: int = 1 daily_limit: int = 10000 minute_limit: int = 500 enable_quota_check: bool = True @dataclass class PostgreSQLConfig: \"\"\"PostgreSQL\u914d\u7f6e\"\"\" host: str = \"localhost\" port: int = 5432 database: str = \"stock_valuation\" username: str = \"postgres\" password: str = \"\" pool_size: int = 10 max_overflow: int = 20 pool_timeout: int = 30 @dataclass class CacheConfig: \"\"\"\u7f13\u5b58\u914d\u7f6e\"\"\" enable_memory: bool = True enable_redis: bool = True enable_file: bool = True file_cache_dir: str = \"./cache\" redis_host: str = \"localhost\" redis_port: int = 6379 redis_db: int = 0 redis_password: str = \"\" class ConfigLoader: \"\"\"\u914d\u7f6e\u52a0\u8f7d\u5668\"\"\" def __init__(self, env_file: str = \".env\"): self.env_file = env_file self._load_env_file() def _load_env_file(self): \"\"\"\u52a0\u8f7d\u73af\u5883\u53d8\u91cf\u6587\u4ef6\"\"\" if Path(self.env_file).exists(): with open(self.env_file, 'r') as f: for line in f: line = line.strip() if line and not line.startswith('#') and '=' in line: key, value = line.split('=', 1) os.environ[key.strip()] = value.strip() def get_data_source_config(self) -> DataSourceConfig: \"\"\"\u83b7\u53d6\u6570\u636e\u6e90\u914d\u7f6e\"\"\" return DataSourceConfig( primary_source=os.getenv('PRIMARY_DATA_SOURCE', 'tushare'), fallback_source=os.getenv('FALLBACK_DATA_SOURCE', 'postgresql'), force_source=os.getenv('FORCE_DATA_SOURCE') ) def get_tushare_config(self) -> TushareConfig: \"\"\"\u83b7\u53d6Tushare\u914d\u7f6e\"\"\" token = os.getenv('TUSHARE_TOKEN') if not token: raise ValueError(\"TUSHARE_TOKEN is required\") return TushareConfig( token=token, api_url=os.getenv('TUSHARE_API_URL', 'http://api.tushare.pro'), timeout=int(os.getenv('TUSHARE_TIMEOUT', '30')), max_retries=int(os.getenv('TUSHARE_MAX_RETRIES', '3')), retry_delay=int(os.getenv('TUSHARE_RETRY_DELAY', '1')), daily_limit=int(os.getenv('TUSHARE_DAILY_LIMIT', '10000')), minute_limit=int(os.getenv('TUSHARE_MINUTE_LIMIT', '500')), enable_quota_check=os.getenv('TUSHARE_ENABLE_QUOTA_CHECK', 'true').lower() == 'true' ) def get_postgresql_config(self) -> PostgreSQLConfig: \"\"\"\u83b7\u53d6PostgreSQL\u914d\u7f6e\"\"\" return PostgreSQLConfig( host=os.getenv('POSTGRESQL_HOST', 'localhost'), port=int(os.getenv('POSTGRESQL_PORT', '5432')), database=os.getenv('POSTGRESQL_DATABASE', 'stock_valuation'), username=os.getenv('POSTGRESQL_USERNAME', 'postgres'), password=os.getenv('POSTGRESQL_PASSWORD', ''), pool_size=int(os.getenv('POSTGRESQL_POOL_SIZE', '10')), max_overflow=int(os.getenv('POSTGRESQL_MAX_OVERFLOW', '20')), pool_timeout=int(os.getenv('POSTGRESQL_POOL_TIMEOUT', '30')) ) def get_cache_config(self) -> CacheConfig: \"\"\"\u83b7\u53d6\u7f13\u5b58\u914d\u7f6e\"\"\" return CacheConfig( enable_memory=os.getenv('ENABLE_MEMORY_CACHE', 'true').lower() == 'true', enable_redis=os.getenv('ENABLE_REDIS_CACHE', 'true').lower() == 'true', enable_file=os.getenv('ENABLE_FILE_CACHE', 'true').lower() == 'true', file_cache_dir=os.getenv('FILE_CACHE_DIR', './cache'), redis_host=os.getenv('REDIS_HOST', 'localhost'), redis_port=int(os.getenv('REDIS_PORT', '6379')), redis_db=int(os.getenv('REDIS_DB', '0')), redis_password=os.getenv('REDIS_PASSWORD', '') ) def get_full_config(self) -> Dict[str, Any]: \"\"\"\u83b7\u53d6\u5b8c\u6574\u914d\u7f6e\"\"\" return { 'data_source': self.get_data_source_config(), 'tushare': self.get_tushare_config(), 'postgresql': self.get_postgresql_config(), 'cache': self.get_cache_config(), 'monitoring': { 'enabled': os.getenv('ENABLE_MONITORING', 'true').lower() == 'true', 'interval': int(os.getenv('MONITORING_INTERVAL', '30')) }, 'logging': { 'level': os.getenv('LOG_LEVEL', 'INFO'), 'format': os.getenv('LOG_FORMAT', '%(asctime)s - %(name)s - %(levelname)s - %(message)s'), 'file_path': os.getenv('LOG_FILE_PATH', './logs/stock_valuation.log') } }","title":"7.2 \u914d\u7f6e\u52a0\u8f7d\u5668"},{"location":"02_architecture/hybrid_architecture_design/#8","text":"","title":"8. \u90e8\u7f72\u65b9\u6848"},{"location":"02_architecture/hybrid_architecture_design/#81-docker","text":"# Dockerfile FROM python:3.9-slim # \u8bbe\u7f6e\u5de5\u4f5c\u76ee\u5f55 WORKDIR /app # \u5b89\u88c5\u7cfb\u7edf\u4f9d\u8d56 RUN apt-get update && apt-get install -y \\ gcc \\ g++ \\ && rm -rf /var/lib/apt/lists/* # \u590d\u5236\u4f9d\u8d56\u6587\u4ef6 COPY requirements.txt . # \u5b89\u88c5Python\u4f9d\u8d56 RUN pip install --no-cache-dir -r requirements.txt # \u590d\u5236\u5e94\u7528\u4ee3\u7801 COPY . . # \u521b\u5efa\u7f13\u5b58\u76ee\u5f55 RUN mkdir -p /app/cache /app/logs # \u8bbe\u7f6e\u73af\u5883\u53d8\u91cf ENV PYTHONPATH=/app ENV PYTHONUNBUFFERED=1 # \u66b4\u9732\u7aef\u53e3 EXPOSE 8000 # \u5065\u5eb7\u68c0\u67e5 HEALTHCHECK --interval=30s --timeout=10s --start-period=5s --retries=3 \\ CMD curl -f http://localhost:8000/health || exit 1 # \u542f\u52a8\u547d\u4ee4 CMD [\"python\", \"-m\", \"uvicorn\", \"main:app\", \"--host\", \"0.0.0.0\", \"--port\", \"8000\"] # docker-compose.yml version: '3.8' services: stock-valuation: build: . ports: - \"8000:8000\" environment: - PRIMARY_DATA_SOURCE=tushare - FALLBACK_DATA_SOURCE=postgresql - TUSHARE_TOKEN=${TUSHARE_TOKEN} - POSTGRESQL_HOST=postgres - REDIS_HOST=redis depends_on: - postgres - redis volumes: - ./cache:/app/cache - ./logs:/app/logs restart: unless-stopped networks: - stock-network postgres: image: postgres:13 environment: - POSTGRES_DB=stock_valuation - POSTGRES_USER=postgres - POSTGRES_PASSWORD=${POSTGRES_PASSWORD} volumes: - postgres_data:/var/lib/postgresql/data - ./init.sql:/docker-entrypoint-initdb.d/init.sql ports: - \"5432:5432\" restart: unless-stopped networks: - stock-network redis: image: redis:6-alpine ports: - \"6379:6379\" volumes: - redis_data:/data restart: unless-stopped networks: - stock-network prometheus: image: prom/prometheus:latest ports: - \"9090:9090\" volumes: - ./prometheus.yml:/etc/prometheus/prometheus.yml - prometheus_data:/prometheus command: - '--config.file=/etc/prometheus/prometheus.yml' - '--storage.tsdb.path=/prometheus' - '--web.console.libraries=/etc/prometheus/console_libraries' - '--web.console.templates=/etc/prometheus/consoles' restart: unless-stopped networks: - stock-network grafana: image: grafana/grafana:latest ports: - \"3000:3000\" environment: - GF_SECURITY_ADMIN_PASSWORD=${GRAFANA_PASSWORD} volumes: - grafana_data:/var/lib/grafana - ./grafana/dashboards:/etc/grafana/provisioning/dashboards - ./grafana/datasources:/etc/grafana/provisioning/datasources restart: unless-stopped networks: - stock-network volumes: postgres_data: redis_data: prometheus_data: grafana_data: networks: stock-network: driver: bridge","title":"8.1 Docker\u5bb9\u5668\u5316\u90e8\u7f72"},{"location":"02_architecture/hybrid_architecture_design/#82-kubernetes","text":"# k8s-deployment.yaml apiVersion: apps/v1 kind: Deployment metadata: name: stock-valuation labels: app: stock-valuation spec: replicas: 3 selector: matchLabels: app: stock-valuation template: metadata: labels: app: stock-valuation spec: containers: - name: stock-valuation image: stock-valuation:latest ports: - containerPort: 8000 env: - name: PRIMARY_DATA_SOURCE value: \"tushare\" - name: FALLBACK_DATA_SOURCE value: \"postgresql\" - name: TUSHARE_TOKEN valueFrom: secretKeyRef: name: tushare-secret key: token - name: POSTGRESQL_HOST value: \"postgres-service\" - name: REDIS_HOST value: \"redis-service\" resources: requests: memory: \"512Mi\" cpu: \"250m\" limits: memory: \"1Gi\" cpu: \"500m\" livenessProbe: httpGet: path: /health port: 8000 initialDelaySeconds: 30 periodSeconds: 10 readinessProbe: httpGet: path: /ready port: 8000 initialDelaySeconds: 5 periodSeconds: 5 volumeMounts: - name: cache-volume mountPath: /app/cache - name: logs-volume mountPath: /app/logs volumes: - name: cache-volume emptyDir: {} - name: logs-volume emptyDir: {} --- apiVersion: v1 kind: Service metadata: name: stock-valuation-service spec: selector: app: stock-valuation ports: - protocol: TCP port: 80 targetPort: 8000 type: LoadBalancer","title":"8.2 Kubernetes\u90e8\u7f72"},{"location":"02_architecture/hybrid_architecture_design/#9","text":"","title":"9. \u5b9e\u65bd\u8ba1\u5212"},{"location":"02_architecture/hybrid_architecture_design/#91","text":"","title":"9.1 \u5b9e\u65bd\u9636\u6bb5\u5212\u5206"},{"location":"02_architecture/hybrid_architecture_design/#1-2","text":"\u76ee\u6807 : \u5efa\u7acb\u6df7\u5408\u6570\u636e\u6e90\u7684\u57fa\u7840\u6846\u67b6 \u4efb\u52a1\u6e05\u5355 : - [ ] \u521b\u5efaDataSourceManager\u6838\u5fc3\u7c7b - [ ] \u5b9e\u73b0TushareDataFetcher - [ ] \u5b9e\u73b0PostgreSQLDataFetcher - [ ] \u5efa\u7acb\u57fa\u7840\u7684\u914d\u7f6e\u7ba1\u7406\u7cfb\u7edf - [ ] \u5b9e\u73b0\u7b80\u5355\u7684\u6570\u636e\u6e90\u5207\u6362\u903b\u8f91 \u9a8c\u6536\u6807\u51c6 : - \u80fd\u591f\u901a\u8fc7\u914d\u7f6e\u5207\u6362\u6570\u636e\u6e90 - \u57fa\u672c\u7684\u6570\u636e\u83b7\u53d6\u529f\u80fd\u6b63\u5e38 - \u5355\u5143\u6d4b\u8bd5\u8986\u76d6\u7387\u8fbe\u523080%","title":"\u7b2c\u4e00\u9636\u6bb5\uff1a\u57fa\u7840\u67b6\u6784\u642d\u5efa (1-2\u5468)"},{"location":"02_architecture/hybrid_architecture_design/#1-2_1","text":"\u76ee\u6807 : \u5b9e\u73b0\u591a\u5c42\u7ea7\u7f13\u5b58\u673a\u5236 \u4efb\u52a1\u6e05\u5355 : - [ ] \u5b9e\u73b0CacheManager\u7c7b - [ ] \u96c6\u6210Redis\u7f13\u5b58 - [ ] \u5b9e\u73b0\u672c\u5730\u6587\u4ef6\u7f13\u5b58 - [ ] \u5efa\u7acb\u7f13\u5b58\u5931\u6548\u7b56\u7565 - [ ] \u4f18\u5316\u7f13\u5b58\u952e\u751f\u6210\u7b97\u6cd5 \u9a8c\u6536\u6807\u51c6 : - \u7f13\u5b58\u547d\u4e2d\u7387\u8fbe\u523070%\u4ee5\u4e0a - \u7f13\u5b58\u6570\u636e\u4e00\u81f4\u6027\u4fdd\u8bc1 - \u7f13\u5b58\u6027\u80fd\u6d4b\u8bd5\u901a\u8fc7","title":"\u7b2c\u4e8c\u9636\u6bb5\uff1a\u7f13\u5b58\u7cfb\u7edf\u5b9e\u73b0 (1-2\u5468)"},{"location":"02_architecture/hybrid_architecture_design/#1_1","text":"\u76ee\u6807 : \u5b9e\u73b0\u81ea\u52a8\u5065\u5eb7\u68c0\u67e5\u548c\u964d\u7ea7\u673a\u5236 \u4efb\u52a1\u6e05\u5355 : - [ ] \u5b9e\u73b0HealthChecker\u7c7b - [ ] \u5efa\u7acb\u6570\u636e\u6e90\u72b6\u6001\u76d1\u63a7 - [ ] \u5b9e\u73b0\u81ea\u52a8\u964d\u7ea7\u903b\u8f91 - [ ] \u5efa\u7acb\u6062\u590d\u673a\u5236 - [ ] \u5b9e\u73b0\u9519\u8bef\u5904\u7406\u7b56\u7565 \u9a8c\u6536\u6807\u51c6 : - \u6570\u636e\u6e90\u6545\u969c\u81ea\u52a8\u68c0\u6d4b - \u964d\u7ea7\u5207\u6362\u65f6\u95f4<5\u79d2 - \u6062\u590d\u673a\u5236\u6b63\u5e38\u5de5\u4f5c","title":"\u7b2c\u4e09\u9636\u6bb5\uff1a\u5065\u5eb7\u68c0\u67e5\u548c\u964d\u7ea7 (1\u5468)"},{"location":"02_architecture/hybrid_architecture_design/#1_2","text":"\u76ee\u6807 : \u5efa\u7acb\u5b8c\u6574\u7684\u76d1\u63a7\u544a\u8b66\u4f53\u7cfb \u4efb\u52a1\u6e05\u5355 : - [ ] \u5b9e\u73b0MetricsCollector - [ ] \u96c6\u6210Prometheus\u76d1\u63a7 - [ ] \u5efa\u7acb\u544a\u8b66\u89c4\u5219 - [ ] \u521b\u5efa\u76d1\u63a7\u4eea\u8868\u677f - [ ] \u5b9e\u73b0\u544a\u8b66\u901a\u77e5 \u9a8c\u6536\u6807\u51c6 : - \u5173\u952e\u6307\u6807\u76d1\u63a7\u8986\u76d6 - \u544a\u8b66\u53ca\u65f6\u51c6\u786e - \u4eea\u8868\u677f\u6570\u636e\u5b8c\u6574","title":"\u7b2c\u56db\u9636\u6bb5\uff1a\u76d1\u63a7\u544a\u8b66\u7cfb\u7edf (1\u5468)"},{"location":"02_architecture/hybrid_architecture_design/#1-2_2","text":"\u76ee\u6807 : \u7cfb\u7edf\u6027\u80fd\u4f18\u5316\u548c\u5168\u9762\u6d4b\u8bd5 \u4efb\u52a1\u6e05\u5355 : - [ ] \u6027\u80fd\u538b\u529b\u6d4b\u8bd5 - [ ] \u5e76\u53d1\u5b89\u5168\u6d4b\u8bd5 - [ ] \u6545\u969c\u6062\u590d\u6d4b\u8bd5 - [ ] \u6570\u636e\u4e00\u81f4\u6027\u6d4b\u8bd5 - [ ] \u7528\u6237\u9a8c\u6536\u6d4b\u8bd5 \u9a8c\u6536\u6807\u51c6 : - \u7cfb\u7edf\u54cd\u5e94\u65f6\u95f4<2\u79d2 - \u5e76\u53d1\u7528\u6237\u6570>100 - \u6570\u636e\u51c6\u786e\u602799.9% - \u7cfb\u7edf\u53ef\u7528\u602799.5%","title":"\u7b2c\u4e94\u9636\u6bb5\uff1a\u6027\u80fd\u4f18\u5316\u548c\u6d4b\u8bd5 (1-2\u5468)"},{"location":"02_architecture/hybrid_architecture_design/#92","text":"","title":"9.2 \u98ce\u9669\u63a7\u5236\u63aa\u65bd"},{"location":"02_architecture/hybrid_architecture_design/#_6","text":"\u98ce\u9669\u9879 \u98ce\u9669\u7b49\u7ea7 \u5f71\u54cd \u5e94\u5bf9\u63aa\u65bd Tushare API\u53d8\u66f4 \u4e2d \u6570\u636e\u83b7\u53d6\u5931\u8d25 \u7248\u672c\u9501\u5b9a\u3001\u9002\u914d\u5c42\u8bbe\u8ba1 \u6570\u636e\u6e90\u540c\u6b65\u5ef6\u8fdf \u4e2d \u6570\u636e\u4e0d\u4e00\u81f4 \u65f6\u95f4\u6233\u6821\u9a8c\u3001\u589e\u91cf\u540c\u6b65 \u7f13\u5b58\u6570\u636e\u8fc7\u671f \u4f4e \u6027\u80fd\u4e0b\u964d \u667a\u80fd\u9884\u52a0\u8f7d\u3001\u8fc7\u671f\u7b56\u7565 \u5e76\u53d1\u8bbf\u95ee\u51b2\u7a81 \u4e2d \u6570\u636e\u9519\u8bef \u9501\u673a\u5236\u3001\u961f\u5217\u7ba1\u7406","title":"\u6280\u672f\u98ce\u9669"},{"location":"02_architecture/hybrid_architecture_design/#_7","text":"\u98ce\u9669\u9879 \u98ce\u9669\u7b49\u7ea7 \u5f71\u54cd \u5e94\u5bf9\u63aa\u65bd \u6570\u636e\u6e90\u6210\u672c\u4e0a\u5347 \u4e2d \u8fd0\u8425\u6210\u672c\u589e\u52a0 \u6210\u672c\u76d1\u63a7\u3001\u7528\u91cf\u4f18\u5316 \u670d\u52a1\u4e2d\u65ad \u9ad8 \u4e1a\u52a1\u505c\u6b62 \u591a\u91cd\u5907\u4efd\u3001\u5feb\u901f\u6062\u590d \u6570\u636e\u8d28\u91cf\u95ee\u9898 \u4e2d \u8ba1\u7b97\u9519\u8bef \u6570\u636e\u6821\u9a8c\u3001\u8d28\u91cf\u76d1\u63a7","title":"\u4e1a\u52a1\u98ce\u9669"},{"location":"02_architecture/hybrid_architecture_design/#93","text":"","title":"9.3 \u6210\u529f\u6307\u6807"},{"location":"02_architecture/hybrid_architecture_design/#_8","text":"\u7cfb\u7edf\u53ef\u7528\u6027 : \u226599.5% \u54cd\u5e94\u65f6\u95f4 : \u22642\u79d2 (95%\u8bf7\u6c42) \u7f13\u5b58\u547d\u4e2d\u7387 : \u226570% \u9519\u8bef\u7387 : \u22640.1% \u6570\u636e\u51c6\u786e\u6027 : \u226599.9%","title":"\u6280\u672f\u6307\u6807"},{"location":"02_architecture/hybrid_architecture_design/#_9","text":"API\u8c03\u7528\u6210\u672c : \u964d\u4f4e60% \u6570\u636e\u66f4\u65b0\u9891\u7387 : \u63d0\u534750% \u7528\u6237\u6ee1\u610f\u5ea6 : \u226590% \u7cfb\u7edf\u7ef4\u62a4\u6210\u672c : \u964d\u4f4e40%","title":"\u4e1a\u52a1\u6307\u6807"},{"location":"02_architecture/hybrid_architecture_design/#10","text":"","title":"10. \u603b\u7ed3"},{"location":"02_architecture/hybrid_architecture_design/#101","text":"\u9ad8\u53ef\u9760\u6027 : \u53cc\u6570\u636e\u6e90\u4fdd\u969c\uff0c\u5355\u70b9\u6545\u969c\u98ce\u9669\u964d\u4f4e90% \u9ad8\u6027\u80fd : \u591a\u5c42\u7f13\u5b58\u673a\u5236\uff0c\u6570\u636e\u8bbf\u95ee\u901f\u5ea6\u63d0\u534770% \u6210\u672c\u4f18\u5316 : \u667a\u80fdAPI\u8c03\u7528\u7ba1\u7406\uff0c\u6210\u672c\u964d\u4f4e60% \u6613\u7ef4\u62a4 : \u6a21\u5757\u5316\u8bbe\u8ba1\uff0c\u7ef4\u62a4\u6210\u672c\u964d\u4f4e40% \u53ef\u6269\u5c55 : \u652f\u6301\u65b0\u6570\u636e\u6e90\u63a5\u5165\uff0c\u6269\u5c55\u6027\u5f3a","title":"10.1 \u67b6\u6784\u4f18\u52bf\u603b\u7ed3"},{"location":"02_architecture/hybrid_architecture_design/#102","text":"\u667a\u80fd\u6570\u636e\u6e90\u8def\u7531 : \u57fa\u4e8e\u5065\u5eb7\u72b6\u6001\u548c\u6027\u80fd\u7684\u52a8\u6001\u9009\u62e9 \u591a\u5c42\u7ea7\u7f13\u5b58 : \u5185\u5b58+Redis+\u6587\u4ef6\u7684\u4e09\u7ea7\u7f13\u5b58\u4f53\u7cfb \u81ea\u52a8\u964d\u7ea7\u6062\u590d : \u65e0\u4eba\u5de5\u5e72\u9884\u7684\u6545\u969c\u5904\u7406\u673a\u5236 \u5b9e\u65f6\u76d1\u63a7\u544a\u8b66 : \u5168\u65b9\u4f4d\u7684\u7cfb\u7edf\u72b6\u6001\u76d1\u63a7","title":"10.2 \u5173\u952e\u6280\u672f\u521b\u65b0"},{"location":"02_architecture/hybrid_architecture_design/#103","text":"AI\u9a71\u52a8\u4f18\u5316 : \u57fa\u4e8e\u673a\u5668\u5b66\u4e60\u7684\u7f13\u5b58\u7b56\u7565\u4f18\u5316 \u591a\u4e91\u90e8\u7f72 : \u652f\u6301\u591a\u4e91\u73af\u5883\u7684\u6570\u636e\u6e90\u5206\u5e03 \u5b9e\u65f6\u6d41\u5904\u7406 : \u96c6\u6210\u6d41\u5f0f\u6570\u636e\u5904\u7406\u80fd\u529b \u8fb9\u7f18\u8ba1\u7b97 : \u652f\u6301\u8fb9\u7f18\u8282\u70b9\u7684\u6570\u636e\u7f13\u5b58 \u6587\u6863\u7248\u672c : v1.0 \u6700\u540e\u66f4\u65b0 : 2025\u5e741\u6708 \u4e0b\u6b21\u5ba1\u6838 : 2025\u5e743\u6708","title":"10.3 \u540e\u7eed\u53d1\u5c55\u65b9\u5411"},{"location":"03_development/","text":"\u5f00\u53d1\u6587\u6863 \u672c\u76ee\u5f55\u5305\u542b\u5f00\u53d1\u73af\u5883\u914d\u7f6e\u3001\u7f16\u7801\u89c4\u8303\u3001\u6d4b\u8bd5\u7b56\u7565\u7b49\u5f00\u53d1\u8005\u5fc5\u9700\u6587\u6863\u3002 \u6587\u6863\u5217\u8868 \ud83d\udee0\ufe0f \u5f00\u53d1\u73af\u5883 development_guide_2025_09.md - \u5f00\u53d1\u73af\u5883\u4e0e\u5de5\u4f5c\u6d41\uff08\u2b50\u2b50\u2b50\u2b50\u2b50 \u5fc5\u8bfb\uff09 \u73af\u5883\u8bbe\u7f6e\u6b65\u9aa4 \u5f00\u53d1\u5de5\u5177\u914d\u7f6e \u4ee3\u7801\u8d28\u91cf\u68c0\u67e5 \u5e38\u89c1\u95ee\u9898\u89e3\u51b3 \ud83e\uddea \u6d4b\u8bd5\u7b56\u7565 testing_strategy_2025_09.md - \u6d4b\u8bd5\u4e0e\u8d28\u91cf\u4fdd\u969c \u6d4b\u8bd5\u6846\u67b6\u914d\u7f6e \u5355\u5143\u6d4b\u8bd5\u7f16\u5199\u89c4\u8303 \u96c6\u6210\u6d4b\u8bd5\u7b56\u7565 \u8986\u76d6\u7387\u8981\u6c42 \u5f00\u53d1\u89c4\u8303 \u4ee3\u7801\u89c4\u8303 \u9075\u5faaPEP8\u89c4\u8303 \u4f7f\u7528Black\u8fdb\u884c\u4ee3\u7801\u683c\u5f0f\u5316 \u4f7f\u7528Ruff\u8fdb\u884c\u4ee3\u7801\u68c0\u67e5 \u6240\u6709\u51fd\u6570\u5fc5\u987b\u6709\u7c7b\u578b\u6ce8\u89e3 \u6d4b\u8bd5\u8981\u6c42 \u65b0\u529f\u80fd\u5fc5\u987b\u5148\u5199\u6d4b\u8bd5 \u6d4b\u8bd5\u8986\u76d6\u7387\u5fc5\u987b\u8fbe\u523080%\u4ee5\u4e0a API\u6d4b\u8bd5\u9700\u8981\u5f02\u6b65\u652f\u6301 \u5de5\u5177\u94fe \u5305\u7ba1\u7406 uv : \u63a8\u8350\u7684\u5305\u7ba1\u7406\u5de5\u5177\uff08\u6bd4pip\u66f4\u5feb\uff09 pip : \u5907\u9009\u65b9\u6848 \u4ee3\u7801\u8d28\u91cf black : \u4ee3\u7801\u683c\u5f0f\u5316 isort : \u5bfc\u5165\u6392\u5e8f ruff : \u4ee3\u7801\u68c0\u67e5 mypy : \u7c7b\u578b\u68c0\u67e5 pre-commit : \u9884\u63d0\u4ea4\u94a9\u5b50 \u9605\u8bfb\u5efa\u8bae \u65b0\u5f00\u53d1\u8005onboarding \u5fc5\u8bfb : development_guide_2025_09.md \u91cd\u8981 : testing_strategy_2025_09.md \u6309\u7167\u6587\u6863\u9010\u6b65\u914d\u7f6e\u5f00\u53d1\u73af\u5883 \u6709\u7ecf\u9a8c\u5f00\u53d1\u8005 \u91cd\u70b9\u5173\u6ce8\u9879\u76ee\u7279\u5b9a\u7684\u89c4\u8303\u548c\u5de5\u5177\u914d\u7f6e \u66f4\u65b0\u9891\u7387 \u6708\u5ea6\u66f4\u65b0\u6216\u5de5\u5177\u94fe\u53d8\u66f4\u65f6\u66f4\u65b0","title":"\u5f00\u53d1\u6587\u6863"},{"location":"03_development/#_1","text":"\u672c\u76ee\u5f55\u5305\u542b\u5f00\u53d1\u73af\u5883\u914d\u7f6e\u3001\u7f16\u7801\u89c4\u8303\u3001\u6d4b\u8bd5\u7b56\u7565\u7b49\u5f00\u53d1\u8005\u5fc5\u9700\u6587\u6863\u3002","title":"\u5f00\u53d1\u6587\u6863"},{"location":"03_development/#_2","text":"","title":"\u6587\u6863\u5217\u8868"},{"location":"03_development/#_3","text":"development_guide_2025_09.md - \u5f00\u53d1\u73af\u5883\u4e0e\u5de5\u4f5c\u6d41\uff08\u2b50\u2b50\u2b50\u2b50\u2b50 \u5fc5\u8bfb\uff09 \u73af\u5883\u8bbe\u7f6e\u6b65\u9aa4 \u5f00\u53d1\u5de5\u5177\u914d\u7f6e \u4ee3\u7801\u8d28\u91cf\u68c0\u67e5 \u5e38\u89c1\u95ee\u9898\u89e3\u51b3","title":"\ud83d\udee0\ufe0f \u5f00\u53d1\u73af\u5883"},{"location":"03_development/#_4","text":"testing_strategy_2025_09.md - \u6d4b\u8bd5\u4e0e\u8d28\u91cf\u4fdd\u969c \u6d4b\u8bd5\u6846\u67b6\u914d\u7f6e \u5355\u5143\u6d4b\u8bd5\u7f16\u5199\u89c4\u8303 \u96c6\u6210\u6d4b\u8bd5\u7b56\u7565 \u8986\u76d6\u7387\u8981\u6c42","title":"\ud83e\uddea \u6d4b\u8bd5\u7b56\u7565"},{"location":"03_development/#_5","text":"","title":"\u5f00\u53d1\u89c4\u8303"},{"location":"03_development/#_6","text":"\u9075\u5faaPEP8\u89c4\u8303 \u4f7f\u7528Black\u8fdb\u884c\u4ee3\u7801\u683c\u5f0f\u5316 \u4f7f\u7528Ruff\u8fdb\u884c\u4ee3\u7801\u68c0\u67e5 \u6240\u6709\u51fd\u6570\u5fc5\u987b\u6709\u7c7b\u578b\u6ce8\u89e3","title":"\u4ee3\u7801\u89c4\u8303"},{"location":"03_development/#_7","text":"\u65b0\u529f\u80fd\u5fc5\u987b\u5148\u5199\u6d4b\u8bd5 \u6d4b\u8bd5\u8986\u76d6\u7387\u5fc5\u987b\u8fbe\u523080%\u4ee5\u4e0a API\u6d4b\u8bd5\u9700\u8981\u5f02\u6b65\u652f\u6301","title":"\u6d4b\u8bd5\u8981\u6c42"},{"location":"03_development/#_8","text":"","title":"\u5de5\u5177\u94fe"},{"location":"03_development/#_9","text":"uv : \u63a8\u8350\u7684\u5305\u7ba1\u7406\u5de5\u5177\uff08\u6bd4pip\u66f4\u5feb\uff09 pip : \u5907\u9009\u65b9\u6848","title":"\u5305\u7ba1\u7406"},{"location":"03_development/#_10","text":"black : \u4ee3\u7801\u683c\u5f0f\u5316 isort : \u5bfc\u5165\u6392\u5e8f ruff : \u4ee3\u7801\u68c0\u67e5 mypy : \u7c7b\u578b\u68c0\u67e5 pre-commit : \u9884\u63d0\u4ea4\u94a9\u5b50","title":"\u4ee3\u7801\u8d28\u91cf"},{"location":"03_development/#_11","text":"","title":"\u9605\u8bfb\u5efa\u8bae"},{"location":"03_development/#onboarding","text":"\u5fc5\u8bfb : development_guide_2025_09.md \u91cd\u8981 : testing_strategy_2025_09.md \u6309\u7167\u6587\u6863\u9010\u6b65\u914d\u7f6e\u5f00\u53d1\u73af\u5883","title":"\u65b0\u5f00\u53d1\u8005onboarding"},{"location":"03_development/#_12","text":"\u91cd\u70b9\u5173\u6ce8\u9879\u76ee\u7279\u5b9a\u7684\u89c4\u8303\u548c\u5de5\u5177\u914d\u7f6e","title":"\u6709\u7ecf\u9a8c\u5f00\u53d1\u8005"},{"location":"03_development/#_13","text":"\u6708\u5ea6\u66f4\u65b0\u6216\u5de5\u5177\u94fe\u53d8\u66f4\u65f6\u66f4\u65b0","title":"\u66f4\u65b0\u9891\u7387"},{"location":"03_development/development_guide_2025_09/","text":"\u80a1\u7968\u4f30\u503c\u7cfb\u7edf\u5f00\u53d1\u6307\u5357 \u6700\u540e\u66f4\u65b0: 2025-09-22 \u6982\u8ff0 \u672c\u6307\u5357\u9762\u5411\u9879\u76ee\u7684\u65b0\u5f00\u53d1\u8005\u548c\u7ef4\u62a4\u8005\uff0c\u63d0\u4f9b\u5b8c\u6574\u7684\u5f00\u53d1\u73af\u5883\u8bbe\u7f6e\u3001\u4ee3\u7801\u89c4\u8303\u3001\u6d4b\u8bd5\u7b56\u7565\u548c\u90e8\u7f72\u6d41\u7a0b\u3002\u9879\u76ee\u5f53\u524d\u7248\u672c(3.0)\u5df2\u8fbe\u5230\u751f\u4ea7\u7ea7\u6807\u51c6\u3002 \u5feb\u901f\u5f00\u59cb \u73af\u5883\u8981\u6c42 Python 3.9+ PostgreSQL 12+ (\u53ef\u9009\uff0c\u7528\u4e8e\u6570\u636e\u9a8c\u8bc1) Redis (\u53ef\u9009\uff0c\u7528\u4e8e\u7f13\u5b58) \u5f00\u53d1\u73af\u5883\u8bbe\u7f6e # 1. \u514b\u9686\u4ed3\u5e93 git clone <repository-url> cd stock_vale_valuation_3.0 # 2. \u4f7f\u7528uv\u521b\u5efa\u865a\u62df\u73af\u5883 (\u63a8\u8350) uv venv source .venv/bin/activate # Linux/Mac # .venv\\Scripts\\activate # Windows # 3. \u5b89\u88c5\u4f9d\u8d56 uv pip install -e \".[dev,test]\" # 4. \u914d\u7f6e\u73af\u5883\u53d8\u91cf cp .env.example .env # \u7f16\u8f91 .env \u6587\u4ef6\uff0c\u586b\u5165\u5fc5\u8981\u7684\u914d\u7f6e # 5. \u5b89\u88c5pre-commit\u94a9\u5b50 pre-commit install # 6. \u9a8c\u8bc1\u5b89\u88c5 pytest tests/unit/ -v \u6838\u5fc3\u914d\u7f6e\u9879 \u7f16\u8f91 .env \u6587\u4ef6\uff1a # \u6570\u636e\u6e90\u914d\u7f6e DATA_SOURCE=tushare # tushare/postgres/hybrid TUSHARE_TOKEN=your_token_here OCL_AGGREGATION_MODE=standard # standard/pg # LLM\u914d\u7f6e LLM_PROVIDER=deepseek # deepseek/custom_openai DEEPSEEK_API_KEY=your_key_here DEEPSEEK_MODEL_NAME=deepseek-chat # WACC\u9ed8\u8ba4\u53c2\u6570 RISK_FREE_RATE=0.03 MARKET_RISK_PREMIUM=0.05 DEFAULT_BETA=1.0 \u9879\u76ee\u67b6\u6784 \u76ee\u5f55\u7ed3\u6784 src/ \u251c\u2500\u2500 api/ # FastAPI\u63a5\u53e3\u5c42 \u2502 \u251c\u2500\u2500 main.py # API\u5165\u53e3 \u2502 \u251c\u2500\u2500 models.py # Pydantic\u6a21\u578b \u2502 \u251c\u2500\u2500 llm_utils.py # LLM\u96c6\u6210 \u2502 \u2514\u2500\u2500 utils.py # API\u5de5\u5177\u51fd\u6570 \u251c\u2500\u2500 core/ # \u6838\u5fc3\u4e1a\u52a1\u903b\u8f91 \u2502 \u251c\u2500\u2500 calculators/ # DCF\u8ba1\u7b97\u5668\u96c6\u7fa4 \u2502 \u2502 \u251c\u2500\u2500 dcf/ # DCF\u4e13\u7528\u8ba1\u7b97\u5668 \u2502 \u2502 \u251c\u2500\u2500 base.py # \u8ba1\u7b97\u5668\u57fa\u7c7b \u2502 \u2502 \u2514\u2500\u2500 nwc_calculator.py \u2502 \u251c\u2500\u2500 financial/ # \u8d22\u52a1\u5206\u6790\u6a21\u5757 \u2502 \u2502 \u251c\u2500\u2500 processor.py # \u6570\u636e\u5904\u7406\u5f15\u64ce \u2502 \u2502 \u2514\u2500\u2500 forecaster.py # \u8d22\u52a1\u9884\u6d4b\u5f15\u64ce \u2502 \u2514\u2500\u2500 screener/ # \u80a1\u7968\u7b5b\u9009\u5668 \u251c\u2500\u2500 data/ # \u6570\u636e\u5c42 \u2502 \u251c\u2500\u2500 fetchers/ # \u6570\u636e\u83b7\u53d6\u5668 \u2502 \u2514\u2500\u2500 processors/ # \u6570\u636e\u5904\u7406\u5668 \u251c\u2500\u2500 services/ # \u670d\u52a1\u5c42 \u2514\u2500\u2500 config/ # \u914d\u7f6e\u6587\u4ef6 frontend-streamlit/ # Streamlit\u524d\u7aef tests/ # \u6d4b\u8bd5\u5957\u4ef6 dev_docs/ # \u5f00\u53d1\u6587\u6863 \u6838\u5fc3\u8bbe\u8ba1\u6a21\u5f0f 1. \u6a21\u5757\u5316\u8ba1\u7b97\u5668\u6a21\u5f0f \u6bcf\u4e2aDCF\u8ba1\u7b97\u6b65\u9aa4\u90fd\u662f\u72ec\u7acb\u7684\u8ba1\u7b97\u5668\u7c7b\uff1a # \u4f8b: WACC\u8ba1\u7b97\u5668 class WaccCalculator: def calculate_wacc(self, market_value_equity: Decimal, market_value_debt: Decimal, cost_of_equity: Decimal, cost_of_debt: Decimal, tax_rate: Decimal) -> WaccResult: # \u8ba1\u7b97\u903b\u8f91 pass 2. \u6570\u636e\u6e90\u62bd\u8c61\u6a21\u5f0f \u7edf\u4e00\u7684\u6570\u636e\u83b7\u53d6\u63a5\u53e3\u652f\u6301\u591a\u6570\u636e\u6e90\uff1a class BaseFetcher: def get_stock_info(self) -> dict: pass def get_latest_price(self, date: str) -> float: pass def get_raw_financial_data(self, years: int) -> dict: pass class TushareAshareFetcher(BaseFetcher): pass class AshareDataFetcher(BaseFetcher): pass # PostgreSQL 3. \u670d\u52a1\u5c42\u7f16\u6392\u6a21\u5f0f ValuationService\u534f\u8c03\u5404\u4e2a\u8ba1\u7b97\u5668\uff1a class ValuationService: def perform_valuation(self, request: StockValuationRequest) -> StockValuationResponse: # 1. \u6570\u636e\u83b7\u53d6 # 2. \u6570\u636e\u5904\u7406 # 3. DCF\u8ba1\u7b97\u94fe\u8def # 4. LLM\u5206\u6790 # 5. \u7ed3\u679c\u5c01\u88c5 \u5f00\u53d1\u5de5\u4f5c\u6d41 \u4ee3\u7801\u63d0\u4ea4\u6d41\u7a0b \u521b\u5efa\u529f\u80fd\u5206\u652f git checkout -b feature/your-feature-name \u5f00\u53d1\u4e0e\u6d4b\u8bd5 # \u4ee3\u7801\u5f00\u53d1 # ... # \u8fd0\u884c\u4ee3\u7801\u8d28\u91cf\u68c0\u67e5 pre-commit run --all-files # \u8fd0\u884c\u76f8\u5173\u6d4b\u8bd5 pytest tests/test_your_module.py -v # \u8fd0\u884c\u8986\u76d6\u7387\u68c0\u67e5 pytest --cov=src tests/ --cov-report=html \u63d0\u4ea4\u4ee3\u7801 git add . git commit -m \"feat(module): add new feature description\" \u63a8\u9001\u4e0e\u5408\u5e76 git push origin feature/your-feature-name # \u521b\u5efaPull Request \u4ee3\u7801\u89c4\u8303 Python\u4ee3\u7801\u98ce\u683c \u683c\u5f0f\u5316 : Black (line-length=88) \u5bfc\u5165\u6392\u5e8f : isort (profile=black) \u9759\u6001\u68c0\u67e5 : Ruff + MyPy(\u9010\u6b65\u542f\u7528) \u5b89\u5168\u68c0\u67e5 : Bandit \u63d0\u4ea4\u4fe1\u606f\u89c4\u8303 feat(module): add new feature fix(module): fix bug description docs(module): update documentation test(module): add tests for feature refactor(module): refactor code style(module): format code chore: update dependencies \u4ee3\u7801\u6ce8\u91ca\u89c4\u8303 def calculate_dcf_value( self, ufcf_projections: List[Decimal], terminal_value: Decimal, wacc: Decimal ) -> Decimal: \"\"\" \u8ba1\u7b97DCF\u4f01\u4e1a\u4ef7\u503c Args: ufcf_projections: \u9884\u6d4b\u671f\u65e0\u6760\u6746\u81ea\u7531\u73b0\u91d1\u6d41\u5217\u8868 terminal_value: \u7ec8\u503c wacc: \u52a0\u6743\u5e73\u5747\u8d44\u672c\u6210\u672c Returns: Decimal: \u4f01\u4e1a\u4ef7\u503c Raises: ValueError: \u5f53WACC\u4e3a\u8d1f\u6570\u6216UFCF\u4e3a\u7a7a\u65f6 \"\"\" # \u5b9e\u73b0\u903b\u8f91 \u6d4b\u8bd5\u7b56\u7565 \u6d4b\u8bd5\u5206\u7c7b \u5355\u5143\u6d4b\u8bd5 : \u6d4b\u8bd5\u5355\u4e2a\u51fd\u6570/\u7c7b\u7684\u903b\u8f91 \u96c6\u6210\u6d4b\u8bd5 : \u6d4b\u8bd5\u6a21\u5757\u95f4\u4ea4\u4e92 API\u6d4b\u8bd5 : \u6d4b\u8bd5FastAPI\u7aef\u70b9 \u7aef\u5230\u7aef\u6d4b\u8bd5 : \u6d4b\u8bd5\u5b8c\u6574\u4f30\u503c\u6d41\u7a0b \u6d4b\u8bd5\u547d\u4ee4 # \u8fd0\u884c\u6240\u6709\u6d4b\u8bd5 pytest # \u8fd0\u884c\u7279\u5b9a\u6a21\u5757\u6d4b\u8bd5 pytest tests/test_wacc_calculator.py -v # \u8fd0\u884cAPI\u6d4b\u8bd5 pytest tests/api/ -v # \u751f\u6210\u8986\u76d6\u7387\u62a5\u544a pytest --cov=src --cov-report=html # \u53ea\u8fd0\u884c\u5feb\u901f\u6d4b\u8bd5(\u6392\u9664\u6162\u6d4b\u8bd5) pytest -m \"not slow\" \u6d4b\u8bd5\u6570\u636e \u4f7f\u7528 tests/fixtures/ \u76ee\u5f55\u5b58\u653e\u6d4b\u8bd5\u6570\u636e Mock\u5916\u90e8API\u8c03\u7528\u907f\u514d\u4f9d\u8d56\u5916\u90e8\u670d\u52a1 \u53c2\u6570\u5316\u6d4b\u8bd5\u8986\u76d6\u8fb9\u754c\u60c5\u51b5 \u8c03\u8bd5\u6280\u5de7 1. \u65e5\u5fd7\u914d\u7f6e import logging logging.basicConfig( level=logging.INFO, format='%(asctime)s - %(name)s - %(levelname)s - %(message)s' ) 2. \u73af\u5883\u53d8\u91cf\u8c03\u8bd5 # \u542f\u7528\u8be6\u7ec6\u65e5\u5fd7 export LOG_LEVEL=DEBUG # \u4f7f\u7528\u6d4b\u8bd5\u6570\u636e\u6e90 export DATA_SOURCE=postgres # \u8df3\u8fc7LLM\u8c03\u7528 export LLM_PROVIDER=mock 3. API\u8c03\u8bd5 # \u542f\u52a8API\u670d\u52a1\u5668 uvicorn src.api.main:app --reload --port 8124 # \u8bbf\u95eeSwagger\u6587\u6863 open http://localhost:8124/docs # \u6d4b\u8bd5API\u7aef\u70b9 curl -X POST \"http://localhost:8124/api/v1/valuation\" \\ -H \"Content-Type: application/json\" \\ -d '{\"ts_code\": \"600519.SH\", \"valuation_date\": \"2025-09-22\"}' \u6027\u80fd\u4f18\u5316 1. \u6570\u636e\u83b7\u53d6\u4f18\u5316 \u4f7f\u7528\u7f13\u5b58\u51cf\u5c11\u91cd\u590dAPI\u8c03\u7528 \u6279\u91cf\u83b7\u53d6\u6570\u636e\u907f\u514d\u5355\u6b21\u8c03\u7528 \u5f02\u6b65\u5904\u7406\u63d0\u9ad8\u5e76\u53d1\u6027\u80fd 2. \u8ba1\u7b97\u4f18\u5316 \u4f7f\u7528Decimal\u907f\u514d\u6d6e\u70b9\u7cbe\u5ea6\u95ee\u9898 \u5411\u91cf\u5316\u8ba1\u7b97\u5904\u7406\u5927\u91cf\u6570\u636e \u60f0\u6027\u8ba1\u7b97\u51cf\u5c11\u4e0d\u5fc5\u8981\u8ba1\u7b97 3. \u5185\u5b58\u4f18\u5316 \u53ca\u65f6\u91ca\u653e\u5927\u578bDataFrame \u4f7f\u7528\u751f\u6210\u5668\u5904\u7406\u5927\u6570\u636e\u96c6 \u907f\u514d\u91cd\u590d\u521b\u5efa\u5927\u5bf9\u8c61 \u90e8\u7f72\u6307\u5357 \u672c\u5730\u90e8\u7f72 Streamlit\u524d\u7aef streamlit run frontend-streamlit/streamlit_app.py --server.port 8501 API\u670d\u52a1 uvicorn src.api.main:app --host 0.0.0.0 --port 8124 --reload Docker\u90e8\u7f72 # \u6784\u5efa\u955c\u50cf docker build -t stock-valuation:latest . # \u8fd0\u884c\u5bb9\u5668 docker run -p 8124:8124 -p 8501:8501 \\ --env-file .env \\ stock-valuation:latest \u751f\u4ea7\u90e8\u7f72\u6ce8\u610f\u4e8b\u9879 \u73af\u5883\u53d8\u91cf : \u4f7f\u7528Secret\u7ba1\u7406\u654f\u611f\u4fe1\u606f \u6570\u636e\u5e93\u8fde\u63a5 : \u914d\u7f6e\u8fde\u63a5\u6c60\u548c\u8d85\u65f6 API\u9650\u6d41 : \u914d\u7f6eTuShare API\u8c03\u7528\u9891\u7387\u9650\u5236 \u76d1\u63a7 : \u8bbe\u7f6e\u5065\u5eb7\u68c0\u67e5\u548c\u6027\u80fd\u76d1\u63a7 \u5907\u4efd : \u5b9a\u671f\u5907\u4efd\u914d\u7f6e\u548c\u91cd\u8981\u6570\u636e \u6545\u969c\u6392\u67e5 \u5e38\u89c1\u95ee\u9898 1. TuShare API\u8c03\u7528\u5931\u8d25 # \u68c0\u67e5token\u914d\u7f6e echo $TUSHARE_TOKEN # \u68c0\u67e5\u7f51\u7edc\u8fde\u63a5 ping api.tushare.pro # \u67e5\u770bAPI\u8c03\u7528\u65e5\u5fd7 grep \"tushare\" logs/app.log 2. \u6570\u636e\u6e05\u6d17\u5f02\u5e38 # \u68c0\u67e5\u6570\u636e\u8d28\u91cf python scripts/data_quality_check.py # \u67e5\u770b\u6e05\u6d17\u8b66\u544a grep \"\u8b66\u544a\" logs/processor.log 3. DCF\u8ba1\u7b97\u9519\u8bef # \u8fd0\u884c\u5355\u5143\u6d4b\u8bd5 pytest tests/test_dcf_calculator.py -v # \u68c0\u67e5\u8f93\u5165\u6570\u636e python scripts/debug_dcf_inputs.py --ts_code 600519.SH \u8c03\u8bd5\u5de5\u5177 E2E\u5bf9\u6bd4\u811a\u672c : scripts/e2e_compare_sources.py \u6570\u636e\u63a2\u6d4b\u811a\u672c : scripts/tushare_alignment_probe.py \u6027\u80fd\u5206\u6790 : cProfile + snakeviz \u8d21\u732e\u6307\u5357 \u4ee3\u7801\u8d21\u732e\u6d41\u7a0b Fork\u9879\u76ee\u5230\u4e2a\u4eba\u4ed3\u5e93 \u521b\u5efa\u529f\u80fd\u5206\u652f \u5b9e\u73b0\u529f\u80fd\u5e76\u6dfb\u52a0\u6d4b\u8bd5 \u786e\u4fdd\u6240\u6709\u6d4b\u8bd5\u901a\u8fc7 \u63d0\u4ea4Pull Request \u4ee3\u7801\u5ba1\u67e5\u4e0e\u5408\u5e76 \u6587\u6863\u8d21\u732e \u66f4\u65b0\u76f8\u5173\u7684dev_docs\u6587\u6863 \u786e\u4fdd\u4ee3\u7801\u6ce8\u91ca\u5b8c\u6574 \u6dfb\u52a0\u793a\u4f8b\u4ee3\u7801 \u66f4\u65b0CLAUDE.md\u5982\u6709\u67b6\u6784\u53d8\u66f4 \u95ee\u9898\u62a5\u544a \u4f7f\u7528GitHub Issues\u62a5\u544a\u95ee\u9898\uff0c\u5305\u542b\uff1a - \u95ee\u9898\u63cf\u8ff0 - \u91cd\u73b0\u6b65\u9aa4 - \u73af\u5883\u4fe1\u606f - \u671f\u671b\u884c\u4e3a - \u5b9e\u9645\u884c\u4e3a \u5b66\u4e60\u8d44\u6e90 \u9879\u76ee\u76f8\u5173 DCF\u4f30\u503c\u6a21\u578b\u7406\u8bba \u8d22\u52a1\u62a5\u8868\u5206\u6790 Python\u5f02\u6b65\u7f16\u7a0b FastAPI\u6846\u67b6 Streamlit\u6846\u67b6 \u63a8\u8350\u9605\u8bfb \u300a\u4f30\u503c\uff1a\u96be\u70b9\u3001\u89e3\u51b3\u65b9\u6848\u53ca\u76f8\u5173\u6848\u4f8b\u300b \u300a\u8d22\u52a1\u62a5\u8868\u5206\u6790\u4e0e\u8bc1\u5238\u4f30\u503c\u300b \u300aClean Code\u300b(\u4ee3\u7801\u89c4\u8303) \u300aEffective Python\u300b(Python\u6700\u4f73\u5b9e\u8df5) \u8054\u7cfb\u65b9\u5f0f \u6280\u672f\u95ee\u9898 : \u521b\u5efaGitHub Issue \u529f\u80fd\u5efa\u8bae : \u901a\u8fc7Pull Request\u63d0\u4ea4 \u7d27\u6025\u95ee\u9898 : \u8054\u7cfb\u9879\u76ee\u7ef4\u62a4\u8005 \u672c\u6307\u5357\u4f1a\u968f\u7740\u9879\u76ee\u53d1\u5c55\u6301\u7eed\u66f4\u65b0\uff0c\u6b22\u8fce\u63d0\u4f9b\u53cd\u9988\u548c\u6539\u8fdb\u5efa\u8bae\u3002","title":"\u80a1\u7968\u4f30\u503c\u7cfb\u7edf\u5f00\u53d1\u6307\u5357"},{"location":"03_development/development_guide_2025_09/#_1","text":"\u6700\u540e\u66f4\u65b0: 2025-09-22","title":"\u80a1\u7968\u4f30\u503c\u7cfb\u7edf\u5f00\u53d1\u6307\u5357"},{"location":"03_development/development_guide_2025_09/#_2","text":"\u672c\u6307\u5357\u9762\u5411\u9879\u76ee\u7684\u65b0\u5f00\u53d1\u8005\u548c\u7ef4\u62a4\u8005\uff0c\u63d0\u4f9b\u5b8c\u6574\u7684\u5f00\u53d1\u73af\u5883\u8bbe\u7f6e\u3001\u4ee3\u7801\u89c4\u8303\u3001\u6d4b\u8bd5\u7b56\u7565\u548c\u90e8\u7f72\u6d41\u7a0b\u3002\u9879\u76ee\u5f53\u524d\u7248\u672c(3.0)\u5df2\u8fbe\u5230\u751f\u4ea7\u7ea7\u6807\u51c6\u3002","title":"\u6982\u8ff0"},{"location":"03_development/development_guide_2025_09/#_3","text":"","title":"\u5feb\u901f\u5f00\u59cb"},{"location":"03_development/development_guide_2025_09/#_4","text":"Python 3.9+ PostgreSQL 12+ (\u53ef\u9009\uff0c\u7528\u4e8e\u6570\u636e\u9a8c\u8bc1) Redis (\u53ef\u9009\uff0c\u7528\u4e8e\u7f13\u5b58)","title":"\u73af\u5883\u8981\u6c42"},{"location":"03_development/development_guide_2025_09/#_5","text":"# 1. \u514b\u9686\u4ed3\u5e93 git clone <repository-url> cd stock_vale_valuation_3.0 # 2. \u4f7f\u7528uv\u521b\u5efa\u865a\u62df\u73af\u5883 (\u63a8\u8350) uv venv source .venv/bin/activate # Linux/Mac # .venv\\Scripts\\activate # Windows # 3. \u5b89\u88c5\u4f9d\u8d56 uv pip install -e \".[dev,test]\" # 4. \u914d\u7f6e\u73af\u5883\u53d8\u91cf cp .env.example .env # \u7f16\u8f91 .env \u6587\u4ef6\uff0c\u586b\u5165\u5fc5\u8981\u7684\u914d\u7f6e # 5. \u5b89\u88c5pre-commit\u94a9\u5b50 pre-commit install # 6. \u9a8c\u8bc1\u5b89\u88c5 pytest tests/unit/ -v","title":"\u5f00\u53d1\u73af\u5883\u8bbe\u7f6e"},{"location":"03_development/development_guide_2025_09/#_6","text":"\u7f16\u8f91 .env \u6587\u4ef6\uff1a # \u6570\u636e\u6e90\u914d\u7f6e DATA_SOURCE=tushare # tushare/postgres/hybrid TUSHARE_TOKEN=your_token_here OCL_AGGREGATION_MODE=standard # standard/pg # LLM\u914d\u7f6e LLM_PROVIDER=deepseek # deepseek/custom_openai DEEPSEEK_API_KEY=your_key_here DEEPSEEK_MODEL_NAME=deepseek-chat # WACC\u9ed8\u8ba4\u53c2\u6570 RISK_FREE_RATE=0.03 MARKET_RISK_PREMIUM=0.05 DEFAULT_BETA=1.0","title":"\u6838\u5fc3\u914d\u7f6e\u9879"},{"location":"03_development/development_guide_2025_09/#_7","text":"","title":"\u9879\u76ee\u67b6\u6784"},{"location":"03_development/development_guide_2025_09/#_8","text":"src/ \u251c\u2500\u2500 api/ # FastAPI\u63a5\u53e3\u5c42 \u2502 \u251c\u2500\u2500 main.py # API\u5165\u53e3 \u2502 \u251c\u2500\u2500 models.py # Pydantic\u6a21\u578b \u2502 \u251c\u2500\u2500 llm_utils.py # LLM\u96c6\u6210 \u2502 \u2514\u2500\u2500 utils.py # API\u5de5\u5177\u51fd\u6570 \u251c\u2500\u2500 core/ # \u6838\u5fc3\u4e1a\u52a1\u903b\u8f91 \u2502 \u251c\u2500\u2500 calculators/ # DCF\u8ba1\u7b97\u5668\u96c6\u7fa4 \u2502 \u2502 \u251c\u2500\u2500 dcf/ # DCF\u4e13\u7528\u8ba1\u7b97\u5668 \u2502 \u2502 \u251c\u2500\u2500 base.py # \u8ba1\u7b97\u5668\u57fa\u7c7b \u2502 \u2502 \u2514\u2500\u2500 nwc_calculator.py \u2502 \u251c\u2500\u2500 financial/ # \u8d22\u52a1\u5206\u6790\u6a21\u5757 \u2502 \u2502 \u251c\u2500\u2500 processor.py # \u6570\u636e\u5904\u7406\u5f15\u64ce \u2502 \u2502 \u2514\u2500\u2500 forecaster.py # \u8d22\u52a1\u9884\u6d4b\u5f15\u64ce \u2502 \u2514\u2500\u2500 screener/ # \u80a1\u7968\u7b5b\u9009\u5668 \u251c\u2500\u2500 data/ # \u6570\u636e\u5c42 \u2502 \u251c\u2500\u2500 fetchers/ # \u6570\u636e\u83b7\u53d6\u5668 \u2502 \u2514\u2500\u2500 processors/ # \u6570\u636e\u5904\u7406\u5668 \u251c\u2500\u2500 services/ # \u670d\u52a1\u5c42 \u2514\u2500\u2500 config/ # \u914d\u7f6e\u6587\u4ef6 frontend-streamlit/ # Streamlit\u524d\u7aef tests/ # \u6d4b\u8bd5\u5957\u4ef6 dev_docs/ # \u5f00\u53d1\u6587\u6863","title":"\u76ee\u5f55\u7ed3\u6784"},{"location":"03_development/development_guide_2025_09/#_9","text":"","title":"\u6838\u5fc3\u8bbe\u8ba1\u6a21\u5f0f"},{"location":"03_development/development_guide_2025_09/#1","text":"\u6bcf\u4e2aDCF\u8ba1\u7b97\u6b65\u9aa4\u90fd\u662f\u72ec\u7acb\u7684\u8ba1\u7b97\u5668\u7c7b\uff1a # \u4f8b: WACC\u8ba1\u7b97\u5668 class WaccCalculator: def calculate_wacc(self, market_value_equity: Decimal, market_value_debt: Decimal, cost_of_equity: Decimal, cost_of_debt: Decimal, tax_rate: Decimal) -> WaccResult: # \u8ba1\u7b97\u903b\u8f91 pass","title":"1. \u6a21\u5757\u5316\u8ba1\u7b97\u5668\u6a21\u5f0f"},{"location":"03_development/development_guide_2025_09/#2","text":"\u7edf\u4e00\u7684\u6570\u636e\u83b7\u53d6\u63a5\u53e3\u652f\u6301\u591a\u6570\u636e\u6e90\uff1a class BaseFetcher: def get_stock_info(self) -> dict: pass def get_latest_price(self, date: str) -> float: pass def get_raw_financial_data(self, years: int) -> dict: pass class TushareAshareFetcher(BaseFetcher): pass class AshareDataFetcher(BaseFetcher): pass # PostgreSQL","title":"2. \u6570\u636e\u6e90\u62bd\u8c61\u6a21\u5f0f"},{"location":"03_development/development_guide_2025_09/#3","text":"ValuationService\u534f\u8c03\u5404\u4e2a\u8ba1\u7b97\u5668\uff1a class ValuationService: def perform_valuation(self, request: StockValuationRequest) -> StockValuationResponse: # 1. \u6570\u636e\u83b7\u53d6 # 2. \u6570\u636e\u5904\u7406 # 3. DCF\u8ba1\u7b97\u94fe\u8def # 4. LLM\u5206\u6790 # 5. \u7ed3\u679c\u5c01\u88c5","title":"3. \u670d\u52a1\u5c42\u7f16\u6392\u6a21\u5f0f"},{"location":"03_development/development_guide_2025_09/#_10","text":"","title":"\u5f00\u53d1\u5de5\u4f5c\u6d41"},{"location":"03_development/development_guide_2025_09/#_11","text":"\u521b\u5efa\u529f\u80fd\u5206\u652f git checkout -b feature/your-feature-name \u5f00\u53d1\u4e0e\u6d4b\u8bd5 # \u4ee3\u7801\u5f00\u53d1 # ... # \u8fd0\u884c\u4ee3\u7801\u8d28\u91cf\u68c0\u67e5 pre-commit run --all-files # \u8fd0\u884c\u76f8\u5173\u6d4b\u8bd5 pytest tests/test_your_module.py -v # \u8fd0\u884c\u8986\u76d6\u7387\u68c0\u67e5 pytest --cov=src tests/ --cov-report=html \u63d0\u4ea4\u4ee3\u7801 git add . git commit -m \"feat(module): add new feature description\" \u63a8\u9001\u4e0e\u5408\u5e76 git push origin feature/your-feature-name # \u521b\u5efaPull Request","title":"\u4ee3\u7801\u63d0\u4ea4\u6d41\u7a0b"},{"location":"03_development/development_guide_2025_09/#_12","text":"","title":"\u4ee3\u7801\u89c4\u8303"},{"location":"03_development/development_guide_2025_09/#python","text":"\u683c\u5f0f\u5316 : Black (line-length=88) \u5bfc\u5165\u6392\u5e8f : isort (profile=black) \u9759\u6001\u68c0\u67e5 : Ruff + MyPy(\u9010\u6b65\u542f\u7528) \u5b89\u5168\u68c0\u67e5 : Bandit","title":"Python\u4ee3\u7801\u98ce\u683c"},{"location":"03_development/development_guide_2025_09/#_13","text":"feat(module): add new feature fix(module): fix bug description docs(module): update documentation test(module): add tests for feature refactor(module): refactor code style(module): format code chore: update dependencies","title":"\u63d0\u4ea4\u4fe1\u606f\u89c4\u8303"},{"location":"03_development/development_guide_2025_09/#_14","text":"def calculate_dcf_value( self, ufcf_projections: List[Decimal], terminal_value: Decimal, wacc: Decimal ) -> Decimal: \"\"\" \u8ba1\u7b97DCF\u4f01\u4e1a\u4ef7\u503c Args: ufcf_projections: \u9884\u6d4b\u671f\u65e0\u6760\u6746\u81ea\u7531\u73b0\u91d1\u6d41\u5217\u8868 terminal_value: \u7ec8\u503c wacc: \u52a0\u6743\u5e73\u5747\u8d44\u672c\u6210\u672c Returns: Decimal: \u4f01\u4e1a\u4ef7\u503c Raises: ValueError: \u5f53WACC\u4e3a\u8d1f\u6570\u6216UFCF\u4e3a\u7a7a\u65f6 \"\"\" # \u5b9e\u73b0\u903b\u8f91","title":"\u4ee3\u7801\u6ce8\u91ca\u89c4\u8303"},{"location":"03_development/development_guide_2025_09/#_15","text":"","title":"\u6d4b\u8bd5\u7b56\u7565"},{"location":"03_development/development_guide_2025_09/#_16","text":"\u5355\u5143\u6d4b\u8bd5 : \u6d4b\u8bd5\u5355\u4e2a\u51fd\u6570/\u7c7b\u7684\u903b\u8f91 \u96c6\u6210\u6d4b\u8bd5 : \u6d4b\u8bd5\u6a21\u5757\u95f4\u4ea4\u4e92 API\u6d4b\u8bd5 : \u6d4b\u8bd5FastAPI\u7aef\u70b9 \u7aef\u5230\u7aef\u6d4b\u8bd5 : \u6d4b\u8bd5\u5b8c\u6574\u4f30\u503c\u6d41\u7a0b","title":"\u6d4b\u8bd5\u5206\u7c7b"},{"location":"03_development/development_guide_2025_09/#_17","text":"# \u8fd0\u884c\u6240\u6709\u6d4b\u8bd5 pytest # \u8fd0\u884c\u7279\u5b9a\u6a21\u5757\u6d4b\u8bd5 pytest tests/test_wacc_calculator.py -v # \u8fd0\u884cAPI\u6d4b\u8bd5 pytest tests/api/ -v # \u751f\u6210\u8986\u76d6\u7387\u62a5\u544a pytest --cov=src --cov-report=html # \u53ea\u8fd0\u884c\u5feb\u901f\u6d4b\u8bd5(\u6392\u9664\u6162\u6d4b\u8bd5) pytest -m \"not slow\"","title":"\u6d4b\u8bd5\u547d\u4ee4"},{"location":"03_development/development_guide_2025_09/#_18","text":"\u4f7f\u7528 tests/fixtures/ \u76ee\u5f55\u5b58\u653e\u6d4b\u8bd5\u6570\u636e Mock\u5916\u90e8API\u8c03\u7528\u907f\u514d\u4f9d\u8d56\u5916\u90e8\u670d\u52a1 \u53c2\u6570\u5316\u6d4b\u8bd5\u8986\u76d6\u8fb9\u754c\u60c5\u51b5","title":"\u6d4b\u8bd5\u6570\u636e"},{"location":"03_development/development_guide_2025_09/#_19","text":"","title":"\u8c03\u8bd5\u6280\u5de7"},{"location":"03_development/development_guide_2025_09/#1_1","text":"import logging logging.basicConfig( level=logging.INFO, format='%(asctime)s - %(name)s - %(levelname)s - %(message)s' )","title":"1. \u65e5\u5fd7\u914d\u7f6e"},{"location":"03_development/development_guide_2025_09/#2_1","text":"# \u542f\u7528\u8be6\u7ec6\u65e5\u5fd7 export LOG_LEVEL=DEBUG # \u4f7f\u7528\u6d4b\u8bd5\u6570\u636e\u6e90 export DATA_SOURCE=postgres # \u8df3\u8fc7LLM\u8c03\u7528 export LLM_PROVIDER=mock","title":"2. \u73af\u5883\u53d8\u91cf\u8c03\u8bd5"},{"location":"03_development/development_guide_2025_09/#3-api","text":"# \u542f\u52a8API\u670d\u52a1\u5668 uvicorn src.api.main:app --reload --port 8124 # \u8bbf\u95eeSwagger\u6587\u6863 open http://localhost:8124/docs # \u6d4b\u8bd5API\u7aef\u70b9 curl -X POST \"http://localhost:8124/api/v1/valuation\" \\ -H \"Content-Type: application/json\" \\ -d '{\"ts_code\": \"600519.SH\", \"valuation_date\": \"2025-09-22\"}'","title":"3. API\u8c03\u8bd5"},{"location":"03_development/development_guide_2025_09/#_20","text":"","title":"\u6027\u80fd\u4f18\u5316"},{"location":"03_development/development_guide_2025_09/#1_2","text":"\u4f7f\u7528\u7f13\u5b58\u51cf\u5c11\u91cd\u590dAPI\u8c03\u7528 \u6279\u91cf\u83b7\u53d6\u6570\u636e\u907f\u514d\u5355\u6b21\u8c03\u7528 \u5f02\u6b65\u5904\u7406\u63d0\u9ad8\u5e76\u53d1\u6027\u80fd","title":"1. \u6570\u636e\u83b7\u53d6\u4f18\u5316"},{"location":"03_development/development_guide_2025_09/#2_2","text":"\u4f7f\u7528Decimal\u907f\u514d\u6d6e\u70b9\u7cbe\u5ea6\u95ee\u9898 \u5411\u91cf\u5316\u8ba1\u7b97\u5904\u7406\u5927\u91cf\u6570\u636e \u60f0\u6027\u8ba1\u7b97\u51cf\u5c11\u4e0d\u5fc5\u8981\u8ba1\u7b97","title":"2. \u8ba1\u7b97\u4f18\u5316"},{"location":"03_development/development_guide_2025_09/#3_1","text":"\u53ca\u65f6\u91ca\u653e\u5927\u578bDataFrame \u4f7f\u7528\u751f\u6210\u5668\u5904\u7406\u5927\u6570\u636e\u96c6 \u907f\u514d\u91cd\u590d\u521b\u5efa\u5927\u5bf9\u8c61","title":"3. \u5185\u5b58\u4f18\u5316"},{"location":"03_development/development_guide_2025_09/#_21","text":"","title":"\u90e8\u7f72\u6307\u5357"},{"location":"03_development/development_guide_2025_09/#_22","text":"","title":"\u672c\u5730\u90e8\u7f72"},{"location":"03_development/development_guide_2025_09/#streamlit","text":"streamlit run frontend-streamlit/streamlit_app.py --server.port 8501","title":"Streamlit\u524d\u7aef"},{"location":"03_development/development_guide_2025_09/#api","text":"uvicorn src.api.main:app --host 0.0.0.0 --port 8124 --reload","title":"API\u670d\u52a1"},{"location":"03_development/development_guide_2025_09/#docker","text":"# \u6784\u5efa\u955c\u50cf docker build -t stock-valuation:latest . # \u8fd0\u884c\u5bb9\u5668 docker run -p 8124:8124 -p 8501:8501 \\ --env-file .env \\ stock-valuation:latest","title":"Docker\u90e8\u7f72"},{"location":"03_development/development_guide_2025_09/#_23","text":"\u73af\u5883\u53d8\u91cf : \u4f7f\u7528Secret\u7ba1\u7406\u654f\u611f\u4fe1\u606f \u6570\u636e\u5e93\u8fde\u63a5 : \u914d\u7f6e\u8fde\u63a5\u6c60\u548c\u8d85\u65f6 API\u9650\u6d41 : \u914d\u7f6eTuShare API\u8c03\u7528\u9891\u7387\u9650\u5236 \u76d1\u63a7 : \u8bbe\u7f6e\u5065\u5eb7\u68c0\u67e5\u548c\u6027\u80fd\u76d1\u63a7 \u5907\u4efd : \u5b9a\u671f\u5907\u4efd\u914d\u7f6e\u548c\u91cd\u8981\u6570\u636e","title":"\u751f\u4ea7\u90e8\u7f72\u6ce8\u610f\u4e8b\u9879"},{"location":"03_development/development_guide_2025_09/#_24","text":"","title":"\u6545\u969c\u6392\u67e5"},{"location":"03_development/development_guide_2025_09/#_25","text":"","title":"\u5e38\u89c1\u95ee\u9898"},{"location":"03_development/development_guide_2025_09/#1-tushare-api","text":"# \u68c0\u67e5token\u914d\u7f6e echo $TUSHARE_TOKEN # \u68c0\u67e5\u7f51\u7edc\u8fde\u63a5 ping api.tushare.pro # \u67e5\u770bAPI\u8c03\u7528\u65e5\u5fd7 grep \"tushare\" logs/app.log","title":"1. TuShare API\u8c03\u7528\u5931\u8d25"},{"location":"03_development/development_guide_2025_09/#2_3","text":"# \u68c0\u67e5\u6570\u636e\u8d28\u91cf python scripts/data_quality_check.py # \u67e5\u770b\u6e05\u6d17\u8b66\u544a grep \"\u8b66\u544a\" logs/processor.log","title":"2. \u6570\u636e\u6e05\u6d17\u5f02\u5e38"},{"location":"03_development/development_guide_2025_09/#3-dcf","text":"# \u8fd0\u884c\u5355\u5143\u6d4b\u8bd5 pytest tests/test_dcf_calculator.py -v # \u68c0\u67e5\u8f93\u5165\u6570\u636e python scripts/debug_dcf_inputs.py --ts_code 600519.SH","title":"3. DCF\u8ba1\u7b97\u9519\u8bef"},{"location":"03_development/development_guide_2025_09/#_26","text":"E2E\u5bf9\u6bd4\u811a\u672c : scripts/e2e_compare_sources.py \u6570\u636e\u63a2\u6d4b\u811a\u672c : scripts/tushare_alignment_probe.py \u6027\u80fd\u5206\u6790 : cProfile + snakeviz","title":"\u8c03\u8bd5\u5de5\u5177"},{"location":"03_development/development_guide_2025_09/#_27","text":"","title":"\u8d21\u732e\u6307\u5357"},{"location":"03_development/development_guide_2025_09/#_28","text":"Fork\u9879\u76ee\u5230\u4e2a\u4eba\u4ed3\u5e93 \u521b\u5efa\u529f\u80fd\u5206\u652f \u5b9e\u73b0\u529f\u80fd\u5e76\u6dfb\u52a0\u6d4b\u8bd5 \u786e\u4fdd\u6240\u6709\u6d4b\u8bd5\u901a\u8fc7 \u63d0\u4ea4Pull Request \u4ee3\u7801\u5ba1\u67e5\u4e0e\u5408\u5e76","title":"\u4ee3\u7801\u8d21\u732e\u6d41\u7a0b"},{"location":"03_development/development_guide_2025_09/#_29","text":"\u66f4\u65b0\u76f8\u5173\u7684dev_docs\u6587\u6863 \u786e\u4fdd\u4ee3\u7801\u6ce8\u91ca\u5b8c\u6574 \u6dfb\u52a0\u793a\u4f8b\u4ee3\u7801 \u66f4\u65b0CLAUDE.md\u5982\u6709\u67b6\u6784\u53d8\u66f4","title":"\u6587\u6863\u8d21\u732e"},{"location":"03_development/development_guide_2025_09/#_30","text":"\u4f7f\u7528GitHub Issues\u62a5\u544a\u95ee\u9898\uff0c\u5305\u542b\uff1a - \u95ee\u9898\u63cf\u8ff0 - \u91cd\u73b0\u6b65\u9aa4 - \u73af\u5883\u4fe1\u606f - \u671f\u671b\u884c\u4e3a - \u5b9e\u9645\u884c\u4e3a","title":"\u95ee\u9898\u62a5\u544a"},{"location":"03_development/development_guide_2025_09/#_31","text":"","title":"\u5b66\u4e60\u8d44\u6e90"},{"location":"03_development/development_guide_2025_09/#_32","text":"DCF\u4f30\u503c\u6a21\u578b\u7406\u8bba \u8d22\u52a1\u62a5\u8868\u5206\u6790 Python\u5f02\u6b65\u7f16\u7a0b FastAPI\u6846\u67b6 Streamlit\u6846\u67b6","title":"\u9879\u76ee\u76f8\u5173"},{"location":"03_development/development_guide_2025_09/#_33","text":"\u300a\u4f30\u503c\uff1a\u96be\u70b9\u3001\u89e3\u51b3\u65b9\u6848\u53ca\u76f8\u5173\u6848\u4f8b\u300b \u300a\u8d22\u52a1\u62a5\u8868\u5206\u6790\u4e0e\u8bc1\u5238\u4f30\u503c\u300b \u300aClean Code\u300b(\u4ee3\u7801\u89c4\u8303) \u300aEffective Python\u300b(Python\u6700\u4f73\u5b9e\u8df5)","title":"\u63a8\u8350\u9605\u8bfb"},{"location":"03_development/development_guide_2025_09/#_34","text":"\u6280\u672f\u95ee\u9898 : \u521b\u5efaGitHub Issue \u529f\u80fd\u5efa\u8bae : \u901a\u8fc7Pull Request\u63d0\u4ea4 \u7d27\u6025\u95ee\u9898 : \u8054\u7cfb\u9879\u76ee\u7ef4\u62a4\u8005 \u672c\u6307\u5357\u4f1a\u968f\u7740\u9879\u76ee\u53d1\u5c55\u6301\u7eed\u66f4\u65b0\uff0c\u6b22\u8fce\u63d0\u4f9b\u53cd\u9988\u548c\u6539\u8fdb\u5efa\u8bae\u3002","title":"\u8054\u7cfb\u65b9\u5f0f"},{"location":"03_development/testing_strategy_2025_09/","text":"\u6d4b\u8bd5\u7b56\u7565\u4e0e\u8d28\u91cf\u4fdd\u969c\u6307\u5357 \u6700\u540e\u66f4\u65b0: 2025-09-22 \u6982\u8ff0 \u672c\u6587\u6863\u8be6\u7ec6\u8bf4\u660e\u4e86\u80a1\u7968\u4f30\u503c\u7cfb\u7edf\u7684\u6d4b\u8bd5\u7b56\u7565\u3001\u8d28\u91cf\u4fdd\u969c\u6d41\u7a0b\u548c\u6301\u7eed\u96c6\u6210\u5b9e\u8df5\u3002\u9879\u76ee\u76ee\u524d\u62e5\u670927\u4e2a\u6d4b\u8bd5\u6587\u4ef6\uff0c\u8986\u76d6\u5355\u5143\u6d4b\u8bd5\u3001\u96c6\u6210\u6d4b\u8bd5\u3001API\u6d4b\u8bd5\u7b49\u591a\u4e2a\u5c42\u6b21\u3002 \u6d4b\u8bd5\u67b6\u6784 \u6d4b\u8bd5\u5206\u5c42\u7b56\u7565 \u250c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2510 \u2502 E2E Tests \u2502 \u2190 \u7aef\u5230\u7aef\u6d4b\u8bd5 \u251c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2524 \u2502 API Tests \u2502 \u2190 API\u63a5\u53e3\u6d4b\u8bd5 \u251c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2524 \u2502 Integration Tests \u2502 \u2190 \u96c6\u6210\u6d4b\u8bd5 \u251c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2524 \u2502 Unit Tests \u2502 \u2190 \u5355\u5143\u6d4b\u8bd5 \u2514\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2518 \u6d4b\u8bd5\u76ee\u5f55\u7ed3\u6784 tests/ \u251c\u2500\u2500 unit/ # \u5355\u5143\u6d4b\u8bd5 \u2502 \u251c\u2500\u2500 core/ # \u6838\u5fc3\u6a21\u5757\u6d4b\u8bd5 \u2502 \u251c\u2500\u2500 data/ # \u6570\u636e\u5c42\u6d4b\u8bd5 \u2502 \u2514\u2500\u2500 services/ # \u670d\u52a1\u5c42\u6d4b\u8bd5 \u251c\u2500\u2500 integration/ # \u96c6\u6210\u6d4b\u8bd5 \u251c\u2500\u2500 api/ # API\u6d4b\u8bd5 \u2502 \u251c\u2500\u2500 test_main.py # \u4e3b\u8981API\u7aef\u70b9 \u2502 \u251c\u2500\u2500 test_sensitivity.py # \u654f\u611f\u6027\u5206\u6790 \u2502 \u2514\u2500\u2500 test_gdp_cap.py # GDP\u4e0a\u9650\u6d4b\u8bd5 \u251c\u2500\u2500 fixtures/ # \u6d4b\u8bd5\u6570\u636e \u2514\u2500\u2500 conftest.py # pytest\u914d\u7f6e \u5355\u5143\u6d4b\u8bd5 \u6838\u5fc3\u8ba1\u7b97\u5668\u6d4b\u8bd5 WACC\u8ba1\u7b97\u5668\u6d4b\u8bd5 \u6587\u4ef6 : tests/test_wacc_calculator.py \u6d4b\u8bd5\u8986\u76d6 : - \u57fa\u672cWACC\u8ba1\u7b97 - \u8fb9\u754c\u6761\u4ef6(\u96f6\u503c\u3001\u8d1f\u503c) - \u4e0d\u540c\u8d44\u672c\u7ed3\u6784\u573a\u666f - \u5e02\u573a\u4ef7\u503cvs\u8d26\u9762\u4ef7\u503c\u6743\u91cd def test_wacc_calculation_basic(): \"\"\"\u6d4b\u8bd5\u57fa\u672cWACC\u8ba1\u7b97\"\"\" calculator = WaccCalculator() result = calculator.calculate_wacc( market_value_equity=Decimal('100'), market_value_debt=Decimal('50'), cost_of_equity=Decimal('0.12'), cost_of_debt=Decimal('0.06'), tax_rate=Decimal('0.25') ) expected_wacc = Decimal('0.1') # 10% assert abs(result.wacc - expected_wacc) < Decimal('0.001') \u73b0\u503c\u8ba1\u7b97\u5668\u6d4b\u8bd5 \u6587\u4ef6 : tests/test_present_value_calculator.py \u6d4b\u8bd5\u8986\u76d6 : - \u73b0\u91d1\u6d41\u73b0\u503c\u8ba1\u7b97 - \u7ec8\u503c\u73b0\u503c\u8ba1\u7b97 - \u4e0d\u540c\u6298\u73b0\u7387\u573a\u666f - Decimal\u7cbe\u5ea6\u9a8c\u8bc1 \u5176\u4ed6\u8ba1\u7b97\u5668\u6d4b\u8bd5 tests/test_fcf_calculator.py : \u81ea\u7531\u73b0\u91d1\u6d41\u8ba1\u7b97 tests/test_terminal_value_calculator.py : \u7ec8\u503c\u8ba1\u7b97 tests/test_nwc_calculator.py : \u51c0\u8425\u8fd0\u8d44\u672c\u8ba1\u7b97 tests/test_equity_bridge_calculator.py : \u80a1\u6743\u4ef7\u503c\u6865\u63a5 \u6570\u636e\u5904\u7406\u6d4b\u8bd5 \u8d22\u52a1\u9884\u6d4b\u5668\u6d4b\u8bd5 \u6587\u4ef6 : tests/test_financial_forecaster.py \u6d4b\u8bd5\u8986\u76d6 : - \u6536\u5165\u9884\u6d4b\u7b97\u6cd5 - \u5386\u53f2\u6bd4\u7387\u8ba1\u7b97 - CAGR\u8870\u51cf\u903b\u8f91 - \u8fb9\u754c\u6761\u4ef6\u5904\u7406 \u6570\u636e\u5904\u7406\u5668\u6d4b\u8bd5 \u6587\u4ef6 : tests/test_data_processor.py \u6d4b\u8bd5\u8986\u76d6 : - \u6570\u636e\u6e05\u6d17\u903b\u8f91 - \u5f02\u5e38\u503c\u68c0\u6d4b - \u7f3a\u5931\u503c\u586b\u5145 - \u5386\u53f2\u6bd4\u7387\u8ba1\u7b97 \u4e13\u9879\u7b97\u6cd5\u6d4b\u8bd5 \u6536\u5165\u9884\u6d4b\u7b97\u6cd5\u6d4b\u8bd5 \u6587\u4ef6\u7fa4 : tests/test_enhanced_revenue_forecast*.py \u6d4b\u8bd5\u573a\u666f : - \u7b80\u5355CAGR\u9884\u6d4b - \u5e26\u8870\u51cf\u7684CAGR\u9884\u6d4b - \u8fc7\u6e21\u5230\u76ee\u6807\u503c\u9884\u6d4b - \u6570\u636e\u5e93\u96c6\u6210\u6d4b\u8bd5 def test_revenue_forecast_with_decay(): \"\"\"\u6d4b\u8bd5\u5e26\u8870\u51cf\u7684\u6536\u5165\u9884\u6d4b\"\"\" historical_revenues = [100, 120, 150, 180] forecaster = EnhancedRevenueForecast() projections = forecaster.project_revenue( historical_revenues=historical_revenues, forecast_years=5, decay_rate=0.1 ) # \u9a8c\u8bc1\u9884\u6d4b\u903b\u8f91 assert len(projections) == 5 assert all(p > 0 for p in projections) # \u9a8c\u8bc1\u8870\u51cf\u6548\u5e94 growth_rates = [projections[i]/projections[i-1] - 1 for i in range(1, len(projections))] assert all(growth_rates[i] <= growth_rates[i-1] for i in range(1, len(growth_rates))) \u96c6\u6210\u6d4b\u8bd5 \u5b8c\u6574\u4f30\u503c\u6d41\u7a0b\u6d4b\u8bd5 \u6587\u4ef6 : tests/test_sensitivity_analysis_integration.py \u6d4b\u8bd5\u8986\u76d6 : - \u6570\u636e\u83b7\u53d6\u2192\u5904\u7406\u2192\u8ba1\u7b97\u2192\u8f93\u51fa\u5b8c\u6574\u94fe\u8def - \u591a\u4e2a\u80a1\u7968\u4ee3\u7801\u6d4b\u8bd5 - \u4e0d\u540c\u53c2\u6570\u7ec4\u5408\u9a8c\u8bc1 - \u9519\u8bef\u5904\u7406\u6d41\u7a0b \u6570\u636e\u6e90\u96c6\u6210\u6d4b\u8bd5 \u6d4b\u8bd5\u573a\u666f : - TuShare API\u96c6\u6210 - PostgreSQL\u6570\u636e\u5e93\u96c6\u6210 - \u6570\u636e\u6e90\u5207\u6362\u6d4b\u8bd5 - \u7f13\u5b58\u673a\u5236\u6d4b\u8bd5 API\u6d4b\u8bd5 \u4e3b\u8981API\u7aef\u70b9\u6d4b\u8bd5 \u6587\u4ef6 : tests/api/test_main.py \u6d4b\u8bd5\u8986\u76d6 : - /api/v1/valuation \u4f30\u503c\u63a5\u53e3 - \u8bf7\u6c42\u53c2\u6570\u9a8c\u8bc1 - \u54cd\u5e94\u683c\u5f0f\u9a8c\u8bc1 - \u9519\u8bef\u5904\u7406\u6d4b\u8bd5 @pytest.mark.asyncio async def test_valuation_endpoint(): \"\"\"\u6d4b\u8bd5\u4f30\u503cAPI\u7aef\u70b9\"\"\" async with AsyncClient(app=app, base_url=\"http://test\") as ac: response = await ac.post(\"/api/v1/valuation\", json={ \"ts_code\": \"600519.SH\", \"valuation_date\": \"2025-09-22\", \"forecast_years\": 5 }) assert response.status_code == 200 data = response.json() assert \"valuation_summary\" in data assert \"enterprise_value\" in data[\"valuation_summary\"] assert data[\"valuation_summary\"][\"enterprise_value\"] > 0 \u654f\u611f\u6027\u5206\u6790API\u6d4b\u8bd5 \u6587\u4ef6 : tests/api/test_sensitivity.py \u6d4b\u8bd5\u8986\u76d6 : - \u654f\u611f\u6027\u5206\u6790\u53c2\u6570\u9a8c\u8bc1 - \u591a\u7ef4\u5ea6\u5206\u6790\u7ed3\u679c - \u8f93\u51fa\u683c\u5f0f\u9a8c\u8bc1 - \u6027\u80fd\u6d4b\u8bd5 \u7279\u6b8a\u529f\u80fd\u6d4b\u8bd5 \u6587\u4ef6 : tests/api/test_gdp_cap.py \u6d4b\u8bd5\u8986\u76d6 : - GDP\u4e0a\u9650\u7ea6\u675f\u529f\u80fd - LTM\u57fa\u7ebf\u529f\u80fd - \u6570\u636e\u6e90\u5207\u6362\u529f\u80fd \u7aef\u5230\u7aef\u6d4b\u8bd5 E2E\u6d4b\u8bd5\u811a\u672c \u5de5\u5177 : scripts/e2e_compare_sources.py \u6d4b\u8bd5\u6d41\u7a0b : 1. \u914d\u7f6e\u6d4b\u8bd5\u73af\u5883 2. \u8fd0\u884c\u5b8c\u6574\u4f30\u503c\u6d41\u7a0b 3. \u5bf9\u6bd4\u4e0d\u540c\u6570\u636e\u6e90\u7ed3\u679c 4. \u9a8c\u8bc1\u5173\u952e\u6307\u6807\u4e00\u81f4\u6027 5. \u751f\u6210\u6d4b\u8bd5\u62a5\u544a \u4f7f\u7528\u65b9\u6cd5 : # \u5355\u80a1\u7968E2E\u6d4b\u8bd5 python scripts/e2e_compare_sources.py --ts 600519.SH --date 2025-09-22 # \u6279\u91cfE2E\u6d4b\u8bd5 python scripts/e2e_compare_sources.py --batch --config test_stocks.json \u6d4b\u8bd5\u6570\u636e\u7ba1\u7406 \u6d4b\u8bd5\u5939\u5177(Fixtures) \u4f4d\u7f6e : tests/fixtures/ \u6570\u636e\u7c7b\u578b : - \u6a21\u62df\u8d22\u52a1\u62a5\u8868\u6570\u636e - \u6807\u51c6\u6d4b\u8bd5\u53c2\u6570\u96c6 - \u9884\u671f\u8ba1\u7b97\u7ed3\u679c - \u9519\u8bef\u573a\u666f\u6570\u636e # conftest.py @pytest.fixture def sample_financial_data(): \"\"\"\u63d0\u4f9b\u6807\u51c6\u6d4b\u8bd5\u7528\u8d22\u52a1\u6570\u636e\"\"\" return { 'income_statement': pd.DataFrame({ 'end_date': ['2021-12-31', '2022-12-31', '2023-12-31'], 'revenue': [1000, 1200, 1500], 'operate_profit': [150, 180, 225] }), 'balance_sheet': pd.DataFrame({ 'end_date': ['2021-12-31', '2022-12-31', '2023-12-31'], 'total_assets': [5000, 6000, 7500], 'inventories': [200, 250, 300] }) } Mock\u6570\u636e\u7b56\u7565 \u5916\u90e8API : Mock TuShare API\u8c03\u7528 \u6570\u636e\u5e93 : \u4f7f\u7528\u5185\u5b58SQLite\u6570\u636e\u5e93 \u6587\u4ef6\u7cfb\u7edf : \u4f7f\u7528\u4e34\u65f6\u76ee\u5f55 \u7f51\u7edc\u8bf7\u6c42 : Mock HTTP\u54cd\u5e94 \u6027\u80fd\u6d4b\u8bd5 \u57fa\u51c6\u6d4b\u8bd5 \u6d4b\u8bd5\u7ef4\u5ea6 : - \u5355\u6b21\u4f30\u503c\u8017\u65f6 - \u654f\u611f\u6027\u5206\u6790\u8017\u65f6 - \u6570\u636e\u83b7\u53d6\u8017\u65f6 - \u5185\u5b58\u4f7f\u7528\u60c5\u51b5 \u538b\u529b\u6d4b\u8bd5 \u6d4b\u8bd5\u573a\u666f : - \u5e76\u53d1API\u8bf7\u6c42 - \u5927\u6279\u91cf\u80a1\u7968\u7b5b\u9009 - \u957f\u65f6\u95f4\u8fd0\u884c\u7a33\u5b9a\u6027 - \u5185\u5b58\u6cc4\u6f0f\u68c0\u6d4b def test_valuation_performance(): \"\"\"\u6d4b\u8bd5\u4f30\u503c\u6027\u80fd\"\"\" import time start_time = time.time() result = run_valuation(\"600519.SH\", \"2025-09-22\") end_time = time.time() execution_time = end_time - start_time assert execution_time < 10.0 # 10\u79d2\u5185\u5b8c\u6210 assert result is not None \u8d28\u91cf\u4fdd\u969c\u6d41\u7a0b Pre-commit\u94a9\u5b50 \u914d\u7f6e : .pre-commit-config.yaml \u68c0\u67e5\u9879\u76ee : - \u4ee3\u7801\u683c\u5f0f\u5316(Black, isort) - \u9759\u6001\u5206\u6790(Ruff) - \u5b89\u5168\u68c0\u67e5(Bandit) - \u6d4b\u8bd5\u6267\u884c(pytest) \u6301\u7eed\u96c6\u6210 \u89e6\u53d1\u6761\u4ef6 : - \u4ee3\u7801\u63a8\u9001\u5230\u4e3b\u5206\u652f - Pull Request\u521b\u5efa/\u66f4\u65b0 - \u5b9a\u671f\u8c03\u5ea6(\u6bcf\u65e5) CI\u6d41\u7a0b : # \u793a\u4f8bGitHub Actions\u914d\u7f6e name: CI on: [push, pull_request] jobs: test: runs-on: ubuntu-latest steps: - uses: actions/checkout@v2 - name: Set up Python uses: actions/setup-python@v2 with: python-version: 3.9 - name: Install dependencies run: | pip install uv uv pip install -e \".[dev,test]\" - name: Run tests run: pytest --cov=src --cov-report=xml - name: Upload coverage uses: codecov/codecov-action@v1 \u6d4b\u8bd5\u6267\u884c\u6307\u5357 \u672c\u5730\u6d4b\u8bd5 # \u8fd0\u884c\u6240\u6709\u6d4b\u8bd5 pytest # \u8fd0\u884c\u7279\u5b9a\u6a21\u5757\u6d4b\u8bd5 pytest tests/test_wacc_calculator.py -v # \u8fd0\u884cAPI\u6d4b\u8bd5(\u9700\u8981\u5f02\u6b65\u652f\u6301) pytest tests/api/ -v # \u8fd0\u884c\u8986\u76d6\u7387\u6d4b\u8bd5 pytest --cov=src --cov-report=html # \u8fd0\u884c\u6027\u80fd\u6d4b\u8bd5 pytest tests/performance/ -v # \u8df3\u8fc7\u6162\u6d4b\u8bd5 pytest -m \"not slow\" \u6d4b\u8bd5\u6807\u8bb0 # \u6807\u8bb0\u6162\u6d4b\u8bd5 @pytest.mark.slow def test_long_running_process(): pass # \u6807\u8bb0\u96c6\u6210\u6d4b\u8bd5 @pytest.mark.integration def test_database_integration(): pass # \u6807\u8bb0API\u6d4b\u8bd5 @pytest.mark.api def test_api_endpoint(): pass \u8c03\u8bd5\u6d4b\u8bd5 # \u8be6\u7ec6\u8f93\u51fa pytest -v -s # \u505c\u5728\u7b2c\u4e00\u4e2a\u5931\u8d25 pytest -x # \u8fd0\u884c\u7279\u5b9a\u6d4b\u8bd5\u51fd\u6570 pytest tests/test_wacc_calculator.py::test_basic_calculation -v # \u4f7f\u7528pdb\u8c03\u8bd5 pytest --pdb \u6d4b\u8bd5\u6700\u4f73\u5b9e\u8df5 1. \u6d4b\u8bd5\u547d\u540d\u89c4\u8303 \u6d4b\u8bd5\u51fd\u6570: test_<\u529f\u80fd>_<\u573a\u666f> \u6d4b\u8bd5\u7c7b: Test<\u6a21\u5757\u540d> \u6d4b\u8bd5\u6587\u4ef6: test_<\u6a21\u5757\u540d>.py 2. \u6d4b\u8bd5\u7ec4\u7ec7\u539f\u5219 \u4e00\u4e2a\u6d4b\u8bd5\u53ea\u9a8c\u8bc1\u4e00\u4e2a\u529f\u80fd\u70b9 \u6d4b\u8bd5\u4e4b\u95f4\u76f8\u4e92\u72ec\u7acb \u4f7f\u7528\u63cf\u8ff0\u6027\u7684\u65ad\u8a00\u6d88\u606f \u907f\u514d\u6d4b\u8bd5\u5b9e\u73b0\u7ec6\u8282 3. \u6d4b\u8bd5\u6570\u636e\u539f\u5219 \u4f7f\u7528\u6700\u5c0f\u5316\u6d4b\u8bd5\u6570\u636e \u907f\u514d\u786c\u7f16\u7801\u9b54\u6cd5\u6570\u5b57 \u4f7f\u7528\u5de5\u5382\u51fd\u6570\u751f\u6210\u6d4b\u8bd5\u6570\u636e \u6e05\u7406\u6d4b\u8bd5\u4ea7\u751f\u7684\u526f\u4f5c\u7528 4. Mock\u4f7f\u7528\u539f\u5219 Mock\u5916\u90e8\u4f9d\u8d56\u800c\u975e\u5185\u90e8\u903b\u8f91 \u9a8c\u8bc1Mock\u8c03\u7528\u53c2\u6570 \u4f7f\u7528\u5408\u7406\u7684Mock\u8fd4\u56de\u503c \u907f\u514d\u8fc7\u5ea6Mock \u6d4b\u8bd5\u8986\u76d6\u7387\u76ee\u6807 \u5f53\u524d\u8986\u76d6\u7387\u72b6\u6001 \u603b\u4f53\u8986\u76d6\u7387 : ~47% \u6838\u5fc3\u8ba1\u7b97\u6a21\u5757 : >80% API\u5c42 : >70% \u6570\u636e\u5c42 : >60% \u8986\u76d6\u7387\u63d0\u5347\u8ba1\u5212 \u7b2c\u4e00\u9636\u6bb5 (\u76ee\u680780%): \u8865\u5145\u6570\u636e\u5904\u7406\u6a21\u5757\u6d4b\u8bd5 \u5b8c\u5584\u5f02\u5e38\u5904\u7406\u6d4b\u8bd5 \u589e\u52a0\u8fb9\u754c\u6761\u4ef6\u6d4b\u8bd5 \u7b2c\u4e8c\u9636\u6bb5 (\u76ee\u680790%): \u8865\u5145\u96c6\u6210\u6d4b\u8bd5 \u589e\u52a0\u6027\u80fd\u6d4b\u8bd5 \u5b8c\u5584E2E\u6d4b\u8bd5 \u8986\u76d6\u7387\u76d1\u63a7 # \u751f\u6210\u8986\u76d6\u7387\u62a5\u544a pytest --cov=src --cov-report=html --cov-report=term # \u67e5\u770b\u8be6\u7ec6\u8986\u76d6\u7387 coverage report -m # \u67e5\u770b\u672a\u8986\u76d6\u4ee3\u7801 coverage html open htmlcov/index.html \u6545\u969c\u6392\u67e5 \u5e38\u89c1\u6d4b\u8bd5\u95ee\u9898 1. \u5f02\u6b65\u6d4b\u8bd5\u5931\u8d25 # \u786e\u4fdd\u5b89\u88c5pytest-asyncio pip install pytest-asyncio # \u68c0\u67e5async\u6807\u8bb0 @pytest.mark.asyncio async def test_async_function(): pass 2. \u6570\u636e\u5e93\u6d4b\u8bd5\u5931\u8d25 # \u68c0\u67e5\u6d4b\u8bd5\u6570\u636e\u5e93\u914d\u7f6e export TEST_DATABASE_URL=\"sqlite:///test.db\" # \u6e05\u7406\u6d4b\u8bd5\u6570\u636e pytest --setup-show 3. Mock\u672a\u751f\u6548 # \u786e\u4fddMock\u8def\u5f84\u6b63\u786e @patch('src.data.fetchers.tushare_fetcher.TushareAshareFetcher') def test_with_mock(mock_fetcher): pass \u6d4b\u8bd5\u73af\u5883\u9694\u79bb \u4f7f\u7528\u72ec\u7acb\u7684\u6d4b\u8bd5\u6570\u636e\u5e93 \u6e05\u7406\u6d4b\u8bd5\u4ea7\u751f\u7684\u6587\u4ef6 \u91cd\u7f6e\u5168\u5c40\u72b6\u6001 \u907f\u514d\u6d4b\u8bd5\u95f4\u4f9d\u8d56 \u672a\u6765\u89c4\u5212 \u77ed\u671f\u76ee\u6807(1\u4e2a\u6708) \u63d0\u5347\u8986\u76d6\u7387\u523080% \u5b8c\u5584API\u6d4b\u8bd5\u5957\u4ef6 \u589e\u52a0\u6027\u80fd\u57fa\u51c6\u6d4b\u8bd5 \u4f18\u5316\u6d4b\u8bd5\u6267\u884c\u901f\u5ea6 \u4e2d\u671f\u76ee\u6807(3\u4e2a\u6708) \u5b9e\u73b0\u81ea\u52a8\u5316\u56de\u5f52\u6d4b\u8bd5 \u5efa\u7acb\u6d4b\u8bd5\u6570\u636e\u7ba1\u7406\u5e73\u53f0 \u589e\u52a0\u5951\u7ea6\u6d4b\u8bd5 \u5b8c\u5584\u76d1\u63a7\u548c\u544a\u8b66 \u957f\u671f\u76ee\u6807(6\u4e2a\u6708) \u5b9e\u73b0\u6d4b\u8bd5\u9a71\u52a8\u5f00\u53d1(TDD) \u5efa\u7acb\u6d4b\u8bd5\u8d28\u91cf\u5ea6\u91cf\u4f53\u7cfb \u5b9e\u73b0\u667a\u80fd\u6d4b\u8bd5\u9009\u62e9 \u5b8c\u5584\u6d4b\u8bd5\u6587\u6863\u548c\u57f9\u8bad \u6d4b\u8bd5\u662f\u4fdd\u8bc1\u4ee3\u7801\u8d28\u91cf\u7684\u91cd\u8981\u624b\u6bb5\uff0c\u5efa\u8bae\u6240\u6709\u5f00\u53d1\u8005\u4e25\u683c\u9075\u5faa\u672c\u6d4b\u8bd5\u7b56\u7565\u8fdb\u884c\u5f00\u53d1\u3002","title":"\u6d4b\u8bd5\u7b56\u7565\u4e0e\u8d28\u91cf\u4fdd\u969c\u6307\u5357"},{"location":"03_development/testing_strategy_2025_09/#_1","text":"\u6700\u540e\u66f4\u65b0: 2025-09-22","title":"\u6d4b\u8bd5\u7b56\u7565\u4e0e\u8d28\u91cf\u4fdd\u969c\u6307\u5357"},{"location":"03_development/testing_strategy_2025_09/#_2","text":"\u672c\u6587\u6863\u8be6\u7ec6\u8bf4\u660e\u4e86\u80a1\u7968\u4f30\u503c\u7cfb\u7edf\u7684\u6d4b\u8bd5\u7b56\u7565\u3001\u8d28\u91cf\u4fdd\u969c\u6d41\u7a0b\u548c\u6301\u7eed\u96c6\u6210\u5b9e\u8df5\u3002\u9879\u76ee\u76ee\u524d\u62e5\u670927\u4e2a\u6d4b\u8bd5\u6587\u4ef6\uff0c\u8986\u76d6\u5355\u5143\u6d4b\u8bd5\u3001\u96c6\u6210\u6d4b\u8bd5\u3001API\u6d4b\u8bd5\u7b49\u591a\u4e2a\u5c42\u6b21\u3002","title":"\u6982\u8ff0"},{"location":"03_development/testing_strategy_2025_09/#_3","text":"","title":"\u6d4b\u8bd5\u67b6\u6784"},{"location":"03_development/testing_strategy_2025_09/#_4","text":"\u250c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2510 \u2502 E2E Tests \u2502 \u2190 \u7aef\u5230\u7aef\u6d4b\u8bd5 \u251c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2524 \u2502 API Tests \u2502 \u2190 API\u63a5\u53e3\u6d4b\u8bd5 \u251c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2524 \u2502 Integration Tests \u2502 \u2190 \u96c6\u6210\u6d4b\u8bd5 \u251c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2524 \u2502 Unit Tests \u2502 \u2190 \u5355\u5143\u6d4b\u8bd5 \u2514\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2518","title":"\u6d4b\u8bd5\u5206\u5c42\u7b56\u7565"},{"location":"03_development/testing_strategy_2025_09/#_5","text":"tests/ \u251c\u2500\u2500 unit/ # \u5355\u5143\u6d4b\u8bd5 \u2502 \u251c\u2500\u2500 core/ # \u6838\u5fc3\u6a21\u5757\u6d4b\u8bd5 \u2502 \u251c\u2500\u2500 data/ # \u6570\u636e\u5c42\u6d4b\u8bd5 \u2502 \u2514\u2500\u2500 services/ # \u670d\u52a1\u5c42\u6d4b\u8bd5 \u251c\u2500\u2500 integration/ # \u96c6\u6210\u6d4b\u8bd5 \u251c\u2500\u2500 api/ # API\u6d4b\u8bd5 \u2502 \u251c\u2500\u2500 test_main.py # \u4e3b\u8981API\u7aef\u70b9 \u2502 \u251c\u2500\u2500 test_sensitivity.py # \u654f\u611f\u6027\u5206\u6790 \u2502 \u2514\u2500\u2500 test_gdp_cap.py # GDP\u4e0a\u9650\u6d4b\u8bd5 \u251c\u2500\u2500 fixtures/ # \u6d4b\u8bd5\u6570\u636e \u2514\u2500\u2500 conftest.py # pytest\u914d\u7f6e","title":"\u6d4b\u8bd5\u76ee\u5f55\u7ed3\u6784"},{"location":"03_development/testing_strategy_2025_09/#_6","text":"","title":"\u5355\u5143\u6d4b\u8bd5"},{"location":"03_development/testing_strategy_2025_09/#_7","text":"","title":"\u6838\u5fc3\u8ba1\u7b97\u5668\u6d4b\u8bd5"},{"location":"03_development/testing_strategy_2025_09/#wacc","text":"\u6587\u4ef6 : tests/test_wacc_calculator.py \u6d4b\u8bd5\u8986\u76d6 : - \u57fa\u672cWACC\u8ba1\u7b97 - \u8fb9\u754c\u6761\u4ef6(\u96f6\u503c\u3001\u8d1f\u503c) - \u4e0d\u540c\u8d44\u672c\u7ed3\u6784\u573a\u666f - \u5e02\u573a\u4ef7\u503cvs\u8d26\u9762\u4ef7\u503c\u6743\u91cd def test_wacc_calculation_basic(): \"\"\"\u6d4b\u8bd5\u57fa\u672cWACC\u8ba1\u7b97\"\"\" calculator = WaccCalculator() result = calculator.calculate_wacc( market_value_equity=Decimal('100'), market_value_debt=Decimal('50'), cost_of_equity=Decimal('0.12'), cost_of_debt=Decimal('0.06'), tax_rate=Decimal('0.25') ) expected_wacc = Decimal('0.1') # 10% assert abs(result.wacc - expected_wacc) < Decimal('0.001')","title":"WACC\u8ba1\u7b97\u5668\u6d4b\u8bd5"},{"location":"03_development/testing_strategy_2025_09/#_8","text":"\u6587\u4ef6 : tests/test_present_value_calculator.py \u6d4b\u8bd5\u8986\u76d6 : - \u73b0\u91d1\u6d41\u73b0\u503c\u8ba1\u7b97 - \u7ec8\u503c\u73b0\u503c\u8ba1\u7b97 - \u4e0d\u540c\u6298\u73b0\u7387\u573a\u666f - Decimal\u7cbe\u5ea6\u9a8c\u8bc1","title":"\u73b0\u503c\u8ba1\u7b97\u5668\u6d4b\u8bd5"},{"location":"03_development/testing_strategy_2025_09/#_9","text":"tests/test_fcf_calculator.py : \u81ea\u7531\u73b0\u91d1\u6d41\u8ba1\u7b97 tests/test_terminal_value_calculator.py : \u7ec8\u503c\u8ba1\u7b97 tests/test_nwc_calculator.py : \u51c0\u8425\u8fd0\u8d44\u672c\u8ba1\u7b97 tests/test_equity_bridge_calculator.py : \u80a1\u6743\u4ef7\u503c\u6865\u63a5","title":"\u5176\u4ed6\u8ba1\u7b97\u5668\u6d4b\u8bd5"},{"location":"03_development/testing_strategy_2025_09/#_10","text":"","title":"\u6570\u636e\u5904\u7406\u6d4b\u8bd5"},{"location":"03_development/testing_strategy_2025_09/#_11","text":"\u6587\u4ef6 : tests/test_financial_forecaster.py \u6d4b\u8bd5\u8986\u76d6 : - \u6536\u5165\u9884\u6d4b\u7b97\u6cd5 - \u5386\u53f2\u6bd4\u7387\u8ba1\u7b97 - CAGR\u8870\u51cf\u903b\u8f91 - \u8fb9\u754c\u6761\u4ef6\u5904\u7406","title":"\u8d22\u52a1\u9884\u6d4b\u5668\u6d4b\u8bd5"},{"location":"03_development/testing_strategy_2025_09/#_12","text":"\u6587\u4ef6 : tests/test_data_processor.py \u6d4b\u8bd5\u8986\u76d6 : - \u6570\u636e\u6e05\u6d17\u903b\u8f91 - \u5f02\u5e38\u503c\u68c0\u6d4b - \u7f3a\u5931\u503c\u586b\u5145 - \u5386\u53f2\u6bd4\u7387\u8ba1\u7b97","title":"\u6570\u636e\u5904\u7406\u5668\u6d4b\u8bd5"},{"location":"03_development/testing_strategy_2025_09/#_13","text":"","title":"\u4e13\u9879\u7b97\u6cd5\u6d4b\u8bd5"},{"location":"03_development/testing_strategy_2025_09/#_14","text":"\u6587\u4ef6\u7fa4 : tests/test_enhanced_revenue_forecast*.py \u6d4b\u8bd5\u573a\u666f : - \u7b80\u5355CAGR\u9884\u6d4b - \u5e26\u8870\u51cf\u7684CAGR\u9884\u6d4b - \u8fc7\u6e21\u5230\u76ee\u6807\u503c\u9884\u6d4b - \u6570\u636e\u5e93\u96c6\u6210\u6d4b\u8bd5 def test_revenue_forecast_with_decay(): \"\"\"\u6d4b\u8bd5\u5e26\u8870\u51cf\u7684\u6536\u5165\u9884\u6d4b\"\"\" historical_revenues = [100, 120, 150, 180] forecaster = EnhancedRevenueForecast() projections = forecaster.project_revenue( historical_revenues=historical_revenues, forecast_years=5, decay_rate=0.1 ) # \u9a8c\u8bc1\u9884\u6d4b\u903b\u8f91 assert len(projections) == 5 assert all(p > 0 for p in projections) # \u9a8c\u8bc1\u8870\u51cf\u6548\u5e94 growth_rates = [projections[i]/projections[i-1] - 1 for i in range(1, len(projections))] assert all(growth_rates[i] <= growth_rates[i-1] for i in range(1, len(growth_rates)))","title":"\u6536\u5165\u9884\u6d4b\u7b97\u6cd5\u6d4b\u8bd5"},{"location":"03_development/testing_strategy_2025_09/#_15","text":"","title":"\u96c6\u6210\u6d4b\u8bd5"},{"location":"03_development/testing_strategy_2025_09/#_16","text":"\u6587\u4ef6 : tests/test_sensitivity_analysis_integration.py \u6d4b\u8bd5\u8986\u76d6 : - \u6570\u636e\u83b7\u53d6\u2192\u5904\u7406\u2192\u8ba1\u7b97\u2192\u8f93\u51fa\u5b8c\u6574\u94fe\u8def - \u591a\u4e2a\u80a1\u7968\u4ee3\u7801\u6d4b\u8bd5 - \u4e0d\u540c\u53c2\u6570\u7ec4\u5408\u9a8c\u8bc1 - \u9519\u8bef\u5904\u7406\u6d41\u7a0b","title":"\u5b8c\u6574\u4f30\u503c\u6d41\u7a0b\u6d4b\u8bd5"},{"location":"03_development/testing_strategy_2025_09/#_17","text":"\u6d4b\u8bd5\u573a\u666f : - TuShare API\u96c6\u6210 - PostgreSQL\u6570\u636e\u5e93\u96c6\u6210 - \u6570\u636e\u6e90\u5207\u6362\u6d4b\u8bd5 - \u7f13\u5b58\u673a\u5236\u6d4b\u8bd5","title":"\u6570\u636e\u6e90\u96c6\u6210\u6d4b\u8bd5"},{"location":"03_development/testing_strategy_2025_09/#api","text":"","title":"API\u6d4b\u8bd5"},{"location":"03_development/testing_strategy_2025_09/#api_1","text":"\u6587\u4ef6 : tests/api/test_main.py \u6d4b\u8bd5\u8986\u76d6 : - /api/v1/valuation \u4f30\u503c\u63a5\u53e3 - \u8bf7\u6c42\u53c2\u6570\u9a8c\u8bc1 - \u54cd\u5e94\u683c\u5f0f\u9a8c\u8bc1 - \u9519\u8bef\u5904\u7406\u6d4b\u8bd5 @pytest.mark.asyncio async def test_valuation_endpoint(): \"\"\"\u6d4b\u8bd5\u4f30\u503cAPI\u7aef\u70b9\"\"\" async with AsyncClient(app=app, base_url=\"http://test\") as ac: response = await ac.post(\"/api/v1/valuation\", json={ \"ts_code\": \"600519.SH\", \"valuation_date\": \"2025-09-22\", \"forecast_years\": 5 }) assert response.status_code == 200 data = response.json() assert \"valuation_summary\" in data assert \"enterprise_value\" in data[\"valuation_summary\"] assert data[\"valuation_summary\"][\"enterprise_value\"] > 0","title":"\u4e3b\u8981API\u7aef\u70b9\u6d4b\u8bd5"},{"location":"03_development/testing_strategy_2025_09/#api_2","text":"\u6587\u4ef6 : tests/api/test_sensitivity.py \u6d4b\u8bd5\u8986\u76d6 : - \u654f\u611f\u6027\u5206\u6790\u53c2\u6570\u9a8c\u8bc1 - \u591a\u7ef4\u5ea6\u5206\u6790\u7ed3\u679c - \u8f93\u51fa\u683c\u5f0f\u9a8c\u8bc1 - \u6027\u80fd\u6d4b\u8bd5","title":"\u654f\u611f\u6027\u5206\u6790API\u6d4b\u8bd5"},{"location":"03_development/testing_strategy_2025_09/#_18","text":"\u6587\u4ef6 : tests/api/test_gdp_cap.py \u6d4b\u8bd5\u8986\u76d6 : - GDP\u4e0a\u9650\u7ea6\u675f\u529f\u80fd - LTM\u57fa\u7ebf\u529f\u80fd - \u6570\u636e\u6e90\u5207\u6362\u529f\u80fd","title":"\u7279\u6b8a\u529f\u80fd\u6d4b\u8bd5"},{"location":"03_development/testing_strategy_2025_09/#_19","text":"","title":"\u7aef\u5230\u7aef\u6d4b\u8bd5"},{"location":"03_development/testing_strategy_2025_09/#e2e","text":"\u5de5\u5177 : scripts/e2e_compare_sources.py \u6d4b\u8bd5\u6d41\u7a0b : 1. \u914d\u7f6e\u6d4b\u8bd5\u73af\u5883 2. \u8fd0\u884c\u5b8c\u6574\u4f30\u503c\u6d41\u7a0b 3. \u5bf9\u6bd4\u4e0d\u540c\u6570\u636e\u6e90\u7ed3\u679c 4. \u9a8c\u8bc1\u5173\u952e\u6307\u6807\u4e00\u81f4\u6027 5. \u751f\u6210\u6d4b\u8bd5\u62a5\u544a \u4f7f\u7528\u65b9\u6cd5 : # \u5355\u80a1\u7968E2E\u6d4b\u8bd5 python scripts/e2e_compare_sources.py --ts 600519.SH --date 2025-09-22 # \u6279\u91cfE2E\u6d4b\u8bd5 python scripts/e2e_compare_sources.py --batch --config test_stocks.json","title":"E2E\u6d4b\u8bd5\u811a\u672c"},{"location":"03_development/testing_strategy_2025_09/#_20","text":"","title":"\u6d4b\u8bd5\u6570\u636e\u7ba1\u7406"},{"location":"03_development/testing_strategy_2025_09/#fixtures","text":"\u4f4d\u7f6e : tests/fixtures/ \u6570\u636e\u7c7b\u578b : - \u6a21\u62df\u8d22\u52a1\u62a5\u8868\u6570\u636e - \u6807\u51c6\u6d4b\u8bd5\u53c2\u6570\u96c6 - \u9884\u671f\u8ba1\u7b97\u7ed3\u679c - \u9519\u8bef\u573a\u666f\u6570\u636e # conftest.py @pytest.fixture def sample_financial_data(): \"\"\"\u63d0\u4f9b\u6807\u51c6\u6d4b\u8bd5\u7528\u8d22\u52a1\u6570\u636e\"\"\" return { 'income_statement': pd.DataFrame({ 'end_date': ['2021-12-31', '2022-12-31', '2023-12-31'], 'revenue': [1000, 1200, 1500], 'operate_profit': [150, 180, 225] }), 'balance_sheet': pd.DataFrame({ 'end_date': ['2021-12-31', '2022-12-31', '2023-12-31'], 'total_assets': [5000, 6000, 7500], 'inventories': [200, 250, 300] }) }","title":"\u6d4b\u8bd5\u5939\u5177(Fixtures)"},{"location":"03_development/testing_strategy_2025_09/#mock","text":"\u5916\u90e8API : Mock TuShare API\u8c03\u7528 \u6570\u636e\u5e93 : \u4f7f\u7528\u5185\u5b58SQLite\u6570\u636e\u5e93 \u6587\u4ef6\u7cfb\u7edf : \u4f7f\u7528\u4e34\u65f6\u76ee\u5f55 \u7f51\u7edc\u8bf7\u6c42 : Mock HTTP\u54cd\u5e94","title":"Mock\u6570\u636e\u7b56\u7565"},{"location":"03_development/testing_strategy_2025_09/#_21","text":"","title":"\u6027\u80fd\u6d4b\u8bd5"},{"location":"03_development/testing_strategy_2025_09/#_22","text":"\u6d4b\u8bd5\u7ef4\u5ea6 : - \u5355\u6b21\u4f30\u503c\u8017\u65f6 - \u654f\u611f\u6027\u5206\u6790\u8017\u65f6 - \u6570\u636e\u83b7\u53d6\u8017\u65f6 - \u5185\u5b58\u4f7f\u7528\u60c5\u51b5","title":"\u57fa\u51c6\u6d4b\u8bd5"},{"location":"03_development/testing_strategy_2025_09/#_23","text":"\u6d4b\u8bd5\u573a\u666f : - \u5e76\u53d1API\u8bf7\u6c42 - \u5927\u6279\u91cf\u80a1\u7968\u7b5b\u9009 - \u957f\u65f6\u95f4\u8fd0\u884c\u7a33\u5b9a\u6027 - \u5185\u5b58\u6cc4\u6f0f\u68c0\u6d4b def test_valuation_performance(): \"\"\"\u6d4b\u8bd5\u4f30\u503c\u6027\u80fd\"\"\" import time start_time = time.time() result = run_valuation(\"600519.SH\", \"2025-09-22\") end_time = time.time() execution_time = end_time - start_time assert execution_time < 10.0 # 10\u79d2\u5185\u5b8c\u6210 assert result is not None","title":"\u538b\u529b\u6d4b\u8bd5"},{"location":"03_development/testing_strategy_2025_09/#_24","text":"","title":"\u8d28\u91cf\u4fdd\u969c\u6d41\u7a0b"},{"location":"03_development/testing_strategy_2025_09/#pre-commit","text":"\u914d\u7f6e : .pre-commit-config.yaml \u68c0\u67e5\u9879\u76ee : - \u4ee3\u7801\u683c\u5f0f\u5316(Black, isort) - \u9759\u6001\u5206\u6790(Ruff) - \u5b89\u5168\u68c0\u67e5(Bandit) - \u6d4b\u8bd5\u6267\u884c(pytest)","title":"Pre-commit\u94a9\u5b50"},{"location":"03_development/testing_strategy_2025_09/#_25","text":"\u89e6\u53d1\u6761\u4ef6 : - \u4ee3\u7801\u63a8\u9001\u5230\u4e3b\u5206\u652f - Pull Request\u521b\u5efa/\u66f4\u65b0 - \u5b9a\u671f\u8c03\u5ea6(\u6bcf\u65e5) CI\u6d41\u7a0b : # \u793a\u4f8bGitHub Actions\u914d\u7f6e name: CI on: [push, pull_request] jobs: test: runs-on: ubuntu-latest steps: - uses: actions/checkout@v2 - name: Set up Python uses: actions/setup-python@v2 with: python-version: 3.9 - name: Install dependencies run: | pip install uv uv pip install -e \".[dev,test]\" - name: Run tests run: pytest --cov=src --cov-report=xml - name: Upload coverage uses: codecov/codecov-action@v1","title":"\u6301\u7eed\u96c6\u6210"},{"location":"03_development/testing_strategy_2025_09/#_26","text":"","title":"\u6d4b\u8bd5\u6267\u884c\u6307\u5357"},{"location":"03_development/testing_strategy_2025_09/#_27","text":"# \u8fd0\u884c\u6240\u6709\u6d4b\u8bd5 pytest # \u8fd0\u884c\u7279\u5b9a\u6a21\u5757\u6d4b\u8bd5 pytest tests/test_wacc_calculator.py -v # \u8fd0\u884cAPI\u6d4b\u8bd5(\u9700\u8981\u5f02\u6b65\u652f\u6301) pytest tests/api/ -v # \u8fd0\u884c\u8986\u76d6\u7387\u6d4b\u8bd5 pytest --cov=src --cov-report=html # \u8fd0\u884c\u6027\u80fd\u6d4b\u8bd5 pytest tests/performance/ -v # \u8df3\u8fc7\u6162\u6d4b\u8bd5 pytest -m \"not slow\"","title":"\u672c\u5730\u6d4b\u8bd5"},{"location":"03_development/testing_strategy_2025_09/#_28","text":"# \u6807\u8bb0\u6162\u6d4b\u8bd5 @pytest.mark.slow def test_long_running_process(): pass # \u6807\u8bb0\u96c6\u6210\u6d4b\u8bd5 @pytest.mark.integration def test_database_integration(): pass # \u6807\u8bb0API\u6d4b\u8bd5 @pytest.mark.api def test_api_endpoint(): pass","title":"\u6d4b\u8bd5\u6807\u8bb0"},{"location":"03_development/testing_strategy_2025_09/#_29","text":"# \u8be6\u7ec6\u8f93\u51fa pytest -v -s # \u505c\u5728\u7b2c\u4e00\u4e2a\u5931\u8d25 pytest -x # \u8fd0\u884c\u7279\u5b9a\u6d4b\u8bd5\u51fd\u6570 pytest tests/test_wacc_calculator.py::test_basic_calculation -v # \u4f7f\u7528pdb\u8c03\u8bd5 pytest --pdb","title":"\u8c03\u8bd5\u6d4b\u8bd5"},{"location":"03_development/testing_strategy_2025_09/#_30","text":"","title":"\u6d4b\u8bd5\u6700\u4f73\u5b9e\u8df5"},{"location":"03_development/testing_strategy_2025_09/#1","text":"\u6d4b\u8bd5\u51fd\u6570: test_<\u529f\u80fd>_<\u573a\u666f> \u6d4b\u8bd5\u7c7b: Test<\u6a21\u5757\u540d> \u6d4b\u8bd5\u6587\u4ef6: test_<\u6a21\u5757\u540d>.py","title":"1. \u6d4b\u8bd5\u547d\u540d\u89c4\u8303"},{"location":"03_development/testing_strategy_2025_09/#2","text":"\u4e00\u4e2a\u6d4b\u8bd5\u53ea\u9a8c\u8bc1\u4e00\u4e2a\u529f\u80fd\u70b9 \u6d4b\u8bd5\u4e4b\u95f4\u76f8\u4e92\u72ec\u7acb \u4f7f\u7528\u63cf\u8ff0\u6027\u7684\u65ad\u8a00\u6d88\u606f \u907f\u514d\u6d4b\u8bd5\u5b9e\u73b0\u7ec6\u8282","title":"2. \u6d4b\u8bd5\u7ec4\u7ec7\u539f\u5219"},{"location":"03_development/testing_strategy_2025_09/#3","text":"\u4f7f\u7528\u6700\u5c0f\u5316\u6d4b\u8bd5\u6570\u636e \u907f\u514d\u786c\u7f16\u7801\u9b54\u6cd5\u6570\u5b57 \u4f7f\u7528\u5de5\u5382\u51fd\u6570\u751f\u6210\u6d4b\u8bd5\u6570\u636e \u6e05\u7406\u6d4b\u8bd5\u4ea7\u751f\u7684\u526f\u4f5c\u7528","title":"3. \u6d4b\u8bd5\u6570\u636e\u539f\u5219"},{"location":"03_development/testing_strategy_2025_09/#4-mock","text":"Mock\u5916\u90e8\u4f9d\u8d56\u800c\u975e\u5185\u90e8\u903b\u8f91 \u9a8c\u8bc1Mock\u8c03\u7528\u53c2\u6570 \u4f7f\u7528\u5408\u7406\u7684Mock\u8fd4\u56de\u503c \u907f\u514d\u8fc7\u5ea6Mock","title":"4. Mock\u4f7f\u7528\u539f\u5219"},{"location":"03_development/testing_strategy_2025_09/#_31","text":"","title":"\u6d4b\u8bd5\u8986\u76d6\u7387\u76ee\u6807"},{"location":"03_development/testing_strategy_2025_09/#_32","text":"\u603b\u4f53\u8986\u76d6\u7387 : ~47% \u6838\u5fc3\u8ba1\u7b97\u6a21\u5757 : >80% API\u5c42 : >70% \u6570\u636e\u5c42 : >60%","title":"\u5f53\u524d\u8986\u76d6\u7387\u72b6\u6001"},{"location":"03_development/testing_strategy_2025_09/#_33","text":"\u7b2c\u4e00\u9636\u6bb5 (\u76ee\u680780%): \u8865\u5145\u6570\u636e\u5904\u7406\u6a21\u5757\u6d4b\u8bd5 \u5b8c\u5584\u5f02\u5e38\u5904\u7406\u6d4b\u8bd5 \u589e\u52a0\u8fb9\u754c\u6761\u4ef6\u6d4b\u8bd5 \u7b2c\u4e8c\u9636\u6bb5 (\u76ee\u680790%): \u8865\u5145\u96c6\u6210\u6d4b\u8bd5 \u589e\u52a0\u6027\u80fd\u6d4b\u8bd5 \u5b8c\u5584E2E\u6d4b\u8bd5","title":"\u8986\u76d6\u7387\u63d0\u5347\u8ba1\u5212"},{"location":"03_development/testing_strategy_2025_09/#_34","text":"# \u751f\u6210\u8986\u76d6\u7387\u62a5\u544a pytest --cov=src --cov-report=html --cov-report=term # \u67e5\u770b\u8be6\u7ec6\u8986\u76d6\u7387 coverage report -m # \u67e5\u770b\u672a\u8986\u76d6\u4ee3\u7801 coverage html open htmlcov/index.html","title":"\u8986\u76d6\u7387\u76d1\u63a7"},{"location":"03_development/testing_strategy_2025_09/#_35","text":"","title":"\u6545\u969c\u6392\u67e5"},{"location":"03_development/testing_strategy_2025_09/#_36","text":"","title":"\u5e38\u89c1\u6d4b\u8bd5\u95ee\u9898"},{"location":"03_development/testing_strategy_2025_09/#1_1","text":"# \u786e\u4fdd\u5b89\u88c5pytest-asyncio pip install pytest-asyncio # \u68c0\u67e5async\u6807\u8bb0 @pytest.mark.asyncio async def test_async_function(): pass","title":"1. \u5f02\u6b65\u6d4b\u8bd5\u5931\u8d25"},{"location":"03_development/testing_strategy_2025_09/#2_1","text":"# \u68c0\u67e5\u6d4b\u8bd5\u6570\u636e\u5e93\u914d\u7f6e export TEST_DATABASE_URL=\"sqlite:///test.db\" # \u6e05\u7406\u6d4b\u8bd5\u6570\u636e pytest --setup-show","title":"2. \u6570\u636e\u5e93\u6d4b\u8bd5\u5931\u8d25"},{"location":"03_development/testing_strategy_2025_09/#3-mock","text":"# \u786e\u4fddMock\u8def\u5f84\u6b63\u786e @patch('src.data.fetchers.tushare_fetcher.TushareAshareFetcher') def test_with_mock(mock_fetcher): pass","title":"3. Mock\u672a\u751f\u6548"},{"location":"03_development/testing_strategy_2025_09/#_37","text":"\u4f7f\u7528\u72ec\u7acb\u7684\u6d4b\u8bd5\u6570\u636e\u5e93 \u6e05\u7406\u6d4b\u8bd5\u4ea7\u751f\u7684\u6587\u4ef6 \u91cd\u7f6e\u5168\u5c40\u72b6\u6001 \u907f\u514d\u6d4b\u8bd5\u95f4\u4f9d\u8d56","title":"\u6d4b\u8bd5\u73af\u5883\u9694\u79bb"},{"location":"03_development/testing_strategy_2025_09/#_38","text":"","title":"\u672a\u6765\u89c4\u5212"},{"location":"03_development/testing_strategy_2025_09/#1_2","text":"\u63d0\u5347\u8986\u76d6\u7387\u523080% \u5b8c\u5584API\u6d4b\u8bd5\u5957\u4ef6 \u589e\u52a0\u6027\u80fd\u57fa\u51c6\u6d4b\u8bd5 \u4f18\u5316\u6d4b\u8bd5\u6267\u884c\u901f\u5ea6","title":"\u77ed\u671f\u76ee\u6807(1\u4e2a\u6708)"},{"location":"03_development/testing_strategy_2025_09/#3_1","text":"\u5b9e\u73b0\u81ea\u52a8\u5316\u56de\u5f52\u6d4b\u8bd5 \u5efa\u7acb\u6d4b\u8bd5\u6570\u636e\u7ba1\u7406\u5e73\u53f0 \u589e\u52a0\u5951\u7ea6\u6d4b\u8bd5 \u5b8c\u5584\u76d1\u63a7\u548c\u544a\u8b66","title":"\u4e2d\u671f\u76ee\u6807(3\u4e2a\u6708)"},{"location":"03_development/testing_strategy_2025_09/#6","text":"\u5b9e\u73b0\u6d4b\u8bd5\u9a71\u52a8\u5f00\u53d1(TDD) \u5efa\u7acb\u6d4b\u8bd5\u8d28\u91cf\u5ea6\u91cf\u4f53\u7cfb \u5b9e\u73b0\u667a\u80fd\u6d4b\u8bd5\u9009\u62e9 \u5b8c\u5584\u6d4b\u8bd5\u6587\u6863\u548c\u57f9\u8bad \u6d4b\u8bd5\u662f\u4fdd\u8bc1\u4ee3\u7801\u8d28\u91cf\u7684\u91cd\u8981\u624b\u6bb5\uff0c\u5efa\u8bae\u6240\u6709\u5f00\u53d1\u8005\u4e25\u683c\u9075\u5faa\u672c\u6d4b\u8bd5\u7b56\u7565\u8fdb\u884c\u5f00\u53d1\u3002","title":"\u957f\u671f\u76ee\u6807(6\u4e2a\u6708)"},{"location":"04_deployment/","text":"\u90e8\u7f72\u8fd0\u7ef4\u6587\u6863 \u672c\u76ee\u5f55\u5305\u542b\u751f\u4ea7\u90e8\u7f72\u3001\u8fd0\u7ef4\u76d1\u63a7\u3001\u6545\u969c\u6392\u67e5\u7b49\u8fd0\u7ef4\u76f8\u5173\u6587\u6863\u3002 \u6587\u6863\u5217\u8868 \ud83d\ude80 \u90e8\u7f72\u6307\u5357 deployment_operations_guide_2025_09.md - \u90e8\u7f72\u8fd0\u7ef4\u5b8c\u6574\u6307\u5357\uff08\u2b50\u2b50\u2b50\u2b50\u2b50 \u5fc5\u8bfb\uff09 Docker\u5bb9\u5668\u5316\u90e8\u7f72 \u6570\u636e\u5e93\u914d\u7f6e\u4e0e\u8fc1\u79fb \u73af\u5883\u53d8\u91cf\u914d\u7f6e \u670d\u52a1\u542f\u52a8\u4e0e\u76d1\u63a7 \u6545\u969c\u6392\u67e5\u624b\u518c \u90e8\u7f72\u67b6\u6784 \u73af\u5883\u5206\u7c7b \u5f00\u53d1\u73af\u5883 : \u672c\u5730\u5f00\u53d1\u6d4b\u8bd5 \u9884\u53d1\u5e03\u73af\u5883 : \u529f\u80fd\u9a8c\u8bc1\u548c\u6027\u80fd\u6d4b\u8bd5 \u751f\u4ea7\u73af\u5883 : \u7ebf\u4e0a\u670d\u52a1 \u6838\u5fc3\u670d\u52a1 Streamlit\u524d\u7aef : \u7528\u6237\u754c\u9762\u670d\u52a1 FastAPI\u540e\u7aef : API\u670d\u52a1\uff08\u7aef\u53e38124\uff09 PostgreSQL : \u4e1a\u52a1\u6570\u636e\u5e93 Redis : \u7f13\u5b58\u670d\u52a1 \u8fd0\u7ef4\u8981\u70b9 \u76d1\u63a7\u6307\u6807 API\u54cd\u5e94\u65f6\u95f4 \u6570\u636e\u5e93\u8fde\u63a5\u72b6\u6001 \u7f13\u5b58\u547d\u4e2d\u7387 \u7cfb\u7edf\u8d44\u6e90\u4f7f\u7528\u7387 \u5173\u952e\u914d\u7f6e \u6570\u636e\u5e93\u8fde\u63a5\u6c60\u914d\u7f6e LLM API\u5bc6\u94a5\u7ba1\u7406 \u65e5\u5fd7\u7ea7\u522b\u8bbe\u7f6e \u7f13\u5b58\u7b56\u7565\u914d\u7f6e \u6545\u969c\u6392\u67e5 \u5e38\u89c1\u95ee\u9898 \u6570\u636e\u5e93\u8fde\u63a5\u95ee\u9898 - \u68c0\u67e5\u73af\u5883\u53d8\u91cf\u914d\u7f6e API\u8d85\u65f6\u95ee\u9898 - \u68c0\u67e5TuShare API\u72b6\u6001 \u7f13\u5b58\u95ee\u9898 - \u68c0\u67e5Redis\u8fde\u63a5 LLM\u8c03\u7528\u5931\u8d25 - \u68c0\u67e5API\u5bc6\u94a5\u548c\u914d\u989d \u6392\u67e5\u5de5\u5177 Docker logs \u7cfb\u7edf\u65e5\u5fd7 \u6570\u636e\u5e93\u67e5\u8be2\u65e5\u5fd7 API\u76d1\u63a7\u9762\u677f \u9605\u8bfb\u5efa\u8bae \u8fd0\u7ef4\u4eba\u5458 \u5fc5\u8bfb : \u5b8c\u6574\u9605\u8bfb\u90e8\u7f72\u6307\u5357 \u719f\u6089\u6545\u969c\u6392\u67e5\u6d41\u7a0b \u638c\u63e1\u76d1\u63a7\u5de5\u5177\u4f7f\u7528 \u5f00\u53d1\u8005 \u4e86\u89e3\u90e8\u7f72\u6d41\u7a0b\uff0c\u4fbf\u4e8e\u8c03\u8bd5\u73af\u5883\u95ee\u9898 \u66f4\u65b0\u9891\u7387 \u6708\u5ea6\u66f4\u65b0\u6216\u90e8\u7f72\u6d41\u7a0b\u53d8\u66f4\u65f6\u66f4\u65b0","title":"\u90e8\u7f72\u8fd0\u7ef4\u6587\u6863"},{"location":"04_deployment/#_1","text":"\u672c\u76ee\u5f55\u5305\u542b\u751f\u4ea7\u90e8\u7f72\u3001\u8fd0\u7ef4\u76d1\u63a7\u3001\u6545\u969c\u6392\u67e5\u7b49\u8fd0\u7ef4\u76f8\u5173\u6587\u6863\u3002","title":"\u90e8\u7f72\u8fd0\u7ef4\u6587\u6863"},{"location":"04_deployment/#_2","text":"","title":"\u6587\u6863\u5217\u8868"},{"location":"04_deployment/#_3","text":"deployment_operations_guide_2025_09.md - \u90e8\u7f72\u8fd0\u7ef4\u5b8c\u6574\u6307\u5357\uff08\u2b50\u2b50\u2b50\u2b50\u2b50 \u5fc5\u8bfb\uff09 Docker\u5bb9\u5668\u5316\u90e8\u7f72 \u6570\u636e\u5e93\u914d\u7f6e\u4e0e\u8fc1\u79fb \u73af\u5883\u53d8\u91cf\u914d\u7f6e \u670d\u52a1\u542f\u52a8\u4e0e\u76d1\u63a7 \u6545\u969c\u6392\u67e5\u624b\u518c","title":"\ud83d\ude80 \u90e8\u7f72\u6307\u5357"},{"location":"04_deployment/#_4","text":"","title":"\u90e8\u7f72\u67b6\u6784"},{"location":"04_deployment/#_5","text":"\u5f00\u53d1\u73af\u5883 : \u672c\u5730\u5f00\u53d1\u6d4b\u8bd5 \u9884\u53d1\u5e03\u73af\u5883 : \u529f\u80fd\u9a8c\u8bc1\u548c\u6027\u80fd\u6d4b\u8bd5 \u751f\u4ea7\u73af\u5883 : \u7ebf\u4e0a\u670d\u52a1","title":"\u73af\u5883\u5206\u7c7b"},{"location":"04_deployment/#_6","text":"Streamlit\u524d\u7aef : \u7528\u6237\u754c\u9762\u670d\u52a1 FastAPI\u540e\u7aef : API\u670d\u52a1\uff08\u7aef\u53e38124\uff09 PostgreSQL : \u4e1a\u52a1\u6570\u636e\u5e93 Redis : \u7f13\u5b58\u670d\u52a1","title":"\u6838\u5fc3\u670d\u52a1"},{"location":"04_deployment/#_7","text":"","title":"\u8fd0\u7ef4\u8981\u70b9"},{"location":"04_deployment/#_8","text":"API\u54cd\u5e94\u65f6\u95f4 \u6570\u636e\u5e93\u8fde\u63a5\u72b6\u6001 \u7f13\u5b58\u547d\u4e2d\u7387 \u7cfb\u7edf\u8d44\u6e90\u4f7f\u7528\u7387","title":"\u76d1\u63a7\u6307\u6807"},{"location":"04_deployment/#_9","text":"\u6570\u636e\u5e93\u8fde\u63a5\u6c60\u914d\u7f6e LLM API\u5bc6\u94a5\u7ba1\u7406 \u65e5\u5fd7\u7ea7\u522b\u8bbe\u7f6e \u7f13\u5b58\u7b56\u7565\u914d\u7f6e","title":"\u5173\u952e\u914d\u7f6e"},{"location":"04_deployment/#_10","text":"","title":"\u6545\u969c\u6392\u67e5"},{"location":"04_deployment/#_11","text":"\u6570\u636e\u5e93\u8fde\u63a5\u95ee\u9898 - \u68c0\u67e5\u73af\u5883\u53d8\u91cf\u914d\u7f6e API\u8d85\u65f6\u95ee\u9898 - \u68c0\u67e5TuShare API\u72b6\u6001 \u7f13\u5b58\u95ee\u9898 - \u68c0\u67e5Redis\u8fde\u63a5 LLM\u8c03\u7528\u5931\u8d25 - \u68c0\u67e5API\u5bc6\u94a5\u548c\u914d\u989d","title":"\u5e38\u89c1\u95ee\u9898"},{"location":"04_deployment/#_12","text":"Docker logs \u7cfb\u7edf\u65e5\u5fd7 \u6570\u636e\u5e93\u67e5\u8be2\u65e5\u5fd7 API\u76d1\u63a7\u9762\u677f","title":"\u6392\u67e5\u5de5\u5177"},{"location":"04_deployment/#_13","text":"","title":"\u9605\u8bfb\u5efa\u8bae"},{"location":"04_deployment/#_14","text":"\u5fc5\u8bfb : \u5b8c\u6574\u9605\u8bfb\u90e8\u7f72\u6307\u5357 \u719f\u6089\u6545\u969c\u6392\u67e5\u6d41\u7a0b \u638c\u63e1\u76d1\u63a7\u5de5\u5177\u4f7f\u7528","title":"\u8fd0\u7ef4\u4eba\u5458"},{"location":"04_deployment/#_15","text":"\u4e86\u89e3\u90e8\u7f72\u6d41\u7a0b\uff0c\u4fbf\u4e8e\u8c03\u8bd5\u73af\u5883\u95ee\u9898","title":"\u5f00\u53d1\u8005"},{"location":"04_deployment/#_16","text":"\u6708\u5ea6\u66f4\u65b0\u6216\u90e8\u7f72\u6d41\u7a0b\u53d8\u66f4\u65f6\u66f4\u65b0","title":"\u66f4\u65b0\u9891\u7387"},{"location":"04_deployment/deployment_operations_guide_2025_09/","text":"\u90e8\u7f72\u8fd0\u7ef4\u6307\u5357 \u6700\u540e\u66f4\u65b0: 2025-09-26 \u6982\u8ff0 \u672c\u6307\u5357\u63d0\u4f9b\u80a1\u7968\u4f30\u503c\u7cfb\u7edf\u7684\u5b8c\u6574\u90e8\u7f72\u3001\u8fd0\u7ef4\u548c\u76d1\u63a7\u65b9\u6848\u3002\u9879\u76ee\u5df2\u8fbe\u5230\u751f\u4ea7\u7ea7\u6807\u51c6\uff0c\u652f\u6301\u591a\u79cd\u90e8\u7f72\u65b9\u5f0f\u548c\u8fd0\u7ef4\u7b56\u7565\u3002 v3.0.0\u91cd\u8981\u66f4\u65b0(2025-09-26) \u7528\u6237\u8ba4\u8bc1\u7cfb\u7edf : \u6570\u636e\u5e93\u67b6\u6784\u4eceSQLite\u8fc1\u79fb\u81f3PostgreSQL/Supabase\uff0c\u652f\u6301\u9ad8\u5e76\u53d1\u751f\u4ea7\u73af\u5883 \u667a\u80fd\u7f13\u5b58\u7cfb\u7edf : \u4f30\u503c\u7ed3\u679c\u6301\u4e45\u5316\u7f13\u5b58\uff0c\u5927\u5e45\u63d0\u5347\u7528\u6237\u4f53\u9a8c\u548c\u7cfb\u7edf\u6027\u80fd \u4f1a\u8bdd\u7ba1\u7406 : \u7528\u6237\u767b\u5f55\u72b6\u6001\u548c\u6570\u636e\u4f1a\u8bdd\u6062\u590d\u529f\u80fd \u5b89\u5168\u589e\u5f3a : \u8ba4\u8bc1\u4e2d\u95f4\u4ef6\u3001\u5bc6\u7801\u54c8\u5e0c\u3001\u4f1a\u8bdd\u4ee4\u724c\u7b49\u5b8c\u6574\u5b89\u5168\u4f53\u7cfb UI/UX\u4f18\u5316 : \u524d\u7aef\u754c\u9762\u548c\u7528\u6237\u4f53\u9a8c\u91cd\u5927\u6539\u8fdb \u90e8\u7f72\u67b6\u6784 \u7cfb\u7edf\u7ec4\u4ef6 \u250c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2510 \u2502 Load Balancer \u2502 \u251c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2524 \u2502 Frontend Layer \u2502 \u2502 \u250c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2510\u2502 \u2502 \u2502 Streamlit App \u2502\u2502 \u2502 \u2502 Port: 8501 \u2502\u2502 \u2502 \u2514\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2518\u2502 \u251c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2524 \u2502 API Layer \u2502 \u2502 \u250c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2510\u2502 \u2502 \u2502 FastAPI Service \u2502\u2502 \u2502 \u2502 Port: 8124 \u2502\u2502 \u2502 \u2514\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2518\u2502 \u251c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2524 \u2502 Data Layer \u2502 \u2502 \u250c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2510 \u250c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2510 \u250c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2510\u2502 \u2502 \u2502 TuShare API \u2502 \u2502 PostgreSQL \u2502 \u2502 Redis (Cache) \u2502\u2502 \u2502 \u2502 (External) \u2502 \u2502 Port: 5432 \u2502 \u2502 Port: 6379 \u2502\u2502 \u2502 \u2514\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2518 \u2514\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2518 \u2514\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2518\u2502 \u2514\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2518 \u73af\u5883\u8981\u6c42 \u786c\u4ef6\u8981\u6c42 \u751f\u4ea7\u73af\u5883 : - CPU: 4\u6838\u5fc3\u4ee5\u4e0a - \u5185\u5b58: 8GB\u4ee5\u4e0a - \u78c1\u76d8: 50GB SSD - \u7f51\u7edc: 100Mbps\u5e26\u5bbd \u5f00\u53d1\u73af\u5883 : - CPU: 2\u6838\u5fc3\u4ee5\u4e0a - \u5185\u5b58: 4GB\u4ee5\u4e0a - \u78c1\u76d8: 20GB\u53ef\u7528\u7a7a\u95f4 \u8f6f\u4ef6\u4f9d\u8d56 Python 3.9+ uv\u5305\u7ba1\u7406\u5668 (\u63a8\u8350) \u6216 pip PostgreSQL 12+ (\u53ef\u9009) Redis 6+ (\u53ef\u9009) Nginx (\u751f\u4ea7\u73af\u5883) Docker & Docker Compose (\u5bb9\u5668\u5316\u90e8\u7f72) \u90e8\u7f72\u65b9\u5f0f 1. \u672c\u5730\u5f00\u53d1\u90e8\u7f72 \u5feb\u901f\u542f\u52a8 # 1. \u73af\u5883\u51c6\u5907 git clone <repository-url> cd stock_vale_valuation_3.0 uv venv && source .venv/bin/activate uv pip install -e \".[dev]\" # 2. \u914d\u7f6e\u73af\u5883 cp .env.example .env # \u7f16\u8f91.env\u6587\u4ef6\u914d\u7f6e\u5fc5\u8981\u53c2\u6570 # 3. \u542f\u52a8\u670d\u52a1 # \u542f\u52a8API\u670d\u52a1 uvicorn src.api.main:app --reload --port 8124 & # \u542f\u52a8Streamlit\u524d\u7aef streamlit run frontend-streamlit/streamlit_app.py --server.port 8501 & \u670d\u52a1\u9a8c\u8bc1 # \u68c0\u67e5API\u670d\u52a1 curl http://localhost:8124/ # \u68c0\u67e5Streamlit\u524d\u7aef curl http://localhost:8501/ # \u8fd0\u884c\u5065\u5eb7\u68c0\u67e5 curl http://localhost:8124/health 2. Docker\u5bb9\u5668\u5316\u90e8\u7f72 Dockerfile\u793a\u4f8b FROM python:3.9-slim WORKDIR /app # \u5b89\u88c5\u7cfb\u7edf\u4f9d\u8d56 RUN apt-get update && apt-get install -y \\ gcc \\ && rm -rf /var/lib/apt/lists/* # \u5b89\u88c5uv\u5305\u7ba1\u7406\u5668 RUN pip install uv # \u590d\u5236\u9879\u76ee\u6587\u4ef6 COPY . . # \u5b89\u88c5Python\u4f9d\u8d56 RUN uv pip install --system -e \".[prod]\" # \u66b4\u9732\u7aef\u53e3 EXPOSE 8124 8501 # \u542f\u52a8\u811a\u672c CMD [\"bash\", \"scripts/start.sh\"] Docker Compose\u914d\u7f6e version: '3.8' services: api: build: . ports: - \"8124:8124\" environment: - DATA_SOURCE=tushare - TUSHARE_TOKEN=${TUSHARE_TOKEN} - DEEPSEEK_API_KEY=${DEEPSEEK_API_KEY} depends_on: - redis restart: unless-stopped streamlit: build: . ports: - \"8501:8501\" environment: - API_BASE_URL=http://api:8124 depends_on: - api restart: unless-stopped command: [\"streamlit\", \"run\", \"frontend-streamlit/streamlit_app.py\", \"--server.port\", \"8501\", \"--server.address\", \"0.0.0.0\"] redis: image: redis:6-alpine ports: - \"6379:6379\" restart: unless-stopped postgres: image: postgres:13-alpine environment: - POSTGRES_DB=stock_valuation - POSTGRES_USER=${DB_USER} - POSTGRES_PASSWORD=${DB_PASSWORD} volumes: - postgres_data:/var/lib/postgresql/data ports: - \"5432:5432\" restart: unless-stopped nginx: image: nginx:alpine ports: - \"80:80\" - \"443:443\" volumes: - ./nginx.conf:/etc/nginx/nginx.conf - ./ssl:/etc/nginx/ssl depends_on: - api - streamlit restart: unless-stopped volumes: postgres_data: \u542f\u52a8\u5bb9\u5668\u670d\u52a1 # \u6784\u5efa\u5e76\u542f\u52a8\u6240\u6709\u670d\u52a1 docker-compose up -d # \u67e5\u770b\u670d\u52a1\u72b6\u6001 docker-compose ps # \u67e5\u770b\u65e5\u5fd7 docker-compose logs -f api # \u505c\u6b62\u670d\u52a1 docker-compose down 3. Kubernetes\u90e8\u7f72 \u547d\u540d\u7a7a\u95f4\u548c\u914d\u7f6e # namespace.yaml apiVersion: v1 kind: Namespace metadata: name: stock-valuation --- # configmap.yaml apiVersion: v1 kind: ConfigMap metadata: name: app-config namespace: stock-valuation data: DATA_SOURCE: \"tushare\" OCL_AGGREGATION_MODE: \"standard\" API_BASE_URL: \"http://api-service:8124\" --- # secret.yaml apiVersion: v1 kind: Secret metadata: name: app-secrets namespace: stock-valuation type: Opaque data: TUSHARE_TOKEN: <base64-encoded-token> DEEPSEEK_API_KEY: <base64-encoded-key> \u5e94\u7528\u90e8\u7f72 # api-deployment.yaml apiVersion: apps/v1 kind: Deployment metadata: name: api-deployment namespace: stock-valuation spec: replicas: 3 selector: matchLabels: app: api template: metadata: labels: app: api spec: containers: - name: api image: stock-valuation:latest ports: - containerPort: 8124 env: - name: DATA_SOURCE valueFrom: configMapKeyRef: name: app-config key: DATA_SOURCE - name: TUSHARE_TOKEN valueFrom: secretKeyRef: name: app-secrets key: TUSHARE_TOKEN resources: requests: memory: \"1Gi\" cpu: \"500m\" limits: memory: \"2Gi\" cpu: \"1000m\" livenessProbe: httpGet: path: /health port: 8124 initialDelaySeconds: 30 periodSeconds: 10 readinessProbe: httpGet: path: / port: 8124 initialDelaySeconds: 5 periodSeconds: 5 --- # api-service.yaml apiVersion: v1 kind: Service metadata: name: api-service namespace: stock-valuation spec: selector: app: api ports: - protocol: TCP port: 8124 targetPort: 8124 type: ClusterIP 4. \u4e91\u670d\u52a1\u90e8\u7f72 AWS\u90e8\u7f72 # \u4f7f\u7528AWS ECS aws ecs create-cluster --cluster-name stock-valuation # \u521b\u5efa\u4efb\u52a1\u5b9a\u4e49 aws ecs register-task-definition --cli-input-json file://task-definition.json # \u521b\u5efa\u670d\u52a1 aws ecs create-service \\ --cluster stock-valuation \\ --service-name api-service \\ --task-definition stock-valuation-api:1 \\ --desired-count 2 Azure\u90e8\u7f72 # \u521b\u5efa\u5bb9\u5668\u5b9e\u4f8b az container create \\ --resource-group myResourceGroup \\ --name stock-valuation-api \\ --image stock-valuation:latest \\ --ports 8124 \\ --environment-variables DATA_SOURCE=tushare \u914d\u7f6e\u7ba1\u7406 \u73af\u5883\u53d8\u91cf\u914d\u7f6e \u6838\u5fc3\u914d\u7f6e # \u6570\u636e\u6e90\u914d\u7f6e DATA_SOURCE=tushare # tushare/postgres/hybrid TUSHARE_TOKEN=your_token OCL_AGGREGATION_MODE=standard # LLM\u914d\u7f6e LLM_PROVIDER=deepseek DEEPSEEK_API_KEY=your_key DEEPSEEK_MODEL_NAME=deepseek-chat # \u6570\u636e\u5e93\u914d\u7f6e(\u53ef\u9009) DB_HOST=localhost DB_PORT=5432 DB_NAME=stock_valuation DB_USER=admin DB_PASSWORD=password # Redis\u914d\u7f6e(\u53ef\u9009) REDIS_HOST=localhost REDIS_PORT=6379 REDIS_DB=0 # API\u914d\u7f6e API_BASE_URL=http://localhost:8124 CORS_ORIGINS=[\"http://localhost:8501\"] # \u65e5\u5fd7\u914d\u7f6e LOG_LEVEL=INFO LOG_FILE=logs/app.log \u73af\u5883\u7279\u5b9a\u914d\u7f6e # \u5f00\u53d1\u73af\u5883 cp .env.example .env.dev # \u7f16\u8f91\u5f00\u53d1\u914d\u7f6e # \u6d4b\u8bd5\u73af\u5883 cp .env.example .env.test # \u7f16\u8f91\u6d4b\u8bd5\u914d\u7f6e # \u751f\u4ea7\u73af\u5883 cp .env.example .env.prod # \u7f16\u8f91\u751f\u4ea7\u914d\u7f6e \u914d\u7f6e\u9a8c\u8bc1 # \u9a8c\u8bc1\u914d\u7f6e\u5b8c\u6574\u6027 python scripts/validate_config.py # \u6d4b\u8bd5\u6570\u636e\u6e90\u8fde\u63a5 python scripts/test_data_source.py # \u9a8c\u8bc1API\u53ef\u8fbe\u6027 python scripts/health_check.py \u76d1\u63a7\u548c\u65e5\u5fd7 \u5065\u5eb7\u68c0\u67e5 API\u5065\u5eb7\u68c0\u67e5 # \u81ea\u5b9a\u4e49\u5065\u5eb7\u68c0\u67e5\u7aef\u70b9 @app.get(\"/health\") async def health_check(): return { \"status\": \"healthy\", \"timestamp\": datetime.now().isoformat(), \"version\": \"3.0.0\", \"data_source\": os.getenv(\"DATA_SOURCE\"), \"dependencies\": { \"tushare\": check_tushare_connection(), \"database\": check_database_connection(), \"redis\": check_redis_connection() } } \u57fa\u7840\u76d1\u63a7\u811a\u672c #!/bin/bash # health_monitor.sh API_URL=\"http://localhost:8124\" STREAMLIT_URL=\"http://localhost:8501\" # \u68c0\u67e5API\u670d\u52a1 api_status=$(curl -s -o /dev/null -w \"%{http_code}\" $API_URL/health) if [ $api_status -eq 200 ]; then echo \"\u2705 API service is healthy\" else echo \"\u274c API service is down (HTTP: $api_status)\" fi # \u68c0\u67e5Streamlit\u670d\u52a1 streamlit_status=$(curl -s -o /dev/null -w \"%{http_code}\" $STREAMLIT_URL) if [ $streamlit_status -eq 200 ]; then echo \"\u2705 Streamlit service is healthy\" else echo \"\u274c Streamlit service is down (HTTP: $streamlit_status)\" fi \u65e5\u5fd7\u7ba1\u7406 \u65e5\u5fd7\u914d\u7f6e import logging import logging.handlers # \u914d\u7f6e\u7ed3\u6784\u5316\u65e5\u5fd7 def setup_logging(): formatter = logging.Formatter( '%(asctime)s - %(name)s - %(levelname)s - %(message)s' ) # \u6587\u4ef6\u65e5\u5fd7 file_handler = logging.handlers.RotatingFileHandler( 'logs/app.log', maxBytes=10*1024*1024, # 10MB backupCount=5 ) file_handler.setFormatter(formatter) # \u63a7\u5236\u53f0\u65e5\u5fd7 console_handler = logging.StreamHandler() console_handler.setFormatter(formatter) # \u6839\u65e5\u5fd7\u5668 root_logger = logging.getLogger() root_logger.setLevel(logging.INFO) root_logger.addHandler(file_handler) root_logger.addHandler(console_handler) \u65e5\u5fd7\u805a\u5408(ELK Stack) # logstash.conf input { file { path => \"/app/logs/*.log\" start_position => \"beginning\" } } filter { grok { match => { \"message\" => \"%{TIMESTAMP_ISO8601:timestamp} - %{DATA:logger} - %{LOGLEVEL:level} - %{GREEDYDATA:message}\" } } } output { elasticsearch { hosts => [\"elasticsearch:9200\"] index => \"stock-valuation-%{+YYYY.MM.dd}\" } } \u6027\u80fd\u76d1\u63a7 \u5173\u952e\u6307\u6807 # \u4f7f\u7528Prometheus\u76d1\u63a7 from prometheus_client import Counter, Histogram, generate_latest # \u8bf7\u6c42\u8ba1\u6570\u5668 REQUEST_COUNT = Counter('api_requests_total', 'Total API requests', ['method', 'endpoint']) # \u54cd\u5e94\u65f6\u95f4\u76f4\u65b9\u56fe REQUEST_LATENCY = Histogram('api_request_duration_seconds', 'API request latency') # \u4e1a\u52a1\u6307\u6807 VALUATION_SUCCESS = Counter('valuations_successful_total', 'Successful valuations') VALUATION_ERRORS = Counter('valuations_failed_total', 'Failed valuations', ['error_type']) @app.middleware(\"http\") async def monitor_requests(request: Request, call_next): start_time = time.time() response = await call_next(request) # \u8bb0\u5f55\u6307\u6807 REQUEST_COUNT.labels( method=request.method, endpoint=request.url.path ).inc() REQUEST_LATENCY.observe(time.time() - start_time) return response Grafana\u4eea\u8868\u677f { \"dashboard\": { \"title\": \"Stock Valuation System\", \"panels\": [ { \"title\": \"API Request Rate\", \"type\": \"graph\", \"targets\": [ { \"expr\": \"rate(api_requests_total[5m])\", \"legendFormat\": \"{{method}} {{endpoint}}\" } ] }, { \"title\": \"Response Time\", \"type\": \"graph\", \"targets\": [ { \"expr\": \"histogram_quantile(0.95, api_request_duration_seconds_bucket)\", \"legendFormat\": \"95th percentile\" } ] }, { \"title\": \"Error Rate\", \"type\": \"singlestat\", \"targets\": [ { \"expr\": \"rate(valuations_failed_total[5m]) / rate(api_requests_total[5m])\" } ] } ] } } \u5907\u4efd\u548c\u6062\u590d \u6570\u636e\u5907\u4efd\u7b56\u7565 \u914d\u7f6e\u6587\u4ef6\u5907\u4efd #!/bin/bash # backup_config.sh BACKUP_DIR=\"/backup/config\" DATE=$(date +%Y%m%d_%H%M%S) # \u521b\u5efa\u5907\u4efd\u76ee\u5f55 mkdir -p $BACKUP_DIR/$DATE # \u5907\u4efd\u73af\u5883\u914d\u7f6e cp .env* $BACKUP_DIR/$DATE/ cp -r config/ $BACKUP_DIR/$DATE/ cp docker-compose.yml $BACKUP_DIR/$DATE/ # \u538b\u7f29\u5907\u4efd tar -czf $BACKUP_DIR/config_backup_$DATE.tar.gz -C $BACKUP_DIR $DATE # \u6e05\u7406\u65e7\u5907\u4efd(\u4fdd\u755930\u5929) find $BACKUP_DIR -name \"config_backup_*.tar.gz\" -mtime +30 -delete \u6570\u636e\u5e93\u5907\u4efd #!/bin/bash # backup_database.sh DB_HOST=\"localhost\" DB_NAME=\"stock_valuation\" DB_USER=\"admin\" BACKUP_DIR=\"/backup/database\" DATE=$(date +%Y%m%d_%H%M%S) # \u521b\u5efa\u5907\u4efd pg_dump -h $DB_HOST -U $DB_USER -d $DB_NAME \\ | gzip > $BACKUP_DIR/db_backup_$DATE.sql.gz # \u4e0a\u4f20\u5230\u4e91\u5b58\u50a8(\u53ef\u9009) aws s3 cp $BACKUP_DIR/db_backup_$DATE.sql.gz \\ s3://your-backup-bucket/database/ \u6062\u590d\u6d41\u7a0b \u914d\u7f6e\u6062\u590d # \u6062\u590d\u914d\u7f6e\u6587\u4ef6 tar -xzf config_backup_20251222_140000.tar.gz cp 20251222_140000/.env* ./ cp -r 20251222_140000/config/ ./ \u6570\u636e\u5e93\u6062\u590d # \u6062\u590d\u6570\u636e\u5e93 gunzip -c db_backup_20251222_140000.sql.gz | \\ psql -h localhost -U admin -d stock_valuation \u670d\u52a1\u6062\u590d # \u91cd\u542f\u670d\u52a1 docker-compose down docker-compose up -d # \u9a8c\u8bc1\u6062\u590d ./scripts/health_check.sh \u5b89\u5168\u914d\u7f6e SSL/TLS\u914d\u7f6e Nginx SSL\u914d\u7f6e server { listen 443 ssl http2; server_name your-domain.com; ssl_certificate /etc/nginx/ssl/cert.pem; ssl_certificate_key /etc/nginx/ssl/key.pem; ssl_protocols TLSv1.2 TLSv1.3; ssl_ciphers ECDHE-RSA-AES256-GCM-SHA384:ECDHE-RSA-AES128-GCM-SHA256; ssl_prefer_server_ciphers off; location /api/ { proxy_pass http://api:8124/; proxy_set_header Host $host; proxy_set_header X-Real-IP $remote_addr; proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for; proxy_set_header X-Forwarded-Proto $scheme; } location / { proxy_pass http://streamlit:8501/; proxy_set_header Host $host; proxy_set_header X-Real-IP $remote_addr; proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for; proxy_set_header X-Forwarded-Proto $scheme; # WebSocket\u652f\u6301 proxy_http_version 1.1; proxy_set_header Upgrade $http_upgrade; proxy_set_header Connection \"upgrade\"; } } \u8bbf\u95ee\u63a7\u5236 API\u5bc6\u94a5\u8ba4\u8bc1 from fastapi import HTTPException, Depends from fastapi.security import HTTPBearer security = HTTPBearer() async def verify_api_key(token: str = Depends(security)): if token.credentials != os.getenv(\"API_SECRET_KEY\"): raise HTTPException( status_code=401, detail=\"Invalid API key\" ) return token IP\u767d\u540d\u5355 from fastapi import Request, HTTPException ALLOWED_IPS = [\"127.0.0.1\", \"10.0.0.0/8\", \"192.168.0.0/16\"] async def ip_whitelist(request: Request): client_ip = request.client.host if not any(ipaddress.ip_address(client_ip) in ipaddress.ip_network(allowed) for allowed in ALLOWED_IPS): raise HTTPException(status_code=403, detail=\"IP not allowed\") \u6545\u969c\u6392\u67e5 \u5e38\u89c1\u95ee\u9898 1. API\u670d\u52a1\u65e0\u6cd5\u542f\u52a8 # \u68c0\u67e5\u7aef\u53e3\u5360\u7528 lsof -i :8124 # \u68c0\u67e5\u65e5\u5fd7 tail -f logs/app.log # \u68c0\u67e5\u914d\u7f6e python scripts/validate_config.py # \u91cd\u542f\u670d\u52a1 systemctl restart stock-valuation-api 2. \u6570\u636e\u6e90\u8fde\u63a5\u5931\u8d25 # \u68c0\u67e5TuShare\u8fde\u63a5 python -c \" import tushare as ts ts.set_token('$TUSHARE_TOKEN') pro = ts.pro_api() print(pro.stock_basic().head()) \" # \u68c0\u67e5\u6570\u636e\u5e93\u8fde\u63a5 pg_isready -h $DB_HOST -p $DB_PORT # \u68c0\u67e5\u7f51\u7edc\u8fde\u63a5 ping api.tushare.pro 3. \u5185\u5b58\u4f7f\u7528\u8fc7\u9ad8 # \u68c0\u67e5\u8fdb\u7a0b\u5185\u5b58\u4f7f\u7528 ps aux | grep python | grep valuation # \u68c0\u67e5\u7cfb\u7edf\u5185\u5b58 free -h # \u91cd\u542f\u670d\u52a1\u91ca\u653e\u5185\u5b58 docker-compose restart api 4. \u4f30\u503c\u8ba1\u7b97\u9519\u8bef # \u8fd0\u884c\u8bca\u65ad\u811a\u672c python scripts/diagnose_valuation.py --ts_code 600519.SH # \u68c0\u67e5\u8f93\u5165\u6570\u636e\u8d28\u91cf python scripts/data_quality_check.py # \u5bf9\u6bd4\u6570\u636e\u6e90\u7ed3\u679c python scripts/e2e_compare_sources.py --ts 600519.SH \u65e5\u5fd7\u5206\u6790 \u9519\u8bef\u6a21\u5f0f\u8bc6\u522b # \u67e5\u627eAPI\u9519\u8bef grep \"ERROR\" logs/app.log | tail -20 # \u67e5\u627e\u6570\u636e\u83b7\u53d6\u5931\u8d25 grep \"Failed to fetch\" logs/app.log # \u67e5\u627e\u8ba1\u7b97\u5f02\u5e38 grep \"Calculation error\" logs/app.log # \u7edf\u8ba1\u9519\u8bef\u7c7b\u578b grep \"ERROR\" logs/app.log | awk '{print $5}' | sort | uniq -c \u6269\u5c55\u548c\u4f18\u5316 \u6c34\u5e73\u6269\u5c55 \u8d1f\u8f7d\u5747\u8861\u914d\u7f6e upstream api_backend { server api1:8124; server api2:8124; server api3:8124; } server { location /api/ { proxy_pass http://api_backend; proxy_set_header Host $host; proxy_set_header X-Real-IP $remote_addr; } } \u81ea\u52a8\u6269\u5c55(Kubernetes) apiVersion: autoscaling/v2 kind: HorizontalPodAutoscaler metadata: name: api-hpa namespace: stock-valuation spec: scaleTargetRef: apiVersion: apps/v1 kind: Deployment name: api-deployment minReplicas: 2 maxReplicas: 10 metrics: - type: Resource resource: name: cpu target: type: Utilization averageUtilization: 70 - type: Resource resource: name: memory target: type: Utilization averageUtilization: 80 \u6027\u80fd\u4f18\u5316 \u7f13\u5b58\u7b56\u7565 import redis from functools import wraps redis_client = redis.Redis(host='localhost', port=6379, db=0) def cache_result(expiration=3600): def decorator(func): @wraps(func) async def wrapper(*args, **kwargs): # \u751f\u6210\u7f13\u5b58\u952e cache_key = f\"{func.__name__}:{hash(str(args) + str(kwargs))}\" # \u5c1d\u8bd5\u4ece\u7f13\u5b58\u83b7\u53d6 cached_result = redis_client.get(cache_key) if cached_result: return json.loads(cached_result) # \u6267\u884c\u51fd\u6570\u5e76\u7f13\u5b58\u7ed3\u679c result = await func(*args, **kwargs) redis_client.setex( cache_key, expiration, json.dumps(result, default=str) ) return result return wrapper return decorator \u6570\u636e\u5e93\u4f18\u5316 -- \u6dfb\u52a0\u7d22\u5f15\u4f18\u5316\u67e5\u8be2 CREATE INDEX idx_stock_basic_ts_code ON stock_basic(ts_code); CREATE INDEX idx_income_end_date ON income_statement(end_date); CREATE INDEX idx_balance_end_date ON balance_sheet(end_date); -- \u5206\u533a\u8868\u4f18\u5316\u5927\u6570\u636e\u91cf CREATE TABLE income_statement_2024 PARTITION OF income_statement FOR VALUES FROM ('2024-01-01') TO ('2025-01-01'); \u7ef4\u62a4\u8ba1\u5212 \u65e5\u5e38\u7ef4\u62a4 \u6bcf\u65e5\u4efb\u52a1 \u68c0\u67e5\u670d\u52a1\u5065\u5eb7\u72b6\u6001 \u76d1\u63a7API\u54cd\u5e94\u65f6\u95f4\u548c\u9519\u8bef\u7387 \u68c0\u67e5\u78c1\u76d8\u7a7a\u95f4\u4f7f\u7528\u60c5\u51b5 \u5907\u4efd\u91cd\u8981\u914d\u7f6e\u6587\u4ef6 \u6bcf\u5468\u4efb\u52a1 \u6e05\u7406\u8fc7\u671f\u65e5\u5fd7\u6587\u4ef6 \u66f4\u65b0\u7cfb\u7edf\u8865\u4e01 \u68c0\u67e5\u6570\u636e\u8d28\u91cf \u6027\u80fd\u62a5\u544a\u751f\u6210 \u6bcf\u6708\u4efb\u52a1 \u5b8c\u6574\u5907\u4efd\u9a8c\u8bc1 \u5b89\u5168\u5ba1\u8ba1 \u4f9d\u8d56\u5305\u66f4\u65b0 \u5bb9\u91cf\u89c4\u5212\u8bc4\u4f30 \u66f4\u65b0\u6d41\u7a0b \u6eda\u52a8\u66f4\u65b0 # 1. \u6784\u5efa\u65b0\u7248\u672c\u955c\u50cf docker build -t stock-valuation:v3.1.0 . # 2. \u66f4\u65b0docker-compose.yml sed -i 's/stock-valuation:latest/stock-valuation:v3.1.0/g' docker-compose.yml # 3. \u6eda\u52a8\u66f4\u65b0\u670d\u52a1 docker-compose up -d --no-deps api # 4. \u9a8c\u8bc1\u66f4\u65b0 ./scripts/health_check.sh # 5. \u66f4\u65b0\u5176\u4ed6\u670d\u52a1 docker-compose up -d \u56de\u6eda\u8ba1\u5212 # \u5982\u679c\u66f4\u65b0\u5931\u8d25\uff0c\u5feb\u901f\u56de\u6eda docker-compose down git checkout previous-stable-tag docker-compose up -d # \u6062\u590d\u6570\u636e(\u5982\u9700\u8981) ./scripts/restore_backup.sh \u672c\u90e8\u7f72\u8fd0\u7ef4\u6307\u5357\u63d0\u4f9b\u4e86\u5b8c\u6574\u7684\u751f\u4ea7\u7ea7\u90e8\u7f72\u65b9\u6848\uff0c\u5efa\u8bae\u6839\u636e\u5b9e\u9645\u73af\u5883\u8c03\u6574\u5177\u4f53\u914d\u7f6e\u3002","title":"\u90e8\u7f72\u8fd0\u7ef4\u6307\u5357"},{"location":"04_deployment/deployment_operations_guide_2025_09/#_1","text":"\u6700\u540e\u66f4\u65b0: 2025-09-26","title":"\u90e8\u7f72\u8fd0\u7ef4\u6307\u5357"},{"location":"04_deployment/deployment_operations_guide_2025_09/#_2","text":"\u672c\u6307\u5357\u63d0\u4f9b\u80a1\u7968\u4f30\u503c\u7cfb\u7edf\u7684\u5b8c\u6574\u90e8\u7f72\u3001\u8fd0\u7ef4\u548c\u76d1\u63a7\u65b9\u6848\u3002\u9879\u76ee\u5df2\u8fbe\u5230\u751f\u4ea7\u7ea7\u6807\u51c6\uff0c\u652f\u6301\u591a\u79cd\u90e8\u7f72\u65b9\u5f0f\u548c\u8fd0\u7ef4\u7b56\u7565\u3002","title":"\u6982\u8ff0"},{"location":"04_deployment/deployment_operations_guide_2025_09/#v3002025-09-26","text":"\u7528\u6237\u8ba4\u8bc1\u7cfb\u7edf : \u6570\u636e\u5e93\u67b6\u6784\u4eceSQLite\u8fc1\u79fb\u81f3PostgreSQL/Supabase\uff0c\u652f\u6301\u9ad8\u5e76\u53d1\u751f\u4ea7\u73af\u5883 \u667a\u80fd\u7f13\u5b58\u7cfb\u7edf : \u4f30\u503c\u7ed3\u679c\u6301\u4e45\u5316\u7f13\u5b58\uff0c\u5927\u5e45\u63d0\u5347\u7528\u6237\u4f53\u9a8c\u548c\u7cfb\u7edf\u6027\u80fd \u4f1a\u8bdd\u7ba1\u7406 : \u7528\u6237\u767b\u5f55\u72b6\u6001\u548c\u6570\u636e\u4f1a\u8bdd\u6062\u590d\u529f\u80fd \u5b89\u5168\u589e\u5f3a : \u8ba4\u8bc1\u4e2d\u95f4\u4ef6\u3001\u5bc6\u7801\u54c8\u5e0c\u3001\u4f1a\u8bdd\u4ee4\u724c\u7b49\u5b8c\u6574\u5b89\u5168\u4f53\u7cfb UI/UX\u4f18\u5316 : \u524d\u7aef\u754c\u9762\u548c\u7528\u6237\u4f53\u9a8c\u91cd\u5927\u6539\u8fdb","title":"v3.0.0\u91cd\u8981\u66f4\u65b0(2025-09-26)"},{"location":"04_deployment/deployment_operations_guide_2025_09/#_3","text":"","title":"\u90e8\u7f72\u67b6\u6784"},{"location":"04_deployment/deployment_operations_guide_2025_09/#_4","text":"\u250c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2510 \u2502 Load Balancer \u2502 \u251c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2524 \u2502 Frontend Layer \u2502 \u2502 \u250c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2510\u2502 \u2502 \u2502 Streamlit App \u2502\u2502 \u2502 \u2502 Port: 8501 \u2502\u2502 \u2502 \u2514\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2518\u2502 \u251c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2524 \u2502 API Layer \u2502 \u2502 \u250c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2510\u2502 \u2502 \u2502 FastAPI Service \u2502\u2502 \u2502 \u2502 Port: 8124 \u2502\u2502 \u2502 \u2514\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2518\u2502 \u251c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2524 \u2502 Data Layer \u2502 \u2502 \u250c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2510 \u250c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2510 \u250c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2510\u2502 \u2502 \u2502 TuShare API \u2502 \u2502 PostgreSQL \u2502 \u2502 Redis (Cache) \u2502\u2502 \u2502 \u2502 (External) \u2502 \u2502 Port: 5432 \u2502 \u2502 Port: 6379 \u2502\u2502 \u2502 \u2514\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2518 \u2514\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2518 \u2514\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2518\u2502 \u2514\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2518","title":"\u7cfb\u7edf\u7ec4\u4ef6"},{"location":"04_deployment/deployment_operations_guide_2025_09/#_5","text":"","title":"\u73af\u5883\u8981\u6c42"},{"location":"04_deployment/deployment_operations_guide_2025_09/#_6","text":"\u751f\u4ea7\u73af\u5883 : - CPU: 4\u6838\u5fc3\u4ee5\u4e0a - \u5185\u5b58: 8GB\u4ee5\u4e0a - \u78c1\u76d8: 50GB SSD - \u7f51\u7edc: 100Mbps\u5e26\u5bbd \u5f00\u53d1\u73af\u5883 : - CPU: 2\u6838\u5fc3\u4ee5\u4e0a - \u5185\u5b58: 4GB\u4ee5\u4e0a - \u78c1\u76d8: 20GB\u53ef\u7528\u7a7a\u95f4","title":"\u786c\u4ef6\u8981\u6c42"},{"location":"04_deployment/deployment_operations_guide_2025_09/#_7","text":"Python 3.9+ uv\u5305\u7ba1\u7406\u5668 (\u63a8\u8350) \u6216 pip PostgreSQL 12+ (\u53ef\u9009) Redis 6+ (\u53ef\u9009) Nginx (\u751f\u4ea7\u73af\u5883) Docker & Docker Compose (\u5bb9\u5668\u5316\u90e8\u7f72)","title":"\u8f6f\u4ef6\u4f9d\u8d56"},{"location":"04_deployment/deployment_operations_guide_2025_09/#_8","text":"","title":"\u90e8\u7f72\u65b9\u5f0f"},{"location":"04_deployment/deployment_operations_guide_2025_09/#1","text":"","title":"1. \u672c\u5730\u5f00\u53d1\u90e8\u7f72"},{"location":"04_deployment/deployment_operations_guide_2025_09/#_9","text":"# 1. \u73af\u5883\u51c6\u5907 git clone <repository-url> cd stock_vale_valuation_3.0 uv venv && source .venv/bin/activate uv pip install -e \".[dev]\" # 2. \u914d\u7f6e\u73af\u5883 cp .env.example .env # \u7f16\u8f91.env\u6587\u4ef6\u914d\u7f6e\u5fc5\u8981\u53c2\u6570 # 3. \u542f\u52a8\u670d\u52a1 # \u542f\u52a8API\u670d\u52a1 uvicorn src.api.main:app --reload --port 8124 & # \u542f\u52a8Streamlit\u524d\u7aef streamlit run frontend-streamlit/streamlit_app.py --server.port 8501 &","title":"\u5feb\u901f\u542f\u52a8"},{"location":"04_deployment/deployment_operations_guide_2025_09/#_10","text":"# \u68c0\u67e5API\u670d\u52a1 curl http://localhost:8124/ # \u68c0\u67e5Streamlit\u524d\u7aef curl http://localhost:8501/ # \u8fd0\u884c\u5065\u5eb7\u68c0\u67e5 curl http://localhost:8124/health","title":"\u670d\u52a1\u9a8c\u8bc1"},{"location":"04_deployment/deployment_operations_guide_2025_09/#2-docker","text":"","title":"2. Docker\u5bb9\u5668\u5316\u90e8\u7f72"},{"location":"04_deployment/deployment_operations_guide_2025_09/#dockerfile","text":"FROM python:3.9-slim WORKDIR /app # \u5b89\u88c5\u7cfb\u7edf\u4f9d\u8d56 RUN apt-get update && apt-get install -y \\ gcc \\ && rm -rf /var/lib/apt/lists/* # \u5b89\u88c5uv\u5305\u7ba1\u7406\u5668 RUN pip install uv # \u590d\u5236\u9879\u76ee\u6587\u4ef6 COPY . . # \u5b89\u88c5Python\u4f9d\u8d56 RUN uv pip install --system -e \".[prod]\" # \u66b4\u9732\u7aef\u53e3 EXPOSE 8124 8501 # \u542f\u52a8\u811a\u672c CMD [\"bash\", \"scripts/start.sh\"]","title":"Dockerfile\u793a\u4f8b"},{"location":"04_deployment/deployment_operations_guide_2025_09/#docker-compose","text":"version: '3.8' services: api: build: . ports: - \"8124:8124\" environment: - DATA_SOURCE=tushare - TUSHARE_TOKEN=${TUSHARE_TOKEN} - DEEPSEEK_API_KEY=${DEEPSEEK_API_KEY} depends_on: - redis restart: unless-stopped streamlit: build: . ports: - \"8501:8501\" environment: - API_BASE_URL=http://api:8124 depends_on: - api restart: unless-stopped command: [\"streamlit\", \"run\", \"frontend-streamlit/streamlit_app.py\", \"--server.port\", \"8501\", \"--server.address\", \"0.0.0.0\"] redis: image: redis:6-alpine ports: - \"6379:6379\" restart: unless-stopped postgres: image: postgres:13-alpine environment: - POSTGRES_DB=stock_valuation - POSTGRES_USER=${DB_USER} - POSTGRES_PASSWORD=${DB_PASSWORD} volumes: - postgres_data:/var/lib/postgresql/data ports: - \"5432:5432\" restart: unless-stopped nginx: image: nginx:alpine ports: - \"80:80\" - \"443:443\" volumes: - ./nginx.conf:/etc/nginx/nginx.conf - ./ssl:/etc/nginx/ssl depends_on: - api - streamlit restart: unless-stopped volumes: postgres_data:","title":"Docker Compose\u914d\u7f6e"},{"location":"04_deployment/deployment_operations_guide_2025_09/#_11","text":"# \u6784\u5efa\u5e76\u542f\u52a8\u6240\u6709\u670d\u52a1 docker-compose up -d # \u67e5\u770b\u670d\u52a1\u72b6\u6001 docker-compose ps # \u67e5\u770b\u65e5\u5fd7 docker-compose logs -f api # \u505c\u6b62\u670d\u52a1 docker-compose down","title":"\u542f\u52a8\u5bb9\u5668\u670d\u52a1"},{"location":"04_deployment/deployment_operations_guide_2025_09/#3-kubernetes","text":"","title":"3. Kubernetes\u90e8\u7f72"},{"location":"04_deployment/deployment_operations_guide_2025_09/#_12","text":"# namespace.yaml apiVersion: v1 kind: Namespace metadata: name: stock-valuation --- # configmap.yaml apiVersion: v1 kind: ConfigMap metadata: name: app-config namespace: stock-valuation data: DATA_SOURCE: \"tushare\" OCL_AGGREGATION_MODE: \"standard\" API_BASE_URL: \"http://api-service:8124\" --- # secret.yaml apiVersion: v1 kind: Secret metadata: name: app-secrets namespace: stock-valuation type: Opaque data: TUSHARE_TOKEN: <base64-encoded-token> DEEPSEEK_API_KEY: <base64-encoded-key>","title":"\u547d\u540d\u7a7a\u95f4\u548c\u914d\u7f6e"},{"location":"04_deployment/deployment_operations_guide_2025_09/#_13","text":"# api-deployment.yaml apiVersion: apps/v1 kind: Deployment metadata: name: api-deployment namespace: stock-valuation spec: replicas: 3 selector: matchLabels: app: api template: metadata: labels: app: api spec: containers: - name: api image: stock-valuation:latest ports: - containerPort: 8124 env: - name: DATA_SOURCE valueFrom: configMapKeyRef: name: app-config key: DATA_SOURCE - name: TUSHARE_TOKEN valueFrom: secretKeyRef: name: app-secrets key: TUSHARE_TOKEN resources: requests: memory: \"1Gi\" cpu: \"500m\" limits: memory: \"2Gi\" cpu: \"1000m\" livenessProbe: httpGet: path: /health port: 8124 initialDelaySeconds: 30 periodSeconds: 10 readinessProbe: httpGet: path: / port: 8124 initialDelaySeconds: 5 periodSeconds: 5 --- # api-service.yaml apiVersion: v1 kind: Service metadata: name: api-service namespace: stock-valuation spec: selector: app: api ports: - protocol: TCP port: 8124 targetPort: 8124 type: ClusterIP","title":"\u5e94\u7528\u90e8\u7f72"},{"location":"04_deployment/deployment_operations_guide_2025_09/#4","text":"","title":"4. \u4e91\u670d\u52a1\u90e8\u7f72"},{"location":"04_deployment/deployment_operations_guide_2025_09/#aws","text":"# \u4f7f\u7528AWS ECS aws ecs create-cluster --cluster-name stock-valuation # \u521b\u5efa\u4efb\u52a1\u5b9a\u4e49 aws ecs register-task-definition --cli-input-json file://task-definition.json # \u521b\u5efa\u670d\u52a1 aws ecs create-service \\ --cluster stock-valuation \\ --service-name api-service \\ --task-definition stock-valuation-api:1 \\ --desired-count 2","title":"AWS\u90e8\u7f72"},{"location":"04_deployment/deployment_operations_guide_2025_09/#azure","text":"# \u521b\u5efa\u5bb9\u5668\u5b9e\u4f8b az container create \\ --resource-group myResourceGroup \\ --name stock-valuation-api \\ --image stock-valuation:latest \\ --ports 8124 \\ --environment-variables DATA_SOURCE=tushare","title":"Azure\u90e8\u7f72"},{"location":"04_deployment/deployment_operations_guide_2025_09/#_14","text":"","title":"\u914d\u7f6e\u7ba1\u7406"},{"location":"04_deployment/deployment_operations_guide_2025_09/#_15","text":"","title":"\u73af\u5883\u53d8\u91cf\u914d\u7f6e"},{"location":"04_deployment/deployment_operations_guide_2025_09/#_16","text":"# \u6570\u636e\u6e90\u914d\u7f6e DATA_SOURCE=tushare # tushare/postgres/hybrid TUSHARE_TOKEN=your_token OCL_AGGREGATION_MODE=standard # LLM\u914d\u7f6e LLM_PROVIDER=deepseek DEEPSEEK_API_KEY=your_key DEEPSEEK_MODEL_NAME=deepseek-chat # \u6570\u636e\u5e93\u914d\u7f6e(\u53ef\u9009) DB_HOST=localhost DB_PORT=5432 DB_NAME=stock_valuation DB_USER=admin DB_PASSWORD=password # Redis\u914d\u7f6e(\u53ef\u9009) REDIS_HOST=localhost REDIS_PORT=6379 REDIS_DB=0 # API\u914d\u7f6e API_BASE_URL=http://localhost:8124 CORS_ORIGINS=[\"http://localhost:8501\"] # \u65e5\u5fd7\u914d\u7f6e LOG_LEVEL=INFO LOG_FILE=logs/app.log","title":"\u6838\u5fc3\u914d\u7f6e"},{"location":"04_deployment/deployment_operations_guide_2025_09/#_17","text":"# \u5f00\u53d1\u73af\u5883 cp .env.example .env.dev # \u7f16\u8f91\u5f00\u53d1\u914d\u7f6e # \u6d4b\u8bd5\u73af\u5883 cp .env.example .env.test # \u7f16\u8f91\u6d4b\u8bd5\u914d\u7f6e # \u751f\u4ea7\u73af\u5883 cp .env.example .env.prod # \u7f16\u8f91\u751f\u4ea7\u914d\u7f6e","title":"\u73af\u5883\u7279\u5b9a\u914d\u7f6e"},{"location":"04_deployment/deployment_operations_guide_2025_09/#_18","text":"# \u9a8c\u8bc1\u914d\u7f6e\u5b8c\u6574\u6027 python scripts/validate_config.py # \u6d4b\u8bd5\u6570\u636e\u6e90\u8fde\u63a5 python scripts/test_data_source.py # \u9a8c\u8bc1API\u53ef\u8fbe\u6027 python scripts/health_check.py","title":"\u914d\u7f6e\u9a8c\u8bc1"},{"location":"04_deployment/deployment_operations_guide_2025_09/#_19","text":"","title":"\u76d1\u63a7\u548c\u65e5\u5fd7"},{"location":"04_deployment/deployment_operations_guide_2025_09/#_20","text":"","title":"\u5065\u5eb7\u68c0\u67e5"},{"location":"04_deployment/deployment_operations_guide_2025_09/#api","text":"# \u81ea\u5b9a\u4e49\u5065\u5eb7\u68c0\u67e5\u7aef\u70b9 @app.get(\"/health\") async def health_check(): return { \"status\": \"healthy\", \"timestamp\": datetime.now().isoformat(), \"version\": \"3.0.0\", \"data_source\": os.getenv(\"DATA_SOURCE\"), \"dependencies\": { \"tushare\": check_tushare_connection(), \"database\": check_database_connection(), \"redis\": check_redis_connection() } }","title":"API\u5065\u5eb7\u68c0\u67e5"},{"location":"04_deployment/deployment_operations_guide_2025_09/#_21","text":"#!/bin/bash # health_monitor.sh API_URL=\"http://localhost:8124\" STREAMLIT_URL=\"http://localhost:8501\" # \u68c0\u67e5API\u670d\u52a1 api_status=$(curl -s -o /dev/null -w \"%{http_code}\" $API_URL/health) if [ $api_status -eq 200 ]; then echo \"\u2705 API service is healthy\" else echo \"\u274c API service is down (HTTP: $api_status)\" fi # \u68c0\u67e5Streamlit\u670d\u52a1 streamlit_status=$(curl -s -o /dev/null -w \"%{http_code}\" $STREAMLIT_URL) if [ $streamlit_status -eq 200 ]; then echo \"\u2705 Streamlit service is healthy\" else echo \"\u274c Streamlit service is down (HTTP: $streamlit_status)\" fi","title":"\u57fa\u7840\u76d1\u63a7\u811a\u672c"},{"location":"04_deployment/deployment_operations_guide_2025_09/#_22","text":"","title":"\u65e5\u5fd7\u7ba1\u7406"},{"location":"04_deployment/deployment_operations_guide_2025_09/#_23","text":"import logging import logging.handlers # \u914d\u7f6e\u7ed3\u6784\u5316\u65e5\u5fd7 def setup_logging(): formatter = logging.Formatter( '%(asctime)s - %(name)s - %(levelname)s - %(message)s' ) # \u6587\u4ef6\u65e5\u5fd7 file_handler = logging.handlers.RotatingFileHandler( 'logs/app.log', maxBytes=10*1024*1024, # 10MB backupCount=5 ) file_handler.setFormatter(formatter) # \u63a7\u5236\u53f0\u65e5\u5fd7 console_handler = logging.StreamHandler() console_handler.setFormatter(formatter) # \u6839\u65e5\u5fd7\u5668 root_logger = logging.getLogger() root_logger.setLevel(logging.INFO) root_logger.addHandler(file_handler) root_logger.addHandler(console_handler)","title":"\u65e5\u5fd7\u914d\u7f6e"},{"location":"04_deployment/deployment_operations_guide_2025_09/#elk-stack","text":"# logstash.conf input { file { path => \"/app/logs/*.log\" start_position => \"beginning\" } } filter { grok { match => { \"message\" => \"%{TIMESTAMP_ISO8601:timestamp} - %{DATA:logger} - %{LOGLEVEL:level} - %{GREEDYDATA:message}\" } } } output { elasticsearch { hosts => [\"elasticsearch:9200\"] index => \"stock-valuation-%{+YYYY.MM.dd}\" } }","title":"\u65e5\u5fd7\u805a\u5408(ELK Stack)"},{"location":"04_deployment/deployment_operations_guide_2025_09/#_24","text":"","title":"\u6027\u80fd\u76d1\u63a7"},{"location":"04_deployment/deployment_operations_guide_2025_09/#_25","text":"# \u4f7f\u7528Prometheus\u76d1\u63a7 from prometheus_client import Counter, Histogram, generate_latest # \u8bf7\u6c42\u8ba1\u6570\u5668 REQUEST_COUNT = Counter('api_requests_total', 'Total API requests', ['method', 'endpoint']) # \u54cd\u5e94\u65f6\u95f4\u76f4\u65b9\u56fe REQUEST_LATENCY = Histogram('api_request_duration_seconds', 'API request latency') # \u4e1a\u52a1\u6307\u6807 VALUATION_SUCCESS = Counter('valuations_successful_total', 'Successful valuations') VALUATION_ERRORS = Counter('valuations_failed_total', 'Failed valuations', ['error_type']) @app.middleware(\"http\") async def monitor_requests(request: Request, call_next): start_time = time.time() response = await call_next(request) # \u8bb0\u5f55\u6307\u6807 REQUEST_COUNT.labels( method=request.method, endpoint=request.url.path ).inc() REQUEST_LATENCY.observe(time.time() - start_time) return response","title":"\u5173\u952e\u6307\u6807"},{"location":"04_deployment/deployment_operations_guide_2025_09/#grafana","text":"{ \"dashboard\": { \"title\": \"Stock Valuation System\", \"panels\": [ { \"title\": \"API Request Rate\", \"type\": \"graph\", \"targets\": [ { \"expr\": \"rate(api_requests_total[5m])\", \"legendFormat\": \"{{method}} {{endpoint}}\" } ] }, { \"title\": \"Response Time\", \"type\": \"graph\", \"targets\": [ { \"expr\": \"histogram_quantile(0.95, api_request_duration_seconds_bucket)\", \"legendFormat\": \"95th percentile\" } ] }, { \"title\": \"Error Rate\", \"type\": \"singlestat\", \"targets\": [ { \"expr\": \"rate(valuations_failed_total[5m]) / rate(api_requests_total[5m])\" } ] } ] } }","title":"Grafana\u4eea\u8868\u677f"},{"location":"04_deployment/deployment_operations_guide_2025_09/#_26","text":"","title":"\u5907\u4efd\u548c\u6062\u590d"},{"location":"04_deployment/deployment_operations_guide_2025_09/#_27","text":"","title":"\u6570\u636e\u5907\u4efd\u7b56\u7565"},{"location":"04_deployment/deployment_operations_guide_2025_09/#_28","text":"#!/bin/bash # backup_config.sh BACKUP_DIR=\"/backup/config\" DATE=$(date +%Y%m%d_%H%M%S) # \u521b\u5efa\u5907\u4efd\u76ee\u5f55 mkdir -p $BACKUP_DIR/$DATE # \u5907\u4efd\u73af\u5883\u914d\u7f6e cp .env* $BACKUP_DIR/$DATE/ cp -r config/ $BACKUP_DIR/$DATE/ cp docker-compose.yml $BACKUP_DIR/$DATE/ # \u538b\u7f29\u5907\u4efd tar -czf $BACKUP_DIR/config_backup_$DATE.tar.gz -C $BACKUP_DIR $DATE # \u6e05\u7406\u65e7\u5907\u4efd(\u4fdd\u755930\u5929) find $BACKUP_DIR -name \"config_backup_*.tar.gz\" -mtime +30 -delete","title":"\u914d\u7f6e\u6587\u4ef6\u5907\u4efd"},{"location":"04_deployment/deployment_operations_guide_2025_09/#_29","text":"#!/bin/bash # backup_database.sh DB_HOST=\"localhost\" DB_NAME=\"stock_valuation\" DB_USER=\"admin\" BACKUP_DIR=\"/backup/database\" DATE=$(date +%Y%m%d_%H%M%S) # \u521b\u5efa\u5907\u4efd pg_dump -h $DB_HOST -U $DB_USER -d $DB_NAME \\ | gzip > $BACKUP_DIR/db_backup_$DATE.sql.gz # \u4e0a\u4f20\u5230\u4e91\u5b58\u50a8(\u53ef\u9009) aws s3 cp $BACKUP_DIR/db_backup_$DATE.sql.gz \\ s3://your-backup-bucket/database/","title":"\u6570\u636e\u5e93\u5907\u4efd"},{"location":"04_deployment/deployment_operations_guide_2025_09/#_30","text":"","title":"\u6062\u590d\u6d41\u7a0b"},{"location":"04_deployment/deployment_operations_guide_2025_09/#_31","text":"# \u6062\u590d\u914d\u7f6e\u6587\u4ef6 tar -xzf config_backup_20251222_140000.tar.gz cp 20251222_140000/.env* ./ cp -r 20251222_140000/config/ ./","title":"\u914d\u7f6e\u6062\u590d"},{"location":"04_deployment/deployment_operations_guide_2025_09/#_32","text":"# \u6062\u590d\u6570\u636e\u5e93 gunzip -c db_backup_20251222_140000.sql.gz | \\ psql -h localhost -U admin -d stock_valuation","title":"\u6570\u636e\u5e93\u6062\u590d"},{"location":"04_deployment/deployment_operations_guide_2025_09/#_33","text":"# \u91cd\u542f\u670d\u52a1 docker-compose down docker-compose up -d # \u9a8c\u8bc1\u6062\u590d ./scripts/health_check.sh","title":"\u670d\u52a1\u6062\u590d"},{"location":"04_deployment/deployment_operations_guide_2025_09/#_34","text":"","title":"\u5b89\u5168\u914d\u7f6e"},{"location":"04_deployment/deployment_operations_guide_2025_09/#ssltls","text":"","title":"SSL/TLS\u914d\u7f6e"},{"location":"04_deployment/deployment_operations_guide_2025_09/#nginx-ssl","text":"server { listen 443 ssl http2; server_name your-domain.com; ssl_certificate /etc/nginx/ssl/cert.pem; ssl_certificate_key /etc/nginx/ssl/key.pem; ssl_protocols TLSv1.2 TLSv1.3; ssl_ciphers ECDHE-RSA-AES256-GCM-SHA384:ECDHE-RSA-AES128-GCM-SHA256; ssl_prefer_server_ciphers off; location /api/ { proxy_pass http://api:8124/; proxy_set_header Host $host; proxy_set_header X-Real-IP $remote_addr; proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for; proxy_set_header X-Forwarded-Proto $scheme; } location / { proxy_pass http://streamlit:8501/; proxy_set_header Host $host; proxy_set_header X-Real-IP $remote_addr; proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for; proxy_set_header X-Forwarded-Proto $scheme; # WebSocket\u652f\u6301 proxy_http_version 1.1; proxy_set_header Upgrade $http_upgrade; proxy_set_header Connection \"upgrade\"; } }","title":"Nginx SSL\u914d\u7f6e"},{"location":"04_deployment/deployment_operations_guide_2025_09/#_35","text":"","title":"\u8bbf\u95ee\u63a7\u5236"},{"location":"04_deployment/deployment_operations_guide_2025_09/#api_1","text":"from fastapi import HTTPException, Depends from fastapi.security import HTTPBearer security = HTTPBearer() async def verify_api_key(token: str = Depends(security)): if token.credentials != os.getenv(\"API_SECRET_KEY\"): raise HTTPException( status_code=401, detail=\"Invalid API key\" ) return token","title":"API\u5bc6\u94a5\u8ba4\u8bc1"},{"location":"04_deployment/deployment_operations_guide_2025_09/#ip","text":"from fastapi import Request, HTTPException ALLOWED_IPS = [\"127.0.0.1\", \"10.0.0.0/8\", \"192.168.0.0/16\"] async def ip_whitelist(request: Request): client_ip = request.client.host if not any(ipaddress.ip_address(client_ip) in ipaddress.ip_network(allowed) for allowed in ALLOWED_IPS): raise HTTPException(status_code=403, detail=\"IP not allowed\")","title":"IP\u767d\u540d\u5355"},{"location":"04_deployment/deployment_operations_guide_2025_09/#_36","text":"","title":"\u6545\u969c\u6392\u67e5"},{"location":"04_deployment/deployment_operations_guide_2025_09/#_37","text":"","title":"\u5e38\u89c1\u95ee\u9898"},{"location":"04_deployment/deployment_operations_guide_2025_09/#1-api","text":"# \u68c0\u67e5\u7aef\u53e3\u5360\u7528 lsof -i :8124 # \u68c0\u67e5\u65e5\u5fd7 tail -f logs/app.log # \u68c0\u67e5\u914d\u7f6e python scripts/validate_config.py # \u91cd\u542f\u670d\u52a1 systemctl restart stock-valuation-api","title":"1. API\u670d\u52a1\u65e0\u6cd5\u542f\u52a8"},{"location":"04_deployment/deployment_operations_guide_2025_09/#2","text":"# \u68c0\u67e5TuShare\u8fde\u63a5 python -c \" import tushare as ts ts.set_token('$TUSHARE_TOKEN') pro = ts.pro_api() print(pro.stock_basic().head()) \" # \u68c0\u67e5\u6570\u636e\u5e93\u8fde\u63a5 pg_isready -h $DB_HOST -p $DB_PORT # \u68c0\u67e5\u7f51\u7edc\u8fde\u63a5 ping api.tushare.pro","title":"2. \u6570\u636e\u6e90\u8fde\u63a5\u5931\u8d25"},{"location":"04_deployment/deployment_operations_guide_2025_09/#3","text":"# \u68c0\u67e5\u8fdb\u7a0b\u5185\u5b58\u4f7f\u7528 ps aux | grep python | grep valuation # \u68c0\u67e5\u7cfb\u7edf\u5185\u5b58 free -h # \u91cd\u542f\u670d\u52a1\u91ca\u653e\u5185\u5b58 docker-compose restart api","title":"3. \u5185\u5b58\u4f7f\u7528\u8fc7\u9ad8"},{"location":"04_deployment/deployment_operations_guide_2025_09/#4_1","text":"# \u8fd0\u884c\u8bca\u65ad\u811a\u672c python scripts/diagnose_valuation.py --ts_code 600519.SH # \u68c0\u67e5\u8f93\u5165\u6570\u636e\u8d28\u91cf python scripts/data_quality_check.py # \u5bf9\u6bd4\u6570\u636e\u6e90\u7ed3\u679c python scripts/e2e_compare_sources.py --ts 600519.SH","title":"4. \u4f30\u503c\u8ba1\u7b97\u9519\u8bef"},{"location":"04_deployment/deployment_operations_guide_2025_09/#_38","text":"","title":"\u65e5\u5fd7\u5206\u6790"},{"location":"04_deployment/deployment_operations_guide_2025_09/#_39","text":"# \u67e5\u627eAPI\u9519\u8bef grep \"ERROR\" logs/app.log | tail -20 # \u67e5\u627e\u6570\u636e\u83b7\u53d6\u5931\u8d25 grep \"Failed to fetch\" logs/app.log # \u67e5\u627e\u8ba1\u7b97\u5f02\u5e38 grep \"Calculation error\" logs/app.log # \u7edf\u8ba1\u9519\u8bef\u7c7b\u578b grep \"ERROR\" logs/app.log | awk '{print $5}' | sort | uniq -c","title":"\u9519\u8bef\u6a21\u5f0f\u8bc6\u522b"},{"location":"04_deployment/deployment_operations_guide_2025_09/#_40","text":"","title":"\u6269\u5c55\u548c\u4f18\u5316"},{"location":"04_deployment/deployment_operations_guide_2025_09/#_41","text":"","title":"\u6c34\u5e73\u6269\u5c55"},{"location":"04_deployment/deployment_operations_guide_2025_09/#_42","text":"upstream api_backend { server api1:8124; server api2:8124; server api3:8124; } server { location /api/ { proxy_pass http://api_backend; proxy_set_header Host $host; proxy_set_header X-Real-IP $remote_addr; } }","title":"\u8d1f\u8f7d\u5747\u8861\u914d\u7f6e"},{"location":"04_deployment/deployment_operations_guide_2025_09/#kubernetes","text":"apiVersion: autoscaling/v2 kind: HorizontalPodAutoscaler metadata: name: api-hpa namespace: stock-valuation spec: scaleTargetRef: apiVersion: apps/v1 kind: Deployment name: api-deployment minReplicas: 2 maxReplicas: 10 metrics: - type: Resource resource: name: cpu target: type: Utilization averageUtilization: 70 - type: Resource resource: name: memory target: type: Utilization averageUtilization: 80","title":"\u81ea\u52a8\u6269\u5c55(Kubernetes)"},{"location":"04_deployment/deployment_operations_guide_2025_09/#_43","text":"","title":"\u6027\u80fd\u4f18\u5316"},{"location":"04_deployment/deployment_operations_guide_2025_09/#_44","text":"import redis from functools import wraps redis_client = redis.Redis(host='localhost', port=6379, db=0) def cache_result(expiration=3600): def decorator(func): @wraps(func) async def wrapper(*args, **kwargs): # \u751f\u6210\u7f13\u5b58\u952e cache_key = f\"{func.__name__}:{hash(str(args) + str(kwargs))}\" # \u5c1d\u8bd5\u4ece\u7f13\u5b58\u83b7\u53d6 cached_result = redis_client.get(cache_key) if cached_result: return json.loads(cached_result) # \u6267\u884c\u51fd\u6570\u5e76\u7f13\u5b58\u7ed3\u679c result = await func(*args, **kwargs) redis_client.setex( cache_key, expiration, json.dumps(result, default=str) ) return result return wrapper return decorator","title":"\u7f13\u5b58\u7b56\u7565"},{"location":"04_deployment/deployment_operations_guide_2025_09/#_45","text":"-- \u6dfb\u52a0\u7d22\u5f15\u4f18\u5316\u67e5\u8be2 CREATE INDEX idx_stock_basic_ts_code ON stock_basic(ts_code); CREATE INDEX idx_income_end_date ON income_statement(end_date); CREATE INDEX idx_balance_end_date ON balance_sheet(end_date); -- \u5206\u533a\u8868\u4f18\u5316\u5927\u6570\u636e\u91cf CREATE TABLE income_statement_2024 PARTITION OF income_statement FOR VALUES FROM ('2024-01-01') TO ('2025-01-01');","title":"\u6570\u636e\u5e93\u4f18\u5316"},{"location":"04_deployment/deployment_operations_guide_2025_09/#_46","text":"","title":"\u7ef4\u62a4\u8ba1\u5212"},{"location":"04_deployment/deployment_operations_guide_2025_09/#_47","text":"","title":"\u65e5\u5e38\u7ef4\u62a4"},{"location":"04_deployment/deployment_operations_guide_2025_09/#_48","text":"\u68c0\u67e5\u670d\u52a1\u5065\u5eb7\u72b6\u6001 \u76d1\u63a7API\u54cd\u5e94\u65f6\u95f4\u548c\u9519\u8bef\u7387 \u68c0\u67e5\u78c1\u76d8\u7a7a\u95f4\u4f7f\u7528\u60c5\u51b5 \u5907\u4efd\u91cd\u8981\u914d\u7f6e\u6587\u4ef6","title":"\u6bcf\u65e5\u4efb\u52a1"},{"location":"04_deployment/deployment_operations_guide_2025_09/#_49","text":"\u6e05\u7406\u8fc7\u671f\u65e5\u5fd7\u6587\u4ef6 \u66f4\u65b0\u7cfb\u7edf\u8865\u4e01 \u68c0\u67e5\u6570\u636e\u8d28\u91cf \u6027\u80fd\u62a5\u544a\u751f\u6210","title":"\u6bcf\u5468\u4efb\u52a1"},{"location":"04_deployment/deployment_operations_guide_2025_09/#_50","text":"\u5b8c\u6574\u5907\u4efd\u9a8c\u8bc1 \u5b89\u5168\u5ba1\u8ba1 \u4f9d\u8d56\u5305\u66f4\u65b0 \u5bb9\u91cf\u89c4\u5212\u8bc4\u4f30","title":"\u6bcf\u6708\u4efb\u52a1"},{"location":"04_deployment/deployment_operations_guide_2025_09/#_51","text":"","title":"\u66f4\u65b0\u6d41\u7a0b"},{"location":"04_deployment/deployment_operations_guide_2025_09/#_52","text":"# 1. \u6784\u5efa\u65b0\u7248\u672c\u955c\u50cf docker build -t stock-valuation:v3.1.0 . # 2. \u66f4\u65b0docker-compose.yml sed -i 's/stock-valuation:latest/stock-valuation:v3.1.0/g' docker-compose.yml # 3. \u6eda\u52a8\u66f4\u65b0\u670d\u52a1 docker-compose up -d --no-deps api # 4. \u9a8c\u8bc1\u66f4\u65b0 ./scripts/health_check.sh # 5. \u66f4\u65b0\u5176\u4ed6\u670d\u52a1 docker-compose up -d","title":"\u6eda\u52a8\u66f4\u65b0"},{"location":"04_deployment/deployment_operations_guide_2025_09/#_53","text":"# \u5982\u679c\u66f4\u65b0\u5931\u8d25\uff0c\u5feb\u901f\u56de\u6eda docker-compose down git checkout previous-stable-tag docker-compose up -d # \u6062\u590d\u6570\u636e(\u5982\u9700\u8981) ./scripts/restore_backup.sh \u672c\u90e8\u7f72\u8fd0\u7ef4\u6307\u5357\u63d0\u4f9b\u4e86\u5b8c\u6574\u7684\u751f\u4ea7\u7ea7\u90e8\u7f72\u65b9\u6848\uff0c\u5efa\u8bae\u6839\u636e\u5b9e\u9645\u73af\u5883\u8c03\u6574\u5177\u4f53\u914d\u7f6e\u3002","title":"\u56de\u6eda\u8ba1\u5212"},{"location":"05_data_sources/","text":"\u6570\u636e\u6e90\u4e13\u9898\u6587\u6863 \u672c\u76ee\u5f55\u5305\u542b\u6570\u636e\u6e90\u914d\u7f6e\u3001\u6570\u636e\u8d28\u91cf\u7ba1\u63a7\u3001\u6570\u636e\u5bf9\u9f50\u7b49\u6570\u636e\u76f8\u5173\u6587\u6863\u3002 \u6587\u6863\u5217\u8868 \ud83d\udcca \u6570\u636e\u5bf9\u9f50 tushare_alignment.md - TuShare\u6570\u636e\u5bf9\u9f50\u6280\u672f\u7ec6\u8282\uff08\u2b50\u2b50\u2b50\u2b50 \u91cd\u8981\uff09 TuShare API\u4f7f\u7528\u89c4\u8303 \u6570\u636e\u8d28\u91cf\u68c0\u67e5\u65b9\u6cd5 \u6570\u636e\u5bf9\u9f50\u9a8c\u8bc1\u6d41\u7a0b \u5e38\u89c1\u6570\u636e\u95ee\u9898\u89e3\u51b3 \u6570\u636e\u6e90\u67b6\u6784 \u652f\u6301\u7684\u6570\u636e\u6e90 TuShare API : \u5b9e\u65f6\u91d1\u878d\u6570\u636e\uff08\u9ed8\u8ba4\uff09 PostgreSQL : \u672c\u5730\u5386\u53f2\u6570\u636e \u6df7\u5408\u6a21\u5f0f : PostgreSQL\u4f18\u5148\uff0cTuShare\u56de\u9000 \u6570\u636e\u5207\u6362\u914d\u7f6e # \u5728.env\u6587\u4ef6\u4e2d\u914d\u7f6e DATA_SOURCE=tushare # TuShare\u6a21\u5f0f DATA_SOURCE=postgres # PostgreSQL\u6a21\u5f0f DATA_SOURCE=hybrid # \u6df7\u5408\u6a21\u5f0f \u6570\u636e\u8d28\u91cf\u63a7\u5236 \u8d28\u91cf\u68c0\u67e5\u673a\u5236 \u6570\u636e\u5b8c\u6574\u6027\u68c0\u67e5 - \u5173\u952e\u5b57\u6bb5\u975e\u7a7a\u9a8c\u8bc1 \u6570\u636e\u4e00\u81f4\u6027\u68c0\u67e5 - \u8de8\u8868\u6570\u636e\u5173\u8054\u9a8c\u8bc1 \u5f02\u5e38\u503c\u68c0\u6d4b - IQR\u65b9\u6cd5\u68c0\u6d4b\u5f02\u5e38\u503c \u65f6\u95f4\u5e8f\u5217\u6821\u9a8c - \u6570\u636e\u65f6\u95f4\u5e8f\u5217\u8fde\u7eed\u6027 \u914d\u7f6e\u53c2\u6570 ENABLE_IQR_OUTLIER_DETECTION : \u5f02\u5e38\u503c\u68c0\u6d4b\u5f00\u5173 OCL_AGGREGATION_MODE : \u6570\u636e\u805a\u5408\u6a21\u5f0f \u6570\u636e\u5904\u7406\u6d41\u7a0b \u6570\u636e\u83b7\u53d6 : \u4ece\u6570\u636e\u6e90\u83b7\u53d6\u539f\u59cb\u6570\u636e \u6570\u636e\u6e05\u6d17 : \u5904\u7406\u7f3a\u5931\u503c\u548c\u5f02\u5e38\u503c \u6570\u636e\u8f6c\u6362 : \u7edf\u4e00\u6570\u636e\u683c\u5f0f\u548c\u5355\u4f4d \u6570\u636e\u9a8c\u8bc1 : \u8d28\u91cf\u68c0\u67e5\u548c\u4e00\u81f4\u6027\u9a8c\u8bc1 \u6570\u636e\u7f13\u5b58 : \u70ed\u70b9\u6570\u636eRedis\u7f13\u5b58 \u5e38\u89c1\u95ee\u9898 TuShare\u76f8\u5173 API\u9650\u989d : \u6ce8\u610f\u8c03\u7528\u9891\u7387\u9650\u5236 \u6570\u636e\u5ef6\u8fdf : \u5b9e\u65f6\u6570\u636e\u53ef\u80fd\u6709\u5ef6\u8fdf \u5b57\u6bb5\u6620\u5c04 : \u786e\u4fdd\u5b57\u6bb5\u540d\u79f0\u6620\u5c04\u6b63\u786e PostgreSQL\u76f8\u5173 \u8868\u7ed3\u6784 : \u6309\u7167wiki\u6587\u6863\u5efa\u7acb\u8868\u7ed3\u6784 \u6570\u636e\u5bfc\u5165 : \u786e\u4fdd\u5386\u53f2\u6570\u636e\u5b8c\u6574\u6027 \u8fde\u63a5\u6c60 : \u914d\u7f6e\u5408\u9002\u7684\u8fde\u63a5\u6c60\u5927\u5c0f \u9605\u8bfb\u5efa\u8bae \u6570\u636e\u5de5\u7a0b\u5e08 \u5fc5\u8bfb : \u5b8c\u6574\u9605\u8bfbTuShare\u5bf9\u9f50\u6587\u6863 \u4e86\u89e3\u6570\u636e\u8d28\u91cf\u63a7\u5236\u673a\u5236 \u719f\u6089\u6570\u636e\u6e90\u5207\u6362\u65b9\u6cd5 \u5f00\u53d1\u8005 \u4e86\u89e3\u6570\u636e\u83b7\u53d6\u6d41\u7a0b\uff0c\u4fbf\u4e8e\u8c03\u8bd5\u6570\u636e\u76f8\u5173\u95ee\u9898 \u66f4\u65b0\u9891\u7387 \u5b63\u5ea6\u66f4\u65b0\u6216\u6570\u636e\u6e90API\u53d8\u66f4\u65f6\u66f4\u65b0","title":"\u6570\u636e\u6e90\u4e13\u9898\u6587\u6863"},{"location":"05_data_sources/#_1","text":"\u672c\u76ee\u5f55\u5305\u542b\u6570\u636e\u6e90\u914d\u7f6e\u3001\u6570\u636e\u8d28\u91cf\u7ba1\u63a7\u3001\u6570\u636e\u5bf9\u9f50\u7b49\u6570\u636e\u76f8\u5173\u6587\u6863\u3002","title":"\u6570\u636e\u6e90\u4e13\u9898\u6587\u6863"},{"location":"05_data_sources/#_2","text":"","title":"\u6587\u6863\u5217\u8868"},{"location":"05_data_sources/#_3","text":"tushare_alignment.md - TuShare\u6570\u636e\u5bf9\u9f50\u6280\u672f\u7ec6\u8282\uff08\u2b50\u2b50\u2b50\u2b50 \u91cd\u8981\uff09 TuShare API\u4f7f\u7528\u89c4\u8303 \u6570\u636e\u8d28\u91cf\u68c0\u67e5\u65b9\u6cd5 \u6570\u636e\u5bf9\u9f50\u9a8c\u8bc1\u6d41\u7a0b \u5e38\u89c1\u6570\u636e\u95ee\u9898\u89e3\u51b3","title":"\ud83d\udcca \u6570\u636e\u5bf9\u9f50"},{"location":"05_data_sources/#_4","text":"","title":"\u6570\u636e\u6e90\u67b6\u6784"},{"location":"05_data_sources/#_5","text":"TuShare API : \u5b9e\u65f6\u91d1\u878d\u6570\u636e\uff08\u9ed8\u8ba4\uff09 PostgreSQL : \u672c\u5730\u5386\u53f2\u6570\u636e \u6df7\u5408\u6a21\u5f0f : PostgreSQL\u4f18\u5148\uff0cTuShare\u56de\u9000","title":"\u652f\u6301\u7684\u6570\u636e\u6e90"},{"location":"05_data_sources/#_6","text":"# \u5728.env\u6587\u4ef6\u4e2d\u914d\u7f6e DATA_SOURCE=tushare # TuShare\u6a21\u5f0f DATA_SOURCE=postgres # PostgreSQL\u6a21\u5f0f DATA_SOURCE=hybrid # \u6df7\u5408\u6a21\u5f0f","title":"\u6570\u636e\u5207\u6362\u914d\u7f6e"},{"location":"05_data_sources/#_7","text":"","title":"\u6570\u636e\u8d28\u91cf\u63a7\u5236"},{"location":"05_data_sources/#_8","text":"\u6570\u636e\u5b8c\u6574\u6027\u68c0\u67e5 - \u5173\u952e\u5b57\u6bb5\u975e\u7a7a\u9a8c\u8bc1 \u6570\u636e\u4e00\u81f4\u6027\u68c0\u67e5 - \u8de8\u8868\u6570\u636e\u5173\u8054\u9a8c\u8bc1 \u5f02\u5e38\u503c\u68c0\u6d4b - IQR\u65b9\u6cd5\u68c0\u6d4b\u5f02\u5e38\u503c \u65f6\u95f4\u5e8f\u5217\u6821\u9a8c - \u6570\u636e\u65f6\u95f4\u5e8f\u5217\u8fde\u7eed\u6027","title":"\u8d28\u91cf\u68c0\u67e5\u673a\u5236"},{"location":"05_data_sources/#_9","text":"ENABLE_IQR_OUTLIER_DETECTION : \u5f02\u5e38\u503c\u68c0\u6d4b\u5f00\u5173 OCL_AGGREGATION_MODE : \u6570\u636e\u805a\u5408\u6a21\u5f0f","title":"\u914d\u7f6e\u53c2\u6570"},{"location":"05_data_sources/#_10","text":"\u6570\u636e\u83b7\u53d6 : \u4ece\u6570\u636e\u6e90\u83b7\u53d6\u539f\u59cb\u6570\u636e \u6570\u636e\u6e05\u6d17 : \u5904\u7406\u7f3a\u5931\u503c\u548c\u5f02\u5e38\u503c \u6570\u636e\u8f6c\u6362 : \u7edf\u4e00\u6570\u636e\u683c\u5f0f\u548c\u5355\u4f4d \u6570\u636e\u9a8c\u8bc1 : \u8d28\u91cf\u68c0\u67e5\u548c\u4e00\u81f4\u6027\u9a8c\u8bc1 \u6570\u636e\u7f13\u5b58 : \u70ed\u70b9\u6570\u636eRedis\u7f13\u5b58","title":"\u6570\u636e\u5904\u7406\u6d41\u7a0b"},{"location":"05_data_sources/#_11","text":"","title":"\u5e38\u89c1\u95ee\u9898"},{"location":"05_data_sources/#tushare","text":"API\u9650\u989d : \u6ce8\u610f\u8c03\u7528\u9891\u7387\u9650\u5236 \u6570\u636e\u5ef6\u8fdf : \u5b9e\u65f6\u6570\u636e\u53ef\u80fd\u6709\u5ef6\u8fdf \u5b57\u6bb5\u6620\u5c04 : \u786e\u4fdd\u5b57\u6bb5\u540d\u79f0\u6620\u5c04\u6b63\u786e","title":"TuShare\u76f8\u5173"},{"location":"05_data_sources/#postgresql","text":"\u8868\u7ed3\u6784 : \u6309\u7167wiki\u6587\u6863\u5efa\u7acb\u8868\u7ed3\u6784 \u6570\u636e\u5bfc\u5165 : \u786e\u4fdd\u5386\u53f2\u6570\u636e\u5b8c\u6574\u6027 \u8fde\u63a5\u6c60 : \u914d\u7f6e\u5408\u9002\u7684\u8fde\u63a5\u6c60\u5927\u5c0f","title":"PostgreSQL\u76f8\u5173"},{"location":"05_data_sources/#_12","text":"","title":"\u9605\u8bfb\u5efa\u8bae"},{"location":"05_data_sources/#_13","text":"\u5fc5\u8bfb : \u5b8c\u6574\u9605\u8bfbTuShare\u5bf9\u9f50\u6587\u6863 \u4e86\u89e3\u6570\u636e\u8d28\u91cf\u63a7\u5236\u673a\u5236 \u719f\u6089\u6570\u636e\u6e90\u5207\u6362\u65b9\u6cd5","title":"\u6570\u636e\u5de5\u7a0b\u5e08"},{"location":"05_data_sources/#_14","text":"\u4e86\u89e3\u6570\u636e\u83b7\u53d6\u6d41\u7a0b\uff0c\u4fbf\u4e8e\u8c03\u8bd5\u6570\u636e\u76f8\u5173\u95ee\u9898","title":"\u5f00\u53d1\u8005"},{"location":"05_data_sources/#_15","text":"\u5b63\u5ea6\u66f4\u65b0\u6216\u6570\u636e\u6e90API\u53d8\u66f4\u65f6\u66f4\u65b0","title":"\u66f4\u65b0\u9891\u7387"},{"location":"05_data_sources/tushare_alignment/","text":"TuShare\u6570\u636e\u6e90\u5bf9\u9f50\u4e0e\u751f\u4ea7\u90e8\u7f72\u62a5\u544a \u6700\u540e\u66f4\u65b0: 2025-09-22 \u6267\u884c\u6458\u8981 TuShare\u6570\u636e\u6e90\u5df2\u6210\u529f\u5b8c\u6210\u4e0ePostgreSQL\u6e90\u7684\u5168\u9762\u5bf9\u9f50\uff0c\u5e76\u5df2\u6295\u5165\u751f\u4ea7\u4f7f\u7528\u3002\u901a\u8fc7\u5b8c\u6574\u7684\u7aef\u5230\u7aef\u9a8c\u8bc1\uff0c\u786e\u8ba4TuShare\u5728\u79d1\u5b66\u6027\u3001\u51c6\u786e\u6027\u3001\u65f6\u6548\u6027\u65b9\u9762\u5747\u4f18\u4e8ePostgreSQL\u6570\u636e\u6e90\uff0c\u9002\u5408\u4f5c\u4e3a\u4e3b\u8981\u6570\u636e\u6e90\u3002 \u603b\u4f53\u7ed3\u8bba\uff08\u5df2\u9a8c\u8bc1\uff09 \u2705 \u5b8c\u5168\u66ff\u4ee3 : TuShare Pro API\u5df2\u5b8c\u5168\u66ff\u4ee3Postgres\u6570\u636e\u6e90\uff0c\u4e0b\u6e38\u4f30\u503c\u94fe\u8def\u4fdd\u6301100%\u517c\u5bb9 \u2705 \u53e3\u5f84\u5bf9\u9f50 : \u5173\u952e\u4f30\u503c\u6307\u6807(EV\u3001VPS\u3001CAGR\u3001EBITDA)\u4e0ePG\u6e90\u9ad8\u5ea6\u4e00\u81f4 \u2705 \u751f\u4ea7\u5c31\u7eea : \u652f\u6301\u6570\u636e\u6e90\u70ed\u5207\u6362\uff0c\u5177\u5907\u5b8c\u6574\u7684\u9519\u8bef\u5904\u7406\u548c\u515c\u5e95\u673a\u5236 \u2705 LTM\u652f\u6301 : \u65b0\u589eLast Twelve Months\u57fa\u7ebf\u529f\u80fd\uff0c\u63d0\u5347\u4f30\u503c\u65f6\u6548\u6027 \u6620\u5c04\u4e0e\u5355\u4f4d income\uff08\u5229\u6da6\u8868 \u2192 income_statement \uff09 \u5fc5\u8981\u5217\u5747\u53ef\u83b7\u5f97\uff1a end_date, end_type, update_flag, revenue, total_revenue, oper_cost, operate_profit, n_income diluted_eps \uff1aTushare income \u65e0\u8be5\u5217\uff0c\u53ef\u7531 fina_indicator \u8fd1\u4f3c\u6620\u5c04\uff1a\u4f18\u5148 dt_eps \uff0c\u5426\u5219 eps/basic_eps \u3002 \u5e74\u62a5\u8bc6\u522b\uff1a\u4f18\u5148 end_type='4' \uff1b\u5426\u5219\u6309 end_date \u6708\u4efd=12\u3002 balancesheet\uff08\u8d44\u4ea7\u8d1f\u503a\u8868 \u2192 balance_sheet \uff09 \u76f4\u63a5\u5217\uff1a inventories, accounts_pay, prepayment, oth_cur_assets, contract_liab(\u65b0)/adv_receipts(\u65e7), payroll_payable, taxes_payable, oth_payable, st_borr, lt_borr, bond_payable, non_cur_liab_due_1y, money_cap, total_cur_assets, total_cur_liab, total_liab, minority_int, oth_eqt_tools_p_shr \u805a\u5408\u5217\uff1a accounts_receiv_bill = notes_receiv + accounts_receiv/acct_receiv \uff08\u5b58\u5728\u5373\u76f8\u52a0\uff0c\u7f3a\u5931\u7f6e 0/NA\uff09\u3002 cashflow\uff08\u73b0\u91d1\u6d41\u91cf\u8868 \u2192 cash_flow \uff09 \u76f4\u63a5\u5217\uff1a depr_fa_coga_dpba \uff08\u7528\u4e8e\u6784\u9020\u6700\u65b0\u5b9e\u9645 EBITDA\uff09\u3002 daily / daily_basic\uff08\u884c\u60c5\u4e0e\u4f30\u503c\u6307\u6807\uff09 daily.close \uff08\u6536\u76d8\u4ef7\uff09\u3001 daily.trade_date daily_basic.pe_ttm \u2192 pe , daily_basic.pb \u2192 pb \u5355\u4f4d\uff1a total_mv \u5355\u4f4d\u4e3a\u201c\u4e07\u5143\u201d\uff0c\u6362\u7b97\u4e3a\u201c\u4ebf\u5143\u201d\u9664\u4ee5 1e4\uff1b total_share \u5355\u4f4d\u4e3a\u201c\u4e07\u80a1\u201d\uff0c\u6362\u7b97\u4e3a\u201c\u80a1\u201d\u4e58\u4ee5 1e4\u3002 dividend\uff08\u5206\u7ea2\uff09 cash_div_tax \uff08\u6bcf\u80a1\u5206\u7ea2\uff08\u542b\u7a0e\uff09\uff09\uff0c\u7a97\u53e3\u7d2f\u52a0\u7528\u4e8e TTM DPS\u3002 \u5982\u90e8\u5206\u5e74\u4efd\u4ec5\u6709 cash_div \uff0cFetcher \u5c42\u7edf\u4e00\u91cd\u547d\u540d\u4e3a cash_div_tax \u3002 stock_basic\uff08\u57fa\u672c\u4fe1\u606f\uff09 ts_code, name, industry, market, exchange, list_date curr_type/act_name/act_ent_type \uff1aTushare \u65e0\u6807\u51c6\u5217\uff0cFetcher \u7f6e None\uff0cDataProcessor \u4f1a\u8bbe\u7f6e\u9ed8\u8ba4\u503c\u3002 \u4ee3\u8868\u6027\u6837\u672c\u7ed3\u679c\uff08\u6458\u8981\uff09 income_statement\uff1a\u6240\u6709\u6837\u672c\u5b8c\u6574\u8986\u76d6\u5fc5\u9700\u5217\uff0c\u901a\u8fc7 fina_indicator \u5408\u5e76\u5f97\u5230 diluted_eps \u3002 balance_sheet\uff1a accounts_receiv_bill \u53ef\u7531 notes_receiv + accounts_receiv/acct_receiv \u805a\u5408\u5f97\u5230\uff1b\u65b0\u4f1a\u8ba1\u51c6\u5219\u542b contract_liab \uff0c\u65e7\u53e3\u5f84\u53ef\u9000\u5316 adv_receipts \u3002 cash_flow\uff1a depr_fa_coga_dpba \u5b58\u5728\uff08\u90e8\u5206\u62a5\u544a\u671f\u53ef\u80fd\u4e3a NaN\uff0c\u7b26\u5408\u73b0\u5b9e\u6570\u636e\u7f3a\u53e3\uff09\u3002 daily_basic\uff1a pe_ttm/pb/total_mv/total_share \u53ef\u76f4\u63a5\u83b7\u5f97\uff0c\u5355\u4f4d\u9700\u8f6c\u6362\u3002 dividend\uff1a\u542b cash_div_tax \uff0c\u53ef\u7528\u4e8e TTM \u7d2f\u52a0\uff08\u7f3a\u5931\u65f6\u4ee5 cash_div \u515c\u5e95\u91cd\u547d\u540d\uff09\u3002 stock_basic\uff1a\u6838\u5fc3\u5b57\u6bb5\u9f50\u5168\u3002 \u7aef\u5230\u7aef\u9a8c\u8bc1\u7ed3\u679c\uff082025-09-22\uff09 \u6d4b\u8bd5\u6848\u4f8b: 000999.SZ (\u534e\u6da6\u4e09\u4e5d) & 600519.SH (\u8d35\u5dde\u8305\u53f0) \u9a8c\u8bc1\u7ef4\u5ea6 : \u57fa\u51c6\u65e5\u671f\u3001\u5386\u53f2CAGR\u3001\u6700\u65b0EBITDA\u3001NWC\u7ec4\u4ef6\u3001DCF\u4f30\u503c \u5bf9\u9f50\u72b6\u51b5 \u6307\u6807 000999.SZ 600519.SH \u72b6\u6001 \u8d44\u4ea7\u8d1f\u503a\u8868\u57fa\u51c6\u65e5 2024-12-31 (TS) vs 2024-12-31 (PG) 2024-12-31 (TS) vs 2024-12-31 (PG) \u2705 \u5b8c\u5168\u4e00\u81f4 \u5386\u53f2\u6536\u5165CAGR 21.698% vs 21.698% 17.184% vs 17.184% \u2705 \u5b8c\u5168\u4e00\u81f4 \u6700\u65b0\u5b9e\u9645EBITDA ~53.4\u4ebf vs 53.13\u4ebf 1217.53\u4ebf vs 1217.53\u4ebf \u2705 \u9ad8\u5ea6\u4e00\u81f4 WACC 6.0875% vs 6.0875% 6.0875% vs 6.0875% \u2705 \u5b8c\u5168\u4e00\u81f4 EV 938.25\u4ebf vs 926.63\u4ebf 16815.73\u4ebf vs 16652.95\u4ebf \u2705 \u63a5\u8fd1(~1-2%\u5dee\u5f02) VPS\u5dee\u5f02\u539f\u56e0 \u80a1\u672c\u5feb\u7167\u65f6\u95f4\u5dee\u5f02 \u80a1\u672c\u5feb\u7167\u65f6\u95f4\u5dee\u5f02 \u26a0\ufe0f \u9884\u671f\u5dee\u5f02 \u5173\u952e\u4fee\u590d\u9879\u76ee \u8d44\u4ea7\u8d1f\u503a\u8868\u57fa\u51c6\u65e5\u4fee\u590d : \u95ee\u9898: 2024\u5e74\u6570\u636e\u88abIQR\u5f02\u5e38\u503c\u68c0\u6d4b\u8bef\u5224\uff0c\u57fa\u51c6\u65e5\u56de\u9000\u52302023-12-31 \u89e3\u51b3: \u4e3abalance_sheet\u6dfb\u52a0\u4fdd\u62a4\u5217\uff0c\u9632\u6b62\u5173\u952e\u79d1\u76ee\u88ab\u8bef\u5224\u4e3a\u5f02\u5e38\u503c \u4f4d\u7f6e: src/core/financial/processor.py:341-354 \u6309\u5e74\u62e9\u4f18\u4fdd\u7559\u673a\u5236 : \u95ee\u9898: \u5168\u5c40\u4f18\u5148update_flag='1'\u5bfc\u81f4\u6700\u65b0\u5e74\u5ea6\u88ab\u6574\u4f53\u8fc7\u6ee4 \u89e3\u51b3: \u6539\u4e3a\u6309\u5e74\u5ea6\u62e9\u4f18(\u4f18\u5148update_flag='1'\uff0c\u5426\u5219\u6700\u65b0ann_date) \u4f4d\u7f6e: src/data/fetchers/tushare_fetcher.py:292-299, 422-429, 518-525 LTM\u57fa\u7ebf\u652f\u6301 : \u65b0\u589e: \u5b63\u5ea6+\u5e74\u62a5\u7ec4\u88c5LTM\u6536\u5165\u57fa\u7ebf\u529f\u80fd \u4f4d\u7f6e: src/data/fetchers/tushare_fetcher.py:554-628 \u6570\u636e\u6e90\u9009\u62e9\u7b56\u7565 \u63a8\u8350\u914d\u7f6e # \u751f\u4ea7\u4f30\u503c(\u63a8\u8350) DATA_SOURCE=tushare OCL_AGGREGATION_MODE=standard # \u5386\u53f2\u590d\u73b0/\u5bf9\u8d26 DATA_SOURCE=postgres # \u6216 DATA_SOURCE=tushare + OCL_AGGREGATION_MODE=pg # \u5f00\u53d1\u8c03\u8bd5 DATA_SOURCE=hybrid # PG\u4f18\u5148\uff0cTS\u56de\u9000 \u4f18\u52bf\u5bf9\u6bd4 \u7ef4\u5ea6 TuShare PostgreSQL \u65f6\u6548\u6027 \u2705 \u4f30\u503c\u65e5\u56de\u9000\uff0c\u6700\u65b0\u4ea4\u6613\u65e5\u5feb\u7167 \u274c \u6570\u636e\u5e93\u5feb\u7167\u53ef\u80fd\u6ede\u540e \u5b8c\u6574\u6027 \u2705 \u5168\u5b57\u6bb5\uff0c\u7ec6\u5206\u79d1\u76ee\u4e30\u5bcc \u274c \u90e8\u5206\u5386\u53f2\u5b57\u6bb5\u7f3a\u5931 \u51c6\u786e\u6027 \u2705 \u5b98\u65b9\u63a5\u53e3\uff0c\u51cf\u5c11\u8f6c\u6362\u8bef\u5dee \u26a0\ufe0f \u591a\u5c42\u8f6c\u6362\u53ef\u80fd\u5f15\u5165\u8bef\u5dee \u7ef4\u62a4\u6027 \u2705 \u81ea\u52a8\u66f4\u65b0\uff0c\u65e0\u9700ETL \u274c \u9700\u8981\u7ef4\u62a4ETL\u6d41\u7a0b \u590d\u73b0\u6027 \u2705 \u652f\u6301PG\u517c\u5bb9\u6a21\u5f0f \u2705 \u5386\u53f2\u57fa\u51c6\u7a33\u5b9a \u98ce\u9669\u4e0e\u515c\u5e95\u673a\u5236 \u5df2\u5b9e\u73b0\u7684\u515c\u5e95\u7b56\u7565 \u6570\u636e\u6e05\u6d17\u4fdd\u62a4 : \u5173\u952e\u79d1\u76ee\u514d\u53d7\u5f02\u5e38\u503c\u8bef\u5224 \u5b57\u6bb5\u6620\u5c04\u515c\u5e95 : accounts_receiv_bill\u805a\u5408\u3001fix_assets\u56de\u9000\u3001EPS\u53bb\u91cd \u53e3\u5f84\u5207\u6362 : \u6807\u51c6\u6a21\u5f0fvs PG\u517c\u5bb9\u6a21\u5f0f\uff0c\u652f\u6301\u65b0\u65e7\u4f1a\u8ba1\u51c6\u5219 \u5f02\u5e38\u5904\u7406 : \u5b8c\u6574\u7684\u9519\u8bef\u6355\u83b7\u4e0e\u964d\u7ea7\u673a\u5236 \u5355\u4f4d\u7edf\u4e00 : \u4ebf\u80a1\u3001\u4ebf\u5143\u7edf\u4e00\uff0c\u907f\u514d\u6570\u91cf\u7ea7\u9519\u8bef \u5f85\u4f18\u5316\u9879\u76ee \u6027\u80fd\u4f18\u5316 : \u672c\u5730\u7f13\u5b58\u673a\u5236\u51cf\u5c11API\u8c03\u7528 \u901f\u7387\u63a7\u5236 : \u9000\u907f\u91cd\u8bd5\u7b56\u7565\u907f\u514d\u89e6\u53d1\u9650\u6d41 \u76d1\u63a7\u544a\u8b66 : \u5b9a\u671fTS\u2194PG\u57fa\u7ebf\u6f02\u79fb\u68c0\u67e5 \u90e8\u7f72\u72b6\u6001\u4e0e\u4f7f\u7528\u6307\u5357 \u5f53\u524d\u90e8\u7f72\u72b6\u6001 \u2705 \u751f\u4ea7\u53ef\u7528 : TuShare\u4f5c\u4e3a\u9ed8\u8ba4\u6570\u636e\u6e90 \u2705 \u70ed\u5207\u6362 : \u652f\u6301\u8fd0\u884c\u65f6\u5207\u6362\u6570\u636e\u6e90\u65e0\u9700\u91cd\u542f \u2705 \u5411\u540e\u517c\u5bb9 : PostgreSQL\u6e90\u4f5c\u4e3a\u9a8c\u8bc1\u57fa\u51c6\u4fdd\u7559 \u2705 LTM\u529f\u80fd : \u901a\u8fc7ltm_baseline_enabled\u53c2\u6570\u542f\u7528 \u4f7f\u7528\u5efa\u8bae \u65b0\u9879\u76ee : \u76f4\u63a5\u4f7f\u7528TuShare\u6e90\uff0c\u914d\u7f6e\u6807\u51c6\u805a\u5408\u6a21\u5f0f \u5386\u53f2\u9a8c\u8bc1 : \u4f7f\u7528PG\u6e90\u6216TS\u7684PG\u517c\u5bb9\u6a21\u5f0f\u786e\u4fdd\u4e00\u81f4\u6027 \u5b9e\u65f6\u4f30\u503c : \u542f\u7528LTM\u57fa\u7ebf\u83b7\u5f97\u66f4\u9ad8\u65f6\u6548\u6027 \u6279\u91cf\u5904\u7406 : \u8003\u8651\u672c\u5730\u7f13\u5b58\u673a\u5236\u51cf\u5c11API\u538b\u529b \u76d1\u63a7\u6307\u6807 \u6570\u636e\u8d28\u91cf : \u5173\u952e\u6307\u6807TS vs PG\u5bf9\u6bd4 API\u6027\u80fd : TuShare\u8c03\u7528\u6210\u529f\u7387\u548c\u54cd\u5e94\u65f6\u95f4 \u4f30\u503c\u4e00\u81f4\u6027 : \u5b9a\u671f\u56de\u5f52\u6d4b\u8bd5\u786e\u4fdd\u94fe\u8def\u7a33\u5b9a \u7ed3\u8bba TuShare\u6570\u636e\u6e90\u5df2\u6210\u529f\u8fbe\u5230\u751f\u4ea7\u7ea7\u6807\u51c6\uff0c\u5728\u79d1\u5b66\u6027\u3001\u51c6\u786e\u6027\u3001\u65f6\u6548\u6027\u65b9\u9762\u5168\u9762\u8d85\u8d8aPostgreSQL\u6e90\u3002\u5efa\u8bae\u4f5c\u4e3a\u4e3b\u8981\u6570\u636e\u6e90\u4f7f\u7528\uff0cPostgreSQL\u6e90\u4fdd\u7559\u4f5c\u4e3a\u9a8c\u8bc1\u57fa\u51c6\u548c\u5386\u53f2\u590d\u73b0\u53c2\u8003\u3002 - \u65b0\u589e src/data/fetchers/tushare_fetcher.py \uff0c\u65b9\u6cd5\u7b7e\u540d\u5bf9\u9f50\u73b0 AshareDataFetcher \uff1a - get_stock_info , get_latest_price , get_latest_pe_pb , get_latest_total_shares \uff08\u82e5\u7f3a\u5931\u5219\u7528 total_mv/close \u63a8\u5bfc\uff09, get_dividends_ttm_with_fallback , get_raw_financial_data , get_latest_statement_row , get_income_rows_for_ltm \u3002 - \u5728\u65b9\u6cd5\u5185\u90e8\u5b8c\u6210\u5217\u805a\u5408\u3001\u91cd\u547d\u540d\u4e0e\u5355\u4f4d\u6362\u7b97\uff0c\u4e0a\u6e38\u65e0\u611f\u3002 - src/api/main.py \u589e\u52a0 DATA_SOURCE=tushare|postgres \u5f00\u5173\uff08\u9ed8\u8ba4 postgres\uff0c\u4e0d\u6539\u73b0\u6709\u8def\u5f84\uff09\uff0c\u5728 fetcher \u6784\u9020\u5904\u5206\u6d41\u3002 - \u8f7b\u91cf\u7f13\u5b58\uff1a\u53ef\u53c2\u8003 src/core/screener/data_handler.py \u7684\u7f13\u5b58\u7b56\u7565\uff0c\u907f\u514d\u91cd\u590d\u8c03\u7528\u3002 - \u9a8c\u8bc1\uff1a\u62bd\u6837\u591a\u53ea\u80a1\u7968\u4e0e\u4f30\u503c\u65e5\u671f\u8dd1\u901a\u4e00\u6761\u94fe\uff0c\u5173\u6ce8\u544a\u8b66\u6570\u91cf\u4e0e\u6838\u5fc3\u6307\u6807\uff08EV/Equity/VPS\uff09\u3002 \u9644\uff1a\u5bf9\u9f50\u63a2\u9488\u811a\u672c\u4f4d\u4e8e scripts/tushare_alignment_probe.py \uff0c\u53ef\u5728\u672c\u5730\u8bbe\u7f6e TUSHARE_TOKEN \u540e\u6267\u884c\uff0c\u7528\u4e8e\u5feb\u901f\u56de\u5f52\u5b57\u6bb5\u5bf9\u9f50\u60c5\u51b5\u3002 \u53d6\u6570\u5b57\u6bb5\u5168\u96c6\uff08\u6309\u63a5\u53e3\uff09 \u4ee5\u4e0b\u5217\u51fa\u4e86\u5728\u5207\u6362\u5230 Tushare \u6570\u636e\u6e90\u540e\uff0cFetcher \u7aef\u9ed8\u8ba4\u8bf7\u6c42\u7684\u5b57\u6bb5\u5168\u96c6\uff08\u53c2\u8003\u5b98\u65b9\u6587\u6863 + \u4f60\u7684\u793a\u4f8b\uff09\uff0c\u786e\u4fdd\u6570\u636e\u7684\u201c\u53ca\u65f6\u6027/\u5b8c\u6574\u6027/\u7a33\u5b9a\u6027\u201d\u3002Fetcher \u5185\u90e8\u4f1a\u5bf9\u5217\u505a\u805a\u5408/\u91cd\u547d\u540d/\u5355\u4f4d\u6362\u7b97\uff0c\u5e76\u4fdd\u6301 DataProcessor \u7684\u8f93\u5165\u5951\u7ea6\u4e0d\u53d8\u3002 stock_basic\uff08\u57fa\u7840\u4fe1\u606f\uff0c\u589e\u5f3a\u65f6\u6548\uff09 ts_code, symbol, name, area, industry, cnspell, market, list_date, act_name, act_ent_type, fullname, enname, exchange, curr_type, list_status, delist_date, is_hs \u989d\u5916\u5408\u5e76 stock_company\uff08\u53ef\u9009\u589e\u5f3a\uff09\uff1aprovince, city, website, email, employees, main_business daily\uff08\u6bcf\u65e5\u884c\u60c5\uff09 ts_code, trade_date, close\uff08\u6309\u4f30\u503c\u65e5\u6216\u6700\u8fd1\u6709\u6548\u4ea4\u6613\u65e5\uff09 daily_basic\uff08\u6bcf\u65e5\u6307\u6807\uff09 ts_code, trade_date, close, pe_ttm, pb, total_mv, circ_mv, total_share, float_share, turnover_rate \u5355\u4f4d\u6362\u7b97\uff1atotal_mv/circ_mv\uff08\u4e07\u5143\u2192\u4ebf\u5143\uff0c/1e4\uff09\uff1btotal_share/float_share\uff08\u4e07\u80a1\u2192\u80a1\uff0c\u00d71e4\uff1b\u7528\u4e8e\u4ebf\u80a1\u65f6\u518d /1e8\uff09 income\uff08\u5229\u6da6\u8868\uff0c\u6309\u5b98\u65b9\u5168\u5b57\u6bb5\uff09 ts_code, ann_date, f_ann_date, end_date, report_type, comp_type, end_type, basic_eps, diluted_eps, total_revenue, revenue, int_income, prem_earned, comm_income, n_commis_income, n_oth_income, n_oth_b_income, prem_income, out_prem, une_prem_reser, reins_income, n_sec_tb_income, n_sec_uw_income, n_asset_mg_income, oth_b_income, fv_value_chg_gain, invest_income, ass_invest_income, forex_gain, total_cogs, oper_cost, int_exp, comm_exp, biz_tax_surchg, sell_exp, admin_exp, fin_exp, assets_impair_loss, prem_refund, compens_payout, reser_insur_liab, div_payt, reins_exp, oper_exp, compens_payout_refu, insur_reser_refu, reins_cost_refund, other_bus_cost, operate_profit, non_oper_income, non_oper_exp, nca_disploss, total_profit, income_tax, n_income, n_income_attr_p, minority_gain, oth_compr_income, t_compr_income, compr_inc_attr_p, compr_inc_attr_m_s, ebit, ebitda, insurance_exp, undist_profit, distable_profit, rd_exp, fin_exp_int_exp, fin_exp_int_inc, transfer_surplus_rese, transfer_housing_imprest, transfer_oth, adj_lossgain, withdra_legal_surplus, withdra_legal_pubfund, withdra_biz_devfund, withdra_rese_fund, withdra_oth_ersu, workers_welfare, distr_profit_shrhder, prfshare_payable_dvd, comshare_payable_dvd, capit_comstock_div, net_after_nr_lp_correct, oth_income, asset_disp_income, continued_net_profit, end_net_profit, credit_impa_loss, net_expo_hedging_benefits, oth_impair_loss_assets, total_opcost, amodcost_fin_assets, update_flag balancesheet\uff08\u8d44\u4ea7\u8d1f\u503a\u8868\uff0c\u6309\u5b98\u65b9\u5168\u5b57\u6bb5\uff09 ts_code, ann_date, f_ann_date, end_date, report_type, comp_type, end_type, total_share, cap_rese, undistr_porfit, surplus_rese, special_rese, money_cap, trad_asset, notes_receiv, accounts_receiv, oth_receiv, prepayment, div_receiv, int_receiv, inventories, amor_exp, nca_within_1y, sett_rsrv, loanto_oth_bank_fi, premium_receiv, reinsur_receiv, reinsur_res_receiv, pur_resale_fa, oth_cur_assets, total_cur_assets, fa_avail_for_sale, htm_invest, lt_eqt_invest, invest_real_estate, time_deposits, oth_assets, lt_rec, fix_assets, cip, const_materials, fixed_assets_disp, produc_bio_assets, oil_and_gas_assets, intan_assets, r_and_d, goodwill, lt_amor_exp, defer_tax_assets, decr_in_disbur, oth_nca, total_nca, cash_reser_cb, depos_in_oth_bfi, prec_metals, deriv_assets, rr_reins_une_prem, rr_reins_outstd_cla, rr_reins_lins_liab, rr_reins_lthins_liab, refund_depos, ph_pledge_loans, refund_cap_depos, indep_acct_assets, client_depos, client_prov, transac_seat_fee, invest_as_receiv, total_assets, lt_borr, st_borr, cb_borr, depos_ib_deposits, loan_oth_bank, trading_fl, notes_payable, acct_payable, adv_receipts, sold_for_repur_fa, comm_payable, payroll_payable, taxes_payable, int_payable, div_payable, oth_payable, acc_exp, deferred_inc, st_bonds_payable, payable_to_reinsurer, rsrv_insur_cont, acting_trading_sec, acting_uw_sec, non_cur_liab_due_1y, oth_cur_liab, total_cur_liab, bond_payable, lt_payable, specific_payables, estimated_liab, defer_tax_liab, defer_inc_non_cur_liab, oth_ncl, total_ncl, depos_oth_bfi, deriv_liab, depos, agency_bus_liab, oth_liab, prem_receiv_adva, depos_received, ph_invest, reser_une_prem, reser_outstd_claims, reser_lins_liab, reser_lthins_liab, indept_acc_liab, pledge_borr, indem_payable, policy_div_payable, total_liab, treasury_share, ordin_risk_reser, forex_differ, invest_loss_unconf, minority_int, total_hldr_eqy_exc_min_int, total_hldr_eqy_inc_min_int, total_liab_hldr_eqy, lt_payroll_payable, oth_comp_income, oth_eqt_tools, oth_eqt_tools_p_shr, lending_funds, acc_receivable, st_fin_payable, payables, hfs_assets, hfs_sales, cost_fin_assets, fair_value_fin_assets, contract_assets, contract_liab, accounts_receiv_bill, accounts_pay, oth_rcv_total, fix_assets_total, cip_total, oth_pay_total, long_pay_total, debt_invest, oth_debt_invest, update_flag, oth_eq_invest, oth_illiq_fin_assets, oth_eq_ppbond, receiv_financing, use_right_assets, lease_liab cashflow\uff08\u73b0\u91d1\u6d41\u91cf\u8868\uff0c\u6309\u5b98\u65b9\u5168\u5b57\u6bb5\uff09 ts_code, ann_date, f_ann_date, end_date, comp_type, report_type, end_type, net_profit, finan_exp, c_fr_sale_sg, recp_tax_rends, n_depos_incr_fi, n_incr_loans_cb, n_inc_borr_oth_fi, prem_fr_orig_contr, n_incr_insured_dep, n_reinsur_prem, n_incr_disp_tfa, ifc_cash_incr, n_incr_disp_faas, n_incr_loans_oth_bank, n_cap_incr_repur, c_fr_oth_operate_a, c_inf_fr_operate_a, c_paid_goods_s, c_paid_to_for_empl, c_paid_for_taxes, n_incr_clt_loan_adv, n_incr_dep_cbob, c_pay_claims_orig_inco, pay_handling_chrg, pay_comm_insur_plcy, oth_cash_pay_oper_act, st_cash_out_act, n_cashflow_act, oth_recp_ral_inv_act, c_disp_withdrwl_invest, c_recp_return_invest, n_recp_disp_fiolta, n_recp_disp_sobu, stot_inflows_inv_act, c_pay_acq_const_fiolta, c_paid_invest, n_disp_subs_oth_biz, oth_pay_ral_inv_act, n_incr_pledge_loan, stot_out_inv_act, n_cashflow_inv_act, c_recp_borrow, proc_issue_bonds, oth_cash_recp_ral_fnc_act, stot_cash_in_fnc_act, free_cashflow, c_prepay_amt_borr, c_pay_dist_dpcp_int_exp, incl_dvd_profit_paid_sc_ms, oth_cashpay_ral_fnc_act, stot_cashout_fnc_act, n_cash_flows_fnc_act, eff_fx_flu_cash, n_incr_cash_cash_equ, c_cash_equ_beg_period, c_cash_equ_end_period, c_recp_cap_contrib, incl_cash_rec_saims, uncon_invest_loss, prov_depr_assets, depr_fa_coga_dpba, amort_intang_assets, lt_amort_deferred_exp, decr_deferred_exp, incr_acc_exp, loss_disp_fiolta, loss_scr_fa, loss_fv_chg, invest_loss, decr_def_inc_tax_assets, incr_def_inc_tax_liab, decr_inventories, decr_oper_payable, incr_oper_payable, others, im_net_cashflow_oper_act, conv_debt_into_cap, conv_copbonds_due_within_1y, fa_fnc_leases, im_n_incr_cash_equ, net_dism_capital_add, net_cash_rece_sec, credit_impa_loss, use_right_asset_dep, oth_loss_asset, end_bal_cash, beg_bal_cash, end_bal_cash_equ, beg_bal_cash_equ, update_flag dividend\uff08\u5206\u7ea2\uff09 ts_code, end_date, ann_date, div_proc, stk_div, stk_bo_rate, stk_co_rate, cash_div, cash_div_tax, record_date, ex_date, pay_date, div_listdate, imp_ann_date, base_date, base_share, update_flag fina_indicator\uff08\u8d22\u52a1\u6307\u6807\uff0c\u6309\u5b98\u65b9\u5168\u5b57\u6bb5\uff09 \u542b EPS\u3001DT_EPS\u3001EBIT/EBITDA\u3001\u5229\u6da6\u7387\u3001\u5468\u8f6c\u7387\u3001\u6760\u6746\u3001\u5b89\u5168\u6027\u3001\u5b63\u5ea6\u6307\u6807\u3001\u540c\u6bd4\u73af\u6bd4\u7b49\uff08\u8be6\u89c1\u4ee3\u7801\u4e2d\u7684 fi_fields \u5217\u8868\uff09 \u8bf4\u660e\uff1aFetcher \u5185\u90e8\u4ec5\u5c06\u201c\u4f30\u503c\u4e3b\u6d41\u7a0b\u6240\u9700\u5b57\u6bb5\u201d\u900f\u51fa\u5230 DataProcessor\uff0c\u5176\u5b83\u5b57\u6bb5\u4f5c\u4e3a\u589e\u5f3a\uff08\u5386\u53f2\u6458\u8981/\u8bca\u65ad/LLM \u63d0\u793a\u7b49\uff09\u3002\u82e5\u540e\u7eed\u4e3b\u6d41\u7a0b\u8981\u65b0\u589e\u6307\u6807\uff0c\u53ef\u76f4\u63a5\u5728 Fetcher \u7684\u5b57\u6bb5\u6e05\u5355\u4e2d\u6269\u5c55\u5e76\u5728 DataProcessor \u4e2d\u6d88\u8d39\u3002 \u5b57\u6bb5\u6620\u5c04\u5bf9\u7167\u8868\uff08Tushare -> \u5185\u90e8\uff09 \u8bf4\u660e\uff1a\u4ee5\u4e0b\u4e3a\u5728 TushareAshareFetcher \u4e2d\u5efa\u8bae\u5b9e\u73b0\u7684\u7edf\u4e00\u6620\u5c04\u4e0e\u53e3\u5f84\uff0c\u786e\u4fdd\u4f20\u5165 DataProcessor \u7684 input_data \u4e0e\u73b0\u6709 Postgres \u6e90\u4fdd\u6301\u4e00\u81f4\uff1b\u540c\u65f6\u5229\u7528 Tushare \u7684\u9ad8\u65f6\u6548\u5b57\u6bb5\u8fdb\u884c\u589e\u5f3a\uff08\u4e0d\u6539\u53d8\u4f30\u503c\u4e3b\u6d41\u7a0b\uff0c\u53ea\u63d0\u5347\u201c\u6700\u65b0\u6027\u201d\uff09\u3002 \u57fa\u672c\u4fe1\u606f stock_basic\uff08\u2192 basic_info dict\uff09 ts_code \u2192 ts_code name \u2192 name\uff08\u5982\u542f\u7528 namechange \u53ef\u7528\u6700\u65b0\u540d\u4f5c\u4e3a\u589e\u5f3a\uff09 industry \u2192 industry market \u2192 market\uff08\u5982\u201c\u4e3b\u677f/\u79d1\u521b\u677f\u201d\u7b49\uff09 exchange \u2192 exchange\uff08SSE/SZSE\uff09 list_date \u2192 list_date\uff08YYYYMMDD \u4fdd\u5b58\uff1b\u5fc5\u8981\u65f6\u8f6c ISO\uff09 curr_type \u2192 currency\uff08\u82e5\u65e0\u5219 None\uff09 act_name/act_ent_type \u2192 act_name/act_ent_type\uff08\u82e5\u65e0\u5219 None\uff0c\u7531 DataProcessor \u8bbe\u9ed8\u8ba4\uff09 list_status\uff08\u65b0\u589e\u9ad8\u65f6\u6548\uff09\u2192 list_status\uff08L/D/P\uff09 delist_date\uff08\u65b0\u589e\u9ad8\u65f6\u6548\uff09\u2192 delist_date is_hs/hs_type\uff08\u65b0\u589e\u9ad8\u65f6\u6548\uff09\u2192 is_hs/hs_type\uff08\u6caa\u6df1\u6e2f\u901a\u4fe1\u606f\uff09 \u6bcf\u65e5\u884c\u60c5 daily\uff08\u2192 latest_price\uff09 trade_date \u2192 trade_date\uff08YYYYMMDD\uff1b\u53ef\u8f6c ISO\uff09 close \u2192 latest_price \u6bcf\u65e5\u6307\u6807 daily_basic\uff08\u2192 latest_metrics dict/\u8f85\u52a9\u8ba1\u7b97\uff09 pe_ttm \u2192 pe pb \u2192 pb total_mv\uff08\u4e07\u5143\uff09\u2192 total_mv_billion\uff08\u4ebf\u5143\uff0c=total_mv/1e4\uff09 circ_mv\uff08\u4e07\u5143\uff09\u2192 circ_mv_billion\uff08\u4ebf\u5143\uff0c=circ_mv/1e4\uff09 total_share\uff08\u4e07\u80a1\uff09\u2192 total_shares\uff08\u80a1\uff0c=total_share\u00d71e4\uff09 float_share\uff08\u4e07\u80a1\uff09\u2192 float_shares\uff08\u80a1\uff0c=float_share\u00d71e4\uff09 turnover_rate \u2192 turnover_rate\uff08\u53ef\u9009\u589e\u5f3a\uff09 \u5229\u6da6\u8868 income\uff08\u2192 input_data['income_statement'] DataFrame\uff09 end_date \u2192 end_date\uff08\u8f6c\u4e3a pd.Timestamp \uff09 end_type \u2192 end_type\uff08\u20181/2/3/4\u2019\uff09 update_flag \u2192 update_flag\uff08\u4f18\u5148\u53d6 \u20181\u2019 \u6b63\u5f0f\u7248\uff09 revenue \u2192 revenue total_revenue \u2192 total_revenue\uff08\u82e5\u7f3a\u5219 = revenue\uff09 oper_cost \u2192 oper_cost\uff08\u91d1\u878d\u884c\u4e1a\u53ef\u80fd\u4e3a NaN\uff0c\u5141\u8bb8\uff09 operate_profit \u2192 operate_profit\uff08\u7528\u4e8e EBIT\uff09 n_income \u2192 n_income rd_exp \u2192 rd_exp\uff08\u53ef\u9009\u589e\u5f3a\uff1b\u4e0d\u6539\u53d8\u4f30\u503c\u4e3b\u6d41\u7a0b\uff09 \u6307\u6807 fina_indicator\uff08\u5408\u5e76\u5230 income_statement\uff09 dt_eps \u6216 eps/basic_eps \u2192 diluted_eps\uff08\u4f18\u5148 dt_eps \u4f5c\u4e3a\u8fd1\u4f3c\u7a00\u91ca EPS\uff09 \u53ef\u9009\uff1aebit/ebitda\uff08\u82e5\u63d0\u4f9b\uff0c\u5219\u4f5c\u4e3a latest_actual_ebitda \u7684\u76f4\u63a5\u6765\u6e90\u589e\u5f3a\uff0c\u4e0d\u6539\u53d8\u4e3b\u6d41\u7a0b\uff09 \u8d44\u4ea7\u8d1f\u503a\u8868 balancesheet\uff08\u2192 input_data['balance_sheet'] DataFrame\uff09 end_date \u2192 end_date\uff08\u8f6c\u4e3a pd.Timestamp \uff09 inventories \u2192 inventories accounts_pay \u2192 accounts_pay prepayment \u2192 prepayment oth_cur_assets \u2192 oth_cur_assets contract_liab/adv_receipts \u2192 contract_liab/adv_receipts\uff08\u4f18\u5148 contract_liab\uff0c\u7f3a\u5931\u7528 adv_receipts\uff09 payroll_payable/taxes_payable/oth_payable \u2192 \u540c\u540d\u5217 st_borr/lt_borr/bond_payable/non_cur_liab_due_1y/money_cap \u2192 \u540c\u540d\u5217 total_cur_assets/total_cur_liab/total_liab \u2192 \u540c\u540d\u5217 total_assets/total_hldr_eqy_exc_min_int \u2192 \u540c\u540d\u5217\uff08\u53ef\u7528\u4e8e\u5386\u53f2\u6458\u8981\u5c55\u793a\uff09 minority_int/oth_eqt_tools_p_shr \u2192 \u540c\u540d\u5217\uff08\u80a1\u6743\u6865\u8ba1\u7b97\u4f7f\u7528\uff09 notes_receiv + accounts_receiv/acct_receiv \u2192 accounts_receiv_bill\uff08Fetcher \u805a\u5408\uff09 fix_assets_total\uff08\u82e5\u7f3a\u4ee5 fix_assets \u56de\u586b\uff09 \u2192 fix_assets_total\uff08\u7528\u4e8e\u5386\u53f2\u6458\u8981\u5c55\u793a\uff0c\u53ef\u9009\uff09 \u73b0\u91d1\u6d41\u91cf\u8868 cashflow\uff08\u2192 input_data['cash_flow'] DataFrame\uff09 end_date \u2192 end_date\uff08\u8f6c\u4e3a pd.Timestamp \uff09 depr_fa_coga_dpba \u2192 depr_fa_coga_dpba\uff08\u7528\u4e8e\u6784\u9020 EBITDA\uff09 n_cashflow_act/n_cashflow_inv_act/n_cashflow_fin_act \u2192 \u540c\u540d\u5217\uff08\u7528\u4e8e\u5386\u53f2\u6458\u8981\u5c55\u793a\uff0c\u53ef\u9009\uff09 \u5206\u7ea2 dividend\uff08\u2192 ttm_dividends_df\uff09 cash_div_tax \u2192 cash_div_tax\uff08\u6bcf\u80a1\u73b0\u91d1\u5206\u7ea2\uff08\u542b\u7a0e\uff09\uff09 \u82e5\u4ec5\u6709 cash_div \u2192 \u91cd\u547d\u540d\u4e3a cash_div_tax end_date / ann_date \u2192 end_date\uff08\u82e5\u7f3a end_date \u5219\u4f7f\u7528 ann_date\uff09 div_proc \u2192 div_proc\uff08\u9884\u6848/\u901a\u8fc7/\u5b9e\u65bd\uff0c\u4fbf\u4e8e\u6784\u5efa TTM \u72b6\u6001\u63d0\u793a\uff09 \u66f4\u9ad8\u65f6\u6548\u6027\u66ff\u6362\u70b9\uff08postgres \u2192 tushare\uff09 \u57fa\u672c\u4fe1\u606f\uff1alist_status/delist_date/is_hs/hs_type/namechange\uff08\u5982\u542f\u7528\uff09 \u6bcf\u65e5\u6307\u6807\uff1ape_ttm/pb/total_mv/circ_mv/total_share/float_share\uff08\u6309\u4f30\u503c\u65e5\u83b7\u53d6\uff0c\u66ff\u6362\u539f\u5e93\u5feb\u7167\uff09 \u62a5\u8868\u7248\u672c\uff1a\u4f18\u5148 update_flag='1' \u7684\u6b63\u5f0f\u7248\u672c\uff1b\u7ed3\u5408 ann_date/f_ann_date \u4e0e end_type \u7cbe\u786e\u7b5b\u53d6\u6700\u65b0\u6709\u6548\u62a5\u8868 \u5206\u7ea2\u8fdb\u5ea6\uff1a\u901a\u8fc7 div_proc \u533a\u5206\u9884\u6848/\u901a\u8fc7/\u5b9e\u65bd\uff0c\u4f18\u5316 TTM \u80a1\u606f\u53e3\u5f84","title":"TuShare\u6570\u636e\u6e90\u5bf9\u9f50\u4e0e\u751f\u4ea7\u90e8\u7f72\u62a5\u544a"},{"location":"05_data_sources/tushare_alignment/#tushare","text":"\u6700\u540e\u66f4\u65b0: 2025-09-22","title":"TuShare\u6570\u636e\u6e90\u5bf9\u9f50\u4e0e\u751f\u4ea7\u90e8\u7f72\u62a5\u544a"},{"location":"05_data_sources/tushare_alignment/#_1","text":"TuShare\u6570\u636e\u6e90\u5df2\u6210\u529f\u5b8c\u6210\u4e0ePostgreSQL\u6e90\u7684\u5168\u9762\u5bf9\u9f50\uff0c\u5e76\u5df2\u6295\u5165\u751f\u4ea7\u4f7f\u7528\u3002\u901a\u8fc7\u5b8c\u6574\u7684\u7aef\u5230\u7aef\u9a8c\u8bc1\uff0c\u786e\u8ba4TuShare\u5728\u79d1\u5b66\u6027\u3001\u51c6\u786e\u6027\u3001\u65f6\u6548\u6027\u65b9\u9762\u5747\u4f18\u4e8ePostgreSQL\u6570\u636e\u6e90\uff0c\u9002\u5408\u4f5c\u4e3a\u4e3b\u8981\u6570\u636e\u6e90\u3002","title":"\u6267\u884c\u6458\u8981"},{"location":"05_data_sources/tushare_alignment/#_2","text":"\u2705 \u5b8c\u5168\u66ff\u4ee3 : TuShare Pro API\u5df2\u5b8c\u5168\u66ff\u4ee3Postgres\u6570\u636e\u6e90\uff0c\u4e0b\u6e38\u4f30\u503c\u94fe\u8def\u4fdd\u6301100%\u517c\u5bb9 \u2705 \u53e3\u5f84\u5bf9\u9f50 : \u5173\u952e\u4f30\u503c\u6307\u6807(EV\u3001VPS\u3001CAGR\u3001EBITDA)\u4e0ePG\u6e90\u9ad8\u5ea6\u4e00\u81f4 \u2705 \u751f\u4ea7\u5c31\u7eea : \u652f\u6301\u6570\u636e\u6e90\u70ed\u5207\u6362\uff0c\u5177\u5907\u5b8c\u6574\u7684\u9519\u8bef\u5904\u7406\u548c\u515c\u5e95\u673a\u5236 \u2705 LTM\u652f\u6301 : \u65b0\u589eLast Twelve Months\u57fa\u7ebf\u529f\u80fd\uff0c\u63d0\u5347\u4f30\u503c\u65f6\u6548\u6027","title":"\u603b\u4f53\u7ed3\u8bba\uff08\u5df2\u9a8c\u8bc1\uff09"},{"location":"05_data_sources/tushare_alignment/#_3","text":"income\uff08\u5229\u6da6\u8868 \u2192 income_statement \uff09 \u5fc5\u8981\u5217\u5747\u53ef\u83b7\u5f97\uff1a end_date, end_type, update_flag, revenue, total_revenue, oper_cost, operate_profit, n_income diluted_eps \uff1aTushare income \u65e0\u8be5\u5217\uff0c\u53ef\u7531 fina_indicator \u8fd1\u4f3c\u6620\u5c04\uff1a\u4f18\u5148 dt_eps \uff0c\u5426\u5219 eps/basic_eps \u3002 \u5e74\u62a5\u8bc6\u522b\uff1a\u4f18\u5148 end_type='4' \uff1b\u5426\u5219\u6309 end_date \u6708\u4efd=12\u3002 balancesheet\uff08\u8d44\u4ea7\u8d1f\u503a\u8868 \u2192 balance_sheet \uff09 \u76f4\u63a5\u5217\uff1a inventories, accounts_pay, prepayment, oth_cur_assets, contract_liab(\u65b0)/adv_receipts(\u65e7), payroll_payable, taxes_payable, oth_payable, st_borr, lt_borr, bond_payable, non_cur_liab_due_1y, money_cap, total_cur_assets, total_cur_liab, total_liab, minority_int, oth_eqt_tools_p_shr \u805a\u5408\u5217\uff1a accounts_receiv_bill = notes_receiv + accounts_receiv/acct_receiv \uff08\u5b58\u5728\u5373\u76f8\u52a0\uff0c\u7f3a\u5931\u7f6e 0/NA\uff09\u3002 cashflow\uff08\u73b0\u91d1\u6d41\u91cf\u8868 \u2192 cash_flow \uff09 \u76f4\u63a5\u5217\uff1a depr_fa_coga_dpba \uff08\u7528\u4e8e\u6784\u9020\u6700\u65b0\u5b9e\u9645 EBITDA\uff09\u3002 daily / daily_basic\uff08\u884c\u60c5\u4e0e\u4f30\u503c\u6307\u6807\uff09 daily.close \uff08\u6536\u76d8\u4ef7\uff09\u3001 daily.trade_date daily_basic.pe_ttm \u2192 pe , daily_basic.pb \u2192 pb \u5355\u4f4d\uff1a total_mv \u5355\u4f4d\u4e3a\u201c\u4e07\u5143\u201d\uff0c\u6362\u7b97\u4e3a\u201c\u4ebf\u5143\u201d\u9664\u4ee5 1e4\uff1b total_share \u5355\u4f4d\u4e3a\u201c\u4e07\u80a1\u201d\uff0c\u6362\u7b97\u4e3a\u201c\u80a1\u201d\u4e58\u4ee5 1e4\u3002 dividend\uff08\u5206\u7ea2\uff09 cash_div_tax \uff08\u6bcf\u80a1\u5206\u7ea2\uff08\u542b\u7a0e\uff09\uff09\uff0c\u7a97\u53e3\u7d2f\u52a0\u7528\u4e8e TTM DPS\u3002 \u5982\u90e8\u5206\u5e74\u4efd\u4ec5\u6709 cash_div \uff0cFetcher \u5c42\u7edf\u4e00\u91cd\u547d\u540d\u4e3a cash_div_tax \u3002 stock_basic\uff08\u57fa\u672c\u4fe1\u606f\uff09 ts_code, name, industry, market, exchange, list_date curr_type/act_name/act_ent_type \uff1aTushare \u65e0\u6807\u51c6\u5217\uff0cFetcher \u7f6e None\uff0cDataProcessor \u4f1a\u8bbe\u7f6e\u9ed8\u8ba4\u503c\u3002","title":"\u6620\u5c04\u4e0e\u5355\u4f4d"},{"location":"05_data_sources/tushare_alignment/#_4","text":"income_statement\uff1a\u6240\u6709\u6837\u672c\u5b8c\u6574\u8986\u76d6\u5fc5\u9700\u5217\uff0c\u901a\u8fc7 fina_indicator \u5408\u5e76\u5f97\u5230 diluted_eps \u3002 balance_sheet\uff1a accounts_receiv_bill \u53ef\u7531 notes_receiv + accounts_receiv/acct_receiv \u805a\u5408\u5f97\u5230\uff1b\u65b0\u4f1a\u8ba1\u51c6\u5219\u542b contract_liab \uff0c\u65e7\u53e3\u5f84\u53ef\u9000\u5316 adv_receipts \u3002 cash_flow\uff1a depr_fa_coga_dpba \u5b58\u5728\uff08\u90e8\u5206\u62a5\u544a\u671f\u53ef\u80fd\u4e3a NaN\uff0c\u7b26\u5408\u73b0\u5b9e\u6570\u636e\u7f3a\u53e3\uff09\u3002 daily_basic\uff1a pe_ttm/pb/total_mv/total_share \u53ef\u76f4\u63a5\u83b7\u5f97\uff0c\u5355\u4f4d\u9700\u8f6c\u6362\u3002 dividend\uff1a\u542b cash_div_tax \uff0c\u53ef\u7528\u4e8e TTM \u7d2f\u52a0\uff08\u7f3a\u5931\u65f6\u4ee5 cash_div \u515c\u5e95\u91cd\u547d\u540d\uff09\u3002 stock_basic\uff1a\u6838\u5fc3\u5b57\u6bb5\u9f50\u5168\u3002","title":"\u4ee3\u8868\u6027\u6837\u672c\u7ed3\u679c\uff08\u6458\u8981\uff09"},{"location":"05_data_sources/tushare_alignment/#2025-09-22","text":"","title":"\u7aef\u5230\u7aef\u9a8c\u8bc1\u7ed3\u679c\uff082025-09-22\uff09"},{"location":"05_data_sources/tushare_alignment/#000999sz-600519sh","text":"\u9a8c\u8bc1\u7ef4\u5ea6 : \u57fa\u51c6\u65e5\u671f\u3001\u5386\u53f2CAGR\u3001\u6700\u65b0EBITDA\u3001NWC\u7ec4\u4ef6\u3001DCF\u4f30\u503c","title":"\u6d4b\u8bd5\u6848\u4f8b: 000999.SZ (\u534e\u6da6\u4e09\u4e5d) &amp; 600519.SH (\u8d35\u5dde\u8305\u53f0)"},{"location":"05_data_sources/tushare_alignment/#_5","text":"\u6307\u6807 000999.SZ 600519.SH \u72b6\u6001 \u8d44\u4ea7\u8d1f\u503a\u8868\u57fa\u51c6\u65e5 2024-12-31 (TS) vs 2024-12-31 (PG) 2024-12-31 (TS) vs 2024-12-31 (PG) \u2705 \u5b8c\u5168\u4e00\u81f4 \u5386\u53f2\u6536\u5165CAGR 21.698% vs 21.698% 17.184% vs 17.184% \u2705 \u5b8c\u5168\u4e00\u81f4 \u6700\u65b0\u5b9e\u9645EBITDA ~53.4\u4ebf vs 53.13\u4ebf 1217.53\u4ebf vs 1217.53\u4ebf \u2705 \u9ad8\u5ea6\u4e00\u81f4 WACC 6.0875% vs 6.0875% 6.0875% vs 6.0875% \u2705 \u5b8c\u5168\u4e00\u81f4 EV 938.25\u4ebf vs 926.63\u4ebf 16815.73\u4ebf vs 16652.95\u4ebf \u2705 \u63a5\u8fd1(~1-2%\u5dee\u5f02) VPS\u5dee\u5f02\u539f\u56e0 \u80a1\u672c\u5feb\u7167\u65f6\u95f4\u5dee\u5f02 \u80a1\u672c\u5feb\u7167\u65f6\u95f4\u5dee\u5f02 \u26a0\ufe0f \u9884\u671f\u5dee\u5f02","title":"\u5bf9\u9f50\u72b6\u51b5"},{"location":"05_data_sources/tushare_alignment/#_6","text":"\u8d44\u4ea7\u8d1f\u503a\u8868\u57fa\u51c6\u65e5\u4fee\u590d : \u95ee\u9898: 2024\u5e74\u6570\u636e\u88abIQR\u5f02\u5e38\u503c\u68c0\u6d4b\u8bef\u5224\uff0c\u57fa\u51c6\u65e5\u56de\u9000\u52302023-12-31 \u89e3\u51b3: \u4e3abalance_sheet\u6dfb\u52a0\u4fdd\u62a4\u5217\uff0c\u9632\u6b62\u5173\u952e\u79d1\u76ee\u88ab\u8bef\u5224\u4e3a\u5f02\u5e38\u503c \u4f4d\u7f6e: src/core/financial/processor.py:341-354 \u6309\u5e74\u62e9\u4f18\u4fdd\u7559\u673a\u5236 : \u95ee\u9898: \u5168\u5c40\u4f18\u5148update_flag='1'\u5bfc\u81f4\u6700\u65b0\u5e74\u5ea6\u88ab\u6574\u4f53\u8fc7\u6ee4 \u89e3\u51b3: \u6539\u4e3a\u6309\u5e74\u5ea6\u62e9\u4f18(\u4f18\u5148update_flag='1'\uff0c\u5426\u5219\u6700\u65b0ann_date) \u4f4d\u7f6e: src/data/fetchers/tushare_fetcher.py:292-299, 422-429, 518-525 LTM\u57fa\u7ebf\u652f\u6301 : \u65b0\u589e: \u5b63\u5ea6+\u5e74\u62a5\u7ec4\u88c5LTM\u6536\u5165\u57fa\u7ebf\u529f\u80fd \u4f4d\u7f6e: src/data/fetchers/tushare_fetcher.py:554-628","title":"\u5173\u952e\u4fee\u590d\u9879\u76ee"},{"location":"05_data_sources/tushare_alignment/#_7","text":"","title":"\u6570\u636e\u6e90\u9009\u62e9\u7b56\u7565"},{"location":"05_data_sources/tushare_alignment/#_8","text":"# \u751f\u4ea7\u4f30\u503c(\u63a8\u8350) DATA_SOURCE=tushare OCL_AGGREGATION_MODE=standard # \u5386\u53f2\u590d\u73b0/\u5bf9\u8d26 DATA_SOURCE=postgres # \u6216 DATA_SOURCE=tushare + OCL_AGGREGATION_MODE=pg # \u5f00\u53d1\u8c03\u8bd5 DATA_SOURCE=hybrid # PG\u4f18\u5148\uff0cTS\u56de\u9000","title":"\u63a8\u8350\u914d\u7f6e"},{"location":"05_data_sources/tushare_alignment/#_9","text":"\u7ef4\u5ea6 TuShare PostgreSQL \u65f6\u6548\u6027 \u2705 \u4f30\u503c\u65e5\u56de\u9000\uff0c\u6700\u65b0\u4ea4\u6613\u65e5\u5feb\u7167 \u274c \u6570\u636e\u5e93\u5feb\u7167\u53ef\u80fd\u6ede\u540e \u5b8c\u6574\u6027 \u2705 \u5168\u5b57\u6bb5\uff0c\u7ec6\u5206\u79d1\u76ee\u4e30\u5bcc \u274c \u90e8\u5206\u5386\u53f2\u5b57\u6bb5\u7f3a\u5931 \u51c6\u786e\u6027 \u2705 \u5b98\u65b9\u63a5\u53e3\uff0c\u51cf\u5c11\u8f6c\u6362\u8bef\u5dee \u26a0\ufe0f \u591a\u5c42\u8f6c\u6362\u53ef\u80fd\u5f15\u5165\u8bef\u5dee \u7ef4\u62a4\u6027 \u2705 \u81ea\u52a8\u66f4\u65b0\uff0c\u65e0\u9700ETL \u274c \u9700\u8981\u7ef4\u62a4ETL\u6d41\u7a0b \u590d\u73b0\u6027 \u2705 \u652f\u6301PG\u517c\u5bb9\u6a21\u5f0f \u2705 \u5386\u53f2\u57fa\u51c6\u7a33\u5b9a","title":"\u4f18\u52bf\u5bf9\u6bd4"},{"location":"05_data_sources/tushare_alignment/#_10","text":"","title":"\u98ce\u9669\u4e0e\u515c\u5e95\u673a\u5236"},{"location":"05_data_sources/tushare_alignment/#_11","text":"\u6570\u636e\u6e05\u6d17\u4fdd\u62a4 : \u5173\u952e\u79d1\u76ee\u514d\u53d7\u5f02\u5e38\u503c\u8bef\u5224 \u5b57\u6bb5\u6620\u5c04\u515c\u5e95 : accounts_receiv_bill\u805a\u5408\u3001fix_assets\u56de\u9000\u3001EPS\u53bb\u91cd \u53e3\u5f84\u5207\u6362 : \u6807\u51c6\u6a21\u5f0fvs PG\u517c\u5bb9\u6a21\u5f0f\uff0c\u652f\u6301\u65b0\u65e7\u4f1a\u8ba1\u51c6\u5219 \u5f02\u5e38\u5904\u7406 : \u5b8c\u6574\u7684\u9519\u8bef\u6355\u83b7\u4e0e\u964d\u7ea7\u673a\u5236 \u5355\u4f4d\u7edf\u4e00 : \u4ebf\u80a1\u3001\u4ebf\u5143\u7edf\u4e00\uff0c\u907f\u514d\u6570\u91cf\u7ea7\u9519\u8bef","title":"\u5df2\u5b9e\u73b0\u7684\u515c\u5e95\u7b56\u7565"},{"location":"05_data_sources/tushare_alignment/#_12","text":"\u6027\u80fd\u4f18\u5316 : \u672c\u5730\u7f13\u5b58\u673a\u5236\u51cf\u5c11API\u8c03\u7528 \u901f\u7387\u63a7\u5236 : \u9000\u907f\u91cd\u8bd5\u7b56\u7565\u907f\u514d\u89e6\u53d1\u9650\u6d41 \u76d1\u63a7\u544a\u8b66 : \u5b9a\u671fTS\u2194PG\u57fa\u7ebf\u6f02\u79fb\u68c0\u67e5","title":"\u5f85\u4f18\u5316\u9879\u76ee"},{"location":"05_data_sources/tushare_alignment/#_13","text":"","title":"\u90e8\u7f72\u72b6\u6001\u4e0e\u4f7f\u7528\u6307\u5357"},{"location":"05_data_sources/tushare_alignment/#_14","text":"\u2705 \u751f\u4ea7\u53ef\u7528 : TuShare\u4f5c\u4e3a\u9ed8\u8ba4\u6570\u636e\u6e90 \u2705 \u70ed\u5207\u6362 : \u652f\u6301\u8fd0\u884c\u65f6\u5207\u6362\u6570\u636e\u6e90\u65e0\u9700\u91cd\u542f \u2705 \u5411\u540e\u517c\u5bb9 : PostgreSQL\u6e90\u4f5c\u4e3a\u9a8c\u8bc1\u57fa\u51c6\u4fdd\u7559 \u2705 LTM\u529f\u80fd : \u901a\u8fc7ltm_baseline_enabled\u53c2\u6570\u542f\u7528","title":"\u5f53\u524d\u90e8\u7f72\u72b6\u6001"},{"location":"05_data_sources/tushare_alignment/#_15","text":"\u65b0\u9879\u76ee : \u76f4\u63a5\u4f7f\u7528TuShare\u6e90\uff0c\u914d\u7f6e\u6807\u51c6\u805a\u5408\u6a21\u5f0f \u5386\u53f2\u9a8c\u8bc1 : \u4f7f\u7528PG\u6e90\u6216TS\u7684PG\u517c\u5bb9\u6a21\u5f0f\u786e\u4fdd\u4e00\u81f4\u6027 \u5b9e\u65f6\u4f30\u503c : \u542f\u7528LTM\u57fa\u7ebf\u83b7\u5f97\u66f4\u9ad8\u65f6\u6548\u6027 \u6279\u91cf\u5904\u7406 : \u8003\u8651\u672c\u5730\u7f13\u5b58\u673a\u5236\u51cf\u5c11API\u538b\u529b","title":"\u4f7f\u7528\u5efa\u8bae"},{"location":"05_data_sources/tushare_alignment/#_16","text":"\u6570\u636e\u8d28\u91cf : \u5173\u952e\u6307\u6807TS vs PG\u5bf9\u6bd4 API\u6027\u80fd : TuShare\u8c03\u7528\u6210\u529f\u7387\u548c\u54cd\u5e94\u65f6\u95f4 \u4f30\u503c\u4e00\u81f4\u6027 : \u5b9a\u671f\u56de\u5f52\u6d4b\u8bd5\u786e\u4fdd\u94fe\u8def\u7a33\u5b9a","title":"\u76d1\u63a7\u6307\u6807"},{"location":"05_data_sources/tushare_alignment/#_17","text":"TuShare\u6570\u636e\u6e90\u5df2\u6210\u529f\u8fbe\u5230\u751f\u4ea7\u7ea7\u6807\u51c6\uff0c\u5728\u79d1\u5b66\u6027\u3001\u51c6\u786e\u6027\u3001\u65f6\u6548\u6027\u65b9\u9762\u5168\u9762\u8d85\u8d8aPostgreSQL\u6e90\u3002\u5efa\u8bae\u4f5c\u4e3a\u4e3b\u8981\u6570\u636e\u6e90\u4f7f\u7528\uff0cPostgreSQL\u6e90\u4fdd\u7559\u4f5c\u4e3a\u9a8c\u8bc1\u57fa\u51c6\u548c\u5386\u53f2\u590d\u73b0\u53c2\u8003\u3002 - \u65b0\u589e src/data/fetchers/tushare_fetcher.py \uff0c\u65b9\u6cd5\u7b7e\u540d\u5bf9\u9f50\u73b0 AshareDataFetcher \uff1a - get_stock_info , get_latest_price , get_latest_pe_pb , get_latest_total_shares \uff08\u82e5\u7f3a\u5931\u5219\u7528 total_mv/close \u63a8\u5bfc\uff09, get_dividends_ttm_with_fallback , get_raw_financial_data , get_latest_statement_row , get_income_rows_for_ltm \u3002 - \u5728\u65b9\u6cd5\u5185\u90e8\u5b8c\u6210\u5217\u805a\u5408\u3001\u91cd\u547d\u540d\u4e0e\u5355\u4f4d\u6362\u7b97\uff0c\u4e0a\u6e38\u65e0\u611f\u3002 - src/api/main.py \u589e\u52a0 DATA_SOURCE=tushare|postgres \u5f00\u5173\uff08\u9ed8\u8ba4 postgres\uff0c\u4e0d\u6539\u73b0\u6709\u8def\u5f84\uff09\uff0c\u5728 fetcher \u6784\u9020\u5904\u5206\u6d41\u3002 - \u8f7b\u91cf\u7f13\u5b58\uff1a\u53ef\u53c2\u8003 src/core/screener/data_handler.py \u7684\u7f13\u5b58\u7b56\u7565\uff0c\u907f\u514d\u91cd\u590d\u8c03\u7528\u3002 - \u9a8c\u8bc1\uff1a\u62bd\u6837\u591a\u53ea\u80a1\u7968\u4e0e\u4f30\u503c\u65e5\u671f\u8dd1\u901a\u4e00\u6761\u94fe\uff0c\u5173\u6ce8\u544a\u8b66\u6570\u91cf\u4e0e\u6838\u5fc3\u6307\u6807\uff08EV/Equity/VPS\uff09\u3002 \u9644\uff1a\u5bf9\u9f50\u63a2\u9488\u811a\u672c\u4f4d\u4e8e scripts/tushare_alignment_probe.py \uff0c\u53ef\u5728\u672c\u5730\u8bbe\u7f6e TUSHARE_TOKEN \u540e\u6267\u884c\uff0c\u7528\u4e8e\u5feb\u901f\u56de\u5f52\u5b57\u6bb5\u5bf9\u9f50\u60c5\u51b5\u3002","title":"\u7ed3\u8bba"},{"location":"05_data_sources/tushare_alignment/#_18","text":"\u4ee5\u4e0b\u5217\u51fa\u4e86\u5728\u5207\u6362\u5230 Tushare \u6570\u636e\u6e90\u540e\uff0cFetcher \u7aef\u9ed8\u8ba4\u8bf7\u6c42\u7684\u5b57\u6bb5\u5168\u96c6\uff08\u53c2\u8003\u5b98\u65b9\u6587\u6863 + \u4f60\u7684\u793a\u4f8b\uff09\uff0c\u786e\u4fdd\u6570\u636e\u7684\u201c\u53ca\u65f6\u6027/\u5b8c\u6574\u6027/\u7a33\u5b9a\u6027\u201d\u3002Fetcher \u5185\u90e8\u4f1a\u5bf9\u5217\u505a\u805a\u5408/\u91cd\u547d\u540d/\u5355\u4f4d\u6362\u7b97\uff0c\u5e76\u4fdd\u6301 DataProcessor \u7684\u8f93\u5165\u5951\u7ea6\u4e0d\u53d8\u3002 stock_basic\uff08\u57fa\u7840\u4fe1\u606f\uff0c\u589e\u5f3a\u65f6\u6548\uff09 ts_code, symbol, name, area, industry, cnspell, market, list_date, act_name, act_ent_type, fullname, enname, exchange, curr_type, list_status, delist_date, is_hs \u989d\u5916\u5408\u5e76 stock_company\uff08\u53ef\u9009\u589e\u5f3a\uff09\uff1aprovince, city, website, email, employees, main_business daily\uff08\u6bcf\u65e5\u884c\u60c5\uff09 ts_code, trade_date, close\uff08\u6309\u4f30\u503c\u65e5\u6216\u6700\u8fd1\u6709\u6548\u4ea4\u6613\u65e5\uff09 daily_basic\uff08\u6bcf\u65e5\u6307\u6807\uff09 ts_code, trade_date, close, pe_ttm, pb, total_mv, circ_mv, total_share, float_share, turnover_rate \u5355\u4f4d\u6362\u7b97\uff1atotal_mv/circ_mv\uff08\u4e07\u5143\u2192\u4ebf\u5143\uff0c/1e4\uff09\uff1btotal_share/float_share\uff08\u4e07\u80a1\u2192\u80a1\uff0c\u00d71e4\uff1b\u7528\u4e8e\u4ebf\u80a1\u65f6\u518d /1e8\uff09 income\uff08\u5229\u6da6\u8868\uff0c\u6309\u5b98\u65b9\u5168\u5b57\u6bb5\uff09 ts_code, ann_date, f_ann_date, end_date, report_type, comp_type, end_type, basic_eps, diluted_eps, total_revenue, revenue, int_income, prem_earned, comm_income, n_commis_income, n_oth_income, n_oth_b_income, prem_income, out_prem, une_prem_reser, reins_income, n_sec_tb_income, n_sec_uw_income, n_asset_mg_income, oth_b_income, fv_value_chg_gain, invest_income, ass_invest_income, forex_gain, total_cogs, oper_cost, int_exp, comm_exp, biz_tax_surchg, sell_exp, admin_exp, fin_exp, assets_impair_loss, prem_refund, compens_payout, reser_insur_liab, div_payt, reins_exp, oper_exp, compens_payout_refu, insur_reser_refu, reins_cost_refund, other_bus_cost, operate_profit, non_oper_income, non_oper_exp, nca_disploss, total_profit, income_tax, n_income, n_income_attr_p, minority_gain, oth_compr_income, t_compr_income, compr_inc_attr_p, compr_inc_attr_m_s, ebit, ebitda, insurance_exp, undist_profit, distable_profit, rd_exp, fin_exp_int_exp, fin_exp_int_inc, transfer_surplus_rese, transfer_housing_imprest, transfer_oth, adj_lossgain, withdra_legal_surplus, withdra_legal_pubfund, withdra_biz_devfund, withdra_rese_fund, withdra_oth_ersu, workers_welfare, distr_profit_shrhder, prfshare_payable_dvd, comshare_payable_dvd, capit_comstock_div, net_after_nr_lp_correct, oth_income, asset_disp_income, continued_net_profit, end_net_profit, credit_impa_loss, net_expo_hedging_benefits, oth_impair_loss_assets, total_opcost, amodcost_fin_assets, update_flag balancesheet\uff08\u8d44\u4ea7\u8d1f\u503a\u8868\uff0c\u6309\u5b98\u65b9\u5168\u5b57\u6bb5\uff09 ts_code, ann_date, f_ann_date, end_date, report_type, comp_type, end_type, total_share, cap_rese, undistr_porfit, surplus_rese, special_rese, money_cap, trad_asset, notes_receiv, accounts_receiv, oth_receiv, prepayment, div_receiv, int_receiv, inventories, amor_exp, nca_within_1y, sett_rsrv, loanto_oth_bank_fi, premium_receiv, reinsur_receiv, reinsur_res_receiv, pur_resale_fa, oth_cur_assets, total_cur_assets, fa_avail_for_sale, htm_invest, lt_eqt_invest, invest_real_estate, time_deposits, oth_assets, lt_rec, fix_assets, cip, const_materials, fixed_assets_disp, produc_bio_assets, oil_and_gas_assets, intan_assets, r_and_d, goodwill, lt_amor_exp, defer_tax_assets, decr_in_disbur, oth_nca, total_nca, cash_reser_cb, depos_in_oth_bfi, prec_metals, deriv_assets, rr_reins_une_prem, rr_reins_outstd_cla, rr_reins_lins_liab, rr_reins_lthins_liab, refund_depos, ph_pledge_loans, refund_cap_depos, indep_acct_assets, client_depos, client_prov, transac_seat_fee, invest_as_receiv, total_assets, lt_borr, st_borr, cb_borr, depos_ib_deposits, loan_oth_bank, trading_fl, notes_payable, acct_payable, adv_receipts, sold_for_repur_fa, comm_payable, payroll_payable, taxes_payable, int_payable, div_payable, oth_payable, acc_exp, deferred_inc, st_bonds_payable, payable_to_reinsurer, rsrv_insur_cont, acting_trading_sec, acting_uw_sec, non_cur_liab_due_1y, oth_cur_liab, total_cur_liab, bond_payable, lt_payable, specific_payables, estimated_liab, defer_tax_liab, defer_inc_non_cur_liab, oth_ncl, total_ncl, depos_oth_bfi, deriv_liab, depos, agency_bus_liab, oth_liab, prem_receiv_adva, depos_received, ph_invest, reser_une_prem, reser_outstd_claims, reser_lins_liab, reser_lthins_liab, indept_acc_liab, pledge_borr, indem_payable, policy_div_payable, total_liab, treasury_share, ordin_risk_reser, forex_differ, invest_loss_unconf, minority_int, total_hldr_eqy_exc_min_int, total_hldr_eqy_inc_min_int, total_liab_hldr_eqy, lt_payroll_payable, oth_comp_income, oth_eqt_tools, oth_eqt_tools_p_shr, lending_funds, acc_receivable, st_fin_payable, payables, hfs_assets, hfs_sales, cost_fin_assets, fair_value_fin_assets, contract_assets, contract_liab, accounts_receiv_bill, accounts_pay, oth_rcv_total, fix_assets_total, cip_total, oth_pay_total, long_pay_total, debt_invest, oth_debt_invest, update_flag, oth_eq_invest, oth_illiq_fin_assets, oth_eq_ppbond, receiv_financing, use_right_assets, lease_liab cashflow\uff08\u73b0\u91d1\u6d41\u91cf\u8868\uff0c\u6309\u5b98\u65b9\u5168\u5b57\u6bb5\uff09 ts_code, ann_date, f_ann_date, end_date, comp_type, report_type, end_type, net_profit, finan_exp, c_fr_sale_sg, recp_tax_rends, n_depos_incr_fi, n_incr_loans_cb, n_inc_borr_oth_fi, prem_fr_orig_contr, n_incr_insured_dep, n_reinsur_prem, n_incr_disp_tfa, ifc_cash_incr, n_incr_disp_faas, n_incr_loans_oth_bank, n_cap_incr_repur, c_fr_oth_operate_a, c_inf_fr_operate_a, c_paid_goods_s, c_paid_to_for_empl, c_paid_for_taxes, n_incr_clt_loan_adv, n_incr_dep_cbob, c_pay_claims_orig_inco, pay_handling_chrg, pay_comm_insur_plcy, oth_cash_pay_oper_act, st_cash_out_act, n_cashflow_act, oth_recp_ral_inv_act, c_disp_withdrwl_invest, c_recp_return_invest, n_recp_disp_fiolta, n_recp_disp_sobu, stot_inflows_inv_act, c_pay_acq_const_fiolta, c_paid_invest, n_disp_subs_oth_biz, oth_pay_ral_inv_act, n_incr_pledge_loan, stot_out_inv_act, n_cashflow_inv_act, c_recp_borrow, proc_issue_bonds, oth_cash_recp_ral_fnc_act, stot_cash_in_fnc_act, free_cashflow, c_prepay_amt_borr, c_pay_dist_dpcp_int_exp, incl_dvd_profit_paid_sc_ms, oth_cashpay_ral_fnc_act, stot_cashout_fnc_act, n_cash_flows_fnc_act, eff_fx_flu_cash, n_incr_cash_cash_equ, c_cash_equ_beg_period, c_cash_equ_end_period, c_recp_cap_contrib, incl_cash_rec_saims, uncon_invest_loss, prov_depr_assets, depr_fa_coga_dpba, amort_intang_assets, lt_amort_deferred_exp, decr_deferred_exp, incr_acc_exp, loss_disp_fiolta, loss_scr_fa, loss_fv_chg, invest_loss, decr_def_inc_tax_assets, incr_def_inc_tax_liab, decr_inventories, decr_oper_payable, incr_oper_payable, others, im_net_cashflow_oper_act, conv_debt_into_cap, conv_copbonds_due_within_1y, fa_fnc_leases, im_n_incr_cash_equ, net_dism_capital_add, net_cash_rece_sec, credit_impa_loss, use_right_asset_dep, oth_loss_asset, end_bal_cash, beg_bal_cash, end_bal_cash_equ, beg_bal_cash_equ, update_flag dividend\uff08\u5206\u7ea2\uff09 ts_code, end_date, ann_date, div_proc, stk_div, stk_bo_rate, stk_co_rate, cash_div, cash_div_tax, record_date, ex_date, pay_date, div_listdate, imp_ann_date, base_date, base_share, update_flag fina_indicator\uff08\u8d22\u52a1\u6307\u6807\uff0c\u6309\u5b98\u65b9\u5168\u5b57\u6bb5\uff09 \u542b EPS\u3001DT_EPS\u3001EBIT/EBITDA\u3001\u5229\u6da6\u7387\u3001\u5468\u8f6c\u7387\u3001\u6760\u6746\u3001\u5b89\u5168\u6027\u3001\u5b63\u5ea6\u6307\u6807\u3001\u540c\u6bd4\u73af\u6bd4\u7b49\uff08\u8be6\u89c1\u4ee3\u7801\u4e2d\u7684 fi_fields \u5217\u8868\uff09 \u8bf4\u660e\uff1aFetcher \u5185\u90e8\u4ec5\u5c06\u201c\u4f30\u503c\u4e3b\u6d41\u7a0b\u6240\u9700\u5b57\u6bb5\u201d\u900f\u51fa\u5230 DataProcessor\uff0c\u5176\u5b83\u5b57\u6bb5\u4f5c\u4e3a\u589e\u5f3a\uff08\u5386\u53f2\u6458\u8981/\u8bca\u65ad/LLM \u63d0\u793a\u7b49\uff09\u3002\u82e5\u540e\u7eed\u4e3b\u6d41\u7a0b\u8981\u65b0\u589e\u6307\u6807\uff0c\u53ef\u76f4\u63a5\u5728 Fetcher \u7684\u5b57\u6bb5\u6e05\u5355\u4e2d\u6269\u5c55\u5e76\u5728 DataProcessor \u4e2d\u6d88\u8d39\u3002","title":"\u53d6\u6570\u5b57\u6bb5\u5168\u96c6\uff08\u6309\u63a5\u53e3\uff09"},{"location":"05_data_sources/tushare_alignment/#tushare-","text":"\u8bf4\u660e\uff1a\u4ee5\u4e0b\u4e3a\u5728 TushareAshareFetcher \u4e2d\u5efa\u8bae\u5b9e\u73b0\u7684\u7edf\u4e00\u6620\u5c04\u4e0e\u53e3\u5f84\uff0c\u786e\u4fdd\u4f20\u5165 DataProcessor \u7684 input_data \u4e0e\u73b0\u6709 Postgres \u6e90\u4fdd\u6301\u4e00\u81f4\uff1b\u540c\u65f6\u5229\u7528 Tushare \u7684\u9ad8\u65f6\u6548\u5b57\u6bb5\u8fdb\u884c\u589e\u5f3a\uff08\u4e0d\u6539\u53d8\u4f30\u503c\u4e3b\u6d41\u7a0b\uff0c\u53ea\u63d0\u5347\u201c\u6700\u65b0\u6027\u201d\uff09\u3002 \u57fa\u672c\u4fe1\u606f stock_basic\uff08\u2192 basic_info dict\uff09 ts_code \u2192 ts_code name \u2192 name\uff08\u5982\u542f\u7528 namechange \u53ef\u7528\u6700\u65b0\u540d\u4f5c\u4e3a\u589e\u5f3a\uff09 industry \u2192 industry market \u2192 market\uff08\u5982\u201c\u4e3b\u677f/\u79d1\u521b\u677f\u201d\u7b49\uff09 exchange \u2192 exchange\uff08SSE/SZSE\uff09 list_date \u2192 list_date\uff08YYYYMMDD \u4fdd\u5b58\uff1b\u5fc5\u8981\u65f6\u8f6c ISO\uff09 curr_type \u2192 currency\uff08\u82e5\u65e0\u5219 None\uff09 act_name/act_ent_type \u2192 act_name/act_ent_type\uff08\u82e5\u65e0\u5219 None\uff0c\u7531 DataProcessor \u8bbe\u9ed8\u8ba4\uff09 list_status\uff08\u65b0\u589e\u9ad8\u65f6\u6548\uff09\u2192 list_status\uff08L/D/P\uff09 delist_date\uff08\u65b0\u589e\u9ad8\u65f6\u6548\uff09\u2192 delist_date is_hs/hs_type\uff08\u65b0\u589e\u9ad8\u65f6\u6548\uff09\u2192 is_hs/hs_type\uff08\u6caa\u6df1\u6e2f\u901a\u4fe1\u606f\uff09 \u6bcf\u65e5\u884c\u60c5 daily\uff08\u2192 latest_price\uff09 trade_date \u2192 trade_date\uff08YYYYMMDD\uff1b\u53ef\u8f6c ISO\uff09 close \u2192 latest_price \u6bcf\u65e5\u6307\u6807 daily_basic\uff08\u2192 latest_metrics dict/\u8f85\u52a9\u8ba1\u7b97\uff09 pe_ttm \u2192 pe pb \u2192 pb total_mv\uff08\u4e07\u5143\uff09\u2192 total_mv_billion\uff08\u4ebf\u5143\uff0c=total_mv/1e4\uff09 circ_mv\uff08\u4e07\u5143\uff09\u2192 circ_mv_billion\uff08\u4ebf\u5143\uff0c=circ_mv/1e4\uff09 total_share\uff08\u4e07\u80a1\uff09\u2192 total_shares\uff08\u80a1\uff0c=total_share\u00d71e4\uff09 float_share\uff08\u4e07\u80a1\uff09\u2192 float_shares\uff08\u80a1\uff0c=float_share\u00d71e4\uff09 turnover_rate \u2192 turnover_rate\uff08\u53ef\u9009\u589e\u5f3a\uff09 \u5229\u6da6\u8868 income\uff08\u2192 input_data['income_statement'] DataFrame\uff09 end_date \u2192 end_date\uff08\u8f6c\u4e3a pd.Timestamp \uff09 end_type \u2192 end_type\uff08\u20181/2/3/4\u2019\uff09 update_flag \u2192 update_flag\uff08\u4f18\u5148\u53d6 \u20181\u2019 \u6b63\u5f0f\u7248\uff09 revenue \u2192 revenue total_revenue \u2192 total_revenue\uff08\u82e5\u7f3a\u5219 = revenue\uff09 oper_cost \u2192 oper_cost\uff08\u91d1\u878d\u884c\u4e1a\u53ef\u80fd\u4e3a NaN\uff0c\u5141\u8bb8\uff09 operate_profit \u2192 operate_profit\uff08\u7528\u4e8e EBIT\uff09 n_income \u2192 n_income rd_exp \u2192 rd_exp\uff08\u53ef\u9009\u589e\u5f3a\uff1b\u4e0d\u6539\u53d8\u4f30\u503c\u4e3b\u6d41\u7a0b\uff09 \u6307\u6807 fina_indicator\uff08\u5408\u5e76\u5230 income_statement\uff09 dt_eps \u6216 eps/basic_eps \u2192 diluted_eps\uff08\u4f18\u5148 dt_eps \u4f5c\u4e3a\u8fd1\u4f3c\u7a00\u91ca EPS\uff09 \u53ef\u9009\uff1aebit/ebitda\uff08\u82e5\u63d0\u4f9b\uff0c\u5219\u4f5c\u4e3a latest_actual_ebitda \u7684\u76f4\u63a5\u6765\u6e90\u589e\u5f3a\uff0c\u4e0d\u6539\u53d8\u4e3b\u6d41\u7a0b\uff09 \u8d44\u4ea7\u8d1f\u503a\u8868 balancesheet\uff08\u2192 input_data['balance_sheet'] DataFrame\uff09 end_date \u2192 end_date\uff08\u8f6c\u4e3a pd.Timestamp \uff09 inventories \u2192 inventories accounts_pay \u2192 accounts_pay prepayment \u2192 prepayment oth_cur_assets \u2192 oth_cur_assets contract_liab/adv_receipts \u2192 contract_liab/adv_receipts\uff08\u4f18\u5148 contract_liab\uff0c\u7f3a\u5931\u7528 adv_receipts\uff09 payroll_payable/taxes_payable/oth_payable \u2192 \u540c\u540d\u5217 st_borr/lt_borr/bond_payable/non_cur_liab_due_1y/money_cap \u2192 \u540c\u540d\u5217 total_cur_assets/total_cur_liab/total_liab \u2192 \u540c\u540d\u5217 total_assets/total_hldr_eqy_exc_min_int \u2192 \u540c\u540d\u5217\uff08\u53ef\u7528\u4e8e\u5386\u53f2\u6458\u8981\u5c55\u793a\uff09 minority_int/oth_eqt_tools_p_shr \u2192 \u540c\u540d\u5217\uff08\u80a1\u6743\u6865\u8ba1\u7b97\u4f7f\u7528\uff09 notes_receiv + accounts_receiv/acct_receiv \u2192 accounts_receiv_bill\uff08Fetcher \u805a\u5408\uff09 fix_assets_total\uff08\u82e5\u7f3a\u4ee5 fix_assets \u56de\u586b\uff09 \u2192 fix_assets_total\uff08\u7528\u4e8e\u5386\u53f2\u6458\u8981\u5c55\u793a\uff0c\u53ef\u9009\uff09 \u73b0\u91d1\u6d41\u91cf\u8868 cashflow\uff08\u2192 input_data['cash_flow'] DataFrame\uff09 end_date \u2192 end_date\uff08\u8f6c\u4e3a pd.Timestamp \uff09 depr_fa_coga_dpba \u2192 depr_fa_coga_dpba\uff08\u7528\u4e8e\u6784\u9020 EBITDA\uff09 n_cashflow_act/n_cashflow_inv_act/n_cashflow_fin_act \u2192 \u540c\u540d\u5217\uff08\u7528\u4e8e\u5386\u53f2\u6458\u8981\u5c55\u793a\uff0c\u53ef\u9009\uff09 \u5206\u7ea2 dividend\uff08\u2192 ttm_dividends_df\uff09 cash_div_tax \u2192 cash_div_tax\uff08\u6bcf\u80a1\u73b0\u91d1\u5206\u7ea2\uff08\u542b\u7a0e\uff09\uff09 \u82e5\u4ec5\u6709 cash_div \u2192 \u91cd\u547d\u540d\u4e3a cash_div_tax end_date / ann_date \u2192 end_date\uff08\u82e5\u7f3a end_date \u5219\u4f7f\u7528 ann_date\uff09 div_proc \u2192 div_proc\uff08\u9884\u6848/\u901a\u8fc7/\u5b9e\u65bd\uff0c\u4fbf\u4e8e\u6784\u5efa TTM \u72b6\u6001\u63d0\u793a\uff09","title":"\u5b57\u6bb5\u6620\u5c04\u5bf9\u7167\u8868\uff08Tushare -&gt; \u5185\u90e8\uff09"},{"location":"05_data_sources/tushare_alignment/#postgres-tushare","text":"\u57fa\u672c\u4fe1\u606f\uff1alist_status/delist_date/is_hs/hs_type/namechange\uff08\u5982\u542f\u7528\uff09 \u6bcf\u65e5\u6307\u6807\uff1ape_ttm/pb/total_mv/circ_mv/total_share/float_share\uff08\u6309\u4f30\u503c\u65e5\u83b7\u53d6\uff0c\u66ff\u6362\u539f\u5e93\u5feb\u7167\uff09 \u62a5\u8868\u7248\u672c\uff1a\u4f18\u5148 update_flag='1' \u7684\u6b63\u5f0f\u7248\u672c\uff1b\u7ed3\u5408 ann_date/f_ann_date \u4e0e end_type \u7cbe\u786e\u7b5b\u53d6\u6700\u65b0\u6709\u6548\u62a5\u8868 \u5206\u7ea2\u8fdb\u5ea6\uff1a\u901a\u8fc7 div_proc \u533a\u5206\u9884\u6848/\u901a\u8fc7/\u5b9e\u65bd\uff0c\u4f18\u5316 TTM \u80a1\u606f\u53e3\u5f84","title":"\u66f4\u9ad8\u65f6\u6548\u6027\u66ff\u6362\u70b9\uff08postgres \u2192 tushare\uff09"},{"location":"archived/","text":"\u5f52\u6863\u6587\u6863 \u672c\u76ee\u5f55\u5b58\u653e\u5df2\u8fc7\u65f6\u6216\u5185\u5bb9\u5df2\u6574\u5408\u7684\u5386\u53f2\u6587\u6863\uff0c\u4ec5\u4f9b\u5386\u53f2\u53c2\u8003\u3002 \u5f52\u6863\u6587\u6863\u5217\u8868 \ud83d\udccb \u4f18\u5316\u89c4\u5212\u6587\u6863\uff08\u5df2\u5b9e\u65bd\uff09 dcf_optimization_plan.md - DCF\u6a21\u578b\u4f18\u5316\u8ba1\u5212\uff08\u5185\u5bb9\u5df2\u5b9e\u73b0\uff09 directory_optimization_plan.md - \u76ee\u5f55\u7ed3\u6784\u4f18\u5316\uff08\u5df2\u5b8c\u6210\u91cd\u6784\uff09 \ud83d\udcca \u6807\u51c6\u5206\u6790\u6587\u6863\uff08\u5185\u5bb9\u91cd\u590d\uff09 dcf_industry_standards_comprehensive_analysis.md - DCF\u884c\u4e1a\u6807\u51c6\u5206\u6790 mckinsey_standards_compliance_report.md - \u9ea6\u80af\u9521\u6807\u51c6\u5408\u89c4\u62a5\u544a mckinsey_financial_ratios_and_forecasting_analysis.md - \u8d22\u52a1\u6bd4\u7387\u5206\u6790 \ud83d\udd04 \u4e1a\u52a1\u6d41\u7a0b\u6587\u6863\uff08\u5df2\u6574\u5408\uff09 dcf_rolling_revaluation_guide.md - \u6eda\u52a8\u4f30\u503c\u6307\u5357\uff08\u5df2\u96c6\u6210\u5230\u4e3b\u7cfb\u7edf\uff09 Stock_investment_decision_making_process.md - \u6295\u8d44\u51b3\u7b56\u6d41\u7a0b\u56fe \ud83d\udd27 API\u6587\u6863\uff08\u4f4d\u7f6e\u8c03\u6574\uff09 api_backend_comprehensive_analysis.md - API\u540e\u7aef\u5206\u6790\uff08\u5e94\u8003\u8651\u79fb\u81f3\u5176\u4ed6\u76ee\u5f55\uff09 \u5f52\u6863\u539f\u56e0 \u529f\u80fd\u5df2\u5b9e\u73b0 \u90e8\u5206\u6587\u6863\u4e2d\u63d0\u5230\u7684\u4f18\u5316\u5efa\u8bae\u548c\u529f\u80fd\u6539\u8fdb\u5df2\u7ecf\u5728\u7cfb\u7edf\u4e2d\u5b9e\u73b0\uff0c\u4e0d\u518d\u9700\u8981\u4f5c\u4e3a\u89c4\u5212\u6587\u6863\u3002 \u5185\u5bb9\u91cd\u590d \u591a\u4e2a\u6587\u6863\u6db5\u76d6\u76f8\u4f3c\u5185\u5bb9\uff0c\u9020\u6210\u7ef4\u62a4\u56f0\u96be\uff0c\u5df2\u5408\u5e76\u5230\u5176\u4ed6\u6587\u6863\u4e2d\u3002 \u4e1a\u52a1\u6574\u5408 \u67d0\u4e9b\u4e1a\u52a1\u6d41\u7a0b\u5df2\u7ecf\u6574\u5408\u5230\u7cfb\u7edf\u6838\u5fc3\u529f\u80fd\u4e2d\uff0c\u4e0d\u518d\u9700\u8981\u5355\u72ec\u7684\u6307\u5bfc\u6587\u6863\u3002 \u4f7f\u7528\u5efa\u8bae \u5386\u53f2\u53c2\u8003 \u8fd9\u4e9b\u6587\u6863\u4fdd\u7559\u4e86\u9879\u76ee\u53d1\u5c55\u7684\u5386\u53f2\u8f68\u8ff9\uff0c\u53ef\u4f5c\u4e3a\uff1a - \u51b3\u7b56\u8fc7\u7a0b\u53c2\u8003 - \u6280\u672f\u6f14\u8fdb\u8bb0\u5f55 - \u95ee\u9898\u89e3\u51b3\u601d\u8def \u6ce8\u610f\u4e8b\u9879 \u26a0\ufe0f \u8fd9\u4e9b\u6587\u6863\u53ef\u80fd\u5305\u542b\u8fc7\u65f6\u4fe1\u606f \u26a0\ufe0f \u4e0d\u5efa\u8bae\u76f4\u63a5\u7528\u4e8e\u5f53\u524d\u5f00\u53d1 \u26a0\ufe0f \u5982\u9700\u53c2\u8003\uff0c\u8bf7\u5bf9\u7167\u6700\u65b0\u6587\u6863\u9a8c\u8bc1 \u5b9a\u671f\u6e05\u7406 \u6e05\u7406\u7b56\u7565 \u6bcf\u534a\u5e74\u8bc4\u4f30\u5f52\u6863\u6587\u6863\u4ef7\u503c \u8d85\u8fc72\u5e74\u4e14\u65e0\u53c2\u8003\u4ef7\u503c\u7684\u6587\u6863\u53ef\u8003\u8651\u5220\u9664 \u4fdd\u7559\u5177\u6709\u91cd\u8981\u5386\u53f2\u4ef7\u503c\u7684\u51b3\u7b56\u6587\u6863 \u4e0b\u6b21\u6e05\u7406\u65f6\u95f4 \u5efa\u8bae\u5728 2025\u5e7412\u6708 \u8fdb\u884c\u4e0b\u4e00\u6b21\u5f52\u6863\u6587\u6863\u8bc4\u4f30","title":"\u5f52\u6863\u6587\u6863"},{"location":"archived/#_1","text":"\u672c\u76ee\u5f55\u5b58\u653e\u5df2\u8fc7\u65f6\u6216\u5185\u5bb9\u5df2\u6574\u5408\u7684\u5386\u53f2\u6587\u6863\uff0c\u4ec5\u4f9b\u5386\u53f2\u53c2\u8003\u3002","title":"\u5f52\u6863\u6587\u6863"},{"location":"archived/#_2","text":"","title":"\u5f52\u6863\u6587\u6863\u5217\u8868"},{"location":"archived/#_3","text":"dcf_optimization_plan.md - DCF\u6a21\u578b\u4f18\u5316\u8ba1\u5212\uff08\u5185\u5bb9\u5df2\u5b9e\u73b0\uff09 directory_optimization_plan.md - \u76ee\u5f55\u7ed3\u6784\u4f18\u5316\uff08\u5df2\u5b8c\u6210\u91cd\u6784\uff09","title":"\ud83d\udccb \u4f18\u5316\u89c4\u5212\u6587\u6863\uff08\u5df2\u5b9e\u65bd\uff09"},{"location":"archived/#_4","text":"dcf_industry_standards_comprehensive_analysis.md - DCF\u884c\u4e1a\u6807\u51c6\u5206\u6790 mckinsey_standards_compliance_report.md - \u9ea6\u80af\u9521\u6807\u51c6\u5408\u89c4\u62a5\u544a mckinsey_financial_ratios_and_forecasting_analysis.md - \u8d22\u52a1\u6bd4\u7387\u5206\u6790","title":"\ud83d\udcca \u6807\u51c6\u5206\u6790\u6587\u6863\uff08\u5185\u5bb9\u91cd\u590d\uff09"},{"location":"archived/#_5","text":"dcf_rolling_revaluation_guide.md - \u6eda\u52a8\u4f30\u503c\u6307\u5357\uff08\u5df2\u96c6\u6210\u5230\u4e3b\u7cfb\u7edf\uff09 Stock_investment_decision_making_process.md - \u6295\u8d44\u51b3\u7b56\u6d41\u7a0b\u56fe","title":"\ud83d\udd04 \u4e1a\u52a1\u6d41\u7a0b\u6587\u6863\uff08\u5df2\u6574\u5408\uff09"},{"location":"archived/#api","text":"api_backend_comprehensive_analysis.md - API\u540e\u7aef\u5206\u6790\uff08\u5e94\u8003\u8651\u79fb\u81f3\u5176\u4ed6\u76ee\u5f55\uff09","title":"\ud83d\udd27 API\u6587\u6863\uff08\u4f4d\u7f6e\u8c03\u6574\uff09"},{"location":"archived/#_6","text":"","title":"\u5f52\u6863\u539f\u56e0"},{"location":"archived/#_7","text":"\u90e8\u5206\u6587\u6863\u4e2d\u63d0\u5230\u7684\u4f18\u5316\u5efa\u8bae\u548c\u529f\u80fd\u6539\u8fdb\u5df2\u7ecf\u5728\u7cfb\u7edf\u4e2d\u5b9e\u73b0\uff0c\u4e0d\u518d\u9700\u8981\u4f5c\u4e3a\u89c4\u5212\u6587\u6863\u3002","title":"\u529f\u80fd\u5df2\u5b9e\u73b0"},{"location":"archived/#_8","text":"\u591a\u4e2a\u6587\u6863\u6db5\u76d6\u76f8\u4f3c\u5185\u5bb9\uff0c\u9020\u6210\u7ef4\u62a4\u56f0\u96be\uff0c\u5df2\u5408\u5e76\u5230\u5176\u4ed6\u6587\u6863\u4e2d\u3002","title":"\u5185\u5bb9\u91cd\u590d"},{"location":"archived/#_9","text":"\u67d0\u4e9b\u4e1a\u52a1\u6d41\u7a0b\u5df2\u7ecf\u6574\u5408\u5230\u7cfb\u7edf\u6838\u5fc3\u529f\u80fd\u4e2d\uff0c\u4e0d\u518d\u9700\u8981\u5355\u72ec\u7684\u6307\u5bfc\u6587\u6863\u3002","title":"\u4e1a\u52a1\u6574\u5408"},{"location":"archived/#_10","text":"","title":"\u4f7f\u7528\u5efa\u8bae"},{"location":"archived/#_11","text":"\u8fd9\u4e9b\u6587\u6863\u4fdd\u7559\u4e86\u9879\u76ee\u53d1\u5c55\u7684\u5386\u53f2\u8f68\u8ff9\uff0c\u53ef\u4f5c\u4e3a\uff1a - \u51b3\u7b56\u8fc7\u7a0b\u53c2\u8003 - \u6280\u672f\u6f14\u8fdb\u8bb0\u5f55 - \u95ee\u9898\u89e3\u51b3\u601d\u8def","title":"\u5386\u53f2\u53c2\u8003"},{"location":"archived/#_12","text":"\u26a0\ufe0f \u8fd9\u4e9b\u6587\u6863\u53ef\u80fd\u5305\u542b\u8fc7\u65f6\u4fe1\u606f \u26a0\ufe0f \u4e0d\u5efa\u8bae\u76f4\u63a5\u7528\u4e8e\u5f53\u524d\u5f00\u53d1 \u26a0\ufe0f \u5982\u9700\u53c2\u8003\uff0c\u8bf7\u5bf9\u7167\u6700\u65b0\u6587\u6863\u9a8c\u8bc1","title":"\u6ce8\u610f\u4e8b\u9879"},{"location":"archived/#_13","text":"","title":"\u5b9a\u671f\u6e05\u7406"},{"location":"archived/#_14","text":"\u6bcf\u534a\u5e74\u8bc4\u4f30\u5f52\u6863\u6587\u6863\u4ef7\u503c \u8d85\u8fc72\u5e74\u4e14\u65e0\u53c2\u8003\u4ef7\u503c\u7684\u6587\u6863\u53ef\u8003\u8651\u5220\u9664 \u4fdd\u7559\u5177\u6709\u91cd\u8981\u5386\u53f2\u4ef7\u503c\u7684\u51b3\u7b56\u6587\u6863","title":"\u6e05\u7406\u7b56\u7565"},{"location":"archived/#_15","text":"\u5efa\u8bae\u5728 2025\u5e7412\u6708 \u8fdb\u884c\u4e0b\u4e00\u6b21\u5f52\u6863\u6587\u6863\u8bc4\u4f30","title":"\u4e0b\u6b21\u6e05\u7406\u65f6\u95f4"},{"location":"archived/Stock_investment_decision_making_process/","text":"graph TD %% \u8d77\u59cb\u8282\u70b9 START([\u5f00\u59cb\u6295\u8d44\u51b3\u7b56]) --> MINDSET{\u6838\u5fc3\u6295\u8d44\u5fc3\u6cd5<br/>\u2713 \u786e\u5b9a\u6027\u4f18\u5148<br/>\u2713 \u6570\u636e\u4e3a\u738b<br/>\u2713 \u98ce\u63a7\u6838\u5fc3<br/>\u2713 \u8010\u5fc3\u7b49\u5f85} %% \u5e02\u573a\u73af\u5883\u5224\u65ad MINDSET --> ENV_CHECK{\u5e02\u573a\u73af\u5883\u5224\u65ad} %% \u4e09\u5927\u7b56\u7565\u5206\u652f ENV_CHECK -->|\u7cfb\u7edf\u6027\u5371\u673a<br/>\u6050\u614c\u6027\u66b4\u8dcc| CRISIS_STRATEGY[\ud83d\udd25 \u7cfb\u7edf\u6027\u5371\u673a\u7b56\u7565] ENV_CHECK -->|\u5e38\u89c4\u5e02\u573a\u73af\u5883| NORMAL_MARKET{\u5e38\u89c4\u5e02\u573a<br/>\u76ee\u6807\u9009\u62e9} NORMAL_MARKET -->|\u5bfb\u627e\u9ad8\u6210\u957f\u673a\u4f1a| GROWTH_STRATEGY[\ud83d\udcc8 \u9ad8\u6210\u957f\u7b56\u7565] NORMAL_MARKET -->|\u914d\u7f6e\u9632\u5fa1\u6027\u8d44\u4ea7<br/>\u6216\u5468\u671f\u6027\u673a\u4f1a| VALUE_STRATEGY[\ud83d\udcb0 \u9ad8\u80a1\u606f/\u84dd\u7b79\u7b56\u7565] %% :highlight[]:highlight[]:highlight[]:highlight[]:highlight[]:highlight[]:highlight[]:highlight[]:highlight[]:highlight[]:highlight[]:highlight[]=== %% \u7cfb\u7edf\u6027\u5371\u673a\u7b56\u7565\u5206\u652f\uff08\u65e0\u9700DCF\uff09 %% :highlight[]:highlight[]:highlight[]:highlight[]:highlight[]:highlight[]:highlight[]:highlight[]:highlight[]:highlight[]:highlight[]:highlight[]=== subgraph CRISIS_FLOW [\"\ud83d\udd25 \u7cfb\u7edf\u6027\u5371\u673a\u7b56\u7565\u6267\u884c\u6d41\u7a0b\"] CRISIS_STRATEGY --> C1{\u786e\u8ba4\u5371\u673a\u7279\u5f81} C1 -->|\u2713 \u5e02\u573a\u975e\u7406\u6027\u6050\u614c<br/>\u2713 \u5927\u76d8\u4ece\u9ad8\u70b9\u56de\u64a4>30%<br/>\u2713 \u6050\u614c\u6307\u6570\u6781\u9ad8| C2[\u76ee\u6807\u786e\u5b9a:<br/>\u5bbd\u57fa\u6307\u6570ETF<br/>\u6caa\u6df1300/\u4e2d\u8bc1500] C1 -->|\u4e0d\u7b26\u5408\u5371\u673a\u7279\u5f81| REJECT1[\u653e\u5f03] C2 --> C3[\ud83c\udfaf \u6267\u884c\u52a8\u4f5c:<br/>\u2022 \u52a0\u6760\u6746\u91cd\u4ed3ETF<br/>\u2022 \u4ed3\u4f4d\u53ef\u8fbe150%-200%<br/>\u2022 \u5206\u6279\u4e70\u5165\u964d\u4f4e\u6210\u672c] C3 --> C4[\ud83d\udcca \u76d1\u63a7\u9000\u51fa:<br/>\u2022 \u5e02\u573a\u60c5\u7eea\u4fee\u590d<br/>\u2022 \u6307\u6570\u53cd\u5f3920%+<br/>\u2022 \u786e\u5b9a\u6027\u6d88\u5931] C4 --> C5[\ud83d\udcb0 \u575a\u51b3\u51cf\u4ed3<br/>\u5f52\u8fd8\u6760\u6746\u8d44\u91d1] end %% :highlight[]:highlight[]:highlight[]:highlight[]:highlight[]:highlight[]:highlight[]:highlight[]:highlight[]:highlight[]:highlight[]:highlight[]=== %% \u9ad8\u6210\u957f\u7b56\u7565\u5206\u652f\uff08\u91cd\u70b9DCF\u5e94\u7528\u533a\u57df\uff09 %% :highlight[]:highlight[]:highlight[]:highlight[]:highlight[]:highlight[]:highlight[]:highlight[]:highlight[]:highlight[]:highlight[]:highlight[]=== subgraph GROWTH_FLOW [\"\ud83d\udcc8 \u9ad8\u6210\u957f\u7b56\u7565\u6267\u884c\u6d41\u7a0b - DCF\u589e\u5f3a\u7248\"] GROWTH_STRATEGY --> G1[\ud83d\udd0d \u81ea\u52a8\u5316\u521d\u7b5b] G1 --> G1A{\u7b5b\u9009\u6761\u4ef6<br/>\u2713 \u8425\u6536/\u5229\u6da6\u53cc\u589e\u957f<br/>\u2713 PEG\u6392\u540d\u9760\u524d<br/>\u2713 \u589e\u957f\u7387>20%} G1A -->|\u901a\u8fc7| G2[\u26a0\ufe0f \u98ce\u9669\u6392\u67e5] G1A -->|\u4e0d\u901a\u8fc7| REJECT2[\u653e\u5f03] G2 --> G2A{\u98ce\u9669\u6307\u6807\u68c0\u67e5<br/>\u2717 \u5546\u8a89/\u51c0\u8d44\u4ea7>30%<br/>\u2717 \u5e94\u6536/\u8425\u6536>30%<br/>\u2717 \u7ecf\u8425\u73b0\u91d1\u6d41\u6301\u7eed\u8d1f<br/>\u2717 \u5b58\u8d27\u5f02\u5e38\u589e\u957f} G2A -->|\u6709\u98ce\u9669| REJECT2 G2A -->|\u98ce\u9669\u53ef\u63a7| G3[\ud83d\udccb \u6df1\u5ea6\u8d22\u62a5\u5206\u6790] G3 --> G3A[\u4ece\u5de8\u6f6e\u8d44\u8baf\u7f51<br/>\u4e0b\u8f7d\u539f\u59cb\u8d22\u62a5] G3A --> G3B[\ud83d\udd0d \u8d44\u4ea7\u8d1f\u503a\u8868\u6392\u96f7<br/>\u91cd\u70b9\u68c0\u67e5:<br/>\u2022 \u5546\u8a89\u662f\u5426\u8fc7\u9ad8<br/>\u2022 \u5e94\u6536/\u9884\u4ed8/\u5b58\u8d27\u7ed3\u6784<br/>\u2022 \u8d1f\u503a\u7ed3\u6784\u5065\u5eb7\u5ea6] G3B --> G3C{\u6392\u96f7\u7ed3\u679c} G3C -->|\u53d1\u73b0\u91cd\u5927\u98ce\u9669| REJECT2 G3C -->|\u901a\u8fc7\u6392\u96f7| G4[\ud83d\udca1 \u76f8\u5bf9\u4f30\u503c\u5206\u6790] G4 --> G4A[PEG\u4f30\u503c\u6cd5<br/>\u2022 PEG < 1 \u4f18\u79c0<br/>\u2022 PEG < 1.5 \u5408\u7406<br/>\u2022 \u5bf9\u6bd4\u540c\u884c\u4e1aPEG] G4A --> G4B{PEG\u4f30\u503c\u5408\u7406?} G4B -->|\u4f30\u503c\u8fc7\u9ad8| REJECT2 G4B -->|\u4f30\u503c\u5408\u7406| DCF_VERIFY[\ud83d\udcbb DCF\u53cc\u91cd\u9a8c\u8bc1\u8282\u70b9] %% DCF\u9a8c\u8bc1\u6d41\u7a0b DCF_VERIFY --> DCF1[\u542f\u52a8DCF\u4e13\u4e1a\u8f6f\u4ef6<br/>\u8bbe\u5b9a\u4fdd\u5b88\u53c2\u6570:<br/>\u2022 \u589e\u957f\u7387=\u5386\u53f2\u5747\u503c\u00d770%<br/>\u2022 \u6298\u73b0\u7387=WACC+2%<br/>\u2022 \u6c38\u7eed\u589e\u957f\u7387=2-3%] DCF1 --> DCF2{DCF vs PEG\u4f30\u503c<br/>\u504f\u79bb\u7a0b\u5ea6?} DCF2 -->|\u5dee\u5f02<20%| DCF_PASS[\u9a8c\u8bc1\u901a\u8fc7<br/>\u589e\u5f3a\u6295\u8d44\u4fe1\u5fc3<br/>DCF\u6743\u91cd15%] DCF2 -->|\u5dee\u5f0220-30%| DCF_CAUTION[\u8c28\u614e\u9a8c\u8bc1<br/>\u63a7\u5236\u4ed3\u4f4d<br/>\u964d\u4f4e\u9884\u671f] DCF2 -->|\u5dee\u5f02>30%| DCF_REVIEW[\u91cd\u65b0\u5ba1\u89c6\u5047\u8bbe<br/>\u6216\u653e\u5f03\u6295\u8d44] DCF_PASS --> G5[\ud83d\udcdd \u5236\u5b9a\u4e70\u5165\u8ba1\u5212] DCF_CAUTION --> G5A[\ud83d\udcdd \u5236\u5b9a\u4fdd\u5b88\u4e70\u5165\u8ba1\u5212<br/>\u4ed3\u4f4d\u51cf\u534a] DCF_REVIEW --> REJECT2 G5 --> G5B[\u4ed3\u4f4d\u89c4\u5212:<br/>\u2022 \u5355\u80a1\u521d\u59cb\u4ed3\u4f4d<5%<br/>\u2022 \u5355\u884c\u4e1a\u603b\u4ed3\u4f4d<10%<br/>\u2022 \u6784\u5efa\u5206\u6563\u5316\u7ec4\u5408] G5A --> G5B G5B --> G6[\ud83c\udfaf \u6267\u884c\u4e70\u5165] G6 --> G7[\ud83d\udcca \u6301\u7eed\u8ddf\u8e2a + DCF\u52a8\u6001\u76d1\u63a7] %% \u6301\u4ed3\u8ddf\u8e2a\u4e2d\u7684DCF\u5e94\u7528 G7 --> G7A{\u5b63\u5ea6\u590d\u76d8\u68c0\u67e5<br/>\u2022 \u4e1a\u7ee9vs\u9884\u671f<br/>\u2022 \u589e\u957f\u903b\u8f91\u9a8c\u8bc1<br/>\u2022 DCF\u53c2\u6570\u66f4\u65b0} G7A -->|\u4e1a\u7ee9\u8d85\u9884\u671f| DCF_UPDATE_UP[\u4e0a\u8c03DCF\u53c2\u6570<br/>\u91cd\u65b0\u6d4b\u7b97\u76ee\u6807\u4ef7] G7A -->|\u4e1a\u7ee9\u7b26\u5408\u9884\u671f| DCF_MAINTAIN[\u7ef4\u6301DCF\u4f30\u503c<br/>\u786e\u8ba4\u6301\u4ed3\u5408\u7406\u6027] G7A -->|\u4e1a\u7ee9\u4f4e\u4e8e\u9884\u671f| DCF_UPDATE_DOWN[\u4e0b\u8c03DCF\u53c2\u6570<br/>\u8bc4\u4f30\u51cf\u4ed3\u9700\u8981] DCF_UPDATE_UP --> DCF_PRICE_CHECK{\u65b0DCF vs \u5f53\u524d\u80a1\u4ef7} DCF_MAINTAIN --> DCF_PRICE_CHECK DCF_UPDATE_DOWN --> DCF_PRICE_CHECK DCF_PRICE_CHECK -->|\u9ad8\u4f30>50%| G8[\ud83d\udd04 \u575a\u51b3\u51cf\u4ed3] DCF_PRICE_CHECK -->|\u5408\u7406\u00b120%| G7 DCF_PRICE_CHECK -->|\u4f4e\u4f30>30%| G11[\u8003\u8651\u52a0\u4ed3\u673a\u4f1a] DCF_PRICE_CHECK -->|\u57fa\u672c\u9762\u6076\u5316| G8 DCF_PRICE_CHECK -->|\u5355\u80a1\u4ed3\u4f4d>10%| G10[\u2696\ufe0f \u52a8\u6001\u5e73\u8861\u51cf\u4ed3] end %% :highlight[]:highlight[]:highlight[]:highlight[]:highlight[]:highlight[]:highlight[]:highlight[]:highlight[]:highlight[]:highlight[]:highlight[]=== %% \u9ad8\u80a1\u606f/\u84dd\u7b79\u7b56\u7565\u5206\u652f\uff08\u91cd\u70b9DCF\u5e94\u7528\u533a\u57df\uff09 %% :highlight[]:highlight[]:highlight[]:highlight[]:highlight[]:highlight[]:highlight[]:highlight[]:highlight[]:highlight[]:highlight[]:highlight[]=== subgraph VALUE_FLOW [\"\ud83d\udcb0 \u9ad8\u80a1\u606f/\u84dd\u7b79\u7b56\u7565\u6267\u884c\u6d41\u7a0b - DCF\u589e\u5f3a\u7248\"] VALUE_STRATEGY --> V1{\u76ee\u6807\u7c7b\u578b\u9009\u62e9} V1 -->|\u7a33\u5b9a\u5206\u7ea2\u9f99\u5934| V_DIVIDEND[\u9ad8\u80a1\u606f\u7b56\u7565] V1 -->|\u5468\u671f\u5e95\u90e8\u84dd\u7b79| V_CYCLICAL[\u5468\u671f\u4ef7\u503c\u7b56\u7565] %% \u9ad8\u80a1\u606f\u8def\u5f84 + DCF V_DIVIDEND --> VD1[\ud83c\udfaf \u7b5b\u9009\u6807\u51c6:<br/>\u2022 \u8fde\u7eed5\u5e74\u7a33\u5b9a\u5206\u7ea2<br/>\u2022 \u80a1\u606f\u7387>4%<br/>\u2022 \u5206\u7ea2\u738730%-70%<br/>\u2022 \u73b0\u91d1\u6d41\u7a33\u5b9a] VD1 --> VD_DCF[\ud83d\udcbb DCF\u80a1\u606f\u53ef\u6301\u7eed\u6027\u5206\u6790<br/>\u2022 \u91cd\u70b9\u9a8c\u8bc1\u672a\u67655\u5e74\u5206\u7ea2\u80fd\u529b<br/>\u2022 \u6d4b\u7b97\u80a1\u606f\u6298\u73b0\u4ef7\u503c<br/>\u2022 \u5206\u6790\u81ea\u7531\u73b0\u91d1\u6d41\u8986\u76d6\u5ea6] VD_DCF --> VD2{DCF\u80a1\u606f\u5206\u6790\u7ed3\u679c} VD2 -->|\u80a1\u606f\u53ef\u6301\u7eed\u6027\u5f3a| VD3[\ud83d\udcb0 \u4e70\u5165\u65f6\u673a\u786e\u8ba4<br/>\u9664\u6743\u540e\u80a1\u4ef7\u56de\u8c03<br/>\u80a1\u606f\u7387\u8fbe\u5386\u53f2\u9ad8\u4f4d] VD2 -->|\u80a1\u606f\u98ce\u9669\u8f83\u9ad8| REJECT3[\u653e\u5f03\u9ad8\u80a1\u606f\u7b56\u7565] VD3 --> VD4[\ud83d\udcc8 \u957f\u671f\u6301\u6709 + DCF\u76d1\u63a7<br/>\u5b63\u5ea6\u66f4\u65b0\u80a1\u606fDCF\u6a21\u578b] %% \u5468\u671f\u4ef7\u503c\u8def\u5f84 + DCF V_CYCLICAL --> VC1[\ud83c\udfaf \u7b5b\u9009\u6807\u51c6:<br/>\u2022 \u884c\u4e1a\u5904\u4e8e\u5468\u671f\u5e95\u90e8<br/>\u2022 PB\u5904\u4e8e\u5386\u53f2\u4f4e\u4f4d<br/>\u2022 \u8d44\u4ea7\u8d28\u91cf\u4f18\u826f<br/>\u2022 \u9f99\u5934\u5730\u4f4d\u7a33\u56fa] VC1 --> VC_DCF[\ud83d\udcbb DCF\u6b63\u5e38\u5316\u4ef7\u503c\u5206\u6790<br/>\u2022 \u4f7f\u7528\u5468\u671f\u4e2d\u6027\u76c8\u5229\u6c34\u5e73<br/>\u2022 \u7a7f\u8d8a\u5468\u671f\u770b\u5185\u5728\u4ef7\u503c<br/>\u2022 \u907f\u514d\u5468\u671f\u9876\u90e8/\u5e95\u90e8\u8bef\u5bfc] VC_DCF --> VC2{DCF\u6b63\u5e38\u5316\u4f30\u503c} VC2 -->|\u4ef7\u503c\u663e\u8457\u4f4e\u4f30| VC3[\u23f0 \u4e70\u5165\u65f6\u673a\u786e\u8ba4<br/>\u653f\u7b56\u5e95+\u5e02\u573a\u5e95<br/>\u884c\u4e1a\u62d0\u70b9\u4fe1\u53f7] VC2 -->|\u4ef7\u503c\u9ad8\u4f30\u6216\u4e0d\u786e\u5b9a| REJECT3 VC3 --> VC4[\ud83d\udd04 DCF\u52a8\u6001\u9000\u51fa\u76d1\u63a7<br/>PB\u4fee\u590dvs DCF\u76ee\u6807\u4ef7<br/>\u5e02\u573a\u98ce\u683c\u5207\u6362\u4fe1\u53f7] end %% :highlight[]:highlight[]:highlight[]:highlight[]:highlight[]:highlight[]:highlight[]:highlight[]:highlight[]:highlight[]:highlight[]:highlight[]=== %% DCF\u7279\u6b8a\u60c5\u51b5\u5e94\u7528\u8282\u70b9 %% :highlight[]:highlight[]:highlight[]:highlight[]:highlight[]:highlight[]:highlight[]:highlight[]:highlight[]:highlight[]:highlight[]:highlight[]=== subgraph DCF_SPECIAL [\"\ud83d\udcbb DCF\u7279\u6b8a\u60c5\u51b5\u5e94\u7528\"] SPECIAL_DCF[DCF\u7279\u6b8a\u60c5\u51b5\u542f\u52a8] SPECIAL_DCF --> SP1{\u7279\u6b8a\u60c5\u51b5\u7c7b\u578b} SP1 -->|\u8f6c\u578b\u516c\u53f8| SP_TRANSFORM[\u5206\u4e1a\u52a1DCF\u5efa\u6a21<br/>\u5206\u522b\u4f30\u503c\u540e\u5408\u5e76] SP1 -->|\u91cd\u5927\u91cd\u7ec4| SP_REORG[\u5254\u9664\u91cd\u7ec4\u524d\u4e1a\u52a1<br/>\u91cd\u5efaDCF\u6a21\u578b] SP1 -->|\u5206\u7ea2\u653f\u7b56\u53d8\u5316| SP_DIVIDEND[\u91cd\u4f30\u80a1\u606f\u4ef7\u503c<br/>\u5206\u6790\u6d3e\u606f\u6bd4\u4f8b\u5f71\u54cd] SP_TRANSFORM --> SP_RESULT[DCF\u7279\u6b8a\u5206\u6790\u7ed3\u679c] SP_REORG --> SP_RESULT SP_DIVIDEND --> SP_RESULT SP_RESULT --> INVESTMENT_DECISION{\u7efc\u5408\u51b3\u7b56} end %% :highlight[]:highlight[]:highlight[]:highlight[]:highlight[]:highlight[]:highlight[]:highlight[]:highlight[]:highlight[]:highlight[]:highlight[]=== %% DCF\u98ce\u9669\u9884\u8b66\u7cfb\u7edf %% :highlight[]:highlight[]:highlight[]:highlight[]:highlight[]:highlight[]:highlight[]:highlight[]:highlight[]:highlight[]:highlight[]:highlight[]=== subgraph DCF_WARNING [\"\u26a0\ufe0f DCF\u98ce\u9669\u9884\u8b66\u7cfb\u7edf\"] DCF_MONITOR[DCF\u6301\u4ed3\u76d1\u63a7] --> WARN_CHECK{DCF vs \u5e02\u4ef7\u504f\u79bb\u5ea6} WARN_CHECK -->|\u00b120%\u4ee5\u5185| WARN_GREEN[\ud83d\udfe2 \u7eff\u8272: \u6b63\u5e38\u6301\u6709] WARN_CHECK -->|\u9ad8\u4f3020-40%| WARN_YELLOW[\ud83d\udfe1 \u9ec4\u8272: \u5173\u6ce8\u57fa\u672c\u9762<br/>\u51c6\u5907\u51cf\u4ed3] WARN_CHECK -->|\u9ad8\u4f3040-60%| WARN_ORANGE[\ud83d\udfe0 \u6a59\u8272: \u5206\u6279\u51cf\u4ed3<br/>\u9501\u5b9a\u90e8\u5206\u5229\u6da6] WARN_CHECK -->|\u9ad8\u4f30>60%| WARN_RED[\ud83d\udd34 \u7ea2\u8272: \u5927\u5e45\u51cf\u4ed3<br/>\u6216\u6e05\u4ed3] WARN_CHECK -->|\u4f4e\u4f30>30%| WARN_BLUE[\ud83d\udd35 \u84dd\u8272: \u8bc4\u4f30\u57fa\u672c\u9762<br/>\u8003\u8651\u52a0\u4ed3] WARN_GREEN --> DCF_MONITOR WARN_YELLOW --> POSITION_ADJUST[\u4ed3\u4f4d\u8c03\u6574\u6267\u884c] WARN_ORANGE --> POSITION_ADJUST WARN_RED --> POSITION_ADJUST WARN_BLUE --> POSITION_ADJUST end %% :highlight[]:highlight[]:highlight[]:highlight[]:highlight[]:highlight[]:highlight[]:highlight[]:highlight[]:highlight[]:highlight[]:highlight[]=== %% \u901a\u7528\u98ce\u63a7\u4e0e\u9000\u51fa %% :highlight[]:highlight[]:highlight[]:highlight[]:highlight[]:highlight[]:highlight[]:highlight[]:highlight[]:highlight[]:highlight[]:highlight[]=== subgraph RISK_CONTROL [\"\u26a0\ufe0f \u901a\u7528\u98ce\u63a7\u4f53\u7cfb\"] RC1[\ud83d\udea8 \u5f3a\u5236\u6b62\u635f\u6761\u4ef6<br/>\u2022 \u57fa\u672c\u9762\u4e0d\u53ef\u9006\u6076\u5316<br/>\u2022 \u8d22\u52a1\u9020\u5047\u88ab\u53d1\u73b0<br/>\u2022 DCF\u4e0e\u57fa\u672c\u9762\u957f\u671f\u80cc\u79bb] RC2[\ud83d\udcca \u4ed3\u4f4d\u7ba1\u7406\u539f\u5219<br/>\u2022 \u603b\u4ed3\u4f4d\u6839\u636e\u5e02\u573a\u73af\u5883\u8c03\u6574<br/>\u2022 DCF\u9884\u8b66\u7cfb\u7edf\u8f85\u52a9\u51b3\u7b56<br/>\u2022 \u5355\u884c\u4e1a<10%\uff0c\u5355\u80a1<5%\u521d\u59cb] RC3[\ud83d\udd04 \u5b9a\u671f\u590d\u76d8\u673a\u5236<br/>\u2022 \u6bcf\u5b63\u5ea6DCF\u53c2\u6570\u66f4\u65b0<br/>\u2022 \u6bcf\u6708DCF\u9884\u8b66\u68c0\u67e5<br/>\u2022 \u8ddf\u8e2a\u9ad8\u9891\u8fd0\u8425\u6570\u636e] end %% :highlight[]:highlight[]:highlight[]:highlight[]:highlight[]:highlight[]:highlight[]:highlight[]:highlight[]:highlight[]:highlight[]:highlight[]=== %% \u8fde\u63a5\u5173\u7cfb %% :highlight[]:highlight[]:highlight[]:highlight[]:highlight[]:highlight[]:highlight[]:highlight[]:highlight[]:highlight[]:highlight[]:highlight[]=== G8 --> RC1 G10 --> RC2 G11 --> RC2 VD4 --> DCF_MONITOR VC4 --> DCF_MONITOR C5 --> RC2 POSITION_ADJUST --> RC2 %% \u7279\u6b8a\u60c5\u51b5\u8fde\u63a5 G7A -.->|\u9047\u5230\u7279\u6b8a\u60c5\u51b5| SPECIAL_DCF VD4 -.->|\u5206\u7ea2\u653f\u7b56\u53d8\u5316| SPECIAL_DCF INVESTMENT_DECISION --> G7 %% \u6700\u7ec8\u7ed3\u679c RC1 --> FINAL_EXIT[\u6295\u8d44\u7ed3\u675f] RC2 --> FINAL_EXIT RC3 --> MINDSET REJECT1 --> MINDSET REJECT2 --> MINDSET REJECT3 --> MINDSET %% :highlight[]:highlight[]:highlight[]:highlight[]:highlight[]:highlight[]:highlight[]:highlight[]:highlight[]:highlight[]:highlight[]:highlight[]=== %% \u6837\u5f0f\u5b9a\u4e49 %% :highlight[]:highlight[]:highlight[]:highlight[]:highlight[]:highlight[]:highlight[]:highlight[]:highlight[]:highlight[]:highlight[]:highlight[]=== classDef startNode fill:#e1f5fe,stroke:#01579b,stroke-width:3px classDef strategyNode fill:#f3e5f5,stroke:#4a148c,stroke-width:2px classDef actionNode fill:#e8f5e8,stroke:#1b5e20,stroke-width:2px classDef dcfNode fill:#fff3e0,stroke:#e65100,stroke-width:2px classDef riskNode fill:#ffebee,stroke:#b71c1c,stroke-width:2px classDef rejectNode fill:#fafafa,stroke:#424242,stroke-width:2px classDef warningNode fill:#f1f8e9,stroke:#33691e,stroke-width:2px class START startNode class CRISIS_STRATEGY,GROWTH_STRATEGY,VALUE_STRATEGY strategyNode class G6,C3,VD3,VC3 actionNode class DCF_VERIFY,DCF1,DCF2,VD_DCF,VC_DCF,DCF_MONITOR,SPECIAL_DCF dcfNode class RC1,RC2,RC3 riskNode class REJECT1,REJECT2,REJECT3,FINAL_EXIT rejectNode class WARN_GREEN,WARN_YELLOW,WARN_ORANGE,WARN_RED,WARN_BLUE warningNode","title":"Stock investment decision making process"},{"location":"archived/api_backend_comprehensive_analysis/","text":"Stock Valuation API \u540e\u7aef\u63a5\u53e3\u8be6\u7ec6\u5206\u6790\u6587\u6863 \u6700\u540e\u66f4\u65b0: 2025-09-22 \ud83d\udccb \u76ee\u5f55 API\u6982\u89c8 \u63a5\u53e3\u8be6\u60c5 1. \u6839\u8def\u5f84\u63a5\u53e3 2. \u80a1\u7968\u4f30\u503c\u63a5\u53e3 3. \u654f\u611f\u6027\u5206\u6790\u63a5\u53e3 4. \u80a1\u7968\u7b5b\u9009\u63a5\u53e3 \u6570\u636e\u6a21\u578b \u9519\u8bef\u5904\u7406 \u90e8\u7f72\u548c\u6d4b\u8bd5 \u4f7f\u7528\u793a\u4f8b \u6700\u65b0\u66f4\u65b0\u8bb0\u5f55 \ud83c\udf10 API\u6982\u89c8 \u57fa\u672c\u4fe1\u606f \u670d\u52a1\u540d\u79f0 : Stock Valuation API \u7248\u672c : 3.0.0 \u6846\u67b6 : FastAPI \u7aef\u53e3 : 8124 \u534f\u8bae : HTTP/HTTPS \u6570\u636e\u683c\u5f0f : JSON \u6570\u636e\u6e90 : TuShare(\u4e3b\u8981) + PostgreSQL(\u9a8c\u8bc1) \u6838\u5fc3\u529f\u80fd DCF\u4f30\u503c\u8ba1\u7b97 : \u57fa\u4e8e\u6298\u73b0\u73b0\u91d1\u6d41\u7684\u4f01\u4e1a\u4f30\u503c\u5206\u6790\uff0c\u652f\u6301\u9000\u51fa\u500d\u6570\u6cd5\u548c\u6c38\u7eed\u589e\u957f\u6cd5 \u654f\u611f\u6027\u5206\u6790 : \u591a\u7ef4\u5ea6\u53c2\u6570\u654f\u611f\u6027\u5206\u6790\uff0c\u751f\u6210sensitivity table \u80a1\u7968\u7b5b\u9009 : \u57fa\u4e8e\u8d22\u52a1\u6307\u6807\u7684\u591a\u6761\u4ef6\u80a1\u7968\u7b5b\u9009\u5668 LLM\u667a\u80fd\u5206\u6790 : \u96c6\u6210DeepSeek/OpenAI\u517c\u5bb9\u6a21\u578b\u751f\u6210\u6295\u8d44\u5206\u6790\u62a5\u544a LTM\u57fa\u7ebf : \u652f\u6301Last Twelve Months\u6536\u5165\u57fa\u671f\uff0c\u63d0\u5347\u65f6\u6548\u6027 LLM\u667a\u80fd\u5206\u6790 : \u96c6\u6210\u5927\u8bed\u8a00\u6a21\u578b\u7684\u6295\u8d44\u5efa\u8bae \u6570\u636e\u7ba1\u7406 : \u80a1\u7968\u57fa\u672c\u4fe1\u606f\u548c\u884c\u60c5\u6570\u636e\u66f4\u65b0 \u80a1\u7968\u7b5b\u9009 : \u57fa\u4e8e\u8d22\u52a1\u6307\u6807\u7684\u80a1\u7968\u7b5b\u9009\u5668 \u6280\u672f\u67b6\u6784 FastAPI App \u251c\u2500\u2500 CORS Middleware (\u8de8\u57df\u652f\u6301) \u251c\u2500\u2500 Routes (\u8def\u7531\u5c42) \u2502 \u251c\u2500\u2500 Main Routes (\u4e3b\u8981\u4e1a\u52a1\u63a5\u53e3) \u2502 \u251c\u2500\u2500 Data Update Routes (\u6570\u636e\u66f4\u65b0\u63a5\u53e3) \u2502 \u2514\u2500\u2500 Stock Screener Routes (\u80a1\u7968\u7b5b\u9009\u63a5\u53e3) \u251c\u2500\u2500 Services (\u4e1a\u52a1\u670d\u52a1\u5c42) \u2502 \u251c\u2500\u2500 ValuationService (\u4f30\u503c\u670d\u52a1) \u2502 \u251c\u2500\u2500 DataProcessor (\u6570\u636e\u5904\u7406\u670d\u52a1) \u2502 \u2514\u2500\u2500 LLM Utils (LLM\u8c03\u7528\u5de5\u5177) \u251c\u2500\u2500 Core Calculators (\u6838\u5fc3\u8ba1\u7b97\u5668) \u2502 \u251c\u2500\u2500 WACC Calculator (\u8d44\u672c\u6210\u672c\u8ba1\u7b97) \u2502 \u251c\u2500\u2500 DCF Calculators (DCF\u8ba1\u7b97\u5668\u96c6\u7fa4) \u2502 \u2514\u2500\u2500 Financial Forecaster (\u8d22\u52a1\u9884\u6d4b\u5668) \u2514\u2500\u2500 Data Layer (\u6570\u636e\u5c42) \u251c\u2500\u2500 AshareDataFetcher (\u6570\u636e\u83b7\u53d6\u5668) \u2514\u2500\u2500 PostgreSQL (\u6570\u636e\u5e93) 2025-09-10 \u53d8\u66f4\u8981\u70b9\uff08\u65b0\u589e/\u8c03\u6574\u5b57\u6bb5\u4e0e\u884c\u4e3a\uff09 \u8bf7\u6c42\u65b0\u589e/\u5f3a\u8c03 industry_preset_key \uff1a\u884c\u4e1a\u6a21\u677f\u952e\uff08\u6a21\u677f\u52a0\u8f7d\uff0c\u4e0d\u9650\u7f16\u8f91\uff09 use_gdp_cap / gdp_nominal_cap \uff1a\u540d\u4e49 GDP \u4e0a\u9650\u63a7\u5236\uff08PGR clamp\uff09 ltm_baseline_enabled \uff1a\u542f\u7528 LTM/Interim \u7ecf\u8425\u57fa\u671f \u54cd\u5e94\u65b0\u589e\uff08StockBasicInfoModel\uff09 latest_price_as_of_date \uff1a\u4ef7\u683c as-of\uff08trade_date \u2264 \u4f30\u503c\u65e5\uff09 eps_annual_as_of_year \uff1aEPS\uff08\u5e74\u62a5\uff09\u5e74\u4efd\uff08end_date \u2264 \u4f30\u503c\u65e5\uff09 ttm_dps_source \uff1aTTM \u80a1\u606f\u6765\u6e90\uff08implemented/proposal/latest_annual\uff09 ttm_window_start / ttm_window_end \uff1aTTM \u7a97\u53e3\uff08\u82e5\u9002\u7528\uff09 \u54cd\u5e94 Debug\uff08ValuationResultsContainer.debug_request_slice\uff09 baseline_debug \uff1aAnnual/LTM \u6a21\u5f0f\u4e0e LTM \u7ec4\u6210 applied_preset \u4e0e applied_preset_diff \uff1a\u5df2\u5e94\u7528\u884c\u4e1a\u6a21\u677f\u4e0e\u504f\u79bb\u60c5\u51b5\uff08within/warn/alert\uff09 \u7ec8\u503c\u4e0e\u9690\u542b\u6307\u6807 \u6c38\u7eed\u589e\u957f\uff1a\u6309 min(pg_rate, GDP_cap) \u5939\u6301\uff08\u6765\u6e90\u63d0\u793a\uff09 \u9000\u51fa\u4e58\u6570\uff1a\u8ba1\u7b97\u9690\u542b PGR \u5e76\u4e0e GDP \u4e0a\u9650\u5bf9\u6bd4\u63d0\u793a \u6570\u636e\u5c42\u884c\u4e3a \u6700\u65b0\u4ef7\u683c\u6309\u4f30\u503c\u65e5\u56de\u9000\uff08 trade_date \u2264 \u4f30\u503c\u65e5 \uff09 \u80a1\u606f TTM\uff1a\u5b9e\u65bd/\u5b8c\u6210 \u2192 \u65e0\u5219 TTM\u00b7\u9884\u6848 \u2192 \u4ecd\u65e0\u5219 \u5e74\u5ea6\u6700\u8fd1\u4e00\u6b21 2025-09-11 \u53d8\u66f4\u8981\u70b9\uff08\u654f\u611f\u6027\u4e0e\u7a33\u5065\u6027\u589e\u5f3a\uff09 \u654f\u611f\u6027\u8f93\u51fa\u6269\u5c55 \u65b0\u589e result_tables.ev_ebitda_terminal \uff1a\u57fa\u4e8e\u201c\u672b\u671f\u9884\u6d4b EBITDA\u201d\u7684 EV/EBITDA\uff08\u4e0e LTM \u53e3\u5f84\u533a\u5206\uff09\u3002 \u65b0\u589e result_tables.implied_pgr \uff1a\u5f53\u91c7\u7528\u9000\u51fa\u4e58\u6570\u6cd5\u65f6\uff0c\u9010\u683c\u8ba1\u7b97\u9690\u542b\u6c38\u7eed\u589e\u957f\u7387 g = (TV*WACC \u2212 FCF_T) / (TV + FCF_T) \u3002 result_tables.dcf_implied_pe \u652f\u6301\u6309\u683c\u56de\u9000\uff1a\u82e5\u5355\u5143\u683c\u672a\u8fd4\u56de dcf_implied_diluted_pe \uff0c\u5c06\u7528\u57fa\u51c6 EPS\uff08\u6700\u8fd1\u5e74\u62a5\uff09\u548c\u8be5\u683c\u6bcf\u80a1\u4ef7\u503c\u8ba1\u7b97\u56de\u586b\u3002 \u7269\u7406\u53ef\u884c\u6027\u7ea6\u675f \u5f53\u5355\u5143\u683c\u91c7\u7528\u6c38\u7eed\u589e\u957f\u6cd5\u4e14 g \u2265 WACC \u65f6\u76f4\u63a5\u8df3\u8fc7\u8ba1\u7b97\uff0c\u5355\u5143\u683c\u7f6e\u4e3a null \uff0c\u540c\u65f6\u5728 data_warnings \u4e2d\u8ffd\u52a0\u63d0\u793a\u3002 WACC \u8ba1\u7b97\u7a33\u5065\u6027 \u5f53 wacc_weight_mode = market \u4e14\u5e02\u573a\u6743\u91cd\u8def\u5f84\u5931\u8d25\u65f6\uff0c\u81ea\u52a8\u56de\u9000\u81f3 target \u6743\u91cd\u5e76\u8bb0\u5f55\u8b66\u544a\uff0c\u4e0d\u518d\u5bfc\u81f4 500\u3002 \u6587\u6863\u6f84\u6e05 \u660e\u786e\u533a\u5206 result_tables.ev_ebitda \uff08LTM \u53e3\u5f84\uff09\u4e0e result_tables.ev_ebitda_terminal \uff08\u672b\u671f\u53e3\u5f84\uff09\uff1b\u9ed8\u8ba4\u7ee7\u7eed\u8f93\u51fa LTM \u4ee5\u4fbf\u5bf9\u6807\u73b0\u5b9e\u53e3\u5f84\uff0c\u672b\u671f\u53e3\u5f84\u4e3a\u8865\u5145\u8868\u3002 \u8f74\u518d\u751f\u7b56\u7565\uff1aWACC \u8f74\u5728\u63d0\u4f9b step+points \u65f6\u603b\u662f\u56f4\u7ed5\u57fa\u51c6\u518d\u751f\uff1b\u5176\u4ed6\u8f74\u4ec5\u5728 values \u7a7a\u4e14\u63d0\u4f9b step+points \u65f6\u518d\u751f\uff08\u540e\u7eed\u53ef\u7edf\u4e00\uff09\u3002 \ud83d\udd17 \u63a5\u53e3\u8be6\u60c5 1. \u6839\u8def\u5f84\u63a5\u53e3 GET / \u63a5\u53e3\u63cf\u8ff0 : API\u5065\u5eb7\u68c0\u67e5\u548c\u57fa\u672c\u4fe1\u606f \u8bf7\u6c42\u53c2\u6570 : \u65e0 \u54cd\u5e94\u683c\u5f0f : { \"message\": \"Welcome to the Stock Valuation API (Streamlit Backend)\" } \u6ce8\uff08\u53e3\u5f84\u8bf4\u660e\uff0c2025-09-10 \u66f4\u65b0\uff09\uff1a - LTM/\u57fa\u671f\u6536\u5165\u9009\u62e9\u7edf\u4e00\u201c\u4f18\u5148\u8425\u4e1a\u6536\u5165 revenue\uff0c\u56de\u9000 total_revenue\u201d\u3002 - baseline_debug \u4e2d\u4ecd\u4fdd\u7559 ytd_curr_total_revenue \u3001 ytd_prev_total_revenue \u3001 prev_annual_total_revenue \u7b49\u5b57\u6bb5\u4ee5\u4fbf\u5ba1\u8ba1\uff1b\u4f46\u5b9e\u9645\u7528\u4e8e\u57fa\u671f\u9009\u62e9\u7684\u4f18\u5148\u7ea7\u4e3a revenue \u5bf9\u5e94\u5b57\u6bb5\uff0c\u5176\u6b21\u624d\u662f total_revenue \u5bf9\u5e94\u5b57\u6bb5\u3002 \u72b6\u6001\u7801 : - 200 : \u6210\u529f \u4f7f\u7528\u573a\u666f : - API\u5065\u5eb7\u68c0\u67e5 - \u670d\u52a1\u53ef\u7528\u6027\u9a8c\u8bc1 2. \u80a1\u7968\u4f30\u503c\u63a5\u53e3 POST /api/v1/valuation \u63a5\u53e3\u63cf\u8ff0 : \u8ba1\u7b97\u80a1\u7968DCF\u4f30\u503c\uff0c\u652f\u6301\u654f\u611f\u6027\u5206\u6790\u548cLLM\u667a\u80fd\u5206\u6790 \u8bf7\u6c42\u6a21\u578b : StockValuationRequest \u8bf7\u6c42\u53c2\u6570\u8be6\u89e3 : \u57fa\u7840\u53c2\u6570 \u53c2\u6570\u540d \u7c7b\u578b \u5fc5\u586b \u9ed8\u8ba4\u503c \u8bf4\u660e \u7ea6\u675f\u6761\u4ef6 \u793a\u4f8b ts_code string \u662f \u65e0 \u80a1\u7968\u4ee3\u7801 \u7b26\u5408A\u80a1\u683c\u5f0f(6\u6570\u5b57.SH/SZ) \"600519.SH\" market string \u5426 \"A\" \u5e02\u573a\u6807\u8bc6 \u679a\u4e3e\u503c: \"A\", \"HK\" \"A\" valuation_date string \u5426 \u6700\u65b0\u65e5\u671f \u4f30\u503c\u57fa\u51c6\u65e5\u671f YYYY-MM-DD\u683c\u5f0f \"2024-12-31\" ltm_baseline_enabled bool \u5426 false \u662f\u5426\u4f7f\u7528LTM/Interim\u57fa\u671f \u5e03\u5c14\u503c true, false DCF\u6838\u5fc3\u5047\u8bbe\u53c2\u6570 \u53c2\u6570\u540d \u7c7b\u578b \u5fc5\u586b \u9ed8\u8ba4\u503c \u8bf4\u660e \u7ea6\u675f\u6761\u4ef6 \u793a\u4f8b forecast_years int \u5426 5 \u9884\u6d4b\u671f\u5e74\u6570 1-20\u5e74\u6574\u6570 5, 10, 15 cagr_decay_rate float \u5426 \u7cfb\u7edf\u8ba1\u7b97 \u5386\u53f2CAGR\u5e74\u8870\u51cf\u7387 0-1\u4e4b\u95f4 0.1, 0.2 op_margin_forecast_mode string \u5426 \"historical_median\" \u8425\u4e1a\u5229\u6da6\u7387\u9884\u6d4b\u6a21\u5f0f \u679a\u4e3e\u503c: \"historical_median\", \"transition_to_target\" \"historical_median\" target_operating_margin float \u5426 \u65e0 \u76ee\u6807\u8425\u4e1a\u5229\u6da6\u7387 0-1\u4e4b\u95f4\uff0ctransition\u6a21\u5f0f\u5fc5\u9700 0.25, 0.30 op_margin_transition_years int \u5426 \u65e0 \u5229\u6da6\u7387\u8fc7\u6e21\u5e74\u6570 >=1\uff0ctransition\u6a21\u5f0f\u5fc5\u9700 3, 5 WACC\u8ba1\u7b97\u53c2\u6570 \u53c2\u6570\u540d \u7c7b\u578b \u5fc5\u586b \u9ed8\u8ba4\u503c \u8bf4\u660e \u7ea6\u675f\u6761\u4ef6 \u793a\u4f8b wacc_weight_mode string \u5426 \"target\" WACC\u6743\u91cd\u8ba1\u7b97\u6a21\u5f0f \u6b63\u5219: ^(target\\|market)$ \"target\" target_debt_ratio float \u5426 \u7cfb\u7edf\u9ed8\u8ba4 \u76ee\u6807\u503a\u52a1\u6bd4\u4f8b 0-1\u4e4b\u95f4\uff0ctarget\u6a21\u5f0f\u5fc5\u9700 0.3, 0.4 cost_of_debt float \u5426 \u7cfb\u7edf\u9ed8\u8ba4 \u7a0e\u524d\u503a\u52a1\u6210\u672c >=0 0.05, 0.08 risk_free_rate float \u5426 \u7cfb\u7edf\u9ed8\u8ba4 \u65e0\u98ce\u9669\u5229\u7387 >=0 0.03, 0.035 beta float \u5426 \u7cfb\u7edf\u9ed8\u8ba4 \u8d1d\u5854\u7cfb\u6570 \u4efb\u610f\u5b9e\u6570 1.2, 0.8 market_risk_premium float \u5426 \u7cfb\u7edf\u9ed8\u8ba4 \u5e02\u573a\u98ce\u9669\u6ea2\u4ef7 >=0 0.05, 0.06 size_premium float \u5426 \u7cfb\u7edf\u9ed8\u8ba4 \u89c4\u6a21\u6ea2\u4ef7 \u4efb\u610f\u5b9e\u6570 0.02, -0.01 \u7ec8\u503c\u8ba1\u7b97\u53c2\u6570 \u53c2\u6570\u540d \u7c7b\u578b \u5fc5\u586b \u9ed8\u8ba4\u503c \u8bf4\u660e \u7ea6\u675f\u6761\u4ef6 \u793a\u4f8b terminal_value_method string \u5426 \"exit_multiple\" \u7ec8\u503c\u8ba1\u7b97\u65b9\u6cd5 \u679a\u4e3e\u503c: \"exit_multiple\", \"perpetual_growth\" \"exit_multiple\" exit_multiple float \u5426 \u7cfb\u7edf\u9ed8\u8ba4 \u9000\u51fa\u4e58\u6570 >=0\uff0cexit_multiple\u6a21\u5f0f\u5fc5\u9700 15.0, 18.0 perpetual_growth_rate float \u5426 \u7cfb\u7edf\u9ed8\u8ba4 \u6c38\u7eed\u589e\u957f\u7387 >=0\uff0cperpetual_growth\u6a21\u5f0f\u5fc5\u9700 0.03, 0.035 LLM\u63a7\u5236\u53c2\u6570 \u53c2\u6570\u540d \u7c7b\u578b \u5fc5\u586b \u9ed8\u8ba4\u503c \u8bf4\u660e \u7ea6\u675f\u6761\u4ef6 \u793a\u4f8b request_llm_summary bool \u5426 false \u662f\u5426\u8bf7\u6c42LLM\u5206\u6790 \u5e03\u5c14\u503c true, false llm_provider string \u5426 \u7cfb\u7edf\u9ed8\u8ba4 LLM\u63d0\u4f9b\u5546 \u5b57\u7b26\u4e32 \"deepseek\", \"openai\" llm_model_id string \u5426 \u7cfb\u7edf\u9ed8\u8ba4 LLM\u6a21\u578bID \u5b57\u7b26\u4e32 \"deepseek-chat\", \"gpt-4\" llm_api_base_url string \u5426 \u7cfb\u7edf\u9ed8\u8ba4 \u81ea\u5b9a\u4e49API\u5730\u5740 URL\u683c\u5f0f \"https://api.deepseek.com\" llm_temperature float \u5426 0.7 \u751f\u6210\u6e29\u5ea6\u53c2\u6570 0.0-2.0\u4e4b\u95f4 0.5, 1.0, 1.5 llm_top_p float \u5426 0.9 Top-P\u53c2\u6570 0.0-1.0\u4e4b\u95f4 0.8, 0.95 llm_max_tokens int \u5426 4000 \u6700\u5927Token\u6570 >=1 2000, 4096 \u654f\u611f\u6027\u5206\u6790\u53c2\u6570 \u53c2\u6570\u540d \u7c7b\u578b \u5fc5\u586b \u8bf4\u660e \u7ea6\u675f\u6761\u4ef6 sensitivity_analysis SensitivityAnalysisRequest \u5426 \u654f\u611f\u6027\u5206\u6790\u914d\u7f6e \u590d\u6742\u5bf9\u8c61\u7ed3\u6784 \u8be6\u7ec6\u8bf7\u6c42\u4f53\u793a\u4f8b : 1. \u57fa\u7840\u4f30\u503c\u8bf7\u6c42 { \"ts_code\": \"600519.SH\", \"forecast_years\": 5, \"request_llm_summary\": false, \"ltm_baseline_enabled\": false } 2. \u5b8c\u6574\u53c2\u6570\u8bf7\u6c42\uff08\u5305\u542b\u6240\u6709\u7ea6\u675f\u6761\u4ef6\u793a\u4f8b\uff09 { \"ts_code\": \"600519.SH\", \"market\": \"A\", \"valuation_date\": \"2024-12-31\", \"forecast_years\": 10, \"cagr_decay_rate\": 0.15, \"op_margin_forecast_mode\": \"transition_to_target\", \"target_operating_margin\": 0.30, \"op_margin_transition_years\": 5, \"wacc_weight_mode\": \"target\", \"target_debt_ratio\": 0.35, \"cost_of_debt\": 0.045, \"risk_free_rate\": 0.03, \"beta\": 1.1, \"market_risk_premium\": 0.055, \"size_premium\": 0.015, \"terminal_value_method\": \"exit_multiple\", \"exit_multiple\": 16.5, \"ltm_baseline_enabled\": true, \"request_llm_summary\": true, \"llm_provider\": \"deepseek\", \"llm_model_id\": \"deepseek-chat\", \"llm_api_base_url\": \"https://api.deepseek.com\", \"llm_temperature\": 0.8, \"llm_top_p\": 0.9, \"llm_max_tokens\": 3000 } 3. \u8fb9\u754c\u503c\u6d4b\u8bd5\u8bf7\u6c42 { \"ts_code\": \"600519.SH\", \"forecast_years\": 20, \"cagr_decay_rate\": 0.99, \"target_operating_margin\": 0.99, \"op_margin_transition_years\": 1, \"target_debt_ratio\": 0.99, \"cost_of_debt\": 0.20, \"risk_free_rate\": 0.15, \"llm_temperature\": 2.0, \"llm_top_p\": 1.0, \"llm_max_tokens\": 1 } 4. \u654f\u611f\u6027\u5206\u6790\u8bf7\u6c42 { \"ts_code\": \"600519.SH\", \"forecast_years\": 5, \"sensitivity_analysis\": { \"row_axis\": { \"parameter_name\": \"wacc\", \"values\": [0.08, 0.09, 0.10, 0.11], \"step\": 0.01, \"points\": 4 }, \"column_axis\": { \"parameter_name\": \"exit_multiple\", \"values\": [14, 16, 18, 20], \"step\": 2, \"points\": 4 } } } 5. \u6c38\u7eed\u589e\u957f\u6cd5\u8bf7\u6c42 { \"ts_code\": \"600519.SH\", \"forecast_years\": 8, \"terminal_value_method\": \"perpetual_growth\", \"perpetual_growth_rate\": 0.035, \"wacc_weight_mode\": \"market\", \"ltm_baseline_enabled\": true, \"request_llm_summary\": true } 6. \u9519\u8bef\u8bf7\u6c42\u793a\u4f8b\uff08\u8fdd\u53cd\u7ea6\u675f\u6761\u4ef6\uff09 { \"ts_code\": \"600519.SH\", \"forecast_years\": 25, // \u9519\u8bef\uff1a\u8d85\u8fc7\u6700\u5927\u503c20 \"cagr_decay_rate\": 1.5, // \u9519\u8bef\uff1a\u8d85\u8fc7\u6700\u5927\u503c1 \"target_operating_margin\": -0.1, // \u9519\u8bef\uff1a\u8d1f\u503c \"llm_temperature\": 3.0, // \u9519\u8bef\uff1a\u8d85\u8fc7\u6700\u5927\u503c2.0 \"llm_top_p\": 1.5, // \u9519\u8bef\uff1a\u8d85\u8fc7\u6700\u5927\u503c1.0 \"wacc_weight_mode\": \"invalid_mode\" // \u9519\u8bef\uff1a\u4e0d\u5728\u679a\u4e3e\u503c\u4e2d } \u54cd\u5e94\u6a21\u578b : StockValuationResponse \u54cd\u5e94\u683c\u5f0f\u8be6\u89e3 : 1. \u6210\u529f\u54cd\u5e94 - \u57fa\u7840\u4f30\u503c { \"stock_info\": { \"ts_code\": \"600519.SH\", \"name\": \"\u8d35\u5dde\u8305\u53f0\", \"industry\": \"\u767d\u9152\", \"list_date\": \"2001-08-27\", \"exchange\": \"\u4e0a\u4ea4\u6240\", \"currency\": \"CNY\", \"market\": \"A\", \"latest_pe_ttm\": 45.2, \"latest_pb_mrq\": 12.8, \"total_shares\": 1256197800, \"free_float_shares\": 1256197800, \"ttm_dps\": 25.91, \"dividend_yield\": 0.0158, \"act_name\": \"\u8d35\u5dde\u7701\u4eba\u6c11\u653f\u5e9c\u56fd\u6709\u8d44\u4ea7\u76d1\u7763\u7ba1\u7406\u59d4\u5458\u4f1a\", \"act_ent_type\": \"\u56fd\u4f01\", \"latest_annual_diluted_eps\": 49.32, \"base_report_date\": \"2024-09-30\" }, \"valuation_results\": { \"latest_price\": 1725.0, \"current_pe\": 45.2, \"current_pb\": 12.8, \"dcf_forecast_details\": { \"enterprise_value\": 2150000000000, \"equity_value\": 2100000000000, \"value_per_share\": 1675.5, \"net_debt\": 50000000000, \"pv_forecast_ufcf\": 800000000000, \"pv_terminal_value\": 1350000000000, \"terminal_value\": 2500000000000, \"wacc_used\": 0.085, \"cost_of_equity_used\": 0.12, \"terminal_value_method_used\": \"exit_multiple\", \"exit_multiple_used\": 15.2, \"perpetual_growth_rate_used\": null, \"forecast_period_years\": 5, \"dcf_implied_diluted_pe\": 33.97, \"base_ev_ebitda\": 18.5, \"implied_perpetual_growth_rate\": 0.035 }, \"other_analysis\": { \"dividend_analysis\": { \"current_yield_pct\": 1.58, \"avg_dividend_3y\": 22.5, \"payout_ratio_pct\": 52.5 }, \"growth_analysis\": { \"net_income_cagr_3y\": 15.2, \"revenue_cagr_3y\": 18.7 } }, \"detailed_forecast_table\": [ { \"year\": 2024, \"revenue\": 150000000000, \"revenue_growth\": 0.18, \"gross_profit\": 120000000000, \"operating_profit\": 75000000000, \"operating_margin\": 0.50, \"ebit\": 75000000000, \"tax_rate\": 0.25, \"nopat\": 56250000000, \"da\": 8000000000, \"capex\": 12000000000, \"nwc_change\": 5000000000, \"ufcf\": 47250000000, \"nwc\": 30000000000, \"nwc_days\": 73 }, { \"year\": 2025, \"revenue\": 168000000000, \"revenue_growth\": 0.12, \"gross_profit\": 134400000000, \"operating_profit\": 84000000000, \"operating_margin\": 0.50, \"ebit\": 84000000000, \"tax_rate\": 0.25, \"nopat\": 63000000000, \"da\": 8960000000, \"capex\": 13440000000, \"nwc_change\": 5600000000, \"ufcf\": 52960000000, \"nwc\": 35600000000, \"nwc_days\": 73 } ], \"sensitivity_analysis_result\": null, \"llm_analysis_summary\": null, \"data_warnings\": [ \"2024\u5e74\u6570\u636e\u4e3a\u57fa\u4e8e\u524d\u4e09\u4e2a\u5b63\u5ea6\u7684\u9884\u6d4b\u503c\", \"\u90e8\u5206\u5386\u53f2\u6570\u636e\u7f3a\u5931\uff0c\u4f7f\u7528\u884c\u4e1a\u5e73\u5747\u503c\u66ff\u4ee3\" ], \"historical_financial_summary\": [ { \"year\": 2023, \"revenue\": 129700000000, \"operating_profit\": 64850000000, \"net_income\": 48550000000, \"total_assets\": 185000000000, \"total_liabilities\": 45000000000 } ], \"historical_ratios_summary\": [ { \"year\": 2023, \"operating_margin\": 0.50, \"roic\": 0.28, \"asset_turnover\": 0.70, \"debt_to_equity\": 0.32 } ], \"special_industry_warning\": null }, \"error\": null } \u8c03\u8bd5\u5b57\u6bb5\u8bf4\u660e\uff08\u7247\u6bb5\uff09 \u54cd\u5e94\u4e2d\u8fd8\u5305\u542b\u7528\u4e8e\u5ba1\u8ba1/\u8c03\u8bd5\u7684\u7247\u6bb5\uff1a { \"valuation_results\": { \"debug_request_slice\": { \"forecast_years\": 5, \"ltm_baseline_enabled\": true, \"nwc_baseline_mode\": \"component\", \"baseline_debug\": { \"mode\": \"LTM\", \"curr_end_date\": \"2025-06-30\", \"curr_end_type\": \"2\" } } } } \u5176\u4e2d baseline_debug \u4f1a\u5728 LTM \u6a21\u5f0f\u4e0b\u5305\u542b YTD/LTM \u7684\u5206\u89e3\uff1b\u5728 Annual \u6a21\u5f0f\u4e3a { \"mode\": \"Annual\" } \u3002 \u5bf9\u7167\u8bf4\u660e\uff08\u6700\u5c0f\u8282\u9009 vs \u5b8c\u6574\u7248\uff09 \u6700\u5c0f\u8282\u9009\uff1a\u4ec5\u8fd4\u56de\u524d\u7aef\u6700\u5e38\u7528\u7684\u5feb\u53d6\u5b57\u6bb5\uff08 value_per_share \u3001 wacc_used \u3001 exit_multiple_used \u3001\u4ef7\u683c\u4e0eTTM\u5206\u7ea2\u53e3\u5f84\u7b49\uff09\uff0c debug_request_slice \u4ec5\u542b baseline_debug \u3002 \u5b8c\u6574\u7248\uff1a\u5728\u6700\u5c0f\u8282\u9009\u57fa\u7840\u4e0a\uff0c\u8865\u5145 detailed_forecast_table \u3001 historical_* \u3001LLM\u6458\u8981\u3001\u4ee5\u53ca debug_request_slice.applied_preset \u4e0e applied_preset_diff \uff08\u542b\u533a\u95f4\u4e0e\u504f\u79bb\u72b6\u6001\uff09\u3002 \u8be5\u5bf9\u7167\u7528\u4e8e UI \u5feb\u901f\u52a0\u8f7d\u4e0e\u5ba1\u8ba1\u6df1\u6316\u4e24\u79cd\u8def\u5f84\uff0c\u63a5\u53e3\u4e00\u81f4\uff0c\u5b57\u6bb5\u53ef\u9009\u8fd4\u56de\u3002 1.1 \u6210\u529f\u54cd\u5e94 - \u6700\u5c0f\u8282\u9009\uff08\u4fbf\u4e8e\u524d\u7aef\u5feb\u901f\u53d6\u7528\uff09 { \"stock_info\": { \"ts_code\": \"600519.SH\", \"name\": \"\u8d35\u5dde\u8305\u53f0\", \"market\": \"\u4e3b\u677f\", \"latest_annual_diluted_eps\": 68.64, \"base_report_date\": \"2023-12-31\", \"latest_price_as_of_date\": \"2024-10-15\", \"eps_annual_as_of_year\": 2023, \"ttm_dps\": 49.982, \"dividend_yield\": 0.0349, \"ttm_dps_source\": \"implemented\" }, \"valuation_results\": { \"latest_price\": 1476.1, \"current_pe\": 28.08, \"current_pb\": 9.73, \"dcf_forecast_details\": { \"value_per_share\": 2318.05, \"wacc_used\": 0.0609, \"terminal_value_method_used\": \"exit_multiple\", \"exit_multiple_used\": 15.0, \"implied_perpetual_growth_rate\": 0.0169 }, \"debug_request_slice\": { \"baseline_debug\": { \"mode\": \"LTM\", \"curr_end_date\": \"2024-09-30\" } } } } 1.2 \u6210\u529f\u54cd\u5e94 - \u5b8c\u6574\u7248\uff08\u542b debug/applied_preset/diff\uff09 { \"stock_info\": { \"ts_code\": \"601717.SH\", \"name\": \"\u90d1\u7164\u673a\", \"market\": \"\u4e3b\u677f\", \"latest_annual_diluted_eps\": 2.2120, \"base_report_date\": \"2023-12-31\", \"latest_price_as_of_date\": \"2025-09-10\", \"eps_annual_as_of_year\": 2024, \"ttm_dps\": 1.12, \"dividend_yield\": 0.0516, \"ttm_dps_source\": \"proposal\", \"ttm_window_start\": \"2024-09-10\", \"ttm_window_end\": \"2025-09-10\" }, \"valuation_results\": { \"latest_price\": 21.71, \"current_pe\": 9.23, \"current_pb\": 1.48, \"dcf_forecast_details\": { \"value_per_share\": 26.86, \"wacc_used\": 0.0609, \"terminal_value_method_used\": \"exit_multiple\", \"exit_multiple_used\": 8.0, \"implied_perpetual_growth_rate\": 0.0045 }, \"detailed_forecast_table\": [ { \"year\": 1, \"revenue\": 3.70e10, \"ufcf\": 1.23e9 } ], \"data_warnings\": [], \"debug_request_slice\": { \"baseline_debug\": { \"mode\": \"LTM\", \"curr_end_date\": \"2025-06-30\", \"curr_end_type\": \"2\", \"ytd_curr_total_revenue\": 2.786e10, \"ytd_prev_total_revenue\": 2.726e10, \"prev_annual_total_revenue\": 3.642e10 }, \"applied_preset\": { \"key\": \"industrials\", \"beta\": { \"default\": 1.0, \"range\": [0.8, 1.3] }, \"forecast_years\": { \"default\": 5, \"range\": [4, 7] }, \"pgr_cap\": { \"default\": 0.045, \"range\": [0.03, 0.05] }, \"exit_multiple_ev_ebitda\": { \"default\": 9.0, \"range\": [6.0, 12.0] }, \"turnover_days\": { \"ar\": { \"median\": 60, \"range\": [20, 120] }, \"inv\": { \"median\": 80, \"range\": [40, 180] }, \"ap\": { \"median\": 55, \"range\": [25, 110] } } }, \"applied_preset_diff\": { \"beta\": { \"value\": 1.0, \"default\": 1.0, \"range_status\": \"within\", \"modified\": false }, \"forecast_years\": { \"value\": 5.0, \"default\": 5.0, \"range_status\": \"within\", \"modified\": false }, \"pgr_cap\": { \"value\": 0.045, \"default\": 0.045, \"range_status\": \"within\", \"modified\": false }, \"exit_multiple_ev_ebitda\": { \"value\": 9.0, \"default\": 9.0, \"range_status\": \"within\", \"modified\": false }, \"turnover_days\": { \"ar\": { \"value\": 60.0, \"default\": 60.0, \"range_status\": \"within\", \"modified\": false }, \"inv\": { \"value\": 80.0, \"default\": 80.0, \"range_status\": \"within\", \"modified\": false }, \"ap\": { \"value\": 55.0, \"default\": 55.0, \"range_status\": \"within\", \"modified\": false } } } } }, \"error\": null } 1.x \u4e09\u60c5\u666f\u5206\u6790\uff08\u4e50\u89c2/\u57fa\u51c6/\u60b2\u89c2\uff09\uff08\u63d0\u6848\uff09 \u4e3a\u8865\u8db3\u201c\u533a\u95f4\u8f93\u51fa\u3001\u5173\u952e\u9a71\u52a8\u6392\u5e8f\u201d\u7684\u9700\u6c42\uff0c\u5efa\u8bae\u5728\u73b0\u6709\u4f30\u503c\u63a5\u53e3\u4e2d\u5f15\u5165\u53ef\u9009\u5b57\u6bb5 scenarios \uff0c\u7531\u5ba2\u6237\u7aef\u63d0\u4ea4\u4e09\u5957\u53c2\u6570\u8c03\u6574\uff0c\u670d\u52a1\u7aef\u6309\u4e09\u5957\u5047\u8bbe\u5404\u81ea\u8dd1\u4e00\u904d\u4f30\u503c\uff0c\u5e76\u7ed9\u51fa\u6c47\u603b\u533a\u95f4\u4e0e\u9a71\u52a8\u6392\u5e8f\u3002 \u8bf7\u6c42\u6a21\u578b\u6269\u5c55\uff08\u65b0\u589e\uff0c\u53ef\u9009\uff09\uff1a { \"ts_code\": \"600519.SH\", \"forecast_years\": 5, \"terminal_value_method\": \"exit_multiple\", \"exit_multiple\": 15, \"scenarios\": { \"base\": { \"label\": \"\u57fa\u51c6\", \"weight\": 0.5, \"overrides\": {}, \"multipliers\": {} }, \"bull\": { \"label\": \"\u4e50\u89c2\", \"weight\": 0.25, \"overrides\": { \"wacc\": 0.07, \"exit_multiple\": 17 }, \"multipliers\": { \"target_operating_margin\": 1.05, \"target_inventory_days\": 0.9 } }, \"bear\": { \"label\": \"\u60b2\u89c2\", \"weight\": 0.25, \"overrides\": { \"wacc\": 0.10, \"exit_multiple\": 13 }, \"multipliers\": { \"target_operating_margin\": 0.95, \"target_inventory_days\": 1.1 } } } } \u5b57\u6bb5\u7ea6\u5b9a\uff1a - overrides \uff1a\u6309\u8bf7\u6c42\u6a21\u578b\u540c\u540d\u5b57\u6bb5\u8fdb\u884c\u66ff\u6362\uff08\u5982 wacc \u3001 exit_multiple \u3001 perpetual_growth_rate \u3001 target_operating_margin \u3001 target_*_days \u7b49\uff09\u3002 - multipliers \uff1a\u6309\u8bf7\u6c42\u6a21\u578b\u540c\u540d\u5b57\u6bb5\u8fdb\u884c\u4e58\u6570\u8c03\u6574\uff08\u5148\u4e58\u540e\u622a\u65ad\u5230\u6709\u6548\u533a\u95f4\uff0c\u4f18\u5148\u7ea7\u4f4e\u4e8e overrides \uff09\u3002 - weight \uff1a\u7528\u4e8e\u52a0\u6743\u5747\u503c/\u5206\u4f4d\u7684\u6743\u91cd\uff08\u53ef\u9009\uff0c\u9ed8\u8ba4\u5404 1/3\uff09\u3002 \u54cd\u5e94\u6269\u5c55\uff08\u65b0\u589e\uff0c\u53ef\u9009\uff09\uff1a { \"valuation_results\": { \"scenario_results\": { \"base\": { \"dcf_forecast_details\": { \"value_per_share\": 1675.5, \"wacc_used\": 0.085 }, \"ev_ebitda\": 18.5 }, \"bull\": { \"dcf_forecast_details\": { \"value_per_share\": 1850.2, \"wacc_used\": 0.078 }, \"ev_ebitda\": 19.8 }, \"bear\": { \"dcf_forecast_details\": { \"value_per_share\": 1498.3, \"wacc_used\": 0.094 }, \"ev_ebitda\": 17.2 }, \"summary\": { \"value_per_share\": { \"min\": 1498.3, \"p10\": 1510.0, \"p50\": 1675.5, \"p90\": 1830.0, \"max\": 1850.2, \"weighted_mean\": 1674.9 }, \"enterprise_value\": { \"min\": 1.76e12, \"p50\": 2.10e12, \"max\": 2.32e12 }, \"key_drivers_ranking\": [ { \"name\": \"wacc\", \"contribution\": 0.46 }, { \"name\": \"exit_multiple\", \"contribution\": 0.31 }, { \"name\": \"target_operating_margin\", \"contribution\": 0.15 }, { \"name\": \"nwc_days\", \"contribution\": 0.08 } ], \"note\": \"\u6392\u540d\u57fa\u4e8e\u57fa\u51c6\u70b9\u5468\u8fb9\u4e00\u56e0\u5b50\u5f39\u6027/\u65b9\u5dee\u8d21\u732e\u7684\u8fd1\u4f3c\u5206\u89e3\uff08\u63d0\u6848\uff09\u3002\" } } } } \u5b9e\u73b0\u5907\u6ce8\uff1a - \u5f53\u524d\u4ee3\u7801\u5c1a\u672a\u8fd4\u56de scenario_results \u5b57\u6bb5\uff0c\u6b64\u4e3a\u63a5\u53e3\u63d0\u6848\uff1b\u843d\u5730\u9700\u5728 StockValuationRequest \u589e\u52a0 scenarios \uff0c\u5e76\u5728 ValuationService \u9010\u60c5\u666f\u91cd\u8dd1\u5e76\u6c47\u603b\u3002 - key_drivers_ranking \u53ef\u57fa\u4e8e\u4e00\u56e0\u5b50\u6270\u52a8\uff08OFAT\uff09\u6216 Sobol \u8fd1\u4f3c\uff08\u8f7b\u91cf\uff09\u8ba1\u7b97\u76f8\u5bf9\u8d21\u732e\uff0c\u5148\u5b9e\u73b0 OFAT \u7248\u4ee5\u4fdd\u8bc1\u6027\u80fd\u4e0e\u53ef\u89e3\u91ca\u6027\u3002 - UI \u5efa\u8bae\uff1a - \u60c5\u666f\u9762\u677f\uff1a\u4e3a\u201c\u6536\u5165\u589e\u901f/\u5229\u6da6\u7387/NWC/WACC/\u7ec8\u503c\u53c2\u6570\u201d\u63d0\u4f9b\u201c\u8986\u76d6/\u4e58\u6570\u201d\u4e24\u79cd\u8f93\u5165\uff0c\u652f\u6301\u6743\u91cd\uff1b\u63d0\u4f9b\u201c\u91cd\u7f6e\u4e3a\u884c\u4e1a\u9884\u8bbe\u201d\u7684\u6309\u94ae\u3002 - \u7ed3\u679c\u6c47\u603b\uff1a\u5c55\u793a\u4f30\u503c\u533a\u95f4\uff08\u6761\u5f62/\u80e1\u987b\u56fe\uff09\u3001\u6743\u91cd\u5747\u503c\u3001\u4e0e\u57fa\u51c6\u5dee\u5f02\uff1b\u7ed8\u5236\u201c\u5173\u952e\u9a71\u52a8\u6392\u5e8f\u201d\uff08Tornado chart\uff09\u3002 2. \u6210\u529f\u54cd\u5e94 - \u5305\u542b\u654f\u611f\u6027\u5206\u6790 { \"stock_info\": { \"ts_code\": \"600519.SH\", \"name\": \"\u8d35\u5dde\u8305\u53f0\", \"industry\": \"\u767d\u9152\", \"market\": \"A\", \"latest_pe_ttm\": 45.2, \"latest_pb_mrq\": 12.8, \"total_shares\": 1256197800, \"base_report_date\": \"2024-09-30\" }, \"valuation_results\": { \"latest_price\": 1725.0, \"current_pe\": 45.2, \"current_pb\": 12.8, \"dcf_forecast_details\": { \"enterprise_value\": 2150000000000, \"equity_value\": 2100000000000, \"value_per_share\": 1675.5, \"wacc_used\": 0.085, \"terminal_value_method_used\": \"exit_multiple\", \"exit_multiple_used\": 15.2, \"forecast_period_years\": 5, \"dcf_implied_diluted_pe\": 33.97 }, \"sensitivity_analysis_result\": { \"row_parameter\": \"wacc\", \"column_parameter\": \"exit_multiple\", \"row_values\": [0.08, 0.09, 0.10, 0.11], \"column_values\": [14, 16, 18, 20], \"result_tables\": { \"value_per_share\": [ [1850.5, 1675.5, 1520.3, 1380.2], [1680.3, 1520.8, 1380.5, 1255.2], [1535.2, 1388.6, 1260.4, 1148.3], [1408.1, 1274.2, 1157.8, 1054.6] ], \"enterprise_value\": [ [2325000000000, 2100000000000, 1900000000000, 1720000000000], [2110000000000, 1910000000000, 1730000000000, 1570000000000], [1925000000000, 1740000000000, 1580000000000, 1430000000000], [1760000000000, 1590000000000, 1440000000000, 1310000000000] ], \"dcf_implied_pe\": [ [37.5, 33.97, 30.8, 27.9], [34.0, 30.8, 27.9, 25.3], [31.1, 28.1, 25.5, 23.2], [28.5, 25.8, 23.4, 21.3] ], \"tv_ev_ratio\": [ [0.68, 0.65, 0.62, 0.60], [0.70, 0.66, 0.63, 0.61], [0.71, 0.67, 0.64, 0.62], [0.72, 0.68, 0.65, 0.63] ], \"ev_ebitda\": [ [18.9, 17.8, 16.7, 15.9], [18.3, 17.2, 16.3, 15.5], [17.7, 16.7, 15.8, 15.1], [17.2, 16.2, 15.4, 14.8] ], \"ev_ebitda_terminal\": [ [16.2, 15.1, 14.3, 13.7], [15.7, 14.7, 13.9, 13.3], [15.3, 14.3, 13.6, 13.0], [14.9, 14.0, 13.3, 12.8] ], \"implied_pgr\": [ [0.017, 0.013, 0.011, 0.009], [0.019, 0.015, 0.012, 0.010], [0.021, 0.017, 0.014, 0.011], [0.022, 0.018, 0.015, 0.012] ] } }, \"data_warnings\": [], \"historical_financial_summary\": [...], \"historical_ratios_summary\": [...] }, \"error\": null } \u8bf4\u660e\uff1a - \u82e5\u5217\u53c2\u6570\u4e3a perpetual_growth_rate \u4e14\u51fa\u73b0 g \u2265 WACC \u7684\u884c/\u5217\u7ec4\u5408\uff0c\u8be5\u5355\u5143\u683c\u8fd4\u56de null \uff1b\u540c\u65f6 valuation_results.data_warnings \u4f1a\u5305\u542b\u201c\u7ec4\u5408\u88ab\u8df3\u8fc7\u201d\u7684\u63d0\u793a\uff0c\u4fbf\u4e8e UI \u6807\u6ce8\u7a7a\u767d\u7684\u5408\u7406\u6027\u3002 - dcf_implied_pe \u7684\u5355\u5143\u683c\u6570\u503c\u4f18\u5148\u53d6\u6a21\u578b\u8fd4\u56de\uff1b\u7f3a\u5931\u65f6\u4ee5\u57fa\u51c6 EPS\uff08\u6700\u8fd1\u5e74\u62a5\uff09\u4e0e\u8be5\u683c\u6bcf\u80a1\u4ef7\u503c\u8ba1\u7b97\u56de\u586b\u3002 - ev_ebitda \u4ee5 LTM \u5b9e\u9645 EBITDA \u4e3a\u5206\u6bcd\uff1b ev_ebitda_terminal \u4ee5\u672b\u671f\u9884\u6d4b EBITDA \u4e3a\u5206\u6bcd\u3002\u4e24\u8005\u53e3\u5f84\u4e0d\u540c\uff0c\u4f7f\u7528\u573a\u666f\u4e0d\u540c\uff08LTM \u4fbf\u4e8e\u4e0e\u5e02\u573a\u53e3\u5f84\u5bf9\u6807\uff0cTerminal \u4fbf\u4e8e\u6821\u9a8c\u9000\u51fa\u500d\u6570\u5047\u8bbe\uff09\u3002 3. \u6210\u529f\u54cd\u5e94 - \u5305\u542bLLM\u5206\u6790 { \"stock_info\": { \"ts_code\": \"600519.SH\", \"name\": \"\u8d35\u5dde\u8305\u53f0\", \"industry\": \"\u767d\u9152\", \"market\": \"A\", \"latest_pe_ttm\": 45.2, \"base_report_date\": \"2024-09-30\" }, \"valuation_results\": { \"latest_price\": 1725.0, \"current_pe\": 45.2, \"dcf_forecast_details\": { \"value_per_share\": 1675.5, \"wacc_used\": 0.085, \"terminal_value_method_used\": \"exit_multiple\", \"exit_multiple_used\": 15.2, \"dcf_implied_diluted_pe\": 33.97 }, \"llm_analysis_summary\": \"# \u8d35\u5dde\u8305\u53f0(600519.SH)\u6295\u8d44\u5206\u6790\u62a5\u544a\\n\\n## \u4f30\u503c\u6458\u8981\\n- **\u5f53\u524d\u80a1\u4ef7**: 1,725.0\u5143\\n- **DCF\u4f30\u503c**: 1,675.5\u5143\\n- **\u4f30\u503c\u5dee\u5f02**: -2.9% (\u7565\u5fae\u4f4e\u4f30)\\n- **\u5efa\u8bae\u8bc4\u7ea7**: \u6301\u6709\\n\\n## \u6295\u8d44\u4eae\u70b9\\n1. **\u54c1\u724c\u62a4\u57ce\u6cb3**: \u8305\u53f0\u62e5\u6709\u5f3a\u5927\u7684\u54c1\u724c\u4ef7\u503c\u548c\u5b9a\u4ef7\u6743\\n2. **\u8d22\u52a1\u8868\u73b0**: \u6bdb\u5229\u7387\u9ad8\u8fbe50%\uff0cROE\u8d85\u8fc725%\\n3. **\u589e\u957f\u7a33\u5b9a**: \u6536\u5165\u548c\u5229\u6da6\u4fdd\u6301\u7a33\u5065\u589e\u957f\\n4. **\u73b0\u91d1\u6d41**: \u4ea7\u751f\u5f3a\u52b2\u7684\u81ea\u7531\u73b0\u91d1\u6d41\\n\\n## \u98ce\u9669\u56e0\u7d20\\n1. **\u4f30\u503c\u504f\u9ad8**: \u5f53\u524dPE_TTM\u4e3a45.2\u500d\uff0c\u9ad8\u4e8e\u5386\u53f2\u5e73\u5747\\n2. **\u653f\u7b56\u98ce\u9669**: \u767d\u9152\u884c\u4e1a\u9762\u4e34\u6d88\u8d39\u653f\u7b56\u53d8\u5316\u98ce\u9669\\n3. **\u7ade\u4e89\u52a0\u5267**: \u9ad8\u7aef\u767d\u9152\u5e02\u573a\u7ade\u4e89\u52a0\u5267\\n\\n## \u6295\u8d44\u5efa\u8bae\\n\u57fa\u4e8eDCF\u4f30\u503c\u7ed3\u679c\uff0c\u5f53\u524d\u80a1\u4ef7\u7565\u5fae\u9ad8\u4f30\uff0c\u5efa\u8bae\u6295\u8d44\u8005\u7b49\u5f85\u66f4\u597d\u7684\u4e70\u5165\u65f6\u673a\u3002\u957f\u671f\u6765\u770b\uff0c\u8305\u53f0\u4f9d\u7136\u662f\u4f18\u8d28\u7684\u6838\u5fc3\u8d44\u4ea7\u3002\\n\\n> *\u5206\u6790\u57fa\u4e8eDCF\u4f30\u503c\u6a21\u578b\uff0c\u5b58\u5728\u6a21\u578b\u5047\u8bbe\u98ce\u9669\uff0c\u6295\u8d44\u9700\u8c28\u614e\u3002*\", \"data_warnings\": [ \"LLM\u5206\u6790\u57fa\u4e8e\u5386\u53f2\u6570\u636e\uff0c\u672a\u6765\u8868\u73b0\u53ef\u80fd\u5b58\u5728\u5dee\u5f02\" ] }, \"error\": null } 4. \u9519\u8bef\u54cd\u5e94 - \u53c2\u6570\u9a8c\u8bc1\u5931\u8d25 { \"detail\": [ { \"loc\": [\"body\", \"forecast_years\"], \"msg\": \"ensure this value is less than or equal to 20\", \"type\": \"value_error.number.not_le\", \"ctx\": { \"limit_value\": 20 } }, { \"loc\": [\"body\", \"cagr_decay_rate\"], \"msg\": \"ensure this value is less than or equal to 1\", \"type\": \"value_error.number.not_le\", \"ctx\": { \"limit_value\": 1 } } ] } 5. \u9519\u8bef\u54cd\u5e94 - \u80a1\u7968\u6570\u636e\u672a\u627e\u5230 { \"detail\": \"\u65e0\u6cd5\u83b7\u53d6\u80a1\u7968\u57fa\u672c\u4fe1\u606f: 999999.SH\" } 6. \u9519\u8bef\u54cd\u5e94 - \u4e1a\u52a1\u903b\u8f91\u9519\u8bef { \"detail\": \"\u9884\u6d4b\u671f\u5e74\u6570\u5fc5\u987b\u57281-20\u4e4b\u95f4\" } 7. \u9519\u8bef\u54cd\u5e94 - \u670d\u52a1\u5668\u5185\u90e8\u9519\u8bef { \"detail\": \"\u670d\u52a1\u5668\u5185\u90e8\u9519\u8bef: \u8ba1\u7b97WACC\u5931\u8d25\" } 8. \u6210\u529f\u54cd\u5e94 - \u91d1\u878d\u884c\u4e1a\u7279\u6b8a\u8b66\u544a { \"stock_info\": { \"ts_code\": \"600036.SH\", \"name\": \"\u62db\u5546\u94f6\u884c\", \"industry\": \"\u94f6\u884c\", \"market\": \"A\", \"latest_pe_ttm\": 8.5, \"base_report_date\": \"2024-09-30\" }, \"valuation_results\": { \"latest_price\": 35.6, \"current_pe\": 8.5, \"dcf_forecast_details\": { \"value_per_share\": 38.2, \"wacc_used\": 0.075, \"terminal_value_method_used\": \"perpetual_growth\", \"perpetual_growth_rate_used\": 0.03 }, \"special_industry_warning\": \"\u26a0\ufe0f \u91d1\u878d\u884c\u4e1a\u8b66\u544a\uff1aDCF\u6a21\u578b\u5bf9\u91d1\u878d\u4f01\u4e1a\u9002\u7528\u6027\u6709\u9650\u3002\u5efa\u8bae\u4f7f\u7528\u4ee5\u4e0b\u65b9\u6cd5\u8f85\u52a9\u4f30\u503c\uff1a\\n1. \u80a1\u606f\u6298\u73b0\u6a21\u578b(DDM)\\n2. \u5e02\u51c0\u7387(P/B)\u76f8\u5bf9\u4f30\u503c\\n3. \u51c0\u8d44\u4ea7\u6536\u76ca\u7387(ROE)\u5206\u6790\\n4. \u4e0d\u826f\u8d37\u6b3e\u7387\u548c\u62e8\u5907\u8986\u76d6\u7387\u5206\u6790\\n\\n\u5f53\u524dDCF\u4f30\u503c\u7ed3\u679c\u4ec5\u4f9b\u53c2\u8003\uff0c\u6295\u8d44\u51b3\u7b56\u8bf7\u7ed3\u5408\u4e13\u4e1a\u91d1\u878d\u5206\u6790\u3002\" }, \"error\": null } 9. \u6210\u529f\u54cd\u5e94 - \u6279\u91cf\u5904\u7406\uff08\u65e0LLM\uff09 { \"stock_info\": { \"ts_code\": \"600519.SH\", \"name\": \"\u8d35\u5dde\u8305\u53f0\", \"industry\": \"\u767d\u9152\", \"market\": \"A\", \"latest_pe_ttm\": 45.2, \"total_shares\": 1256197800, \"base_report_date\": \"2024-09-30\" }, \"valuation_results\": { \"latest_price\": 1725.0, \"current_pe\": 45.2, \"dcf_forecast_details\": { \"enterprise_value\": 2150000000000, \"equity_value\": 2100000000000, \"value_per_share\": 1675.5, \"wacc_used\": 0.085, \"terminal_value_method_used\": \"exit_multiple\", \"exit_multiple_used\": 15.2, \"forecast_period_years\": 5, \"dcf_implied_diluted_pe\": 33.97 }, \"llm_analysis_summary\": null, \"data_warnings\": [\"\u6279\u91cf\u5904\u7406\u6a21\u5f0f\uff0c\u5df2\u5173\u95edLLM\u5206\u6790\u4ee5\u63d0\u9ad8\u6027\u80fd\"], \"detailed_forecast_table\": [...], \"historical_financial_summary\": [...] }, \"error\": null } \u4e1a\u52a1\u903b\u8f91\u6d41\u7a0b : 1. \u6570\u636e\u83b7\u53d6\u9636\u6bb5 : \u83b7\u53d6\u80a1\u7968\u57fa\u672c\u4fe1\u606f\u3001\u4ef7\u683c\u3001\u8d22\u52a1\u62a5\u8868\u6570\u636e 2. \u6570\u636e\u5904\u7406\u9636\u6bb5 : \u6e05\u6d17\u6570\u636e\u3001\u8ba1\u7b97\u8d22\u52a1\u6307\u6807\u3001\u751f\u6210\u5386\u53f2\u6bd4\u7387 3. \u4f30\u503c\u8ba1\u7b97\u9636\u6bb5 : - \u521d\u59cb\u5316WACC\u8ba1\u7b97\u5668 - \u8fd0\u884c\u8d22\u52a1\u9884\u6d4b - \u8ba1\u7b97DCF\u4f30\u503c - \u8ba1\u7b97\u7ec8\u503c 4. \u654f\u611f\u6027\u5206\u6790\u9636\u6bb5 : \u591a\u7ef4\u5ea6\u53c2\u6570\u654f\u611f\u6027\u6d4b\u8bd5 5. LLM\u5206\u6790\u9636\u6bb5 : \u8c03\u7528\u5927\u8bed\u8a00\u6a21\u578b\u751f\u6210\u6295\u8d44\u5efa\u8bae 6. \u7ed3\u679c\u6574\u5408\u9636\u6bb5 : \u6574\u5408\u6240\u6709\u8ba1\u7b97\u7ed3\u679c\u548c\u8b66\u544a\u4fe1\u606f \u72b6\u6001\u7801 : - 200 : \u6210\u529f - 400 : \u8bf7\u6c42\u53c2\u6570\u9519\u8bef - 404 : \u80a1\u7968\u6570\u636e\u672a\u627e\u5230 - 500 : \u670d\u52a1\u5668\u5185\u90e8\u9519\u8bef 3. \u6570\u636e\u66f4\u65b0\u63a5\u53e3 POST /update_stock_basic \u63a5\u53e3\u63cf\u8ff0 : \u66f4\u65b0\u80a1\u7968\u57fa\u672c\u4fe1\u606f\u6570\u636e \u8bf7\u6c42\u53c2\u6570 : \u65e0 \u8bf7\u6c42\u4f53\u793a\u4f8b : {} \u8be6\u7ec6\u54cd\u5e94\u4f53\u793a\u4f8b : 1. \u6210\u529f\u54cd\u5e94 - \u6b63\u5e38\u66f4\u65b0 { \"status\": \"success\", \"message\": \"\u80a1\u7968\u57fa\u672c\u4fe1\u606f\u66f4\u65b0\u6210\u529f\uff0c\u51715,234\u6761\u8bb0\u5f55\", \"count\": 5234, \"details\": { \"updated_count\": 5234, \"new_count\": 156, \"execution_time\": 45.2, \"data_source\": \"tushare\", \"update_time\": \"2024-12-31T10:30:00Z\" } } 2. \u6210\u529f\u54cd\u5e94 - \u65e0\u65b0\u6570\u636e { \"status\": \"success\", \"message\": \"\u80a1\u7968\u57fa\u672c\u4fe1\u606f\u5df2\u662f\u6700\u65b0\uff0c\u65e0\u9700\u66f4\u65b0\", \"count\": 0, \"details\": { \"updated_count\": 0, \"new_count\": 0, \"execution_time\": 5.1, \"data_source\": \"tushare\", \"update_time\": \"2024-12-31T10:30:00Z\" } } 3. \u6210\u529f\u54cd\u5e94 - \u90e8\u5206\u66f4\u65b0 { \"status\": \"partial_success\", \"message\": \"\u80a1\u7968\u57fa\u672c\u4fe1\u606f\u90e8\u5206\u66f4\u65b0\u6210\u529f\uff0c\u5171\u66f4\u65b03,200\u6761\u8bb0\u5f55\uff0c1,500\u6761\u8bb0\u5f55\u5931\u8d25\", \"count\": 3200, \"details\": { \"updated_count\": 3200, \"failed_count\": 1500, \"new_count\": 89, \"execution_time\": 38.7, \"data_source\": \"tushare\", \"update_time\": \"2024-12-31T10:30:00Z\", \"errors\": [ \"API\u8c03\u7528\u9891\u7387\u9650\u5236\", \"\u90e8\u5206\u80a1\u7968\u4ee3\u7801\u683c\u5f0f\u9519\u8bef\" ] } } 4. \u9519\u8bef\u54cd\u5e94 - API\u8c03\u7528\u5931\u8d25 { \"status\": \"error\", \"message\": \"\u66f4\u65b0\u5931\u8d25\uff1aTuShare API\u8c03\u7528\u5931\u8d25\", \"error\": \"API connection timeout\", \"details\": { \"error_code\": \"API_TIMEOUT\", \"error_message\": \"Connection to TuShare API timed out after 30 seconds\", \"execution_time\": 30.0, \"failed_count\": 0 } } 5. \u9519\u8bef\u54cd\u5e94 - \u6570\u636e\u5e93\u9519\u8bef { \"status\": \"error\", \"message\": \"\u66f4\u65b0\u5931\u8d25\uff1a\u6570\u636e\u5e93\u8fde\u63a5\u9519\u8bef\", \"error\": \"Database connection failed\", \"details\": { \"error_code\": \"DB_CONNECTION_ERROR\", \"error_message\": \"Unable to connect to PostgreSQL database\", \"execution_time\": 0.5, \"failed_count\": 0 } } \u4e1a\u52a1\u903b\u8f91 : 1. \u8c03\u7528\u6570\u636e\u5904\u7406\u5668\u66f4\u65b0\u80a1\u7968\u57fa\u672c\u4fe1\u606f 2. \u5f3a\u5236\u4ece\u6570\u636e\u6e90\u83b7\u53d6\u6700\u65b0\u6570\u636e 3. \u66f4\u65b0\u6570\u636e\u5e93\u8bb0\u5f55 4. \u8fd4\u56de\u66f4\u65b0\u7ed3\u679c\u7edf\u8ba1 \u72b6\u6001\u7801 : - 200 : \u66f4\u65b0\u6210\u529f - 500 : \u66f4\u65b0\u5931\u8d25 POST /update_daily_basic \u63a5\u53e3\u63cf\u8ff0 : \u66f4\u65b0\u6bcf\u65e5\u884c\u60c5\u6307\u6807\u6570\u636e \u8bf7\u6c42\u53c2\u6570 : \u65e0 \u8bf7\u6c42\u4f53\u793a\u4f8b : {} \u8be6\u7ec6\u54cd\u5e94\u4f53\u793a\u4f8b : 1. \u6210\u529f\u54cd\u5e94 - \u6b63\u5e38\u66f4\u65b0 { \"status\": \"success\", \"message\": \"\u6bcf\u65e5\u884c\u60c5\u6307\u6807\u66f4\u65b0\u6210\u529f\uff0c\u51714,856\u6761\u8bb0\u5f55\", \"count\": 4856, \"details\": { \"updated_count\": 4856, \"new_count\": 45, \"execution_time\": 32.8, \"data_source\": \"tushare\", \"update_time\": \"2024-12-31T10:35:00Z\", \"trade_date\": \"2024-12-30\" } } 2. \u6210\u529f\u54cd\u5e94 - \u5e02\u573a\u4f11\u5e02 { \"status\": \"success\", \"message\": \"\u5f53\u524d\u65e5\u671f\u4e3a\u5468\u672b\u6216\u8282\u5047\u65e5\uff0c\u65e0\u9700\u66f4\u65b0\u884c\u60c5\u6570\u636e\", \"count\": 0, \"details\": { \"updated_count\": 0, \"new_count\": 0, \"execution_time\": 2.1, \"data_source\": \"tushare\", \"update_time\": \"2024-12-31T10:35:00Z\", \"trade_date\": \"2024-12-29\", \"note\": \"\u5468\u672b\u4f11\u5e02\" } } 3. \u6210\u529f\u54cd\u5e94 - \u90e8\u5206\u66f4\u65b0 { \"status\": \"partial_success\", \"message\": \"\u6bcf\u65e5\u884c\u60c5\u6307\u6807\u90e8\u5206\u66f4\u65b0\u6210\u529f\uff0c\u5171\u66f4\u65b04,000\u6761\u8bb0\u5f55\uff0c500\u6761\u8bb0\u5f55\u5931\u8d25\", \"count\": 4000, \"details\": { \"updated_count\": 4000, \"failed_count\": 500, \"new_count\": 23, \"execution_time\": 28.5, \"data_source\": \"tushare\", \"update_time\": \"2024-12-31T10:35:00Z\", \"trade_date\": \"2024-12-30\", \"errors\": [ \"\u90e8\u5206\u80a1\u7968\u505c\u724c\", \"API\u8c03\u7528\u9891\u7387\u9650\u5236\" ] } } 4. \u9519\u8bef\u54cd\u5e94 - \u7f51\u7edc\u9519\u8bef { \"status\": \"error\", \"message\": \"\u66f4\u65b0\u5931\u8d25\uff1a\u7f51\u7edc\u8fde\u63a5\u9519\u8bef\", \"error\": \"Network connection failed\", \"details\": { \"error_code\": \"NETWORK_ERROR\", \"error_message\": \"Unable to connect to TuShare API server\", \"execution_time\": 10.0, \"failed_count\": 0 } } 5. \u9519\u8bef\u54cd\u5e94 - \u6570\u636e\u683c\u5f0f\u9519\u8bef { \"status\": \"error\", \"message\": \"\u66f4\u65b0\u5931\u8d25\uff1a\u6570\u636e\u683c\u5f0f\u9519\u8bef\", \"error\": \"Data format error\", \"details\": { \"error_code\": \"DATA_FORMAT_ERROR\", \"error_message\": \"Received data format does not match expected schema\", \"execution_time\": 15.2, \"failed_count\": 0, \"sample_error\": \"Field 'pe_ttm' is missing in some records\" } } \u4e1a\u52a1\u903b\u8f91 : 1. \u8c03\u7528\u6570\u636e\u5904\u7406\u5668\u66f4\u65b0\u6bcf\u65e5\u884c\u60c5\u6570\u636e 2. \u83b7\u53d6\u6700\u65b0PE\u3001PB\u3001\u5e02\u503c\u7b49\u6307\u6807 3. \u66f4\u65b0\u6570\u636e\u5e93\u8bb0\u5f55 4. \u8fd4\u56de\u66f4\u65b0\u7ed3\u679c\u7edf\u8ba1 \u72b6\u6001\u7801 : - 200 : \u66f4\u65b0\u6210\u529f - 500 : \u66f4\u65b0\u5931\u8d25 4. \u80a1\u7968\u7b5b\u9009\u63a5\u53e3 POST /screen_stocks \u63a5\u53e3\u63cf\u8ff0 : \u6839\u636ePE\u3001PB\u3001\u5e02\u503c\u7b49\u6761\u4ef6\u7b5b\u9009\u80a1\u7968 \u8bf7\u6c42\u53c2\u6570\u8be6\u89e3 : | \u53c2\u6570\u540d | \u7c7b\u578b | \u5fc5\u586b | \u9ed8\u8ba4\u503c | \u8bf4\u660e | \u7ea6\u675f\u6761\u4ef6 | \u793a\u4f8b | |--------|------|------|--------|------|----------|------| | pe_min | float | \u5426 | \u65e0 | \u6700\u5c0f\u5e02\u76c8\u7387 | >=0 | 10, 15 | | pe_max | float | \u5426 | \u65e0 | \u6700\u5927\u5e02\u76c8\u7387 | >=pe_min | 30, 50 | | pb_min | float | \u5426 | \u65e0 | \u6700\u5c0f\u5e02\u51c0\u7387 | >=0 | 1, 2 | | pb_max | float | \u5426 | \u65e0 | \u6700\u5927\u5e02\u51c0\u7387 | >=pb_min | 5, 8 | | market_cap_min | float | \u5426 | \u65e0 | \u6700\u5c0f\u5e02\u503c(\u4ebf\u5143) | >=0 | 100, 200 | | market_cap_max | float | \u5426 | \u65e0 | \u6700\u5927\u5e02\u503c(\u4ebf\u5143) | >=market_cap_min | 1000, 2000 | \u8be6\u7ec6\u8bf7\u6c42\u4f53\u793a\u4f8b : 1. \u57fa\u7840\u7b5b\u9009\u8bf7\u6c42 { \"pe_min\": 10, \"pe_max\": 30, \"market_cap_min\": 100 } 2. \u5b8c\u6574\u7b5b\u9009\u6761\u4ef6 { \"pe_min\": 5, \"pe_max\": 25, \"pb_min\": 0.5, \"pb_max\": 3, \"market_cap_min\": 50, \"market_cap_max\": 500 } 3. \u5355\u4e00\u6761\u4ef6\u7b5b\u9009 { \"pe_max\": 20 } 4. \u5927\u76d8\u80a1\u7b5b\u9009 { \"market_cap_min\": 1000, \"pe_max\": 25, \"pb_max\": 5 } 5. \u5c0f\u76d8\u4ef7\u503c\u80a1\u7b5b\u9009 { \"market_cap_max\": 200, \"pe_max\": 15, \"pb_max\": 2 } 6. \u8fb9\u754c\u503c\u6d4b\u8bd5\u8bf7\u6c42 { \"pe_min\": 0, \"pe_max\": 9999, \"pb_min\": 0, \"pb_max\": 9999, \"market_cap_min\": 0, \"market_cap_max\": 999999 } 7. \u9519\u8bef\u8bf7\u6c42\u793a\u4f8b { \"pe_min\": 30, // \u9519\u8bef\uff1ape_min > pe_max \"pe_max\": 10, \"pb_min\": -5, // \u9519\u8bef\uff1a\u8d1f\u503c \"market_cap_min\": 5000, // \u9519\u8bef\uff1amarket_cap_min > market_cap_max \"market_cap_max\": 1000 } \u8be6\u7ec6\u54cd\u5e94\u4f53\u793a\u4f8b : 1. \u6210\u529f\u54cd\u5e94 - \u57fa\u7840\u7b5b\u9009 { \"status\": \"success\", \"message\": \"\u7b5b\u9009\u5b8c\u6210\uff0c\u5171\u627e\u5230150\u53ea\u7b26\u5408\u6761\u4ef6\u7684\u80a1\u7968\", \"count\": 150, \"data\": [ { \"ts_code\": \"600519.SH\", \"name\": \"\u8d35\u5dde\u8305\u53f0\", \"industry\": \"\u767d\u9152\", \"area\": \"\u8d35\u5dde\", \"market\": \"\u4e3b\u677f\", \"list_date\": \"2001-08-27\", \"close\": 1725.0, \"pe\": 45.2, \"pb\": 12.8, \"total_mv\": 21500.0, \"float_mv\": 21500.0, \"turnover_rate\": 0.85, \"volume_ratio\": 1.2, \"price_change\": 2.5 }, { \"ts_code\": \"000858.SZ\", \"name\": \"\u4e94\u7cae\u6db2\", \"industry\": \"\u767d\u9152\", \"area\": \"\u56db\u5ddd\", \"market\": \"\u4e3b\u677f\", \"list_date\": \"1998-04-27\", \"close\": 125.8, \"pe\": 28.5, \"pb\": 8.2, \"total_mv\": 5150.0, \"float_mv\": 5150.0, \"turnover_rate\": 1.2, \"volume_ratio\": 1.5, \"price_change\": 1.8 } ] } 2. \u6210\u529f\u54cd\u5e94 - \u65e0\u7ed3\u679c { \"status\": \"success\", \"message\": \"\u7b5b\u9009\u5b8c\u6210\uff0c\u672a\u627e\u5230\u7b26\u5408\u6761\u4ef6\u7684\u80a1\u7968\", \"count\": 0, \"data\": [] } 3. \u6210\u529f\u54cd\u5e94 - \u5355\u4e00\u7ed3\u679c { \"status\": \"success\", \"message\": \"\u7b5b\u9009\u5b8c\u6210\uff0c\u5171\u627e\u52301\u53ea\u7b26\u5408\u6761\u4ef6\u7684\u80a1\u7968\", \"count\": 1, \"data\": [ { \"ts_code\": \"600519.SH\", \"name\": \"\u8d35\u5dde\u8305\u53f0\", \"industry\": \"\u767d\u9152\", \"area\": \"\u8d35\u5dde\", \"market\": \"\u4e3b\u677f\", \"list_date\": \"2001-08-27\", \"close\": 1725.0, \"pe\": 45.2, \"pb\": 12.8, \"total_mv\": 21500.0, \"float_mv\": 21500.0, \"turnover_rate\": 0.85, \"volume_ratio\": 1.2, \"price_change\": 2.5 } ] } 4. \u9519\u8bef\u54cd\u5e94 - \u53c2\u6570\u9a8c\u8bc1\u5931\u8d25 { \"detail\": [ { \"loc\": [\"body\", \"pe_min\"], \"msg\": \"ensure this value is greater than or equal to 0\", \"type\": \"value_error.number.not_ge\", \"ctx\": { \"limit_value\": 0 } }, { \"loc\": [\"body\", \"market_cap_min\"], \"msg\": \"ensure this value is less than or equal to market_cap_max\", \"type\": \"value_error.number.not_le\", \"ctx\": { \"limit_value\": 1000 } } ] } 5. \u9519\u8bef\u54cd\u5e94 - \u6570\u636e\u672a\u627e\u5230 { \"detail\": \"\u65e0\u6cd5\u83b7\u53d6\u80a1\u7968\u6570\u636e\uff0c\u8bf7\u5148\u66f4\u65b0\u80a1\u7968\u57fa\u672c\u4fe1\u606f\" } \u4e1a\u52a1\u903b\u8f91 : 1. \u83b7\u53d6\u5408\u5e76\u540e\u7684\u80a1\u7968\u6570\u636e 2. \u5e94\u7528\u7b5b\u9009\u6761\u4ef6\uff08PE\u3001PB\u3001\u5e02\u503c\u8303\u56f4\uff09 3. \u79fb\u9664\u65e0\u6548\u6570\u636e 4. \u6309\u5e02\u503c\u964d\u5e8f\u6392\u5217 5. \u8fd4\u56de\u7b5b\u9009\u7ed3\u679c \u72b6\u6001\u7801 : - 200 : \u7b5b\u9009\u6210\u529f - 404 : \u6570\u636e\u672a\u627e\u5230 - 500 : \u7b5b\u9009\u5931\u8d25 \ud83d\udccb \u53c2\u6570\u7ea6\u675f\u6761\u4ef6\u603b\u7ed3\u8868 \u80a1\u7968\u4f30\u503c\u63a5\u53e3\u53c2\u6570\u7ea6\u675f \u57fa\u7840\u53c2\u6570\u7ea6\u675f \u53c2\u6570\u540d \u7c7b\u578b \u7ea6\u675f\u6761\u4ef6 \u8bf4\u660e \u6709\u6548\u793a\u4f8b \u65e0\u6548\u793a\u4f8b ts_code string \u7b26\u5408A\u80a1\u683c\u5f0f 6\u4f4d\u6570\u5b57+.SH/.SZ \"600519.SH\" \"600519\", \"999999.SH\" market string \u679a\u4e3e\u503c \"A\", \"HK\" \"A\" \"US\", \"NASDAQ\" valuation_date string YYYY-MM-DD\u683c\u5f0f \u6709\u6548\u7684\u65e5\u671f\u683c\u5f0f \"2024-12-31\" \"2024/12/31\", \"invalid\" \u6570\u503c\u8303\u56f4\u7ea6\u675f\u53c2\u6570 \u53c2\u6570\u540d \u7c7b\u578b \u6700\u5c0f\u503c \u6700\u5927\u503c \u8bf4\u660e \u6709\u6548\u793a\u4f8b \u65e0\u6548\u793a\u4f8b forecast_years int 1 20 \u9884\u6d4b\u671f\u5e74\u6570 5, 10, 20 0, 25, -1 cagr_decay_rate float 0 1 CAGR\u8870\u51cf\u7387 0.1, 0.5, 0.99 -0.1, 1.5 target_operating_margin float 0 1 \u76ee\u6807\u8425\u4e1a\u5229\u6da6\u7387 0.25, 0.5 -0.1, 1.5 op_margin_transition_years int 1 \u65e0\u9650\u5236 \u8fc7\u6e21\u5e74\u6570 3, 5, 10 0, -1 target_debt_ratio float 0 1 \u76ee\u6807\u503a\u52a1\u6bd4\u4f8b 0.3, 0.5 -0.1, 1.5 llm_temperature float 0.0 2.0 LLM\u6e29\u5ea6\u53c2\u6570 0.0, 1.0, 2.0 -0.1, 2.1 llm_top_p float 0.0 1.0 LLM Top-P\u53c2\u6570 0.0, 0.5, 1.0 -0.1, 1.1 \u975e\u8d1f\u7ea6\u675f\u53c2\u6570 \u53c2\u6570\u540d \u7c7b\u578b \u7ea6\u675f\u6761\u4ef6 \u8bf4\u660e \u6709\u6548\u793a\u4f8b \u65e0\u6548\u793a\u4f8b cost_of_debt float >=0 \u7a0e\u524d\u503a\u52a1\u6210\u672c 0.05, 0.08 -0.01 risk_free_rate float >=0 \u65e0\u98ce\u9669\u5229\u7387 0.03, 0.035 -0.01 market_risk_premium float >=0 \u5e02\u573a\u98ce\u9669\u6ea2\u4ef7 0.05, 0.06 -0.01 exit_multiple float >=0 \u9000\u51fa\u4e58\u6570 15.0, 18.0 -1.0 perpetual_growth_rate float >=0 \u6c38\u7eed\u589e\u957f\u7387 0.03, 0.035 -0.01 llm_max_tokens int >=1 \u6700\u5927Token\u6570 1000, 4000 0, -100 \u679a\u4e3e\u503c\u7ea6\u675f\u53c2\u6570 \u53c2\u6570\u540d \u7c7b\u578b \u53ef\u9009\u503c \u8bf4\u660e \u6709\u6548\u793a\u4f8b \u65e0\u6548\u793a\u4f8b op_margin_forecast_mode string \"historical_median\", \"transition_to_target\" \u5229\u6da6\u7387\u9884\u6d4b\u6a21\u5f0f \"historical_median\" \"invalid_mode\" wacc_weight_mode string \"target\", \"market\" WACC\u6743\u91cd\u6a21\u5f0f \"target\" \"invalid_mode\" terminal_value_method string \"exit_multiple\", \"perpetual_growth\" \u7ec8\u503c\u8ba1\u7b97\u65b9\u6cd5 \"exit_multiple\" \"invalid_method\" \u6761\u4ef6\u7ea6\u675f\u53c2\u6570 \u53c2\u6570\u540d \u7c7b\u578b \u4f9d\u8d56\u6761\u4ef6 \u7ea6\u675f\u8bf4\u660e \u6709\u6548\u793a\u4f8b \u65e0\u6548\u793a\u4f8b target_operating_margin float op_margin_forecast_mode=\"transition_to_target\" \u5fc5\u987b\u63d0\u4f9b\u76ee\u6807\u5229\u6da6\u7387 0.30 null op_margin_transition_years int op_margin_forecast_mode=\"transition_to_target\" \u5fc5\u987b\u63d0\u4f9b\u8fc7\u6e21\u5e74\u6570 5 null exit_multiple float terminal_value_method=\"exit_multiple\" \u5fc5\u987b\u63d0\u4f9b\u9000\u51fa\u4e58\u6570 15.0 null perpetual_growth_rate float terminal_value_method=\"perpetual_growth\" \u5fc5\u987b\u63d0\u4f9b\u6c38\u7eed\u589e\u957f\u7387 0.03 null target_debt_ratio float wacc_weight_mode=\"target\" \u5efa\u8bae\u63d0\u4f9b\u76ee\u6807\u503a\u52a1\u6bd4\u4f8b 0.35 null \u80a1\u7968\u7b5b\u9009\u63a5\u53e3\u53c2\u6570\u7ea6\u675f \u76f8\u5bf9\u7ea6\u675f\u53c2\u6570 \u53c2\u6570\u540d \u7c7b\u578b \u7ea6\u675f\u6761\u4ef6 \u8bf4\u660e \u6709\u6548\u793a\u4f8b \u65e0\u6548\u793a\u4f8b pe_max float >=pe_min \u6700\u5927\u5e02\u76c8\u7387 30 (\u5f53pe_min=10) 10 (\u5f53pe_min=30) pb_max float >=pb_min \u6700\u5927\u5e02\u51c0\u7387 5 (\u5f53pb_min=1) 1 (\u5f53pb_min=5) market_cap_max float >=market_cap_min \u6700\u5927\u5e02\u503c 1000 (\u5f53market_cap_min=100) 100 (\u5f53market_cap_min=1000) \u975e\u8d1f\u7ea6\u675f\u53c2\u6570 \u53c2\u6570\u540d \u7c7b\u578b \u7ea6\u675f\u6761\u4ef6 \u8bf4\u660e \u6709\u6548\u793a\u4f8b \u65e0\u6548\u793a\u4f8b pe_min float >=0 \u6700\u5c0f\u5e02\u76c8\u7387 10, 0 -5 pe_max float >=0 \u6700\u5927\u5e02\u76c8\u7387 30, 9999 -10 pb_min float >=0 \u6700\u5c0f\u5e02\u51c0\u7387 1, 0 -2 pb_max float >=0 \u6700\u5927\u5e02\u51c0\u7387 5, 9999 -3 market_cap_min float >=0 \u6700\u5c0f\u5e02\u503c 100, 0 -50 market_cap_max float >=0 \u6700\u5927\u5e02\u503c 1000, 999999 -100 \u53c2\u6570\u9a8c\u8bc1\u9519\u8bef\u7801\u5bf9\u7167\u8868 \u9519\u8bef\u7c7b\u578b HTTP\u72b6\u6001\u7801 \u9519\u8bef\u7801\u793a\u4f8b \u8bf4\u660e \u53c2\u6570\u7f3a\u5931 400 field required \u5fc5\u586b\u53c2\u6570\u672a\u63d0\u4f9b \u6570\u503c\u8d85\u51fa\u8303\u56f4 400 ensure this value is less than or equal to 20 \u6570\u503c\u5927\u4e8e\u6700\u5927\u5141\u8bb8\u503c \u6570\u503c\u5c0f\u4e8e\u6700\u5c0f\u503c 400 ensure this value is greater than or equal to 0 \u6570\u503c\u5c0f\u4e8e\u6700\u5c0f\u5141\u8bb8\u503c \u679a\u4e3e\u503c\u65e0\u6548 400 value is not a valid enumeration member \u63d0\u4f9b\u7684\u503c\u4e0d\u5728\u679a\u4e3e\u8303\u56f4\u5185 \u683c\u5f0f\u9519\u8bef 400 invalid date format \u65e5\u671f\u683c\u5f0f\u4e0d\u6b63\u786e \u76f8\u5bf9\u7ea6\u675f\u8fdd\u53cd 400 ensure this value is less than or equal to maximum \u6700\u5927\u503c\u5c0f\u4e8e\u6700\u5c0f\u503c \u6761\u4ef6\u7ea6\u675f\u8fdd\u53cd 422 target_operating_margin is required when transition mode \u6761\u4ef6\u6ee1\u8db3\u65f6\u672a\u63d0\u4f9b\u5fc5\u9700\u53c2\u6570 \ud83d\udcca \u6570\u636e\u6a21\u578b \u8bf7\u6c42\u6a21\u578b\u8be6\u89e3 StockValuationRequest class StockValuationRequest(BaseModel): # \u57fa\u7840\u53c2\u6570 ts_code: str # \u80a1\u7968\u4ee3\u7801 market: Optional[str] = \"A\" # \u5e02\u573a\u6807\u8bc6 valuation_date: Optional[str] = None # \u4f30\u503c\u65e5\u671f ltm_baseline_enabled: Optional[bool] = False # \u662f\u5426\u4f7f\u7528LTM/Interim\u57fa\u671f # DCF\u5047\u8bbe\u53c2\u6570 forecast_years: int = 5 # \u9884\u6d4b\u5e74\u6570 cagr_decay_rate: Optional[float] = None # CAGR\u8870\u51cf\u7387 op_margin_forecast_mode: str = \"historical_median\" # \u5229\u6da6\u7387\u9884\u6d4b\u6a21\u5f0f # WACC\u53c2\u6570 wacc_weight_mode: str = \"target\" # WACC\u6743\u91cd\u6a21\u5f0f target_debt_ratio: Optional[float] = None # \u76ee\u6807\u503a\u52a1\u6bd4\u4f8b risk_free_rate: Optional[float] = None # \u65e0\u98ce\u9669\u5229\u7387 beta: Optional[float] = None # \u8d1d\u5854\u7cfb\u6570 # \u7ec8\u503c\u53c2\u6570 terminal_value_method: str = \"exit_multiple\" # \u7ec8\u503c\u8ba1\u7b97\u65b9\u6cd5 exit_multiple: Optional[float] = None # \u9000\u51fa\u4e58\u6570 perpetual_growth_rate: Optional[float] = None # \u6c38\u7eed\u589e\u957f\u7387 # LLM\u53c2\u6570 request_llm_summary: bool = False # LLM\u5206\u6790\u5f00\u5173 llm_provider: Optional[str] = None # LLM\u63d0\u4f9b\u5546 llm_temperature: Optional[float] = None # \u6e29\u5ea6\u53c2\u6570 # \u654f\u611f\u6027\u5206\u6790 sensitivity_analysis: Optional[SensitivityAnalysisRequest] = None SensitivityAnalysisRequest class SensitivityAnalysisRequest(BaseModel): row_axis: SensitivityAxisInput # \u884c\u8f74\u914d\u7f6e column_axis: SensitivityAxisInput # \u5217\u8f74\u914d\u7f6e class SensitivityAxisInput(BaseModel): parameter_name: str # \u53c2\u6570\u540d values: list[float] # \u6d4b\u8bd5\u503c\u5217\u8868 step: Optional[float] = None # \u6b65\u957f points: Optional[int] = None # \u70b9\u6570 \u54cd\u5e94\u6a21\u578b\u8be6\u89e3 StockValuationResponse class StockValuationResponse(BaseModel): stock_info: StockBasicInfoModel # \u80a1\u7968\u57fa\u672c\u4fe1\u606f valuation_results: ValuationResultsContainer # \u4f30\u503c\u7ed3\u679c\u5bb9\u5668 error: Optional[str] = None # \u9519\u8bef\u4fe1\u606f ValuationResultsContainer class ValuationResultsContainer(BaseModel): latest_price: Optional[float] # \u6700\u65b0\u4ef7\u683c current_pe: Optional[float] # \u5f53\u524dPE current_pb: Optional[float] # \u5f53\u524dPB dcf_forecast_details: Optional[DcfForecastDetails] # DCF\u8be6\u60c5 detailed_forecast_table: Optional[list[dict]] # \u9884\u6d4b\u8868\u683c sensitivity_analysis_result: Optional[SensitivityAnalysisResult] # \u654f\u611f\u6027\u5206\u6790 llm_analysis_summary: Optional[str] # LLM\u5206\u6790 data_warnings: Optional[list[str]] # \u6570\u636e\u8b66\u544a historical_financial_summary: Optional[list[dict]] # \u5386\u53f2\u8d22\u52a1\u6458\u8981 historical_ratios_summary: Optional[list[dict]] # \u5386\u53f2\u6bd4\u7387\u6458\u8981 special_industry_warning: Optional[str] # \u884c\u4e1a\u8b66\u544a DcfForecastDetails class DcfForecastDetails(BaseModel): enterprise_value: Optional[float] # \u4f01\u4e1a\u4ef7\u503c equity_value: Optional[float] # \u80a1\u6743\u4ef7\u503c value_per_share: Optional[float] # \u6bcf\u80a1\u4ef7\u503c wacc_used: Optional[float] # \u4f7f\u7528\u7684WACC terminal_value: Optional[float] # \u7ec8\u503c dcf_implied_diluted_pe: Optional[float] # DCF\u9690\u542bPE base_ev_ebitda: Optional[float] # EV/EBITDA implied_perpetual_growth_rate: Optional[float] # \u9690\u542b\u6c38\u7eed\u589e\u957f\u7387 # ... \u5176\u4ed6\u5b57\u6bb5 \u26a0\ufe0f \u9519\u8bef\u5904\u7406 \u9519\u8bef\u7c7b\u578b\u5206\u7c7b 1. \u53c2\u6570\u9a8c\u8bc1\u9519\u8bef (400) \u89e6\u53d1\u6761\u4ef6 : \u8bf7\u6c42\u53c2\u6570\u683c\u5f0f\u9519\u8bef\u6216\u7f3a\u5931\u5fc5\u9700\u53c2\u6570 \u9519\u8bef\u793a\u4f8b : { \"detail\": \"field required (type=value_error.missing)\" } 2. \u6570\u636e\u672a\u627e\u5230\u9519\u8bef (404) \u89e6\u53d1\u6761\u4ef6 : \u80a1\u7968\u4ee3\u7801\u4e0d\u5b58\u5728\u6216\u6570\u636e\u4e0d\u53ef\u7528 \u9519\u8bef\u793a\u4f8b : { \"detail\": \"\u65e0\u6cd5\u83b7\u53d6\u80a1\u7968\u57fa\u672c\u4fe1\u606f: 999999.SH\" } 3. \u4e1a\u52a1\u903b\u8f91\u9519\u8bef (422) \u89e6\u53d1\u6761\u4ef6 : \u53c2\u6570\u503c\u4e0d\u7b26\u5408\u4e1a\u52a1\u89c4\u5219 \u9519\u8bef\u793a\u4f8b : { \"detail\": \"\u9884\u6d4b\u671f\u5e74\u6570\u5fc5\u987b\u57281-20\u4e4b\u95f4\" } 4. \u670d\u52a1\u5668\u5185\u90e8\u9519\u8bef (500) \u89e6\u53d1\u6761\u4ef6 : \u8ba1\u7b97\u8fc7\u7a0b\u5f02\u5e38\u3001\u5916\u90e8\u670d\u52a1\u8c03\u7528\u5931\u8d25 \u9519\u8bef\u793a\u4f8b : { \"detail\": \"\u670d\u52a1\u5668\u5185\u90e8\u9519\u8bef: \u8ba1\u7b97WACC\u5931\u8d25\" } \u6ce8\u610f\uff1a - target_debt_ratio \u6307 WACC \u6743\u91cd\u7528\u7684\u503a\u52a1\u6bd4\u4f8b D/(D+E)\uff08\u5e02\u503c\u53e3\u5f84\uff09\uff0c\u8bf7\u52ff\u4e0e\u201c\u8d44\u4ea7\u8d1f\u503a\u7387\u201d\uff08\u8d26\u9762\u53e3\u5f84\uff09\u6df7\u6dc6\u3002 - \u5f53\u542f\u7528 ltm_baseline_enabled \u4e14\u7f3a\u5c11\u5fc5\u8981\u7684\u4e0a\u5e74\u540c\u53e3\u5f84\u6216\u4e0a\u5e74\u5e74\u62a5\u5bfc\u81f4 LTM \u8ba1\u7b97\u5931\u8d25\u65f6\uff0c\u7cfb\u7edf\u81ea\u52a8\u56de\u9000\u4e3a\u201c\u5e74\u62a5\u57fa\u671f\u201d\uff0c\u5e76\u5728 debug_request_slice.baseline_debug \u7ed9\u51fa\u63d0\u793a\u3002 \u9519\u8bef\u5904\u7406\u673a\u5236 1. \u8f93\u5165\u9a8c\u8bc1 # Pydantic\u6a21\u578b\u81ea\u52a8\u9a8c\u8bc1 class StockValuationRequest(BaseModel): forecast_years: int = Field(default=5, ge=1, le=20) # \u81ea\u52a8\u9a8c\u8bc1\u8303\u56f4\u7ea6\u675f 2. \u4e1a\u52a1\u903b\u8f91\u9a8c\u8bc1 # \u4e1a\u52a1\u89c4\u5219\u68c0\u67e5 if latest_price is None or latest_price <= 0: raise HTTPException( status_code=404, detail=f\"\u65e0\u6cd5\u83b7\u53d6\u6709\u6548\u7684\u6700\u65b0\u4ef7\u683c: {request.ts_code}\" ) 3. \u5f02\u5e38\u6355\u83b7\u548c\u8f6c\u6362 try: # \u4e1a\u52a1\u903b\u8f91 result = valuation_service.run_single_valuation(...) except Exception as e: logger.error(f\"Unexpected error: {e}\") raise HTTPException(status_code=500, detail=f\"\u670d\u52a1\u5668\u5185\u90e8\u9519\u8bef: {str(e)}\") 4. \u8b66\u544a\u4fe1\u606f\u5904\u7406 # \u975e\u81f4\u547d\u8b66\u544a\u6536\u96c6 all_warnings = base_data_warnings + base_run_warnings data_warnings = list(set(all_warnings)) if all_warnings else None \u6570\u636e\u9a8c\u8bc1\u89c4\u5219 \u6570\u503c\u8303\u56f4\u9a8c\u8bc1 forecast_years : 1-20\u5e74 target_operating_margin : 0-1\u4e4b\u95f4 llm_temperature : 0.0-2.0\u4e4b\u95f4 llm_top_p : 0.0-1.0\u4e4b\u95f4 \u683c\u5f0f\u9a8c\u8bc1 ts_code : \u7b26\u5408\u80a1\u7968\u4ee3\u7801\u683c\u5f0f (\u5982 600519.SH) valuation_date : YYYY-MM-DD\u683c\u5f0f wacc_weight_mode : \u679a\u4e3e\u503c (target/market) \u4e1a\u52a1\u89c4\u5219\u9a8c\u8bc1 \u5386\u53f2\u6570\u636e\u5b8c\u6574\u6027\u68c0\u67e5 \u8d22\u52a1\u6570\u636e\u6709\u6548\u6027\u9a8c\u8bc1 \u8ba1\u7b97\u7ed3\u679c\u5408\u7406\u6027\u9a8c\u8bc1 \ud83d\ude80 \u90e8\u7f72\u548c\u6d4b\u8bd5 \u73af\u5883\u8981\u6c42 Python 3.8+ FastAPI 0.100+ uvicorn 0.20+ pandas 2.0+ pydantic 2.0+ \u672c\u5730\u90e8\u7f72 # \u5b89\u88c5\u4f9d\u8d56 pip install -e . # \u542f\u52a8\u670d\u52a1 uvicorn src.api.main:app --reload --host 0.0.0.0 --port 8124 # \u6216\u4f7f\u7528\u9879\u76ee\u811a\u672c python -m uvicorn src.api.main:app --reload --host 0.0.0.0 --port 8124 \u751f\u4ea7\u90e8\u7f72 # \u4f7f\u7528gunicorn\u542f\u52a8 gunicorn src.api.main:app -w 4 -k uvicorn.workers.UvicornWorker --bind 0.0.0.0:8124 # \u4f7f\u7528docker docker build -t stock-valuation-api . docker run -p 8124:8124 stock-valuation-api API\u6587\u6863 \u542f\u52a8\u670d\u52a1\u540e\u8bbf\u95ee\uff1a - Swagger UI: http://localhost:8124/docs - ReDoc: http://localhost:8124/redoc - OpenAPI Schema: http://localhost:8124/openapi.json \u6d4b\u8bd5\u811a\u672c 1. \u5065\u5eb7\u68c0\u67e5\u6d4b\u8bd5 # \u57fa\u7840\u5065\u5eb7\u68c0\u67e5 curl http://localhost:8124/ # \u9884\u671f\u54cd\u5e94 # {\"message\": \"Welcome to the Stock Valuation API (Streamlit Backend)\"} 2. \u80a1\u7968\u4f30\u503c\u6d4b\u8bd5 \u57fa\u7840\u4f30\u503c\u6d4b\u8bd5 curl -X POST \"http://localhost:8124/api/v1/valuation\" \\ -H \"Content-Type: application/json\" \\ -d '{ \"ts_code\": \"600519.SH\", \"forecast_years\": 5, \"request_llm_summary\": false }' \u5b8c\u6574\u53c2\u6570\u4f30\u503c\u6d4b\u8bd5 curl -X POST \"http://localhost:8124/api/v1/valuation\" \\ -H \"Content-Type: application/json\" \\ -d '{ \"ts_code\": \"600519.SH\", \"market\": \"A\", \"valuation_date\": \"2024-12-31\", \"forecast_years\": 10, \"cagr_decay_rate\": 0.15, \"op_margin_forecast_mode\": \"transition_to_target\", \"target_operating_margin\": 0.30, \"op_margin_transition_years\": 5, \"wacc_weight_mode\": \"target\", \"target_debt_ratio\": 0.35, \"cost_of_debt\": 0.045, \"risk_free_rate\": 0.03, \"beta\": 1.1, \"market_risk_premium\": 0.055, \"size_premium\": 0.015, \"terminal_value_method\": \"exit_multiple\", \"exit_multiple\": 16.5, \"request_llm_summary\": true, \"llm_provider\": \"deepseek\", \"llm_model_id\": \"deepseek-chat\", \"llm_temperature\": 0.8, \"llm_top_p\": 0.9, \"llm_max_tokens\": 3000 }' \u654f\u611f\u6027\u5206\u6790\u6d4b\u8bd5 curl -X POST \"http://localhost:8124/api/v1/valuation\" \\ -H \"Content-Type: application/json\" \\ -d '{ \"ts_code\": \"600519.SH\", \"forecast_years\": 5, \"sensitivity_analysis\": { \"row_axis\": { \"parameter_name\": \"wacc\", \"values\": [0.08, 0.09, 0.10, 0.11], \"step\": 0.01, \"points\": 4 }, \"column_axis\": { \"parameter_name\": \"exit_multiple\", \"values\": [14, 16, 18, 20], \"step\": 2, \"points\": 4 } } }' \u8fb9\u754c\u503c\u6d4b\u8bd5 # \u6d4b\u8bd5\u6700\u5c0f\u9884\u6d4b\u5e74\u6570 curl -X POST \"http://localhost:8124/api/v1/valuation\" \\ -H \"Content-Type: application/json\" \\ -d '{ \"ts_code\": \"600519.SH\", \"forecast_years\": 1 }' # \u6d4b\u8bd5\u6700\u5927\u9884\u6d4b\u5e74\u6570 curl -X POST \"http://localhost:8124/api/v1/valuation\" \\ -H \"Content-Type: application/json\" \\ -d '{ \"ts_code\": \"600519.SH\", \"forecast_years\": 20 }' # \u6d4b\u8bd5LLM\u53c2\u6570\u8fb9\u754c\u503c curl -X POST \"http://localhost:8124/api/v1/valuation\" \\ -H \"Content-Type: application/json\" \\ -d '{ \"ts_code\": \"600519.SH\", \"forecast_years\": 5, \"request_llm_summary\": true, \"llm_temperature\": 0.0, \"llm_top_p\": 1.0, \"llm_max_tokens\": 100 }' \u9519\u8bef\u8bf7\u6c42\u6d4b\u8bd5 # \u6d4b\u8bd5\u65e0\u6548\u80a1\u7968\u4ee3\u7801 curl -X POST \"http://localhost:8124/api/v1/valuation\" \\ -H \"Content-Type: application/json\" \\ -d '{ \"ts_code\": \"999999.SH\", \"forecast_years\": 5 }' # \u6d4b\u8bd5\u53c2\u6570\u8d85\u51fa\u8303\u56f4 curl -X POST \"http://localhost:8124/api/v1/valuation\" \\ -H \"Content-Type: application/json\" \\ -d '{ \"ts_code\": \"600519.SH\", \"forecast_years\": 25, \"cagr_decay_rate\": 1.5, \"llm_temperature\": 3.0 }' 3. \u6570\u636e\u66f4\u65b0\u6d4b\u8bd5 \u80a1\u7968\u57fa\u672c\u4fe1\u606f\u66f4\u65b0\u6d4b\u8bd5 # \u57fa\u7840\u66f4\u65b0 curl -X POST \"http://localhost:8124/update_stock_basic\" \\ -H \"Content-Type: application/json\" \\ -d '{}' # \u9884\u671f\u6210\u529f\u54cd\u5e94 # { # \"status\": \"success\", # \"message\": \"\u80a1\u7968\u57fa\u672c\u4fe1\u606f\u66f4\u65b0\u6210\u529f\uff0c\u51715,234\u6761\u8bb0\u5f55\", # \"count\": 5234 # } \u6bcf\u65e5\u884c\u60c5\u66f4\u65b0\u6d4b\u8bd5 # \u66f4\u65b0\u6bcf\u65e5\u884c\u60c5 curl -X POST \"http://localhost:8124/update_daily_basic\" \\ -H \"Content-Type: application/json\" \\ -d '{}' # \u9884\u671f\u6210\u529f\u54cd\u5e94 # { # \"status\": \"success\", # \"message\": \"\u6bcf\u65e5\u884c\u60c5\u6307\u6807\u66f4\u65b0\u6210\u529f\uff0c\u51714,856\u6761\u8bb0\u5f55\", # \"count\": 4856 # } 4. \u80a1\u7968\u7b5b\u9009\u6d4b\u8bd5 \u57fa\u7840\u7b5b\u9009\u6d4b\u8bd5 # \u4f4ePE\u80a1\u7968\u7b5b\u9009 curl -X POST \"http://localhost:8124/screen_stocks\" \\ -H \"Content-Type: application/json\" \\ -d '{ \"pe_min\": 0, \"pe_max\": 15, \"market_cap_min\": 100 }' # \u5927\u76d8\u84dd\u7b79\u80a1\u7b5b\u9009 curl -X POST \"http://localhost:8124/screen_stocks\" \\ -H \"Content-Type: application/json\" \\ -d '{ \"market_cap_min\": 1000, \"pe_max\": 25, \"pb_max\": 5 }' # \u4ef7\u503c\u80a1\u7b5b\u9009 curl -X POST \"http://localhost:8124/screen_stocks\" \\ -H \"Content-Type: application/json\" \\ -d '{ \"pe_max\": 15, \"pb_max\": 2, \"market_cap_max\": 500 }' \u8fb9\u754c\u503c\u6d4b\u8bd5 # \u6d4b\u8bd5\u6781\u503c\u7b5b\u9009 curl -X POST \"http://localhost:8124/screen_stocks\" \\ -H \"Content-Type: application/json\" \\ -d '{ \"pe_min\": 0, \"pe_max\": 9999, \"pb_min\": 0, \"pb_max\": 9999, \"market_cap_min\": 0, \"market_cap_max\": 999999 }' # \u6d4b\u8bd5\u7a7a\u7b5b\u9009\u6761\u4ef6 curl -X POST \"http://localhost:8124/screen_stocks\" \\ -H \"Content-Type: application/json\" \\ -d '{}' \u9519\u8bef\u8bf7\u6c42\u6d4b\u8bd5 # \u6d4b\u8bd5\u65e0\u6548\u53c2\u6570\u7ec4\u5408 curl -X POST \"http://localhost:8124/screen_stocks\" \\ -H \"Content-Type: application/json\" \\ -d '{ \"pe_min\": 30, \"pe_max\": 10, \"market_cap_min\": 5000, \"market_cap_max\": 1000 }' # \u6d4b\u8bd5\u8d1f\u503c curl -X POST \"http://localhost:8124/screen_stocks\" \\ -H \"Content-Type: application/json\" \\ -d '{ \"pe_min\": -5, \"pb_min\": -1 }' \u6027\u80fd\u6d4b\u8bd5 \u5e76\u53d1\u6d4b\u8bd5 # \u4f7f\u7528ab\u6d4b\u8bd5 ab -n 100 -c 10 -p test_request.json -T application/json http://localhost:8124/api/v1/valuation # \u4f7f\u7528wrk\u6d4b\u8bd5 wrk -t12 -c400 -d30s -s post.lua http://localhost:8124/api/v1/valuation \u54cd\u5e94\u65f6\u95f4\u76d1\u63a7 \u5355\u6b21\u4f30\u503c\u8bf7\u6c42: 3-10\u79d2 (\u53d6\u51b3\u4e8eLLM\u8c03\u7528) \u6570\u636e\u66f4\u65b0\u8bf7\u6c42: 10-60\u79d2 \u80a1\u7968\u7b5b\u9009\u8bf7\u6c42: 1-3\u79d2 \ud83d\udca1 \u4f7f\u7528\u793a\u4f8b Python\u5ba2\u6237\u7aef\u793a\u4f8b import requests import json # API\u914d\u7f6e API_BASE_URL = \"http://localhost:8124\" def calculate_stock_valuation(ts_code, forecast_years=5, request_llm=True): \"\"\"\u8ba1\u7b97\u80a1\u7968\u4f30\u503c\"\"\" # \u6784\u5efa\u8bf7\u6c42\u53c2\u6570 request_data = { \"ts_code\": ts_code, \"forecast_years\": forecast_years, \"request_llm_summary\": request_llm, \"terminal_value_method\": \"exit_multiple\", \"wacc_weight_mode\": \"target\", # \u53ef\u9009\uff1a\u81ea\u5b9a\u4e49WACC\u53c2\u6570 \"risk_free_rate\": 0.03, \"market_risk_premium\": 0.05, \"beta\": 1.0 } try: # \u53d1\u9001\u8bf7\u6c42 response = requests.post( f\"{API_BASE_URL}/api/v1/valuation\", headers={\"Content-Type\": \"application/json\"}, json=request_data, timeout=60 # 60\u79d2\u8d85\u65f6 ) response.raise_for_status() result = response.json() # \u89e3\u6790\u7ed3\u679c stock_info = result[\"stock_info\"] valuation = result[\"valuation_results\"] dcf_details = valuation[\"dcf_forecast_details\"] print(f\"\u80a1\u7968: {stock_info['name']} ({stock_info['ts_code']})\") print(f\"\u5f53\u524d\u4ef7\u683c: {valuation['latest_price']:.2f}\") print(f\"DCF\u4f30\u503c: {dcf_details['value_per_share']:.2f}\") print(f\"\u4f30\u503c\u5dee\u5f02: {((dcf_details['value_per_share'] / valuation['latest_price'] - 1) * 100):.1f}%\") if valuation[\"llm_analysis_summary\"]: print(\"\\n=== LLM\u5206\u6790 ===\") print(valuation[\"llm_analysis_summary\"]) return result except requests.exceptions.RequestException as e: print(f\"\u8bf7\u6c42\u5931\u8d25: {e}\") return None def screen_stocks(pe_min=None, pe_max=None, market_cap_min=None): \"\"\"\u7b5b\u9009\u80a1\u7968\"\"\" request_data = {} if pe_min is not None: request_data[\"pe_min\"] = pe_min if pe_max is not None: request_data[\"pe_max\"] = pe_max if market_cap_min is not None: request_data[\"market_cap_min\"] = market_cap_min try: response = requests.post( f\"{API_BASE_URL}/screen_stocks\", headers={\"Content-Type\": \"application/json\"}, json=request_data ) response.raise_for_status() result = response.json() print(f\"\u627e\u5230 {result['count']} \u53ea\u7b26\u5408\u6761\u4ef6\u7684\u80a1\u7968:\") for stock in result[\"data\"][:10]: # \u663e\u793a\u524d10\u53ea print(f\"{stock['name']} ({stock['ts_code']}): PE={stock['pe']:.1f}, \u5e02\u503c={stock['total_mv']:.0f}\u4ebf\") return result except requests.exceptions.RequestException as e: print(f\"\u7b5b\u9009\u5931\u8d25: {e}\") return None # \u4f7f\u7528\u793a\u4f8b if __name__ == \"__main__\": # \u8ba1\u7b97\u8d35\u5dde\u8305\u53f0\u4f30\u503c result = calculate_stock_valuation(\"600519.SH\", forecast_years=5) # \u7b5b\u9009\u4f4ePE\u80a1\u7968 screen_stocks(pe_min=0, pe_max=20, market_cap_min=100) JavaScript\u5ba2\u6237\u7aef\u793a\u4f8b // API\u914d\u7f6e const API_BASE_URL = 'http://localhost:8124'; // \u8ba1\u7b97\u80a1\u7968\u4f30\u503c async function calculateStockValuation(tsCode, options = {}) { const requestData = { ts_code: tsCode, forecast_years: options.forecastYears || 5, request_llm_summary: options.requestLLM || false, ...options }; try { const response = await fetch(`${API_BASE_URL}/api/v1/valuation`, { method: 'POST', headers: { 'Content-Type': 'application/json', }, body: JSON.stringify(requestData) }); if (!response.ok) { throw new Error(`HTTP error! status: ${response.status}`); } const result = await response.json(); console.log(`\u80a1\u7968: ${result.stock_info.name} (${result.stock_info.ts_code})`); console.log(`\u5f53\u524d\u4ef7\u683c: ${result.valuation_results.latest_price}`); console.log(`DCF\u4f30\u503c: ${result.valuation_results.dcf_forecast_details.value_per_share}`); return result; } catch (error) { console.error('\u8bf7\u6c42\u5931\u8d25:', error); throw error; } } // \u80a1\u7968\u7b5b\u9009 async function screenStocks(filters = {}) { const requestData = {}; if (filters.peMin !== undefined) requestData.pe_min = filters.peMin; if (filters.peMax !== undefined) requestData.pe_max = filters.peMax; if (filters.marketCapMin !== undefined) requestData.market_cap_min = filters.marketCapMin; try { const response = await fetch(`${API_BASE_URL}/screen_stocks`, { method: 'POST', headers: { 'Content-Type': 'application/json', }, body: JSON.stringify(requestData) }); if (!response.ok) { throw new Error(`HTTP error! status: ${response.status}`); } const result = await response.json(); console.log(`\u627e\u5230 ${result.count} \u53ea\u7b26\u5408\u6761\u4ef6\u7684\u80a1\u7968`); return result; } catch (error) { console.error('\u7b5b\u9009\u5931\u8d25:', error); throw error; } } // \u4f7f\u7528\u793a\u4f8b (async () => { try { // \u8ba1\u7b97\u4f30\u503c const valuation = await calculateStockValuation('600519.SH', { forecastYears: 5, requestLLM: true }); // \u7b5b\u9009\u80a1\u7968 const screened = await screenStocks({ peMin: 0, peMax: 20, marketCapMin: 100 }); } catch (error) { console.error('API\u8c03\u7528\u5931\u8d25:', error); } })(); \u6279\u91cf\u5904\u7406\u793a\u4f8b import asyncio import aiohttp import json async def batch_valuation(session, stock_codes): \"\"\"\u6279\u91cf\u8ba1\u7b97\u80a1\u7968\u4f30\u503c\"\"\" tasks = [] for ts_code in stock_codes: task = calculate_single_valuation(session, ts_code) tasks.append(task) results = await asyncio.gather(*tasks, return_exceptions=True) return results async def calculate_single_valuation(session, ts_code): \"\"\"\u5355\u53ea\u80a1\u7968\u4f30\u503c\"\"\" request_data = { \"ts_code\": ts_code, \"forecast_years\": 5, \"request_llm_summary\": False # \u6279\u91cf\u65f6\u5173\u95edLLM\u4ee5\u63d0\u9ad8\u901f\u5ea6 } try: async with session.post( f\"{API_BASE_URL}/api/v1/valuation\", json=request_data, timeout=aiohttp.ClientTimeout(total=30) ) as response: result = await response.json() return { \"ts_code\": ts_code, \"success\": True, \"data\": result } except Exception as e: return { \"ts_code\": ts_code, \"success\": False, \"error\": str(e) } # \u4f7f\u7528\u793a\u4f8b async def main(): stock_codes = [\"600519.SH\", \"000858.SZ\", \"600036.SH\"] async with aiohttp.ClientSession() as session: results = await batch_valuation(session, stock_codes) for result in results: if result[\"success\"]: stock_info = result[\"data\"][\"stock_info\"] dcf_details = result[\"data\"][\"valuation_results\"][\"dcf_forecast_details\"] print(f\"{stock_info['name']}: {dcf_details['value_per_share']:.2f}\") else: print(f\"{result['ts_code']}: \u5931\u8d25 - {result['error']}\") if __name__ == \"__main__\": asyncio.run(main()) \ud83d\udcdd \u6700\u4f73\u5b9e\u8df5 1. \u8bf7\u6c42\u4f18\u5316 \u6279\u91cf\u5904\u7406 : \u4f7f\u7528\u5f02\u6b65\u8bf7\u6c42\u6279\u91cf\u5904\u7406\u591a\u53ea\u80a1\u7968 \u7f13\u5b58\u7b56\u7565 : \u5bf9\u76f8\u540c\u53c2\u6570\u7684\u4f30\u503c\u7ed3\u679c\u8fdb\u884c\u7f13\u5b58 \u8d85\u65f6\u8bbe\u7f6e : \u6839\u636e\u7f51\u7edc\u73af\u5883\u5408\u7406\u8bbe\u7f6e\u8d85\u65f6\u65f6\u95f4 \u91cd\u8bd5\u673a\u5236 : \u5bf9\u4e34\u65f6\u6027\u9519\u8bef\u5b9e\u73b0\u6307\u6570\u9000\u907f\u91cd\u8bd5 2. \u9519\u8bef\u5904\u7406 \u53c2\u6570\u9a8c\u8bc1 : \u5728\u53d1\u9001\u8bf7\u6c42\u524d\u9a8c\u8bc1\u53c2\u6570\u683c\u5f0f \u72b6\u6001\u7801\u68c0\u67e5 : \u68c0\u67e5HTTP\u72b6\u6001\u7801\u548c\u4e1a\u52a1\u9519\u8bef\u7801 \u5f02\u5e38\u6355\u83b7 : \u6355\u83b7\u7f51\u7edc\u5f02\u5e38\u548c\u89e3\u6790\u5f02\u5e38 \u65e5\u5fd7\u8bb0\u5f55 : \u8bb0\u5f55\u8bf7\u6c42\u548c\u54cd\u5e94\u4fe1\u606f\u7528\u4e8e\u8c03\u8bd5 3. \u6027\u80fd\u4f18\u5316 \u5e76\u53d1\u63a7\u5236 : \u5408\u7406\u63a7\u5236\u5e76\u53d1\u8bf7\u6c42\u6570\u91cf LLM\u8c03\u7528 : \u6279\u91cf\u5904\u7406\u65f6\u5173\u95edLLM\u5206\u6790\u4ee5\u63d0\u9ad8\u901f\u5ea6 \u6570\u636e\u5206\u9875 : \u5bf9\u5927\u91cf\u7ed3\u679c\u8fdb\u884c\u5206\u9875\u5904\u7406 \u8fde\u63a5\u6c60 : \u4f7f\u7528HTTP\u8fde\u63a5\u6c60\u51cf\u5c11\u8fde\u63a5\u5f00\u9500 4. \u5b89\u5168\u8003\u8651 HTTPS : \u751f\u4ea7\u73af\u5883\u4f7f\u7528HTTPS\u534f\u8bae \u8ba4\u8bc1\u6388\u6743 : \u5b9e\u73b0API\u5bc6\u94a5\u6216OAuth\u8ba4\u8bc1 \u9650\u6d41\u63a7\u5236 : \u5b9e\u73b0\u8bf7\u6c42\u9891\u7387\u9650\u5236 \u8f93\u5165\u9a8c\u8bc1 : \u4e25\u683c\u9a8c\u8bc1\u6240\u6709\u8f93\u5165\u53c2\u6570 \ud83d\udd27 \u6545\u969c\u6392\u9664 \u5e38\u89c1\u95ee\u9898 1. \u8fde\u63a5\u8d85\u65f6 \u95ee\u9898 : \u8bf7\u6c42\u8d85\u65f6\u5931\u8d25 \u89e3\u51b3 : - \u589e\u52a0\u8d85\u65f6\u65f6\u95f4\u523060\u79d2 - \u68c0\u67e5\u7f51\u7edc\u8fde\u63a5 - \u9a8c\u8bc1\u670d\u52a1\u662f\u5426\u6b63\u5e38\u8fd0\u884c 2. \u6570\u636e\u672a\u627e\u5230 \u95ee\u9898 : \u8fd4\u56de404\u9519\u8bef \u89e3\u51b3 : - \u9a8c\u8bc1\u80a1\u7968\u4ee3\u7801\u683c\u5f0f - \u68c0\u67e5\u6570\u636e\u662f\u5426\u5df2\u66f4\u65b0 - \u786e\u8ba4\u80a1\u7968\u662f\u5426\u5b58\u5728 3. \u8ba1\u7b97\u5931\u8d25 \u95ee\u9898 : \u8fd4\u56de500\u9519\u8bef \u89e3\u51b3 : - \u68c0\u67e5\u8bf7\u6c42\u53c2\u6570\u662f\u5426\u5408\u7406 - \u67e5\u770b\u670d\u52a1\u5668\u65e5\u5fd7 - \u9a8c\u8bc1\u8d22\u52a1\u6570\u636e\u5b8c\u6574\u6027 4. LLM\u8c03\u7528\u5931\u8d25 \u95ee\u9898 : LLM\u5206\u6790\u8fd4\u56de\u9519\u8bef \u89e3\u51b3 : - \u68c0\u67e5LLM\u670d\u52a1\u914d\u7f6e - \u9a8c\u8bc1API\u5bc6\u94a5\u548c\u7f51\u7edc\u8fde\u63a5 - \u5c1d\u8bd5\u4f7f\u7528\u4e0d\u540c\u7684LLM\u63d0\u4f9b\u5546 \u8c03\u8bd5\u6280\u5de7 1. \u542f\u7528\u8be6\u7ec6\u65e5\u5fd7 # \u8bbe\u7f6e\u65e5\u5fd7\u7ea7\u522b\u4e3aDEBUG export LOG_LEVEL=DEBUG uvicorn src.api.main:app --reload 2. \u4f7f\u7528Swagger UI \u8bbf\u95ee http://localhost:8124/docs \u8fdb\u884c\u4ea4\u4e92\u5f0f\u6d4b\u8bd5 3. \u68c0\u67e5\u8bf7\u6c42/\u54cd\u5e94 import logging # \u542f\u7528\u8bf7\u6c42\u65e5\u5fd7 logging.basicConfig(level=logging.DEBUG) 4. \u9a8c\u8bc1\u6570\u636e\u683c\u5f0f # \u4f7f\u7528Pydantic\u9a8c\u8bc1\u6570\u636e from pydantic import ValidationError try: request = StockValuationRequest(**data) except ValidationError as e: print(f\"\u9a8c\u8bc1\u9519\u8bef: {e}\") \ud83d\udcca \u76d1\u63a7\u548c\u8fd0\u7ef4 \u5173\u952e\u6307\u6807 \u54cd\u5e94\u65f6\u95f4 : \u5355\u6b21\u8bf7\u6c42\u5904\u7406\u65f6\u95f4 \u9519\u8bef\u7387 : HTTP\u9519\u8bef\u7801\u5206\u5e03 \u5e76\u53d1\u6570 : \u540c\u65f6\u5904\u7406\u7684\u8bf7\u6c42\u6570 \u5185\u5b58\u4f7f\u7528 : \u670d\u52a1\u5185\u5b58\u5360\u7528 CPU\u4f7f\u7528 : \u670d\u52a1CPU\u5360\u7528\u7387 \u65e5\u5fd7\u76d1\u63a7 # \u5173\u952e\u65e5\u5fd7\u6a21\u5f0f INFO - Received valuation request for: 600519.SH INFO - Step 1: Fetching data... INFO - Step 2: Processing data... INFO - Base case valuation successful. ERROR - Error during LLM call: API timeout \u5065\u5eb7\u68c0\u67e5 # \u57fa\u7840\u5065\u5eb7\u68c0\u67e5 curl http://localhost:8124/ # \u8be6\u7ec6\u5065\u5eb7\u68c0\u67e5 curl http://localhost:8124/health \u6027\u80fd\u4f18\u5316\u5efa\u8bae \u6570\u636e\u5e93\u4f18\u5316 : \u6dfb\u52a0\u9002\u5f53\u7684\u7d22\u5f15 \u7f13\u5b58\u7b56\u7565 : \u5b9e\u73b0Redis\u7f13\u5b58 \u5f02\u6b65\u5904\u7406 : \u4f7f\u7528\u5f02\u6b65I/O\u63d0\u9ad8\u5e76\u53d1 \u8d1f\u8f7d\u5747\u8861 : \u90e8\u7f72\u591a\u5b9e\u4f8b\u5206\u62c5\u8d1f\u8f7d \ud83d\udcc5 \u6700\u65b0\u66f4\u65b0\u8bb0\u5f55 v3.0.0 (2025-09-22) \u91cd\u5927\u529f\u80fd\u66f4\u65b0 : - \u2705 TuShare\u6570\u636e\u6e90 : \u5b8c\u5168\u96c6\u6210TuShare API\uff0c\u652f\u6301\u6570\u636e\u6e90\u70ed\u5207\u6362 - \u2705 LTM\u57fa\u7ebf\u529f\u80fd : \u65b0\u589eLast Twelve Months\u6536\u5165\u57fa\u671f\u652f\u6301 - \u2705 \u6570\u636e\u6e05\u6d17\u4f18\u5316 : \u4fee\u590d\u8d44\u4ea7\u8d1f\u503a\u8868\u57fa\u51c6\u65e5\u56de\u9000\u95ee\u9898\uff0c\u4fdd\u62a4\u5173\u952e\u79d1\u76ee - \u2705 \u654f\u611f\u6027\u5206\u6790\u589e\u5f3a : \u65b0\u589eEV/EBITDA\u500d\u6570\u3001\u9690\u542bPE/PGR\u7b49\u6307\u6807 - \u2705 \u751f\u4ea7\u7ea7\u90e8\u7f72 : \u5b8c\u6574\u7684\u9519\u8bef\u5904\u7406\u3001\u515c\u5e95\u673a\u5236\u548c\u76d1\u63a7\u80fd\u529b API\u63a5\u53e3\u66f4\u65b0 : - \u65b0\u589e ltm_baseline_enabled \u53c2\u6570\u542f\u7528LTM\u57fa\u7ebf - \u589e\u5f3a\u4f30\u503c\u54cd\u5e94\u5b57\u6bb5\uff0c\u5305\u542b\u66f4\u591a\u8bca\u65ad\u4fe1\u606f - \u4f18\u5316\u9519\u8bef\u5904\u7406\u548c\u7528\u6237\u53cb\u597d\u7684\u9519\u8bef\u6d88\u606f \u6570\u636e\u8d28\u91cf\u63d0\u5347 : - TuShare\u4e0ePostgreSQL\u6570\u636e\u6e90\u7aef\u5230\u7aef\u9a8c\u8bc1\u5b8c\u6210 - \u5173\u952e\u4f30\u503c\u6307\u6807(EV/VPS/CAGR/EBITDA)\u5bf9\u9f50\u786e\u8ba4 - \u6309\u5e74\u62e9\u4f18\u6570\u636e\u9009\u62e9\u7b56\u7565\uff0c\u786e\u4fdd\u4f7f\u7528\u6700\u65b0\u5e74\u62a5 \u6027\u80fd\u4f18\u5316 : - \u6570\u636e\u83b7\u53d6\u94fe\u8def\u4f18\u5316\uff0c\u51cf\u5c11API\u8c03\u7528\u6b21\u6570 - Decimal\u7cbe\u5ea6\u8ba1\u7b97\uff0c\u907f\u514d\u6d6e\u70b9\u8bef\u5dee - \u5f02\u6b65\u5904\u7406\u652f\u6301\uff0c\u63d0\u9ad8\u5e76\u53d1\u5904\u7406\u80fd\u529b v2.x.x (2025-09\u4e4b\u524d) \u5386\u53f2\u529f\u80fd : - \u57fa\u7840DCF\u4f30\u503c\u8ba1\u7b97 - PostgreSQL\u6570\u636e\u6e90\u96c6\u6210 - Streamlit\u524d\u7aef - \u57fa\u7840\u654f\u611f\u6027\u5206\u6790 - \u80a1\u7968\u7b5b\u9009\u5668 \u4e0b\u4e00\u7248\u672c\u8ba1\u5212 (v3.1.0) \u8ba1\u5212\u529f\u80fd : - \u6027\u80fd\u7f13\u5b58\u673a\u5236 - \u6279\u91cf\u4f30\u503cAPI - \u66f4\u591a\u884c\u4e1a\u6a21\u578b\u652f\u6301 - \u5b9e\u65f6\u6570\u636e\u6d41\u5904\u7406 \u8fd9\u4efdAPI\u6587\u6863\u63d0\u4f9b\u4e86\u5b8c\u6574\u7684\u6280\u672f\u89c4\u683c\u548c\u4f7f\u7528\u6307\u5357\uff0c\u65b9\u4fbf\u5176\u4ed6\u9879\u76ee\u8fdb\u884c\u5bf9\u63a5\u548c\u6d4b\u8bd5\u3002\u9879\u76ee\u5df2\u8fbe\u5230\u751f\u4ea7\u7ea7\u6807\u51c6\uff0c\u5177\u5907\u5b8c\u6574\u7684\u4f30\u503c\u5206\u6790\u80fd\u529b\u3002\u5982\u6709\u4efb\u4f55\u95ee\u9898\uff0c\u8bf7\u53c2\u8003\u6545\u969c\u6392\u9664\u90e8\u5206\u6216\u8054\u7cfb\u6280\u672f\u652f\u6301\u3002","title":"Stock Valuation API \u540e\u7aef\u63a5\u53e3\u8be6\u7ec6\u5206\u6790\u6587\u6863"},{"location":"archived/api_backend_comprehensive_analysis/#stock-valuation-api","text":"\u6700\u540e\u66f4\u65b0: 2025-09-22","title":"Stock Valuation API \u540e\u7aef\u63a5\u53e3\u8be6\u7ec6\u5206\u6790\u6587\u6863"},{"location":"archived/api_backend_comprehensive_analysis/#_1","text":"API\u6982\u89c8 \u63a5\u53e3\u8be6\u60c5 1. \u6839\u8def\u5f84\u63a5\u53e3 2. \u80a1\u7968\u4f30\u503c\u63a5\u53e3 3. \u654f\u611f\u6027\u5206\u6790\u63a5\u53e3 4. \u80a1\u7968\u7b5b\u9009\u63a5\u53e3 \u6570\u636e\u6a21\u578b \u9519\u8bef\u5904\u7406 \u90e8\u7f72\u548c\u6d4b\u8bd5 \u4f7f\u7528\u793a\u4f8b \u6700\u65b0\u66f4\u65b0\u8bb0\u5f55","title":"\ud83d\udccb \u76ee\u5f55"},{"location":"archived/api_backend_comprehensive_analysis/#api","text":"","title":"\ud83c\udf10 API\u6982\u89c8"},{"location":"archived/api_backend_comprehensive_analysis/#_2","text":"\u670d\u52a1\u540d\u79f0 : Stock Valuation API \u7248\u672c : 3.0.0 \u6846\u67b6 : FastAPI \u7aef\u53e3 : 8124 \u534f\u8bae : HTTP/HTTPS \u6570\u636e\u683c\u5f0f : JSON \u6570\u636e\u6e90 : TuShare(\u4e3b\u8981) + PostgreSQL(\u9a8c\u8bc1)","title":"\u57fa\u672c\u4fe1\u606f"},{"location":"archived/api_backend_comprehensive_analysis/#_3","text":"DCF\u4f30\u503c\u8ba1\u7b97 : \u57fa\u4e8e\u6298\u73b0\u73b0\u91d1\u6d41\u7684\u4f01\u4e1a\u4f30\u503c\u5206\u6790\uff0c\u652f\u6301\u9000\u51fa\u500d\u6570\u6cd5\u548c\u6c38\u7eed\u589e\u957f\u6cd5 \u654f\u611f\u6027\u5206\u6790 : \u591a\u7ef4\u5ea6\u53c2\u6570\u654f\u611f\u6027\u5206\u6790\uff0c\u751f\u6210sensitivity table \u80a1\u7968\u7b5b\u9009 : \u57fa\u4e8e\u8d22\u52a1\u6307\u6807\u7684\u591a\u6761\u4ef6\u80a1\u7968\u7b5b\u9009\u5668 LLM\u667a\u80fd\u5206\u6790 : \u96c6\u6210DeepSeek/OpenAI\u517c\u5bb9\u6a21\u578b\u751f\u6210\u6295\u8d44\u5206\u6790\u62a5\u544a LTM\u57fa\u7ebf : \u652f\u6301Last Twelve Months\u6536\u5165\u57fa\u671f\uff0c\u63d0\u5347\u65f6\u6548\u6027 LLM\u667a\u80fd\u5206\u6790 : \u96c6\u6210\u5927\u8bed\u8a00\u6a21\u578b\u7684\u6295\u8d44\u5efa\u8bae \u6570\u636e\u7ba1\u7406 : \u80a1\u7968\u57fa\u672c\u4fe1\u606f\u548c\u884c\u60c5\u6570\u636e\u66f4\u65b0 \u80a1\u7968\u7b5b\u9009 : \u57fa\u4e8e\u8d22\u52a1\u6307\u6807\u7684\u80a1\u7968\u7b5b\u9009\u5668","title":"\u6838\u5fc3\u529f\u80fd"},{"location":"archived/api_backend_comprehensive_analysis/#_4","text":"FastAPI App \u251c\u2500\u2500 CORS Middleware (\u8de8\u57df\u652f\u6301) \u251c\u2500\u2500 Routes (\u8def\u7531\u5c42) \u2502 \u251c\u2500\u2500 Main Routes (\u4e3b\u8981\u4e1a\u52a1\u63a5\u53e3) \u2502 \u251c\u2500\u2500 Data Update Routes (\u6570\u636e\u66f4\u65b0\u63a5\u53e3) \u2502 \u2514\u2500\u2500 Stock Screener Routes (\u80a1\u7968\u7b5b\u9009\u63a5\u53e3) \u251c\u2500\u2500 Services (\u4e1a\u52a1\u670d\u52a1\u5c42) \u2502 \u251c\u2500\u2500 ValuationService (\u4f30\u503c\u670d\u52a1) \u2502 \u251c\u2500\u2500 DataProcessor (\u6570\u636e\u5904\u7406\u670d\u52a1) \u2502 \u2514\u2500\u2500 LLM Utils (LLM\u8c03\u7528\u5de5\u5177) \u251c\u2500\u2500 Core Calculators (\u6838\u5fc3\u8ba1\u7b97\u5668) \u2502 \u251c\u2500\u2500 WACC Calculator (\u8d44\u672c\u6210\u672c\u8ba1\u7b97) \u2502 \u251c\u2500\u2500 DCF Calculators (DCF\u8ba1\u7b97\u5668\u96c6\u7fa4) \u2502 \u2514\u2500\u2500 Financial Forecaster (\u8d22\u52a1\u9884\u6d4b\u5668) \u2514\u2500\u2500 Data Layer (\u6570\u636e\u5c42) \u251c\u2500\u2500 AshareDataFetcher (\u6570\u636e\u83b7\u53d6\u5668) \u2514\u2500\u2500 PostgreSQL (\u6570\u636e\u5e93)","title":"\u6280\u672f\u67b6\u6784"},{"location":"archived/api_backend_comprehensive_analysis/#2025-09-10","text":"\u8bf7\u6c42\u65b0\u589e/\u5f3a\u8c03 industry_preset_key \uff1a\u884c\u4e1a\u6a21\u677f\u952e\uff08\u6a21\u677f\u52a0\u8f7d\uff0c\u4e0d\u9650\u7f16\u8f91\uff09 use_gdp_cap / gdp_nominal_cap \uff1a\u540d\u4e49 GDP \u4e0a\u9650\u63a7\u5236\uff08PGR clamp\uff09 ltm_baseline_enabled \uff1a\u542f\u7528 LTM/Interim \u7ecf\u8425\u57fa\u671f \u54cd\u5e94\u65b0\u589e\uff08StockBasicInfoModel\uff09 latest_price_as_of_date \uff1a\u4ef7\u683c as-of\uff08trade_date \u2264 \u4f30\u503c\u65e5\uff09 eps_annual_as_of_year \uff1aEPS\uff08\u5e74\u62a5\uff09\u5e74\u4efd\uff08end_date \u2264 \u4f30\u503c\u65e5\uff09 ttm_dps_source \uff1aTTM \u80a1\u606f\u6765\u6e90\uff08implemented/proposal/latest_annual\uff09 ttm_window_start / ttm_window_end \uff1aTTM \u7a97\u53e3\uff08\u82e5\u9002\u7528\uff09 \u54cd\u5e94 Debug\uff08ValuationResultsContainer.debug_request_slice\uff09 baseline_debug \uff1aAnnual/LTM \u6a21\u5f0f\u4e0e LTM \u7ec4\u6210 applied_preset \u4e0e applied_preset_diff \uff1a\u5df2\u5e94\u7528\u884c\u4e1a\u6a21\u677f\u4e0e\u504f\u79bb\u60c5\u51b5\uff08within/warn/alert\uff09 \u7ec8\u503c\u4e0e\u9690\u542b\u6307\u6807 \u6c38\u7eed\u589e\u957f\uff1a\u6309 min(pg_rate, GDP_cap) \u5939\u6301\uff08\u6765\u6e90\u63d0\u793a\uff09 \u9000\u51fa\u4e58\u6570\uff1a\u8ba1\u7b97\u9690\u542b PGR \u5e76\u4e0e GDP \u4e0a\u9650\u5bf9\u6bd4\u63d0\u793a \u6570\u636e\u5c42\u884c\u4e3a \u6700\u65b0\u4ef7\u683c\u6309\u4f30\u503c\u65e5\u56de\u9000\uff08 trade_date \u2264 \u4f30\u503c\u65e5 \uff09 \u80a1\u606f TTM\uff1a\u5b9e\u65bd/\u5b8c\u6210 \u2192 \u65e0\u5219 TTM\u00b7\u9884\u6848 \u2192 \u4ecd\u65e0\u5219 \u5e74\u5ea6\u6700\u8fd1\u4e00\u6b21","title":"2025-09-10 \u53d8\u66f4\u8981\u70b9\uff08\u65b0\u589e/\u8c03\u6574\u5b57\u6bb5\u4e0e\u884c\u4e3a\uff09"},{"location":"archived/api_backend_comprehensive_analysis/#2025-09-11","text":"\u654f\u611f\u6027\u8f93\u51fa\u6269\u5c55 \u65b0\u589e result_tables.ev_ebitda_terminal \uff1a\u57fa\u4e8e\u201c\u672b\u671f\u9884\u6d4b EBITDA\u201d\u7684 EV/EBITDA\uff08\u4e0e LTM \u53e3\u5f84\u533a\u5206\uff09\u3002 \u65b0\u589e result_tables.implied_pgr \uff1a\u5f53\u91c7\u7528\u9000\u51fa\u4e58\u6570\u6cd5\u65f6\uff0c\u9010\u683c\u8ba1\u7b97\u9690\u542b\u6c38\u7eed\u589e\u957f\u7387 g = (TV*WACC \u2212 FCF_T) / (TV + FCF_T) \u3002 result_tables.dcf_implied_pe \u652f\u6301\u6309\u683c\u56de\u9000\uff1a\u82e5\u5355\u5143\u683c\u672a\u8fd4\u56de dcf_implied_diluted_pe \uff0c\u5c06\u7528\u57fa\u51c6 EPS\uff08\u6700\u8fd1\u5e74\u62a5\uff09\u548c\u8be5\u683c\u6bcf\u80a1\u4ef7\u503c\u8ba1\u7b97\u56de\u586b\u3002 \u7269\u7406\u53ef\u884c\u6027\u7ea6\u675f \u5f53\u5355\u5143\u683c\u91c7\u7528\u6c38\u7eed\u589e\u957f\u6cd5\u4e14 g \u2265 WACC \u65f6\u76f4\u63a5\u8df3\u8fc7\u8ba1\u7b97\uff0c\u5355\u5143\u683c\u7f6e\u4e3a null \uff0c\u540c\u65f6\u5728 data_warnings \u4e2d\u8ffd\u52a0\u63d0\u793a\u3002 WACC \u8ba1\u7b97\u7a33\u5065\u6027 \u5f53 wacc_weight_mode = market \u4e14\u5e02\u573a\u6743\u91cd\u8def\u5f84\u5931\u8d25\u65f6\uff0c\u81ea\u52a8\u56de\u9000\u81f3 target \u6743\u91cd\u5e76\u8bb0\u5f55\u8b66\u544a\uff0c\u4e0d\u518d\u5bfc\u81f4 500\u3002 \u6587\u6863\u6f84\u6e05 \u660e\u786e\u533a\u5206 result_tables.ev_ebitda \uff08LTM \u53e3\u5f84\uff09\u4e0e result_tables.ev_ebitda_terminal \uff08\u672b\u671f\u53e3\u5f84\uff09\uff1b\u9ed8\u8ba4\u7ee7\u7eed\u8f93\u51fa LTM \u4ee5\u4fbf\u5bf9\u6807\u73b0\u5b9e\u53e3\u5f84\uff0c\u672b\u671f\u53e3\u5f84\u4e3a\u8865\u5145\u8868\u3002 \u8f74\u518d\u751f\u7b56\u7565\uff1aWACC \u8f74\u5728\u63d0\u4f9b step+points \u65f6\u603b\u662f\u56f4\u7ed5\u57fa\u51c6\u518d\u751f\uff1b\u5176\u4ed6\u8f74\u4ec5\u5728 values \u7a7a\u4e14\u63d0\u4f9b step+points \u65f6\u518d\u751f\uff08\u540e\u7eed\u53ef\u7edf\u4e00\uff09\u3002","title":"2025-09-11 \u53d8\u66f4\u8981\u70b9\uff08\u654f\u611f\u6027\u4e0e\u7a33\u5065\u6027\u589e\u5f3a\uff09"},{"location":"archived/api_backend_comprehensive_analysis/#_5","text":"","title":"\ud83d\udd17 \u63a5\u53e3\u8be6\u60c5"},{"location":"archived/api_backend_comprehensive_analysis/#1","text":"","title":"1. \u6839\u8def\u5f84\u63a5\u53e3"},{"location":"archived/api_backend_comprehensive_analysis/#get","text":"\u63a5\u53e3\u63cf\u8ff0 : API\u5065\u5eb7\u68c0\u67e5\u548c\u57fa\u672c\u4fe1\u606f \u8bf7\u6c42\u53c2\u6570 : \u65e0 \u54cd\u5e94\u683c\u5f0f : { \"message\": \"Welcome to the Stock Valuation API (Streamlit Backend)\" } \u6ce8\uff08\u53e3\u5f84\u8bf4\u660e\uff0c2025-09-10 \u66f4\u65b0\uff09\uff1a - LTM/\u57fa\u671f\u6536\u5165\u9009\u62e9\u7edf\u4e00\u201c\u4f18\u5148\u8425\u4e1a\u6536\u5165 revenue\uff0c\u56de\u9000 total_revenue\u201d\u3002 - baseline_debug \u4e2d\u4ecd\u4fdd\u7559 ytd_curr_total_revenue \u3001 ytd_prev_total_revenue \u3001 prev_annual_total_revenue \u7b49\u5b57\u6bb5\u4ee5\u4fbf\u5ba1\u8ba1\uff1b\u4f46\u5b9e\u9645\u7528\u4e8e\u57fa\u671f\u9009\u62e9\u7684\u4f18\u5148\u7ea7\u4e3a revenue \u5bf9\u5e94\u5b57\u6bb5\uff0c\u5176\u6b21\u624d\u662f total_revenue \u5bf9\u5e94\u5b57\u6bb5\u3002 \u72b6\u6001\u7801 : - 200 : \u6210\u529f \u4f7f\u7528\u573a\u666f : - API\u5065\u5eb7\u68c0\u67e5 - \u670d\u52a1\u53ef\u7528\u6027\u9a8c\u8bc1","title":"GET /"},{"location":"archived/api_backend_comprehensive_analysis/#2","text":"","title":"2. \u80a1\u7968\u4f30\u503c\u63a5\u53e3"},{"location":"archived/api_backend_comprehensive_analysis/#post-apiv1valuation","text":"\u63a5\u53e3\u63cf\u8ff0 : \u8ba1\u7b97\u80a1\u7968DCF\u4f30\u503c\uff0c\u652f\u6301\u654f\u611f\u6027\u5206\u6790\u548cLLM\u667a\u80fd\u5206\u6790 \u8bf7\u6c42\u6a21\u578b : StockValuationRequest \u8bf7\u6c42\u53c2\u6570\u8be6\u89e3 :","title":"POST /api/v1/valuation"},{"location":"archived/api_backend_comprehensive_analysis/#_6","text":"\u53c2\u6570\u540d \u7c7b\u578b \u5fc5\u586b \u9ed8\u8ba4\u503c \u8bf4\u660e \u7ea6\u675f\u6761\u4ef6 \u793a\u4f8b ts_code string \u662f \u65e0 \u80a1\u7968\u4ee3\u7801 \u7b26\u5408A\u80a1\u683c\u5f0f(6\u6570\u5b57.SH/SZ) \"600519.SH\" market string \u5426 \"A\" \u5e02\u573a\u6807\u8bc6 \u679a\u4e3e\u503c: \"A\", \"HK\" \"A\" valuation_date string \u5426 \u6700\u65b0\u65e5\u671f \u4f30\u503c\u57fa\u51c6\u65e5\u671f YYYY-MM-DD\u683c\u5f0f \"2024-12-31\" ltm_baseline_enabled bool \u5426 false \u662f\u5426\u4f7f\u7528LTM/Interim\u57fa\u671f \u5e03\u5c14\u503c true, false","title":"\u57fa\u7840\u53c2\u6570"},{"location":"archived/api_backend_comprehensive_analysis/#dcf","text":"\u53c2\u6570\u540d \u7c7b\u578b \u5fc5\u586b \u9ed8\u8ba4\u503c \u8bf4\u660e \u7ea6\u675f\u6761\u4ef6 \u793a\u4f8b forecast_years int \u5426 5 \u9884\u6d4b\u671f\u5e74\u6570 1-20\u5e74\u6574\u6570 5, 10, 15 cagr_decay_rate float \u5426 \u7cfb\u7edf\u8ba1\u7b97 \u5386\u53f2CAGR\u5e74\u8870\u51cf\u7387 0-1\u4e4b\u95f4 0.1, 0.2 op_margin_forecast_mode string \u5426 \"historical_median\" \u8425\u4e1a\u5229\u6da6\u7387\u9884\u6d4b\u6a21\u5f0f \u679a\u4e3e\u503c: \"historical_median\", \"transition_to_target\" \"historical_median\" target_operating_margin float \u5426 \u65e0 \u76ee\u6807\u8425\u4e1a\u5229\u6da6\u7387 0-1\u4e4b\u95f4\uff0ctransition\u6a21\u5f0f\u5fc5\u9700 0.25, 0.30 op_margin_transition_years int \u5426 \u65e0 \u5229\u6da6\u7387\u8fc7\u6e21\u5e74\u6570 >=1\uff0ctransition\u6a21\u5f0f\u5fc5\u9700 3, 5","title":"DCF\u6838\u5fc3\u5047\u8bbe\u53c2\u6570"},{"location":"archived/api_backend_comprehensive_analysis/#wacc","text":"\u53c2\u6570\u540d \u7c7b\u578b \u5fc5\u586b \u9ed8\u8ba4\u503c \u8bf4\u660e \u7ea6\u675f\u6761\u4ef6 \u793a\u4f8b wacc_weight_mode string \u5426 \"target\" WACC\u6743\u91cd\u8ba1\u7b97\u6a21\u5f0f \u6b63\u5219: ^(target\\|market)$ \"target\" target_debt_ratio float \u5426 \u7cfb\u7edf\u9ed8\u8ba4 \u76ee\u6807\u503a\u52a1\u6bd4\u4f8b 0-1\u4e4b\u95f4\uff0ctarget\u6a21\u5f0f\u5fc5\u9700 0.3, 0.4 cost_of_debt float \u5426 \u7cfb\u7edf\u9ed8\u8ba4 \u7a0e\u524d\u503a\u52a1\u6210\u672c >=0 0.05, 0.08 risk_free_rate float \u5426 \u7cfb\u7edf\u9ed8\u8ba4 \u65e0\u98ce\u9669\u5229\u7387 >=0 0.03, 0.035 beta float \u5426 \u7cfb\u7edf\u9ed8\u8ba4 \u8d1d\u5854\u7cfb\u6570 \u4efb\u610f\u5b9e\u6570 1.2, 0.8 market_risk_premium float \u5426 \u7cfb\u7edf\u9ed8\u8ba4 \u5e02\u573a\u98ce\u9669\u6ea2\u4ef7 >=0 0.05, 0.06 size_premium float \u5426 \u7cfb\u7edf\u9ed8\u8ba4 \u89c4\u6a21\u6ea2\u4ef7 \u4efb\u610f\u5b9e\u6570 0.02, -0.01","title":"WACC\u8ba1\u7b97\u53c2\u6570"},{"location":"archived/api_backend_comprehensive_analysis/#_7","text":"\u53c2\u6570\u540d \u7c7b\u578b \u5fc5\u586b \u9ed8\u8ba4\u503c \u8bf4\u660e \u7ea6\u675f\u6761\u4ef6 \u793a\u4f8b terminal_value_method string \u5426 \"exit_multiple\" \u7ec8\u503c\u8ba1\u7b97\u65b9\u6cd5 \u679a\u4e3e\u503c: \"exit_multiple\", \"perpetual_growth\" \"exit_multiple\" exit_multiple float \u5426 \u7cfb\u7edf\u9ed8\u8ba4 \u9000\u51fa\u4e58\u6570 >=0\uff0cexit_multiple\u6a21\u5f0f\u5fc5\u9700 15.0, 18.0 perpetual_growth_rate float \u5426 \u7cfb\u7edf\u9ed8\u8ba4 \u6c38\u7eed\u589e\u957f\u7387 >=0\uff0cperpetual_growth\u6a21\u5f0f\u5fc5\u9700 0.03, 0.035","title":"\u7ec8\u503c\u8ba1\u7b97\u53c2\u6570"},{"location":"archived/api_backend_comprehensive_analysis/#llm","text":"\u53c2\u6570\u540d \u7c7b\u578b \u5fc5\u586b \u9ed8\u8ba4\u503c \u8bf4\u660e \u7ea6\u675f\u6761\u4ef6 \u793a\u4f8b request_llm_summary bool \u5426 false \u662f\u5426\u8bf7\u6c42LLM\u5206\u6790 \u5e03\u5c14\u503c true, false llm_provider string \u5426 \u7cfb\u7edf\u9ed8\u8ba4 LLM\u63d0\u4f9b\u5546 \u5b57\u7b26\u4e32 \"deepseek\", \"openai\" llm_model_id string \u5426 \u7cfb\u7edf\u9ed8\u8ba4 LLM\u6a21\u578bID \u5b57\u7b26\u4e32 \"deepseek-chat\", \"gpt-4\" llm_api_base_url string \u5426 \u7cfb\u7edf\u9ed8\u8ba4 \u81ea\u5b9a\u4e49API\u5730\u5740 URL\u683c\u5f0f \"https://api.deepseek.com\" llm_temperature float \u5426 0.7 \u751f\u6210\u6e29\u5ea6\u53c2\u6570 0.0-2.0\u4e4b\u95f4 0.5, 1.0, 1.5 llm_top_p float \u5426 0.9 Top-P\u53c2\u6570 0.0-1.0\u4e4b\u95f4 0.8, 0.95 llm_max_tokens int \u5426 4000 \u6700\u5927Token\u6570 >=1 2000, 4096","title":"LLM\u63a7\u5236\u53c2\u6570"},{"location":"archived/api_backend_comprehensive_analysis/#_8","text":"\u53c2\u6570\u540d \u7c7b\u578b \u5fc5\u586b \u8bf4\u660e \u7ea6\u675f\u6761\u4ef6 sensitivity_analysis SensitivityAnalysisRequest \u5426 \u654f\u611f\u6027\u5206\u6790\u914d\u7f6e \u590d\u6742\u5bf9\u8c61\u7ed3\u6784 \u8be6\u7ec6\u8bf7\u6c42\u4f53\u793a\u4f8b :","title":"\u654f\u611f\u6027\u5206\u6790\u53c2\u6570"},{"location":"archived/api_backend_comprehensive_analysis/#1_1","text":"{ \"ts_code\": \"600519.SH\", \"forecast_years\": 5, \"request_llm_summary\": false, \"ltm_baseline_enabled\": false }","title":"1. \u57fa\u7840\u4f30\u503c\u8bf7\u6c42"},{"location":"archived/api_backend_comprehensive_analysis/#2_1","text":"{ \"ts_code\": \"600519.SH\", \"market\": \"A\", \"valuation_date\": \"2024-12-31\", \"forecast_years\": 10, \"cagr_decay_rate\": 0.15, \"op_margin_forecast_mode\": \"transition_to_target\", \"target_operating_margin\": 0.30, \"op_margin_transition_years\": 5, \"wacc_weight_mode\": \"target\", \"target_debt_ratio\": 0.35, \"cost_of_debt\": 0.045, \"risk_free_rate\": 0.03, \"beta\": 1.1, \"market_risk_premium\": 0.055, \"size_premium\": 0.015, \"terminal_value_method\": \"exit_multiple\", \"exit_multiple\": 16.5, \"ltm_baseline_enabled\": true, \"request_llm_summary\": true, \"llm_provider\": \"deepseek\", \"llm_model_id\": \"deepseek-chat\", \"llm_api_base_url\": \"https://api.deepseek.com\", \"llm_temperature\": 0.8, \"llm_top_p\": 0.9, \"llm_max_tokens\": 3000 }","title":"2. \u5b8c\u6574\u53c2\u6570\u8bf7\u6c42\uff08\u5305\u542b\u6240\u6709\u7ea6\u675f\u6761\u4ef6\u793a\u4f8b\uff09"},{"location":"archived/api_backend_comprehensive_analysis/#3","text":"{ \"ts_code\": \"600519.SH\", \"forecast_years\": 20, \"cagr_decay_rate\": 0.99, \"target_operating_margin\": 0.99, \"op_margin_transition_years\": 1, \"target_debt_ratio\": 0.99, \"cost_of_debt\": 0.20, \"risk_free_rate\": 0.15, \"llm_temperature\": 2.0, \"llm_top_p\": 1.0, \"llm_max_tokens\": 1 }","title":"3. \u8fb9\u754c\u503c\u6d4b\u8bd5\u8bf7\u6c42"},{"location":"archived/api_backend_comprehensive_analysis/#4","text":"{ \"ts_code\": \"600519.SH\", \"forecast_years\": 5, \"sensitivity_analysis\": { \"row_axis\": { \"parameter_name\": \"wacc\", \"values\": [0.08, 0.09, 0.10, 0.11], \"step\": 0.01, \"points\": 4 }, \"column_axis\": { \"parameter_name\": \"exit_multiple\", \"values\": [14, 16, 18, 20], \"step\": 2, \"points\": 4 } } }","title":"4. \u654f\u611f\u6027\u5206\u6790\u8bf7\u6c42"},{"location":"archived/api_backend_comprehensive_analysis/#5","text":"{ \"ts_code\": \"600519.SH\", \"forecast_years\": 8, \"terminal_value_method\": \"perpetual_growth\", \"perpetual_growth_rate\": 0.035, \"wacc_weight_mode\": \"market\", \"ltm_baseline_enabled\": true, \"request_llm_summary\": true }","title":"5. \u6c38\u7eed\u589e\u957f\u6cd5\u8bf7\u6c42"},{"location":"archived/api_backend_comprehensive_analysis/#6","text":"{ \"ts_code\": \"600519.SH\", \"forecast_years\": 25, // \u9519\u8bef\uff1a\u8d85\u8fc7\u6700\u5927\u503c20 \"cagr_decay_rate\": 1.5, // \u9519\u8bef\uff1a\u8d85\u8fc7\u6700\u5927\u503c1 \"target_operating_margin\": -0.1, // \u9519\u8bef\uff1a\u8d1f\u503c \"llm_temperature\": 3.0, // \u9519\u8bef\uff1a\u8d85\u8fc7\u6700\u5927\u503c2.0 \"llm_top_p\": 1.5, // \u9519\u8bef\uff1a\u8d85\u8fc7\u6700\u5927\u503c1.0 \"wacc_weight_mode\": \"invalid_mode\" // \u9519\u8bef\uff1a\u4e0d\u5728\u679a\u4e3e\u503c\u4e2d } \u54cd\u5e94\u6a21\u578b : StockValuationResponse \u54cd\u5e94\u683c\u5f0f\u8be6\u89e3 :","title":"6. \u9519\u8bef\u8bf7\u6c42\u793a\u4f8b\uff08\u8fdd\u53cd\u7ea6\u675f\u6761\u4ef6\uff09"},{"location":"archived/api_backend_comprehensive_analysis/#1-","text":"{ \"stock_info\": { \"ts_code\": \"600519.SH\", \"name\": \"\u8d35\u5dde\u8305\u53f0\", \"industry\": \"\u767d\u9152\", \"list_date\": \"2001-08-27\", \"exchange\": \"\u4e0a\u4ea4\u6240\", \"currency\": \"CNY\", \"market\": \"A\", \"latest_pe_ttm\": 45.2, \"latest_pb_mrq\": 12.8, \"total_shares\": 1256197800, \"free_float_shares\": 1256197800, \"ttm_dps\": 25.91, \"dividend_yield\": 0.0158, \"act_name\": \"\u8d35\u5dde\u7701\u4eba\u6c11\u653f\u5e9c\u56fd\u6709\u8d44\u4ea7\u76d1\u7763\u7ba1\u7406\u59d4\u5458\u4f1a\", \"act_ent_type\": \"\u56fd\u4f01\", \"latest_annual_diluted_eps\": 49.32, \"base_report_date\": \"2024-09-30\" }, \"valuation_results\": { \"latest_price\": 1725.0, \"current_pe\": 45.2, \"current_pb\": 12.8, \"dcf_forecast_details\": { \"enterprise_value\": 2150000000000, \"equity_value\": 2100000000000, \"value_per_share\": 1675.5, \"net_debt\": 50000000000, \"pv_forecast_ufcf\": 800000000000, \"pv_terminal_value\": 1350000000000, \"terminal_value\": 2500000000000, \"wacc_used\": 0.085, \"cost_of_equity_used\": 0.12, \"terminal_value_method_used\": \"exit_multiple\", \"exit_multiple_used\": 15.2, \"perpetual_growth_rate_used\": null, \"forecast_period_years\": 5, \"dcf_implied_diluted_pe\": 33.97, \"base_ev_ebitda\": 18.5, \"implied_perpetual_growth_rate\": 0.035 }, \"other_analysis\": { \"dividend_analysis\": { \"current_yield_pct\": 1.58, \"avg_dividend_3y\": 22.5, \"payout_ratio_pct\": 52.5 }, \"growth_analysis\": { \"net_income_cagr_3y\": 15.2, \"revenue_cagr_3y\": 18.7 } }, \"detailed_forecast_table\": [ { \"year\": 2024, \"revenue\": 150000000000, \"revenue_growth\": 0.18, \"gross_profit\": 120000000000, \"operating_profit\": 75000000000, \"operating_margin\": 0.50, \"ebit\": 75000000000, \"tax_rate\": 0.25, \"nopat\": 56250000000, \"da\": 8000000000, \"capex\": 12000000000, \"nwc_change\": 5000000000, \"ufcf\": 47250000000, \"nwc\": 30000000000, \"nwc_days\": 73 }, { \"year\": 2025, \"revenue\": 168000000000, \"revenue_growth\": 0.12, \"gross_profit\": 134400000000, \"operating_profit\": 84000000000, \"operating_margin\": 0.50, \"ebit\": 84000000000, \"tax_rate\": 0.25, \"nopat\": 63000000000, \"da\": 8960000000, \"capex\": 13440000000, \"nwc_change\": 5600000000, \"ufcf\": 52960000000, \"nwc\": 35600000000, \"nwc_days\": 73 } ], \"sensitivity_analysis_result\": null, \"llm_analysis_summary\": null, \"data_warnings\": [ \"2024\u5e74\u6570\u636e\u4e3a\u57fa\u4e8e\u524d\u4e09\u4e2a\u5b63\u5ea6\u7684\u9884\u6d4b\u503c\", \"\u90e8\u5206\u5386\u53f2\u6570\u636e\u7f3a\u5931\uff0c\u4f7f\u7528\u884c\u4e1a\u5e73\u5747\u503c\u66ff\u4ee3\" ], \"historical_financial_summary\": [ { \"year\": 2023, \"revenue\": 129700000000, \"operating_profit\": 64850000000, \"net_income\": 48550000000, \"total_assets\": 185000000000, \"total_liabilities\": 45000000000 } ], \"historical_ratios_summary\": [ { \"year\": 2023, \"operating_margin\": 0.50, \"roic\": 0.28, \"asset_turnover\": 0.70, \"debt_to_equity\": 0.32 } ], \"special_industry_warning\": null }, \"error\": null }","title":"1. \u6210\u529f\u54cd\u5e94 - \u57fa\u7840\u4f30\u503c"},{"location":"archived/api_backend_comprehensive_analysis/#_9","text":"\u54cd\u5e94\u4e2d\u8fd8\u5305\u542b\u7528\u4e8e\u5ba1\u8ba1/\u8c03\u8bd5\u7684\u7247\u6bb5\uff1a { \"valuation_results\": { \"debug_request_slice\": { \"forecast_years\": 5, \"ltm_baseline_enabled\": true, \"nwc_baseline_mode\": \"component\", \"baseline_debug\": { \"mode\": \"LTM\", \"curr_end_date\": \"2025-06-30\", \"curr_end_type\": \"2\" } } } } \u5176\u4e2d baseline_debug \u4f1a\u5728 LTM \u6a21\u5f0f\u4e0b\u5305\u542b YTD/LTM \u7684\u5206\u89e3\uff1b\u5728 Annual \u6a21\u5f0f\u4e3a { \"mode\": \"Annual\" } \u3002","title":"\u8c03\u8bd5\u5b57\u6bb5\u8bf4\u660e\uff08\u7247\u6bb5\uff09"},{"location":"archived/api_backend_comprehensive_analysis/#vs","text":"\u6700\u5c0f\u8282\u9009\uff1a\u4ec5\u8fd4\u56de\u524d\u7aef\u6700\u5e38\u7528\u7684\u5feb\u53d6\u5b57\u6bb5\uff08 value_per_share \u3001 wacc_used \u3001 exit_multiple_used \u3001\u4ef7\u683c\u4e0eTTM\u5206\u7ea2\u53e3\u5f84\u7b49\uff09\uff0c debug_request_slice \u4ec5\u542b baseline_debug \u3002 \u5b8c\u6574\u7248\uff1a\u5728\u6700\u5c0f\u8282\u9009\u57fa\u7840\u4e0a\uff0c\u8865\u5145 detailed_forecast_table \u3001 historical_* \u3001LLM\u6458\u8981\u3001\u4ee5\u53ca debug_request_slice.applied_preset \u4e0e applied_preset_diff \uff08\u542b\u533a\u95f4\u4e0e\u504f\u79bb\u72b6\u6001\uff09\u3002 \u8be5\u5bf9\u7167\u7528\u4e8e UI \u5feb\u901f\u52a0\u8f7d\u4e0e\u5ba1\u8ba1\u6df1\u6316\u4e24\u79cd\u8def\u5f84\uff0c\u63a5\u53e3\u4e00\u81f4\uff0c\u5b57\u6bb5\u53ef\u9009\u8fd4\u56de\u3002","title":"\u5bf9\u7167\u8bf4\u660e\uff08\u6700\u5c0f\u8282\u9009 vs \u5b8c\u6574\u7248\uff09"},{"location":"archived/api_backend_comprehensive_analysis/#11-","text":"{ \"stock_info\": { \"ts_code\": \"600519.SH\", \"name\": \"\u8d35\u5dde\u8305\u53f0\", \"market\": \"\u4e3b\u677f\", \"latest_annual_diluted_eps\": 68.64, \"base_report_date\": \"2023-12-31\", \"latest_price_as_of_date\": \"2024-10-15\", \"eps_annual_as_of_year\": 2023, \"ttm_dps\": 49.982, \"dividend_yield\": 0.0349, \"ttm_dps_source\": \"implemented\" }, \"valuation_results\": { \"latest_price\": 1476.1, \"current_pe\": 28.08, \"current_pb\": 9.73, \"dcf_forecast_details\": { \"value_per_share\": 2318.05, \"wacc_used\": 0.0609, \"terminal_value_method_used\": \"exit_multiple\", \"exit_multiple_used\": 15.0, \"implied_perpetual_growth_rate\": 0.0169 }, \"debug_request_slice\": { \"baseline_debug\": { \"mode\": \"LTM\", \"curr_end_date\": \"2024-09-30\" } } } }","title":"1.1 \u6210\u529f\u54cd\u5e94 - \u6700\u5c0f\u8282\u9009\uff08\u4fbf\u4e8e\u524d\u7aef\u5feb\u901f\u53d6\u7528\uff09"},{"location":"archived/api_backend_comprehensive_analysis/#12-debugapplied_presetdiff","text":"{ \"stock_info\": { \"ts_code\": \"601717.SH\", \"name\": \"\u90d1\u7164\u673a\", \"market\": \"\u4e3b\u677f\", \"latest_annual_diluted_eps\": 2.2120, \"base_report_date\": \"2023-12-31\", \"latest_price_as_of_date\": \"2025-09-10\", \"eps_annual_as_of_year\": 2024, \"ttm_dps\": 1.12, \"dividend_yield\": 0.0516, \"ttm_dps_source\": \"proposal\", \"ttm_window_start\": \"2024-09-10\", \"ttm_window_end\": \"2025-09-10\" }, \"valuation_results\": { \"latest_price\": 21.71, \"current_pe\": 9.23, \"current_pb\": 1.48, \"dcf_forecast_details\": { \"value_per_share\": 26.86, \"wacc_used\": 0.0609, \"terminal_value_method_used\": \"exit_multiple\", \"exit_multiple_used\": 8.0, \"implied_perpetual_growth_rate\": 0.0045 }, \"detailed_forecast_table\": [ { \"year\": 1, \"revenue\": 3.70e10, \"ufcf\": 1.23e9 } ], \"data_warnings\": [], \"debug_request_slice\": { \"baseline_debug\": { \"mode\": \"LTM\", \"curr_end_date\": \"2025-06-30\", \"curr_end_type\": \"2\", \"ytd_curr_total_revenue\": 2.786e10, \"ytd_prev_total_revenue\": 2.726e10, \"prev_annual_total_revenue\": 3.642e10 }, \"applied_preset\": { \"key\": \"industrials\", \"beta\": { \"default\": 1.0, \"range\": [0.8, 1.3] }, \"forecast_years\": { \"default\": 5, \"range\": [4, 7] }, \"pgr_cap\": { \"default\": 0.045, \"range\": [0.03, 0.05] }, \"exit_multiple_ev_ebitda\": { \"default\": 9.0, \"range\": [6.0, 12.0] }, \"turnover_days\": { \"ar\": { \"median\": 60, \"range\": [20, 120] }, \"inv\": { \"median\": 80, \"range\": [40, 180] }, \"ap\": { \"median\": 55, \"range\": [25, 110] } } }, \"applied_preset_diff\": { \"beta\": { \"value\": 1.0, \"default\": 1.0, \"range_status\": \"within\", \"modified\": false }, \"forecast_years\": { \"value\": 5.0, \"default\": 5.0, \"range_status\": \"within\", \"modified\": false }, \"pgr_cap\": { \"value\": 0.045, \"default\": 0.045, \"range_status\": \"within\", \"modified\": false }, \"exit_multiple_ev_ebitda\": { \"value\": 9.0, \"default\": 9.0, \"range_status\": \"within\", \"modified\": false }, \"turnover_days\": { \"ar\": { \"value\": 60.0, \"default\": 60.0, \"range_status\": \"within\", \"modified\": false }, \"inv\": { \"value\": 80.0, \"default\": 80.0, \"range_status\": \"within\", \"modified\": false }, \"ap\": { \"value\": 55.0, \"default\": 55.0, \"range_status\": \"within\", \"modified\": false } } } } }, \"error\": null }","title":"1.2 \u6210\u529f\u54cd\u5e94 - \u5b8c\u6574\u7248\uff08\u542b debug/applied_preset/diff\uff09"},{"location":"archived/api_backend_comprehensive_analysis/#1x","text":"\u4e3a\u8865\u8db3\u201c\u533a\u95f4\u8f93\u51fa\u3001\u5173\u952e\u9a71\u52a8\u6392\u5e8f\u201d\u7684\u9700\u6c42\uff0c\u5efa\u8bae\u5728\u73b0\u6709\u4f30\u503c\u63a5\u53e3\u4e2d\u5f15\u5165\u53ef\u9009\u5b57\u6bb5 scenarios \uff0c\u7531\u5ba2\u6237\u7aef\u63d0\u4ea4\u4e09\u5957\u53c2\u6570\u8c03\u6574\uff0c\u670d\u52a1\u7aef\u6309\u4e09\u5957\u5047\u8bbe\u5404\u81ea\u8dd1\u4e00\u904d\u4f30\u503c\uff0c\u5e76\u7ed9\u51fa\u6c47\u603b\u533a\u95f4\u4e0e\u9a71\u52a8\u6392\u5e8f\u3002 \u8bf7\u6c42\u6a21\u578b\u6269\u5c55\uff08\u65b0\u589e\uff0c\u53ef\u9009\uff09\uff1a { \"ts_code\": \"600519.SH\", \"forecast_years\": 5, \"terminal_value_method\": \"exit_multiple\", \"exit_multiple\": 15, \"scenarios\": { \"base\": { \"label\": \"\u57fa\u51c6\", \"weight\": 0.5, \"overrides\": {}, \"multipliers\": {} }, \"bull\": { \"label\": \"\u4e50\u89c2\", \"weight\": 0.25, \"overrides\": { \"wacc\": 0.07, \"exit_multiple\": 17 }, \"multipliers\": { \"target_operating_margin\": 1.05, \"target_inventory_days\": 0.9 } }, \"bear\": { \"label\": \"\u60b2\u89c2\", \"weight\": 0.25, \"overrides\": { \"wacc\": 0.10, \"exit_multiple\": 13 }, \"multipliers\": { \"target_operating_margin\": 0.95, \"target_inventory_days\": 1.1 } } } } \u5b57\u6bb5\u7ea6\u5b9a\uff1a - overrides \uff1a\u6309\u8bf7\u6c42\u6a21\u578b\u540c\u540d\u5b57\u6bb5\u8fdb\u884c\u66ff\u6362\uff08\u5982 wacc \u3001 exit_multiple \u3001 perpetual_growth_rate \u3001 target_operating_margin \u3001 target_*_days \u7b49\uff09\u3002 - multipliers \uff1a\u6309\u8bf7\u6c42\u6a21\u578b\u540c\u540d\u5b57\u6bb5\u8fdb\u884c\u4e58\u6570\u8c03\u6574\uff08\u5148\u4e58\u540e\u622a\u65ad\u5230\u6709\u6548\u533a\u95f4\uff0c\u4f18\u5148\u7ea7\u4f4e\u4e8e overrides \uff09\u3002 - weight \uff1a\u7528\u4e8e\u52a0\u6743\u5747\u503c/\u5206\u4f4d\u7684\u6743\u91cd\uff08\u53ef\u9009\uff0c\u9ed8\u8ba4\u5404 1/3\uff09\u3002 \u54cd\u5e94\u6269\u5c55\uff08\u65b0\u589e\uff0c\u53ef\u9009\uff09\uff1a { \"valuation_results\": { \"scenario_results\": { \"base\": { \"dcf_forecast_details\": { \"value_per_share\": 1675.5, \"wacc_used\": 0.085 }, \"ev_ebitda\": 18.5 }, \"bull\": { \"dcf_forecast_details\": { \"value_per_share\": 1850.2, \"wacc_used\": 0.078 }, \"ev_ebitda\": 19.8 }, \"bear\": { \"dcf_forecast_details\": { \"value_per_share\": 1498.3, \"wacc_used\": 0.094 }, \"ev_ebitda\": 17.2 }, \"summary\": { \"value_per_share\": { \"min\": 1498.3, \"p10\": 1510.0, \"p50\": 1675.5, \"p90\": 1830.0, \"max\": 1850.2, \"weighted_mean\": 1674.9 }, \"enterprise_value\": { \"min\": 1.76e12, \"p50\": 2.10e12, \"max\": 2.32e12 }, \"key_drivers_ranking\": [ { \"name\": \"wacc\", \"contribution\": 0.46 }, { \"name\": \"exit_multiple\", \"contribution\": 0.31 }, { \"name\": \"target_operating_margin\", \"contribution\": 0.15 }, { \"name\": \"nwc_days\", \"contribution\": 0.08 } ], \"note\": \"\u6392\u540d\u57fa\u4e8e\u57fa\u51c6\u70b9\u5468\u8fb9\u4e00\u56e0\u5b50\u5f39\u6027/\u65b9\u5dee\u8d21\u732e\u7684\u8fd1\u4f3c\u5206\u89e3\uff08\u63d0\u6848\uff09\u3002\" } } } } \u5b9e\u73b0\u5907\u6ce8\uff1a - \u5f53\u524d\u4ee3\u7801\u5c1a\u672a\u8fd4\u56de scenario_results \u5b57\u6bb5\uff0c\u6b64\u4e3a\u63a5\u53e3\u63d0\u6848\uff1b\u843d\u5730\u9700\u5728 StockValuationRequest \u589e\u52a0 scenarios \uff0c\u5e76\u5728 ValuationService \u9010\u60c5\u666f\u91cd\u8dd1\u5e76\u6c47\u603b\u3002 - key_drivers_ranking \u53ef\u57fa\u4e8e\u4e00\u56e0\u5b50\u6270\u52a8\uff08OFAT\uff09\u6216 Sobol \u8fd1\u4f3c\uff08\u8f7b\u91cf\uff09\u8ba1\u7b97\u76f8\u5bf9\u8d21\u732e\uff0c\u5148\u5b9e\u73b0 OFAT \u7248\u4ee5\u4fdd\u8bc1\u6027\u80fd\u4e0e\u53ef\u89e3\u91ca\u6027\u3002 - UI \u5efa\u8bae\uff1a - \u60c5\u666f\u9762\u677f\uff1a\u4e3a\u201c\u6536\u5165\u589e\u901f/\u5229\u6da6\u7387/NWC/WACC/\u7ec8\u503c\u53c2\u6570\u201d\u63d0\u4f9b\u201c\u8986\u76d6/\u4e58\u6570\u201d\u4e24\u79cd\u8f93\u5165\uff0c\u652f\u6301\u6743\u91cd\uff1b\u63d0\u4f9b\u201c\u91cd\u7f6e\u4e3a\u884c\u4e1a\u9884\u8bbe\u201d\u7684\u6309\u94ae\u3002 - \u7ed3\u679c\u6c47\u603b\uff1a\u5c55\u793a\u4f30\u503c\u533a\u95f4\uff08\u6761\u5f62/\u80e1\u987b\u56fe\uff09\u3001\u6743\u91cd\u5747\u503c\u3001\u4e0e\u57fa\u51c6\u5dee\u5f02\uff1b\u7ed8\u5236\u201c\u5173\u952e\u9a71\u52a8\u6392\u5e8f\u201d\uff08Tornado chart\uff09\u3002","title":"1.x \u4e09\u60c5\u666f\u5206\u6790\uff08\u4e50\u89c2/\u57fa\u51c6/\u60b2\u89c2\uff09\uff08\u63d0\u6848\uff09"},{"location":"archived/api_backend_comprehensive_analysis/#2-","text":"{ \"stock_info\": { \"ts_code\": \"600519.SH\", \"name\": \"\u8d35\u5dde\u8305\u53f0\", \"industry\": \"\u767d\u9152\", \"market\": \"A\", \"latest_pe_ttm\": 45.2, \"latest_pb_mrq\": 12.8, \"total_shares\": 1256197800, \"base_report_date\": \"2024-09-30\" }, \"valuation_results\": { \"latest_price\": 1725.0, \"current_pe\": 45.2, \"current_pb\": 12.8, \"dcf_forecast_details\": { \"enterprise_value\": 2150000000000, \"equity_value\": 2100000000000, \"value_per_share\": 1675.5, \"wacc_used\": 0.085, \"terminal_value_method_used\": \"exit_multiple\", \"exit_multiple_used\": 15.2, \"forecast_period_years\": 5, \"dcf_implied_diluted_pe\": 33.97 }, \"sensitivity_analysis_result\": { \"row_parameter\": \"wacc\", \"column_parameter\": \"exit_multiple\", \"row_values\": [0.08, 0.09, 0.10, 0.11], \"column_values\": [14, 16, 18, 20], \"result_tables\": { \"value_per_share\": [ [1850.5, 1675.5, 1520.3, 1380.2], [1680.3, 1520.8, 1380.5, 1255.2], [1535.2, 1388.6, 1260.4, 1148.3], [1408.1, 1274.2, 1157.8, 1054.6] ], \"enterprise_value\": [ [2325000000000, 2100000000000, 1900000000000, 1720000000000], [2110000000000, 1910000000000, 1730000000000, 1570000000000], [1925000000000, 1740000000000, 1580000000000, 1430000000000], [1760000000000, 1590000000000, 1440000000000, 1310000000000] ], \"dcf_implied_pe\": [ [37.5, 33.97, 30.8, 27.9], [34.0, 30.8, 27.9, 25.3], [31.1, 28.1, 25.5, 23.2], [28.5, 25.8, 23.4, 21.3] ], \"tv_ev_ratio\": [ [0.68, 0.65, 0.62, 0.60], [0.70, 0.66, 0.63, 0.61], [0.71, 0.67, 0.64, 0.62], [0.72, 0.68, 0.65, 0.63] ], \"ev_ebitda\": [ [18.9, 17.8, 16.7, 15.9], [18.3, 17.2, 16.3, 15.5], [17.7, 16.7, 15.8, 15.1], [17.2, 16.2, 15.4, 14.8] ], \"ev_ebitda_terminal\": [ [16.2, 15.1, 14.3, 13.7], [15.7, 14.7, 13.9, 13.3], [15.3, 14.3, 13.6, 13.0], [14.9, 14.0, 13.3, 12.8] ], \"implied_pgr\": [ [0.017, 0.013, 0.011, 0.009], [0.019, 0.015, 0.012, 0.010], [0.021, 0.017, 0.014, 0.011], [0.022, 0.018, 0.015, 0.012] ] } }, \"data_warnings\": [], \"historical_financial_summary\": [...], \"historical_ratios_summary\": [...] }, \"error\": null } \u8bf4\u660e\uff1a - \u82e5\u5217\u53c2\u6570\u4e3a perpetual_growth_rate \u4e14\u51fa\u73b0 g \u2265 WACC \u7684\u884c/\u5217\u7ec4\u5408\uff0c\u8be5\u5355\u5143\u683c\u8fd4\u56de null \uff1b\u540c\u65f6 valuation_results.data_warnings \u4f1a\u5305\u542b\u201c\u7ec4\u5408\u88ab\u8df3\u8fc7\u201d\u7684\u63d0\u793a\uff0c\u4fbf\u4e8e UI \u6807\u6ce8\u7a7a\u767d\u7684\u5408\u7406\u6027\u3002 - dcf_implied_pe \u7684\u5355\u5143\u683c\u6570\u503c\u4f18\u5148\u53d6\u6a21\u578b\u8fd4\u56de\uff1b\u7f3a\u5931\u65f6\u4ee5\u57fa\u51c6 EPS\uff08\u6700\u8fd1\u5e74\u62a5\uff09\u4e0e\u8be5\u683c\u6bcf\u80a1\u4ef7\u503c\u8ba1\u7b97\u56de\u586b\u3002 - ev_ebitda \u4ee5 LTM \u5b9e\u9645 EBITDA \u4e3a\u5206\u6bcd\uff1b ev_ebitda_terminal \u4ee5\u672b\u671f\u9884\u6d4b EBITDA \u4e3a\u5206\u6bcd\u3002\u4e24\u8005\u53e3\u5f84\u4e0d\u540c\uff0c\u4f7f\u7528\u573a\u666f\u4e0d\u540c\uff08LTM \u4fbf\u4e8e\u4e0e\u5e02\u573a\u53e3\u5f84\u5bf9\u6807\uff0cTerminal \u4fbf\u4e8e\u6821\u9a8c\u9000\u51fa\u500d\u6570\u5047\u8bbe\uff09\u3002","title":"2. \u6210\u529f\u54cd\u5e94 - \u5305\u542b\u654f\u611f\u6027\u5206\u6790"},{"location":"archived/api_backend_comprehensive_analysis/#3-llm","text":"{ \"stock_info\": { \"ts_code\": \"600519.SH\", \"name\": \"\u8d35\u5dde\u8305\u53f0\", \"industry\": \"\u767d\u9152\", \"market\": \"A\", \"latest_pe_ttm\": 45.2, \"base_report_date\": \"2024-09-30\" }, \"valuation_results\": { \"latest_price\": 1725.0, \"current_pe\": 45.2, \"dcf_forecast_details\": { \"value_per_share\": 1675.5, \"wacc_used\": 0.085, \"terminal_value_method_used\": \"exit_multiple\", \"exit_multiple_used\": 15.2, \"dcf_implied_diluted_pe\": 33.97 }, \"llm_analysis_summary\": \"# \u8d35\u5dde\u8305\u53f0(600519.SH)\u6295\u8d44\u5206\u6790\u62a5\u544a\\n\\n## \u4f30\u503c\u6458\u8981\\n- **\u5f53\u524d\u80a1\u4ef7**: 1,725.0\u5143\\n- **DCF\u4f30\u503c**: 1,675.5\u5143\\n- **\u4f30\u503c\u5dee\u5f02**: -2.9% (\u7565\u5fae\u4f4e\u4f30)\\n- **\u5efa\u8bae\u8bc4\u7ea7**: \u6301\u6709\\n\\n## \u6295\u8d44\u4eae\u70b9\\n1. **\u54c1\u724c\u62a4\u57ce\u6cb3**: \u8305\u53f0\u62e5\u6709\u5f3a\u5927\u7684\u54c1\u724c\u4ef7\u503c\u548c\u5b9a\u4ef7\u6743\\n2. **\u8d22\u52a1\u8868\u73b0**: \u6bdb\u5229\u7387\u9ad8\u8fbe50%\uff0cROE\u8d85\u8fc725%\\n3. **\u589e\u957f\u7a33\u5b9a**: \u6536\u5165\u548c\u5229\u6da6\u4fdd\u6301\u7a33\u5065\u589e\u957f\\n4. **\u73b0\u91d1\u6d41**: \u4ea7\u751f\u5f3a\u52b2\u7684\u81ea\u7531\u73b0\u91d1\u6d41\\n\\n## \u98ce\u9669\u56e0\u7d20\\n1. **\u4f30\u503c\u504f\u9ad8**: \u5f53\u524dPE_TTM\u4e3a45.2\u500d\uff0c\u9ad8\u4e8e\u5386\u53f2\u5e73\u5747\\n2. **\u653f\u7b56\u98ce\u9669**: \u767d\u9152\u884c\u4e1a\u9762\u4e34\u6d88\u8d39\u653f\u7b56\u53d8\u5316\u98ce\u9669\\n3. **\u7ade\u4e89\u52a0\u5267**: \u9ad8\u7aef\u767d\u9152\u5e02\u573a\u7ade\u4e89\u52a0\u5267\\n\\n## \u6295\u8d44\u5efa\u8bae\\n\u57fa\u4e8eDCF\u4f30\u503c\u7ed3\u679c\uff0c\u5f53\u524d\u80a1\u4ef7\u7565\u5fae\u9ad8\u4f30\uff0c\u5efa\u8bae\u6295\u8d44\u8005\u7b49\u5f85\u66f4\u597d\u7684\u4e70\u5165\u65f6\u673a\u3002\u957f\u671f\u6765\u770b\uff0c\u8305\u53f0\u4f9d\u7136\u662f\u4f18\u8d28\u7684\u6838\u5fc3\u8d44\u4ea7\u3002\\n\\n> *\u5206\u6790\u57fa\u4e8eDCF\u4f30\u503c\u6a21\u578b\uff0c\u5b58\u5728\u6a21\u578b\u5047\u8bbe\u98ce\u9669\uff0c\u6295\u8d44\u9700\u8c28\u614e\u3002*\", \"data_warnings\": [ \"LLM\u5206\u6790\u57fa\u4e8e\u5386\u53f2\u6570\u636e\uff0c\u672a\u6765\u8868\u73b0\u53ef\u80fd\u5b58\u5728\u5dee\u5f02\" ] }, \"error\": null }","title":"3. \u6210\u529f\u54cd\u5e94 - \u5305\u542bLLM\u5206\u6790"},{"location":"archived/api_backend_comprehensive_analysis/#4-","text":"{ \"detail\": [ { \"loc\": [\"body\", \"forecast_years\"], \"msg\": \"ensure this value is less than or equal to 20\", \"type\": \"value_error.number.not_le\", \"ctx\": { \"limit_value\": 20 } }, { \"loc\": [\"body\", \"cagr_decay_rate\"], \"msg\": \"ensure this value is less than or equal to 1\", \"type\": \"value_error.number.not_le\", \"ctx\": { \"limit_value\": 1 } } ] }","title":"4. \u9519\u8bef\u54cd\u5e94 - \u53c2\u6570\u9a8c\u8bc1\u5931\u8d25"},{"location":"archived/api_backend_comprehensive_analysis/#5-","text":"{ \"detail\": \"\u65e0\u6cd5\u83b7\u53d6\u80a1\u7968\u57fa\u672c\u4fe1\u606f: 999999.SH\" }","title":"5. \u9519\u8bef\u54cd\u5e94 - \u80a1\u7968\u6570\u636e\u672a\u627e\u5230"},{"location":"archived/api_backend_comprehensive_analysis/#6-","text":"{ \"detail\": \"\u9884\u6d4b\u671f\u5e74\u6570\u5fc5\u987b\u57281-20\u4e4b\u95f4\" }","title":"6. \u9519\u8bef\u54cd\u5e94 - \u4e1a\u52a1\u903b\u8f91\u9519\u8bef"},{"location":"archived/api_backend_comprehensive_analysis/#7-","text":"{ \"detail\": \"\u670d\u52a1\u5668\u5185\u90e8\u9519\u8bef: \u8ba1\u7b97WACC\u5931\u8d25\" }","title":"7. \u9519\u8bef\u54cd\u5e94 - \u670d\u52a1\u5668\u5185\u90e8\u9519\u8bef"},{"location":"archived/api_backend_comprehensive_analysis/#8-","text":"{ \"stock_info\": { \"ts_code\": \"600036.SH\", \"name\": \"\u62db\u5546\u94f6\u884c\", \"industry\": \"\u94f6\u884c\", \"market\": \"A\", \"latest_pe_ttm\": 8.5, \"base_report_date\": \"2024-09-30\" }, \"valuation_results\": { \"latest_price\": 35.6, \"current_pe\": 8.5, \"dcf_forecast_details\": { \"value_per_share\": 38.2, \"wacc_used\": 0.075, \"terminal_value_method_used\": \"perpetual_growth\", \"perpetual_growth_rate_used\": 0.03 }, \"special_industry_warning\": \"\u26a0\ufe0f \u91d1\u878d\u884c\u4e1a\u8b66\u544a\uff1aDCF\u6a21\u578b\u5bf9\u91d1\u878d\u4f01\u4e1a\u9002\u7528\u6027\u6709\u9650\u3002\u5efa\u8bae\u4f7f\u7528\u4ee5\u4e0b\u65b9\u6cd5\u8f85\u52a9\u4f30\u503c\uff1a\\n1. \u80a1\u606f\u6298\u73b0\u6a21\u578b(DDM)\\n2. \u5e02\u51c0\u7387(P/B)\u76f8\u5bf9\u4f30\u503c\\n3. \u51c0\u8d44\u4ea7\u6536\u76ca\u7387(ROE)\u5206\u6790\\n4. \u4e0d\u826f\u8d37\u6b3e\u7387\u548c\u62e8\u5907\u8986\u76d6\u7387\u5206\u6790\\n\\n\u5f53\u524dDCF\u4f30\u503c\u7ed3\u679c\u4ec5\u4f9b\u53c2\u8003\uff0c\u6295\u8d44\u51b3\u7b56\u8bf7\u7ed3\u5408\u4e13\u4e1a\u91d1\u878d\u5206\u6790\u3002\" }, \"error\": null }","title":"8. \u6210\u529f\u54cd\u5e94 - \u91d1\u878d\u884c\u4e1a\u7279\u6b8a\u8b66\u544a"},{"location":"archived/api_backend_comprehensive_analysis/#9-llm","text":"{ \"stock_info\": { \"ts_code\": \"600519.SH\", \"name\": \"\u8d35\u5dde\u8305\u53f0\", \"industry\": \"\u767d\u9152\", \"market\": \"A\", \"latest_pe_ttm\": 45.2, \"total_shares\": 1256197800, \"base_report_date\": \"2024-09-30\" }, \"valuation_results\": { \"latest_price\": 1725.0, \"current_pe\": 45.2, \"dcf_forecast_details\": { \"enterprise_value\": 2150000000000, \"equity_value\": 2100000000000, \"value_per_share\": 1675.5, \"wacc_used\": 0.085, \"terminal_value_method_used\": \"exit_multiple\", \"exit_multiple_used\": 15.2, \"forecast_period_years\": 5, \"dcf_implied_diluted_pe\": 33.97 }, \"llm_analysis_summary\": null, \"data_warnings\": [\"\u6279\u91cf\u5904\u7406\u6a21\u5f0f\uff0c\u5df2\u5173\u95edLLM\u5206\u6790\u4ee5\u63d0\u9ad8\u6027\u80fd\"], \"detailed_forecast_table\": [...], \"historical_financial_summary\": [...] }, \"error\": null } \u4e1a\u52a1\u903b\u8f91\u6d41\u7a0b : 1. \u6570\u636e\u83b7\u53d6\u9636\u6bb5 : \u83b7\u53d6\u80a1\u7968\u57fa\u672c\u4fe1\u606f\u3001\u4ef7\u683c\u3001\u8d22\u52a1\u62a5\u8868\u6570\u636e 2. \u6570\u636e\u5904\u7406\u9636\u6bb5 : \u6e05\u6d17\u6570\u636e\u3001\u8ba1\u7b97\u8d22\u52a1\u6307\u6807\u3001\u751f\u6210\u5386\u53f2\u6bd4\u7387 3. \u4f30\u503c\u8ba1\u7b97\u9636\u6bb5 : - \u521d\u59cb\u5316WACC\u8ba1\u7b97\u5668 - \u8fd0\u884c\u8d22\u52a1\u9884\u6d4b - \u8ba1\u7b97DCF\u4f30\u503c - \u8ba1\u7b97\u7ec8\u503c 4. \u654f\u611f\u6027\u5206\u6790\u9636\u6bb5 : \u591a\u7ef4\u5ea6\u53c2\u6570\u654f\u611f\u6027\u6d4b\u8bd5 5. LLM\u5206\u6790\u9636\u6bb5 : \u8c03\u7528\u5927\u8bed\u8a00\u6a21\u578b\u751f\u6210\u6295\u8d44\u5efa\u8bae 6. \u7ed3\u679c\u6574\u5408\u9636\u6bb5 : \u6574\u5408\u6240\u6709\u8ba1\u7b97\u7ed3\u679c\u548c\u8b66\u544a\u4fe1\u606f \u72b6\u6001\u7801 : - 200 : \u6210\u529f - 400 : \u8bf7\u6c42\u53c2\u6570\u9519\u8bef - 404 : \u80a1\u7968\u6570\u636e\u672a\u627e\u5230 - 500 : \u670d\u52a1\u5668\u5185\u90e8\u9519\u8bef","title":"9. \u6210\u529f\u54cd\u5e94 - \u6279\u91cf\u5904\u7406\uff08\u65e0LLM\uff09"},{"location":"archived/api_backend_comprehensive_analysis/#3_1","text":"","title":"3. \u6570\u636e\u66f4\u65b0\u63a5\u53e3"},{"location":"archived/api_backend_comprehensive_analysis/#post-update_stock_basic","text":"\u63a5\u53e3\u63cf\u8ff0 : \u66f4\u65b0\u80a1\u7968\u57fa\u672c\u4fe1\u606f\u6570\u636e \u8bf7\u6c42\u53c2\u6570 : \u65e0 \u8bf7\u6c42\u4f53\u793a\u4f8b : {} \u8be6\u7ec6\u54cd\u5e94\u4f53\u793a\u4f8b :","title":"POST /update_stock_basic"},{"location":"archived/api_backend_comprehensive_analysis/#1-_1","text":"{ \"status\": \"success\", \"message\": \"\u80a1\u7968\u57fa\u672c\u4fe1\u606f\u66f4\u65b0\u6210\u529f\uff0c\u51715,234\u6761\u8bb0\u5f55\", \"count\": 5234, \"details\": { \"updated_count\": 5234, \"new_count\": 156, \"execution_time\": 45.2, \"data_source\": \"tushare\", \"update_time\": \"2024-12-31T10:30:00Z\" } }","title":"1. \u6210\u529f\u54cd\u5e94 - \u6b63\u5e38\u66f4\u65b0"},{"location":"archived/api_backend_comprehensive_analysis/#2-_1","text":"{ \"status\": \"success\", \"message\": \"\u80a1\u7968\u57fa\u672c\u4fe1\u606f\u5df2\u662f\u6700\u65b0\uff0c\u65e0\u9700\u66f4\u65b0\", \"count\": 0, \"details\": { \"updated_count\": 0, \"new_count\": 0, \"execution_time\": 5.1, \"data_source\": \"tushare\", \"update_time\": \"2024-12-31T10:30:00Z\" } }","title":"2. \u6210\u529f\u54cd\u5e94 - \u65e0\u65b0\u6570\u636e"},{"location":"archived/api_backend_comprehensive_analysis/#3-","text":"{ \"status\": \"partial_success\", \"message\": \"\u80a1\u7968\u57fa\u672c\u4fe1\u606f\u90e8\u5206\u66f4\u65b0\u6210\u529f\uff0c\u5171\u66f4\u65b03,200\u6761\u8bb0\u5f55\uff0c1,500\u6761\u8bb0\u5f55\u5931\u8d25\", \"count\": 3200, \"details\": { \"updated_count\": 3200, \"failed_count\": 1500, \"new_count\": 89, \"execution_time\": 38.7, \"data_source\": \"tushare\", \"update_time\": \"2024-12-31T10:30:00Z\", \"errors\": [ \"API\u8c03\u7528\u9891\u7387\u9650\u5236\", \"\u90e8\u5206\u80a1\u7968\u4ee3\u7801\u683c\u5f0f\u9519\u8bef\" ] } }","title":"3. \u6210\u529f\u54cd\u5e94 - \u90e8\u5206\u66f4\u65b0"},{"location":"archived/api_backend_comprehensive_analysis/#4-api","text":"{ \"status\": \"error\", \"message\": \"\u66f4\u65b0\u5931\u8d25\uff1aTuShare API\u8c03\u7528\u5931\u8d25\", \"error\": \"API connection timeout\", \"details\": { \"error_code\": \"API_TIMEOUT\", \"error_message\": \"Connection to TuShare API timed out after 30 seconds\", \"execution_time\": 30.0, \"failed_count\": 0 } }","title":"4. \u9519\u8bef\u54cd\u5e94 - API\u8c03\u7528\u5931\u8d25"},{"location":"archived/api_backend_comprehensive_analysis/#5-_1","text":"{ \"status\": \"error\", \"message\": \"\u66f4\u65b0\u5931\u8d25\uff1a\u6570\u636e\u5e93\u8fde\u63a5\u9519\u8bef\", \"error\": \"Database connection failed\", \"details\": { \"error_code\": \"DB_CONNECTION_ERROR\", \"error_message\": \"Unable to connect to PostgreSQL database\", \"execution_time\": 0.5, \"failed_count\": 0 } } \u4e1a\u52a1\u903b\u8f91 : 1. \u8c03\u7528\u6570\u636e\u5904\u7406\u5668\u66f4\u65b0\u80a1\u7968\u57fa\u672c\u4fe1\u606f 2. \u5f3a\u5236\u4ece\u6570\u636e\u6e90\u83b7\u53d6\u6700\u65b0\u6570\u636e 3. \u66f4\u65b0\u6570\u636e\u5e93\u8bb0\u5f55 4. \u8fd4\u56de\u66f4\u65b0\u7ed3\u679c\u7edf\u8ba1 \u72b6\u6001\u7801 : - 200 : \u66f4\u65b0\u6210\u529f - 500 : \u66f4\u65b0\u5931\u8d25","title":"5. \u9519\u8bef\u54cd\u5e94 - \u6570\u636e\u5e93\u9519\u8bef"},{"location":"archived/api_backend_comprehensive_analysis/#post-update_daily_basic","text":"\u63a5\u53e3\u63cf\u8ff0 : \u66f4\u65b0\u6bcf\u65e5\u884c\u60c5\u6307\u6807\u6570\u636e \u8bf7\u6c42\u53c2\u6570 : \u65e0 \u8bf7\u6c42\u4f53\u793a\u4f8b : {} \u8be6\u7ec6\u54cd\u5e94\u4f53\u793a\u4f8b :","title":"POST /update_daily_basic"},{"location":"archived/api_backend_comprehensive_analysis/#1-_2","text":"{ \"status\": \"success\", \"message\": \"\u6bcf\u65e5\u884c\u60c5\u6307\u6807\u66f4\u65b0\u6210\u529f\uff0c\u51714,856\u6761\u8bb0\u5f55\", \"count\": 4856, \"details\": { \"updated_count\": 4856, \"new_count\": 45, \"execution_time\": 32.8, \"data_source\": \"tushare\", \"update_time\": \"2024-12-31T10:35:00Z\", \"trade_date\": \"2024-12-30\" } }","title":"1. \u6210\u529f\u54cd\u5e94 - \u6b63\u5e38\u66f4\u65b0"},{"location":"archived/api_backend_comprehensive_analysis/#2-_2","text":"{ \"status\": \"success\", \"message\": \"\u5f53\u524d\u65e5\u671f\u4e3a\u5468\u672b\u6216\u8282\u5047\u65e5\uff0c\u65e0\u9700\u66f4\u65b0\u884c\u60c5\u6570\u636e\", \"count\": 0, \"details\": { \"updated_count\": 0, \"new_count\": 0, \"execution_time\": 2.1, \"data_source\": \"tushare\", \"update_time\": \"2024-12-31T10:35:00Z\", \"trade_date\": \"2024-12-29\", \"note\": \"\u5468\u672b\u4f11\u5e02\" } }","title":"2. \u6210\u529f\u54cd\u5e94 - \u5e02\u573a\u4f11\u5e02"},{"location":"archived/api_backend_comprehensive_analysis/#3-_1","text":"{ \"status\": \"partial_success\", \"message\": \"\u6bcf\u65e5\u884c\u60c5\u6307\u6807\u90e8\u5206\u66f4\u65b0\u6210\u529f\uff0c\u5171\u66f4\u65b04,000\u6761\u8bb0\u5f55\uff0c500\u6761\u8bb0\u5f55\u5931\u8d25\", \"count\": 4000, \"details\": { \"updated_count\": 4000, \"failed_count\": 500, \"new_count\": 23, \"execution_time\": 28.5, \"data_source\": \"tushare\", \"update_time\": \"2024-12-31T10:35:00Z\", \"trade_date\": \"2024-12-30\", \"errors\": [ \"\u90e8\u5206\u80a1\u7968\u505c\u724c\", \"API\u8c03\u7528\u9891\u7387\u9650\u5236\" ] } }","title":"3. \u6210\u529f\u54cd\u5e94 - \u90e8\u5206\u66f4\u65b0"},{"location":"archived/api_backend_comprehensive_analysis/#4-_1","text":"{ \"status\": \"error\", \"message\": \"\u66f4\u65b0\u5931\u8d25\uff1a\u7f51\u7edc\u8fde\u63a5\u9519\u8bef\", \"error\": \"Network connection failed\", \"details\": { \"error_code\": \"NETWORK_ERROR\", \"error_message\": \"Unable to connect to TuShare API server\", \"execution_time\": 10.0, \"failed_count\": 0 } }","title":"4. \u9519\u8bef\u54cd\u5e94 - \u7f51\u7edc\u9519\u8bef"},{"location":"archived/api_backend_comprehensive_analysis/#5-_2","text":"{ \"status\": \"error\", \"message\": \"\u66f4\u65b0\u5931\u8d25\uff1a\u6570\u636e\u683c\u5f0f\u9519\u8bef\", \"error\": \"Data format error\", \"details\": { \"error_code\": \"DATA_FORMAT_ERROR\", \"error_message\": \"Received data format does not match expected schema\", \"execution_time\": 15.2, \"failed_count\": 0, \"sample_error\": \"Field 'pe_ttm' is missing in some records\" } } \u4e1a\u52a1\u903b\u8f91 : 1. \u8c03\u7528\u6570\u636e\u5904\u7406\u5668\u66f4\u65b0\u6bcf\u65e5\u884c\u60c5\u6570\u636e 2. \u83b7\u53d6\u6700\u65b0PE\u3001PB\u3001\u5e02\u503c\u7b49\u6307\u6807 3. \u66f4\u65b0\u6570\u636e\u5e93\u8bb0\u5f55 4. \u8fd4\u56de\u66f4\u65b0\u7ed3\u679c\u7edf\u8ba1 \u72b6\u6001\u7801 : - 200 : \u66f4\u65b0\u6210\u529f - 500 : \u66f4\u65b0\u5931\u8d25","title":"5. \u9519\u8bef\u54cd\u5e94 - \u6570\u636e\u683c\u5f0f\u9519\u8bef"},{"location":"archived/api_backend_comprehensive_analysis/#4_1","text":"","title":"4. \u80a1\u7968\u7b5b\u9009\u63a5\u53e3"},{"location":"archived/api_backend_comprehensive_analysis/#post-screen_stocks","text":"\u63a5\u53e3\u63cf\u8ff0 : \u6839\u636ePE\u3001PB\u3001\u5e02\u503c\u7b49\u6761\u4ef6\u7b5b\u9009\u80a1\u7968 \u8bf7\u6c42\u53c2\u6570\u8be6\u89e3 : | \u53c2\u6570\u540d | \u7c7b\u578b | \u5fc5\u586b | \u9ed8\u8ba4\u503c | \u8bf4\u660e | \u7ea6\u675f\u6761\u4ef6 | \u793a\u4f8b | |--------|------|------|--------|------|----------|------| | pe_min | float | \u5426 | \u65e0 | \u6700\u5c0f\u5e02\u76c8\u7387 | >=0 | 10, 15 | | pe_max | float | \u5426 | \u65e0 | \u6700\u5927\u5e02\u76c8\u7387 | >=pe_min | 30, 50 | | pb_min | float | \u5426 | \u65e0 | \u6700\u5c0f\u5e02\u51c0\u7387 | >=0 | 1, 2 | | pb_max | float | \u5426 | \u65e0 | \u6700\u5927\u5e02\u51c0\u7387 | >=pb_min | 5, 8 | | market_cap_min | float | \u5426 | \u65e0 | \u6700\u5c0f\u5e02\u503c(\u4ebf\u5143) | >=0 | 100, 200 | | market_cap_max | float | \u5426 | \u65e0 | \u6700\u5927\u5e02\u503c(\u4ebf\u5143) | >=market_cap_min | 1000, 2000 | \u8be6\u7ec6\u8bf7\u6c42\u4f53\u793a\u4f8b :","title":"POST /screen_stocks"},{"location":"archived/api_backend_comprehensive_analysis/#1_2","text":"{ \"pe_min\": 10, \"pe_max\": 30, \"market_cap_min\": 100 }","title":"1. \u57fa\u7840\u7b5b\u9009\u8bf7\u6c42"},{"location":"archived/api_backend_comprehensive_analysis/#2_2","text":"{ \"pe_min\": 5, \"pe_max\": 25, \"pb_min\": 0.5, \"pb_max\": 3, \"market_cap_min\": 50, \"market_cap_max\": 500 }","title":"2. \u5b8c\u6574\u7b5b\u9009\u6761\u4ef6"},{"location":"archived/api_backend_comprehensive_analysis/#3_2","text":"{ \"pe_max\": 20 }","title":"3. \u5355\u4e00\u6761\u4ef6\u7b5b\u9009"},{"location":"archived/api_backend_comprehensive_analysis/#4_2","text":"{ \"market_cap_min\": 1000, \"pe_max\": 25, \"pb_max\": 5 }","title":"4. \u5927\u76d8\u80a1\u7b5b\u9009"},{"location":"archived/api_backend_comprehensive_analysis/#5_1","text":"{ \"market_cap_max\": 200, \"pe_max\": 15, \"pb_max\": 2 }","title":"5. \u5c0f\u76d8\u4ef7\u503c\u80a1\u7b5b\u9009"},{"location":"archived/api_backend_comprehensive_analysis/#6_1","text":"{ \"pe_min\": 0, \"pe_max\": 9999, \"pb_min\": 0, \"pb_max\": 9999, \"market_cap_min\": 0, \"market_cap_max\": 999999 }","title":"6. \u8fb9\u754c\u503c\u6d4b\u8bd5\u8bf7\u6c42"},{"location":"archived/api_backend_comprehensive_analysis/#7","text":"{ \"pe_min\": 30, // \u9519\u8bef\uff1ape_min > pe_max \"pe_max\": 10, \"pb_min\": -5, // \u9519\u8bef\uff1a\u8d1f\u503c \"market_cap_min\": 5000, // \u9519\u8bef\uff1amarket_cap_min > market_cap_max \"market_cap_max\": 1000 } \u8be6\u7ec6\u54cd\u5e94\u4f53\u793a\u4f8b :","title":"7. \u9519\u8bef\u8bf7\u6c42\u793a\u4f8b"},{"location":"archived/api_backend_comprehensive_analysis/#1-_3","text":"{ \"status\": \"success\", \"message\": \"\u7b5b\u9009\u5b8c\u6210\uff0c\u5171\u627e\u5230150\u53ea\u7b26\u5408\u6761\u4ef6\u7684\u80a1\u7968\", \"count\": 150, \"data\": [ { \"ts_code\": \"600519.SH\", \"name\": \"\u8d35\u5dde\u8305\u53f0\", \"industry\": \"\u767d\u9152\", \"area\": \"\u8d35\u5dde\", \"market\": \"\u4e3b\u677f\", \"list_date\": \"2001-08-27\", \"close\": 1725.0, \"pe\": 45.2, \"pb\": 12.8, \"total_mv\": 21500.0, \"float_mv\": 21500.0, \"turnover_rate\": 0.85, \"volume_ratio\": 1.2, \"price_change\": 2.5 }, { \"ts_code\": \"000858.SZ\", \"name\": \"\u4e94\u7cae\u6db2\", \"industry\": \"\u767d\u9152\", \"area\": \"\u56db\u5ddd\", \"market\": \"\u4e3b\u677f\", \"list_date\": \"1998-04-27\", \"close\": 125.8, \"pe\": 28.5, \"pb\": 8.2, \"total_mv\": 5150.0, \"float_mv\": 5150.0, \"turnover_rate\": 1.2, \"volume_ratio\": 1.5, \"price_change\": 1.8 } ] }","title":"1. \u6210\u529f\u54cd\u5e94 - \u57fa\u7840\u7b5b\u9009"},{"location":"archived/api_backend_comprehensive_analysis/#2-_3","text":"{ \"status\": \"success\", \"message\": \"\u7b5b\u9009\u5b8c\u6210\uff0c\u672a\u627e\u5230\u7b26\u5408\u6761\u4ef6\u7684\u80a1\u7968\", \"count\": 0, \"data\": [] }","title":"2. \u6210\u529f\u54cd\u5e94 - \u65e0\u7ed3\u679c"},{"location":"archived/api_backend_comprehensive_analysis/#3-_2","text":"{ \"status\": \"success\", \"message\": \"\u7b5b\u9009\u5b8c\u6210\uff0c\u5171\u627e\u52301\u53ea\u7b26\u5408\u6761\u4ef6\u7684\u80a1\u7968\", \"count\": 1, \"data\": [ { \"ts_code\": \"600519.SH\", \"name\": \"\u8d35\u5dde\u8305\u53f0\", \"industry\": \"\u767d\u9152\", \"area\": \"\u8d35\u5dde\", \"market\": \"\u4e3b\u677f\", \"list_date\": \"2001-08-27\", \"close\": 1725.0, \"pe\": 45.2, \"pb\": 12.8, \"total_mv\": 21500.0, \"float_mv\": 21500.0, \"turnover_rate\": 0.85, \"volume_ratio\": 1.2, \"price_change\": 2.5 } ] }","title":"3. \u6210\u529f\u54cd\u5e94 - \u5355\u4e00\u7ed3\u679c"},{"location":"archived/api_backend_comprehensive_analysis/#4-_2","text":"{ \"detail\": [ { \"loc\": [\"body\", \"pe_min\"], \"msg\": \"ensure this value is greater than or equal to 0\", \"type\": \"value_error.number.not_ge\", \"ctx\": { \"limit_value\": 0 } }, { \"loc\": [\"body\", \"market_cap_min\"], \"msg\": \"ensure this value is less than or equal to market_cap_max\", \"type\": \"value_error.number.not_le\", \"ctx\": { \"limit_value\": 1000 } } ] }","title":"4. \u9519\u8bef\u54cd\u5e94 - \u53c2\u6570\u9a8c\u8bc1\u5931\u8d25"},{"location":"archived/api_backend_comprehensive_analysis/#5-_3","text":"{ \"detail\": \"\u65e0\u6cd5\u83b7\u53d6\u80a1\u7968\u6570\u636e\uff0c\u8bf7\u5148\u66f4\u65b0\u80a1\u7968\u57fa\u672c\u4fe1\u606f\" } \u4e1a\u52a1\u903b\u8f91 : 1. \u83b7\u53d6\u5408\u5e76\u540e\u7684\u80a1\u7968\u6570\u636e 2. \u5e94\u7528\u7b5b\u9009\u6761\u4ef6\uff08PE\u3001PB\u3001\u5e02\u503c\u8303\u56f4\uff09 3. \u79fb\u9664\u65e0\u6548\u6570\u636e 4. \u6309\u5e02\u503c\u964d\u5e8f\u6392\u5217 5. \u8fd4\u56de\u7b5b\u9009\u7ed3\u679c \u72b6\u6001\u7801 : - 200 : \u7b5b\u9009\u6210\u529f - 404 : \u6570\u636e\u672a\u627e\u5230 - 500 : \u7b5b\u9009\u5931\u8d25","title":"5. \u9519\u8bef\u54cd\u5e94 - \u6570\u636e\u672a\u627e\u5230"},{"location":"archived/api_backend_comprehensive_analysis/#_10","text":"","title":"\ud83d\udccb \u53c2\u6570\u7ea6\u675f\u6761\u4ef6\u603b\u7ed3\u8868"},{"location":"archived/api_backend_comprehensive_analysis/#_11","text":"","title":"\u80a1\u7968\u4f30\u503c\u63a5\u53e3\u53c2\u6570\u7ea6\u675f"},{"location":"archived/api_backend_comprehensive_analysis/#_12","text":"\u53c2\u6570\u540d \u7c7b\u578b \u7ea6\u675f\u6761\u4ef6 \u8bf4\u660e \u6709\u6548\u793a\u4f8b \u65e0\u6548\u793a\u4f8b ts_code string \u7b26\u5408A\u80a1\u683c\u5f0f 6\u4f4d\u6570\u5b57+.SH/.SZ \"600519.SH\" \"600519\", \"999999.SH\" market string \u679a\u4e3e\u503c \"A\", \"HK\" \"A\" \"US\", \"NASDAQ\" valuation_date string YYYY-MM-DD\u683c\u5f0f \u6709\u6548\u7684\u65e5\u671f\u683c\u5f0f \"2024-12-31\" \"2024/12/31\", \"invalid\"","title":"\u57fa\u7840\u53c2\u6570\u7ea6\u675f"},{"location":"archived/api_backend_comprehensive_analysis/#_13","text":"\u53c2\u6570\u540d \u7c7b\u578b \u6700\u5c0f\u503c \u6700\u5927\u503c \u8bf4\u660e \u6709\u6548\u793a\u4f8b \u65e0\u6548\u793a\u4f8b forecast_years int 1 20 \u9884\u6d4b\u671f\u5e74\u6570 5, 10, 20 0, 25, -1 cagr_decay_rate float 0 1 CAGR\u8870\u51cf\u7387 0.1, 0.5, 0.99 -0.1, 1.5 target_operating_margin float 0 1 \u76ee\u6807\u8425\u4e1a\u5229\u6da6\u7387 0.25, 0.5 -0.1, 1.5 op_margin_transition_years int 1 \u65e0\u9650\u5236 \u8fc7\u6e21\u5e74\u6570 3, 5, 10 0, -1 target_debt_ratio float 0 1 \u76ee\u6807\u503a\u52a1\u6bd4\u4f8b 0.3, 0.5 -0.1, 1.5 llm_temperature float 0.0 2.0 LLM\u6e29\u5ea6\u53c2\u6570 0.0, 1.0, 2.0 -0.1, 2.1 llm_top_p float 0.0 1.0 LLM Top-P\u53c2\u6570 0.0, 0.5, 1.0 -0.1, 1.1","title":"\u6570\u503c\u8303\u56f4\u7ea6\u675f\u53c2\u6570"},{"location":"archived/api_backend_comprehensive_analysis/#_14","text":"\u53c2\u6570\u540d \u7c7b\u578b \u7ea6\u675f\u6761\u4ef6 \u8bf4\u660e \u6709\u6548\u793a\u4f8b \u65e0\u6548\u793a\u4f8b cost_of_debt float >=0 \u7a0e\u524d\u503a\u52a1\u6210\u672c 0.05, 0.08 -0.01 risk_free_rate float >=0 \u65e0\u98ce\u9669\u5229\u7387 0.03, 0.035 -0.01 market_risk_premium float >=0 \u5e02\u573a\u98ce\u9669\u6ea2\u4ef7 0.05, 0.06 -0.01 exit_multiple float >=0 \u9000\u51fa\u4e58\u6570 15.0, 18.0 -1.0 perpetual_growth_rate float >=0 \u6c38\u7eed\u589e\u957f\u7387 0.03, 0.035 -0.01 llm_max_tokens int >=1 \u6700\u5927Token\u6570 1000, 4000 0, -100","title":"\u975e\u8d1f\u7ea6\u675f\u53c2\u6570"},{"location":"archived/api_backend_comprehensive_analysis/#_15","text":"\u53c2\u6570\u540d \u7c7b\u578b \u53ef\u9009\u503c \u8bf4\u660e \u6709\u6548\u793a\u4f8b \u65e0\u6548\u793a\u4f8b op_margin_forecast_mode string \"historical_median\", \"transition_to_target\" \u5229\u6da6\u7387\u9884\u6d4b\u6a21\u5f0f \"historical_median\" \"invalid_mode\" wacc_weight_mode string \"target\", \"market\" WACC\u6743\u91cd\u6a21\u5f0f \"target\" \"invalid_mode\" terminal_value_method string \"exit_multiple\", \"perpetual_growth\" \u7ec8\u503c\u8ba1\u7b97\u65b9\u6cd5 \"exit_multiple\" \"invalid_method\"","title":"\u679a\u4e3e\u503c\u7ea6\u675f\u53c2\u6570"},{"location":"archived/api_backend_comprehensive_analysis/#_16","text":"\u53c2\u6570\u540d \u7c7b\u578b \u4f9d\u8d56\u6761\u4ef6 \u7ea6\u675f\u8bf4\u660e \u6709\u6548\u793a\u4f8b \u65e0\u6548\u793a\u4f8b target_operating_margin float op_margin_forecast_mode=\"transition_to_target\" \u5fc5\u987b\u63d0\u4f9b\u76ee\u6807\u5229\u6da6\u7387 0.30 null op_margin_transition_years int op_margin_forecast_mode=\"transition_to_target\" \u5fc5\u987b\u63d0\u4f9b\u8fc7\u6e21\u5e74\u6570 5 null exit_multiple float terminal_value_method=\"exit_multiple\" \u5fc5\u987b\u63d0\u4f9b\u9000\u51fa\u4e58\u6570 15.0 null perpetual_growth_rate float terminal_value_method=\"perpetual_growth\" \u5fc5\u987b\u63d0\u4f9b\u6c38\u7eed\u589e\u957f\u7387 0.03 null target_debt_ratio float wacc_weight_mode=\"target\" \u5efa\u8bae\u63d0\u4f9b\u76ee\u6807\u503a\u52a1\u6bd4\u4f8b 0.35 null","title":"\u6761\u4ef6\u7ea6\u675f\u53c2\u6570"},{"location":"archived/api_backend_comprehensive_analysis/#_17","text":"","title":"\u80a1\u7968\u7b5b\u9009\u63a5\u53e3\u53c2\u6570\u7ea6\u675f"},{"location":"archived/api_backend_comprehensive_analysis/#_18","text":"\u53c2\u6570\u540d \u7c7b\u578b \u7ea6\u675f\u6761\u4ef6 \u8bf4\u660e \u6709\u6548\u793a\u4f8b \u65e0\u6548\u793a\u4f8b pe_max float >=pe_min \u6700\u5927\u5e02\u76c8\u7387 30 (\u5f53pe_min=10) 10 (\u5f53pe_min=30) pb_max float >=pb_min \u6700\u5927\u5e02\u51c0\u7387 5 (\u5f53pb_min=1) 1 (\u5f53pb_min=5) market_cap_max float >=market_cap_min \u6700\u5927\u5e02\u503c 1000 (\u5f53market_cap_min=100) 100 (\u5f53market_cap_min=1000)","title":"\u76f8\u5bf9\u7ea6\u675f\u53c2\u6570"},{"location":"archived/api_backend_comprehensive_analysis/#_19","text":"\u53c2\u6570\u540d \u7c7b\u578b \u7ea6\u675f\u6761\u4ef6 \u8bf4\u660e \u6709\u6548\u793a\u4f8b \u65e0\u6548\u793a\u4f8b pe_min float >=0 \u6700\u5c0f\u5e02\u76c8\u7387 10, 0 -5 pe_max float >=0 \u6700\u5927\u5e02\u76c8\u7387 30, 9999 -10 pb_min float >=0 \u6700\u5c0f\u5e02\u51c0\u7387 1, 0 -2 pb_max float >=0 \u6700\u5927\u5e02\u51c0\u7387 5, 9999 -3 market_cap_min float >=0 \u6700\u5c0f\u5e02\u503c 100, 0 -50 market_cap_max float >=0 \u6700\u5927\u5e02\u503c 1000, 999999 -100","title":"\u975e\u8d1f\u7ea6\u675f\u53c2\u6570"},{"location":"archived/api_backend_comprehensive_analysis/#_20","text":"\u9519\u8bef\u7c7b\u578b HTTP\u72b6\u6001\u7801 \u9519\u8bef\u7801\u793a\u4f8b \u8bf4\u660e \u53c2\u6570\u7f3a\u5931 400 field required \u5fc5\u586b\u53c2\u6570\u672a\u63d0\u4f9b \u6570\u503c\u8d85\u51fa\u8303\u56f4 400 ensure this value is less than or equal to 20 \u6570\u503c\u5927\u4e8e\u6700\u5927\u5141\u8bb8\u503c \u6570\u503c\u5c0f\u4e8e\u6700\u5c0f\u503c 400 ensure this value is greater than or equal to 0 \u6570\u503c\u5c0f\u4e8e\u6700\u5c0f\u5141\u8bb8\u503c \u679a\u4e3e\u503c\u65e0\u6548 400 value is not a valid enumeration member \u63d0\u4f9b\u7684\u503c\u4e0d\u5728\u679a\u4e3e\u8303\u56f4\u5185 \u683c\u5f0f\u9519\u8bef 400 invalid date format \u65e5\u671f\u683c\u5f0f\u4e0d\u6b63\u786e \u76f8\u5bf9\u7ea6\u675f\u8fdd\u53cd 400 ensure this value is less than or equal to maximum \u6700\u5927\u503c\u5c0f\u4e8e\u6700\u5c0f\u503c \u6761\u4ef6\u7ea6\u675f\u8fdd\u53cd 422 target_operating_margin is required when transition mode \u6761\u4ef6\u6ee1\u8db3\u65f6\u672a\u63d0\u4f9b\u5fc5\u9700\u53c2\u6570","title":"\u53c2\u6570\u9a8c\u8bc1\u9519\u8bef\u7801\u5bf9\u7167\u8868"},{"location":"archived/api_backend_comprehensive_analysis/#_21","text":"","title":"\ud83d\udcca \u6570\u636e\u6a21\u578b"},{"location":"archived/api_backend_comprehensive_analysis/#_22","text":"","title":"\u8bf7\u6c42\u6a21\u578b\u8be6\u89e3"},{"location":"archived/api_backend_comprehensive_analysis/#stockvaluationrequest","text":"class StockValuationRequest(BaseModel): # \u57fa\u7840\u53c2\u6570 ts_code: str # \u80a1\u7968\u4ee3\u7801 market: Optional[str] = \"A\" # \u5e02\u573a\u6807\u8bc6 valuation_date: Optional[str] = None # \u4f30\u503c\u65e5\u671f ltm_baseline_enabled: Optional[bool] = False # \u662f\u5426\u4f7f\u7528LTM/Interim\u57fa\u671f # DCF\u5047\u8bbe\u53c2\u6570 forecast_years: int = 5 # \u9884\u6d4b\u5e74\u6570 cagr_decay_rate: Optional[float] = None # CAGR\u8870\u51cf\u7387 op_margin_forecast_mode: str = \"historical_median\" # \u5229\u6da6\u7387\u9884\u6d4b\u6a21\u5f0f # WACC\u53c2\u6570 wacc_weight_mode: str = \"target\" # WACC\u6743\u91cd\u6a21\u5f0f target_debt_ratio: Optional[float] = None # \u76ee\u6807\u503a\u52a1\u6bd4\u4f8b risk_free_rate: Optional[float] = None # \u65e0\u98ce\u9669\u5229\u7387 beta: Optional[float] = None # \u8d1d\u5854\u7cfb\u6570 # \u7ec8\u503c\u53c2\u6570 terminal_value_method: str = \"exit_multiple\" # \u7ec8\u503c\u8ba1\u7b97\u65b9\u6cd5 exit_multiple: Optional[float] = None # \u9000\u51fa\u4e58\u6570 perpetual_growth_rate: Optional[float] = None # \u6c38\u7eed\u589e\u957f\u7387 # LLM\u53c2\u6570 request_llm_summary: bool = False # LLM\u5206\u6790\u5f00\u5173 llm_provider: Optional[str] = None # LLM\u63d0\u4f9b\u5546 llm_temperature: Optional[float] = None # \u6e29\u5ea6\u53c2\u6570 # \u654f\u611f\u6027\u5206\u6790 sensitivity_analysis: Optional[SensitivityAnalysisRequest] = None","title":"StockValuationRequest"},{"location":"archived/api_backend_comprehensive_analysis/#sensitivityanalysisrequest","text":"class SensitivityAnalysisRequest(BaseModel): row_axis: SensitivityAxisInput # \u884c\u8f74\u914d\u7f6e column_axis: SensitivityAxisInput # \u5217\u8f74\u914d\u7f6e class SensitivityAxisInput(BaseModel): parameter_name: str # \u53c2\u6570\u540d values: list[float] # \u6d4b\u8bd5\u503c\u5217\u8868 step: Optional[float] = None # \u6b65\u957f points: Optional[int] = None # \u70b9\u6570","title":"SensitivityAnalysisRequest"},{"location":"archived/api_backend_comprehensive_analysis/#_23","text":"","title":"\u54cd\u5e94\u6a21\u578b\u8be6\u89e3"},{"location":"archived/api_backend_comprehensive_analysis/#stockvaluationresponse","text":"class StockValuationResponse(BaseModel): stock_info: StockBasicInfoModel # \u80a1\u7968\u57fa\u672c\u4fe1\u606f valuation_results: ValuationResultsContainer # \u4f30\u503c\u7ed3\u679c\u5bb9\u5668 error: Optional[str] = None # \u9519\u8bef\u4fe1\u606f","title":"StockValuationResponse"},{"location":"archived/api_backend_comprehensive_analysis/#valuationresultscontainer","text":"class ValuationResultsContainer(BaseModel): latest_price: Optional[float] # \u6700\u65b0\u4ef7\u683c current_pe: Optional[float] # \u5f53\u524dPE current_pb: Optional[float] # \u5f53\u524dPB dcf_forecast_details: Optional[DcfForecastDetails] # DCF\u8be6\u60c5 detailed_forecast_table: Optional[list[dict]] # \u9884\u6d4b\u8868\u683c sensitivity_analysis_result: Optional[SensitivityAnalysisResult] # \u654f\u611f\u6027\u5206\u6790 llm_analysis_summary: Optional[str] # LLM\u5206\u6790 data_warnings: Optional[list[str]] # \u6570\u636e\u8b66\u544a historical_financial_summary: Optional[list[dict]] # \u5386\u53f2\u8d22\u52a1\u6458\u8981 historical_ratios_summary: Optional[list[dict]] # \u5386\u53f2\u6bd4\u7387\u6458\u8981 special_industry_warning: Optional[str] # \u884c\u4e1a\u8b66\u544a","title":"ValuationResultsContainer"},{"location":"archived/api_backend_comprehensive_analysis/#dcfforecastdetails","text":"class DcfForecastDetails(BaseModel): enterprise_value: Optional[float] # \u4f01\u4e1a\u4ef7\u503c equity_value: Optional[float] # \u80a1\u6743\u4ef7\u503c value_per_share: Optional[float] # \u6bcf\u80a1\u4ef7\u503c wacc_used: Optional[float] # \u4f7f\u7528\u7684WACC terminal_value: Optional[float] # \u7ec8\u503c dcf_implied_diluted_pe: Optional[float] # DCF\u9690\u542bPE base_ev_ebitda: Optional[float] # EV/EBITDA implied_perpetual_growth_rate: Optional[float] # \u9690\u542b\u6c38\u7eed\u589e\u957f\u7387 # ... \u5176\u4ed6\u5b57\u6bb5","title":"DcfForecastDetails"},{"location":"archived/api_backend_comprehensive_analysis/#_24","text":"","title":"\u26a0\ufe0f \u9519\u8bef\u5904\u7406"},{"location":"archived/api_backend_comprehensive_analysis/#_25","text":"","title":"\u9519\u8bef\u7c7b\u578b\u5206\u7c7b"},{"location":"archived/api_backend_comprehensive_analysis/#1-400","text":"\u89e6\u53d1\u6761\u4ef6 : \u8bf7\u6c42\u53c2\u6570\u683c\u5f0f\u9519\u8bef\u6216\u7f3a\u5931\u5fc5\u9700\u53c2\u6570 \u9519\u8bef\u793a\u4f8b : { \"detail\": \"field required (type=value_error.missing)\" }","title":"1. \u53c2\u6570\u9a8c\u8bc1\u9519\u8bef (400)"},{"location":"archived/api_backend_comprehensive_analysis/#2-404","text":"\u89e6\u53d1\u6761\u4ef6 : \u80a1\u7968\u4ee3\u7801\u4e0d\u5b58\u5728\u6216\u6570\u636e\u4e0d\u53ef\u7528 \u9519\u8bef\u793a\u4f8b : { \"detail\": \"\u65e0\u6cd5\u83b7\u53d6\u80a1\u7968\u57fa\u672c\u4fe1\u606f: 999999.SH\" }","title":"2. \u6570\u636e\u672a\u627e\u5230\u9519\u8bef (404)"},{"location":"archived/api_backend_comprehensive_analysis/#3-422","text":"\u89e6\u53d1\u6761\u4ef6 : \u53c2\u6570\u503c\u4e0d\u7b26\u5408\u4e1a\u52a1\u89c4\u5219 \u9519\u8bef\u793a\u4f8b : { \"detail\": \"\u9884\u6d4b\u671f\u5e74\u6570\u5fc5\u987b\u57281-20\u4e4b\u95f4\" }","title":"3. \u4e1a\u52a1\u903b\u8f91\u9519\u8bef (422)"},{"location":"archived/api_backend_comprehensive_analysis/#4-500","text":"\u89e6\u53d1\u6761\u4ef6 : \u8ba1\u7b97\u8fc7\u7a0b\u5f02\u5e38\u3001\u5916\u90e8\u670d\u52a1\u8c03\u7528\u5931\u8d25 \u9519\u8bef\u793a\u4f8b : { \"detail\": \"\u670d\u52a1\u5668\u5185\u90e8\u9519\u8bef: \u8ba1\u7b97WACC\u5931\u8d25\" } \u6ce8\u610f\uff1a - target_debt_ratio \u6307 WACC \u6743\u91cd\u7528\u7684\u503a\u52a1\u6bd4\u4f8b D/(D+E)\uff08\u5e02\u503c\u53e3\u5f84\uff09\uff0c\u8bf7\u52ff\u4e0e\u201c\u8d44\u4ea7\u8d1f\u503a\u7387\u201d\uff08\u8d26\u9762\u53e3\u5f84\uff09\u6df7\u6dc6\u3002 - \u5f53\u542f\u7528 ltm_baseline_enabled \u4e14\u7f3a\u5c11\u5fc5\u8981\u7684\u4e0a\u5e74\u540c\u53e3\u5f84\u6216\u4e0a\u5e74\u5e74\u62a5\u5bfc\u81f4 LTM \u8ba1\u7b97\u5931\u8d25\u65f6\uff0c\u7cfb\u7edf\u81ea\u52a8\u56de\u9000\u4e3a\u201c\u5e74\u62a5\u57fa\u671f\u201d\uff0c\u5e76\u5728 debug_request_slice.baseline_debug \u7ed9\u51fa\u63d0\u793a\u3002","title":"4. \u670d\u52a1\u5668\u5185\u90e8\u9519\u8bef (500)"},{"location":"archived/api_backend_comprehensive_analysis/#_26","text":"","title":"\u9519\u8bef\u5904\u7406\u673a\u5236"},{"location":"archived/api_backend_comprehensive_analysis/#1_3","text":"# Pydantic\u6a21\u578b\u81ea\u52a8\u9a8c\u8bc1 class StockValuationRequest(BaseModel): forecast_years: int = Field(default=5, ge=1, le=20) # \u81ea\u52a8\u9a8c\u8bc1\u8303\u56f4\u7ea6\u675f","title":"1. \u8f93\u5165\u9a8c\u8bc1"},{"location":"archived/api_backend_comprehensive_analysis/#2_3","text":"# \u4e1a\u52a1\u89c4\u5219\u68c0\u67e5 if latest_price is None or latest_price <= 0: raise HTTPException( status_code=404, detail=f\"\u65e0\u6cd5\u83b7\u53d6\u6709\u6548\u7684\u6700\u65b0\u4ef7\u683c: {request.ts_code}\" )","title":"2. \u4e1a\u52a1\u903b\u8f91\u9a8c\u8bc1"},{"location":"archived/api_backend_comprehensive_analysis/#3_3","text":"try: # \u4e1a\u52a1\u903b\u8f91 result = valuation_service.run_single_valuation(...) except Exception as e: logger.error(f\"Unexpected error: {e}\") raise HTTPException(status_code=500, detail=f\"\u670d\u52a1\u5668\u5185\u90e8\u9519\u8bef: {str(e)}\")","title":"3. \u5f02\u5e38\u6355\u83b7\u548c\u8f6c\u6362"},{"location":"archived/api_backend_comprehensive_analysis/#4_3","text":"# \u975e\u81f4\u547d\u8b66\u544a\u6536\u96c6 all_warnings = base_data_warnings + base_run_warnings data_warnings = list(set(all_warnings)) if all_warnings else None","title":"4. \u8b66\u544a\u4fe1\u606f\u5904\u7406"},{"location":"archived/api_backend_comprehensive_analysis/#_27","text":"","title":"\u6570\u636e\u9a8c\u8bc1\u89c4\u5219"},{"location":"archived/api_backend_comprehensive_analysis/#_28","text":"forecast_years : 1-20\u5e74 target_operating_margin : 0-1\u4e4b\u95f4 llm_temperature : 0.0-2.0\u4e4b\u95f4 llm_top_p : 0.0-1.0\u4e4b\u95f4","title":"\u6570\u503c\u8303\u56f4\u9a8c\u8bc1"},{"location":"archived/api_backend_comprehensive_analysis/#_29","text":"ts_code : \u7b26\u5408\u80a1\u7968\u4ee3\u7801\u683c\u5f0f (\u5982 600519.SH) valuation_date : YYYY-MM-DD\u683c\u5f0f wacc_weight_mode : \u679a\u4e3e\u503c (target/market)","title":"\u683c\u5f0f\u9a8c\u8bc1"},{"location":"archived/api_backend_comprehensive_analysis/#_30","text":"\u5386\u53f2\u6570\u636e\u5b8c\u6574\u6027\u68c0\u67e5 \u8d22\u52a1\u6570\u636e\u6709\u6548\u6027\u9a8c\u8bc1 \u8ba1\u7b97\u7ed3\u679c\u5408\u7406\u6027\u9a8c\u8bc1","title":"\u4e1a\u52a1\u89c4\u5219\u9a8c\u8bc1"},{"location":"archived/api_backend_comprehensive_analysis/#_31","text":"","title":"\ud83d\ude80 \u90e8\u7f72\u548c\u6d4b\u8bd5"},{"location":"archived/api_backend_comprehensive_analysis/#_32","text":"Python 3.8+ FastAPI 0.100+ uvicorn 0.20+ pandas 2.0+ pydantic 2.0+","title":"\u73af\u5883\u8981\u6c42"},{"location":"archived/api_backend_comprehensive_analysis/#_33","text":"# \u5b89\u88c5\u4f9d\u8d56 pip install -e . # \u542f\u52a8\u670d\u52a1 uvicorn src.api.main:app --reload --host 0.0.0.0 --port 8124 # \u6216\u4f7f\u7528\u9879\u76ee\u811a\u672c python -m uvicorn src.api.main:app --reload --host 0.0.0.0 --port 8124","title":"\u672c\u5730\u90e8\u7f72"},{"location":"archived/api_backend_comprehensive_analysis/#_34","text":"# \u4f7f\u7528gunicorn\u542f\u52a8 gunicorn src.api.main:app -w 4 -k uvicorn.workers.UvicornWorker --bind 0.0.0.0:8124 # \u4f7f\u7528docker docker build -t stock-valuation-api . docker run -p 8124:8124 stock-valuation-api","title":"\u751f\u4ea7\u90e8\u7f72"},{"location":"archived/api_backend_comprehensive_analysis/#api_1","text":"\u542f\u52a8\u670d\u52a1\u540e\u8bbf\u95ee\uff1a - Swagger UI: http://localhost:8124/docs - ReDoc: http://localhost:8124/redoc - OpenAPI Schema: http://localhost:8124/openapi.json","title":"API\u6587\u6863"},{"location":"archived/api_backend_comprehensive_analysis/#_35","text":"","title":"\u6d4b\u8bd5\u811a\u672c"},{"location":"archived/api_backend_comprehensive_analysis/#1_4","text":"# \u57fa\u7840\u5065\u5eb7\u68c0\u67e5 curl http://localhost:8124/ # \u9884\u671f\u54cd\u5e94 # {\"message\": \"Welcome to the Stock Valuation API (Streamlit Backend)\"}","title":"1. \u5065\u5eb7\u68c0\u67e5\u6d4b\u8bd5"},{"location":"archived/api_backend_comprehensive_analysis/#2_4","text":"","title":"2. \u80a1\u7968\u4f30\u503c\u6d4b\u8bd5"},{"location":"archived/api_backend_comprehensive_analysis/#_36","text":"curl -X POST \"http://localhost:8124/api/v1/valuation\" \\ -H \"Content-Type: application/json\" \\ -d '{ \"ts_code\": \"600519.SH\", \"forecast_years\": 5, \"request_llm_summary\": false }'","title":"\u57fa\u7840\u4f30\u503c\u6d4b\u8bd5"},{"location":"archived/api_backend_comprehensive_analysis/#_37","text":"curl -X POST \"http://localhost:8124/api/v1/valuation\" \\ -H \"Content-Type: application/json\" \\ -d '{ \"ts_code\": \"600519.SH\", \"market\": \"A\", \"valuation_date\": \"2024-12-31\", \"forecast_years\": 10, \"cagr_decay_rate\": 0.15, \"op_margin_forecast_mode\": \"transition_to_target\", \"target_operating_margin\": 0.30, \"op_margin_transition_years\": 5, \"wacc_weight_mode\": \"target\", \"target_debt_ratio\": 0.35, \"cost_of_debt\": 0.045, \"risk_free_rate\": 0.03, \"beta\": 1.1, \"market_risk_premium\": 0.055, \"size_premium\": 0.015, \"terminal_value_method\": \"exit_multiple\", \"exit_multiple\": 16.5, \"request_llm_summary\": true, \"llm_provider\": \"deepseek\", \"llm_model_id\": \"deepseek-chat\", \"llm_temperature\": 0.8, \"llm_top_p\": 0.9, \"llm_max_tokens\": 3000 }'","title":"\u5b8c\u6574\u53c2\u6570\u4f30\u503c\u6d4b\u8bd5"},{"location":"archived/api_backend_comprehensive_analysis/#_38","text":"curl -X POST \"http://localhost:8124/api/v1/valuation\" \\ -H \"Content-Type: application/json\" \\ -d '{ \"ts_code\": \"600519.SH\", \"forecast_years\": 5, \"sensitivity_analysis\": { \"row_axis\": { \"parameter_name\": \"wacc\", \"values\": [0.08, 0.09, 0.10, 0.11], \"step\": 0.01, \"points\": 4 }, \"column_axis\": { \"parameter_name\": \"exit_multiple\", \"values\": [14, 16, 18, 20], \"step\": 2, \"points\": 4 } } }'","title":"\u654f\u611f\u6027\u5206\u6790\u6d4b\u8bd5"},{"location":"archived/api_backend_comprehensive_analysis/#_39","text":"# \u6d4b\u8bd5\u6700\u5c0f\u9884\u6d4b\u5e74\u6570 curl -X POST \"http://localhost:8124/api/v1/valuation\" \\ -H \"Content-Type: application/json\" \\ -d '{ \"ts_code\": \"600519.SH\", \"forecast_years\": 1 }' # \u6d4b\u8bd5\u6700\u5927\u9884\u6d4b\u5e74\u6570 curl -X POST \"http://localhost:8124/api/v1/valuation\" \\ -H \"Content-Type: application/json\" \\ -d '{ \"ts_code\": \"600519.SH\", \"forecast_years\": 20 }' # \u6d4b\u8bd5LLM\u53c2\u6570\u8fb9\u754c\u503c curl -X POST \"http://localhost:8124/api/v1/valuation\" \\ -H \"Content-Type: application/json\" \\ -d '{ \"ts_code\": \"600519.SH\", \"forecast_years\": 5, \"request_llm_summary\": true, \"llm_temperature\": 0.0, \"llm_top_p\": 1.0, \"llm_max_tokens\": 100 }'","title":"\u8fb9\u754c\u503c\u6d4b\u8bd5"},{"location":"archived/api_backend_comprehensive_analysis/#_40","text":"# \u6d4b\u8bd5\u65e0\u6548\u80a1\u7968\u4ee3\u7801 curl -X POST \"http://localhost:8124/api/v1/valuation\" \\ -H \"Content-Type: application/json\" \\ -d '{ \"ts_code\": \"999999.SH\", \"forecast_years\": 5 }' # \u6d4b\u8bd5\u53c2\u6570\u8d85\u51fa\u8303\u56f4 curl -X POST \"http://localhost:8124/api/v1/valuation\" \\ -H \"Content-Type: application/json\" \\ -d '{ \"ts_code\": \"600519.SH\", \"forecast_years\": 25, \"cagr_decay_rate\": 1.5, \"llm_temperature\": 3.0 }'","title":"\u9519\u8bef\u8bf7\u6c42\u6d4b\u8bd5"},{"location":"archived/api_backend_comprehensive_analysis/#3_4","text":"","title":"3. \u6570\u636e\u66f4\u65b0\u6d4b\u8bd5"},{"location":"archived/api_backend_comprehensive_analysis/#_41","text":"# \u57fa\u7840\u66f4\u65b0 curl -X POST \"http://localhost:8124/update_stock_basic\" \\ -H \"Content-Type: application/json\" \\ -d '{}' # \u9884\u671f\u6210\u529f\u54cd\u5e94 # { # \"status\": \"success\", # \"message\": \"\u80a1\u7968\u57fa\u672c\u4fe1\u606f\u66f4\u65b0\u6210\u529f\uff0c\u51715,234\u6761\u8bb0\u5f55\", # \"count\": 5234 # }","title":"\u80a1\u7968\u57fa\u672c\u4fe1\u606f\u66f4\u65b0\u6d4b\u8bd5"},{"location":"archived/api_backend_comprehensive_analysis/#_42","text":"# \u66f4\u65b0\u6bcf\u65e5\u884c\u60c5 curl -X POST \"http://localhost:8124/update_daily_basic\" \\ -H \"Content-Type: application/json\" \\ -d '{}' # \u9884\u671f\u6210\u529f\u54cd\u5e94 # { # \"status\": \"success\", # \"message\": \"\u6bcf\u65e5\u884c\u60c5\u6307\u6807\u66f4\u65b0\u6210\u529f\uff0c\u51714,856\u6761\u8bb0\u5f55\", # \"count\": 4856 # }","title":"\u6bcf\u65e5\u884c\u60c5\u66f4\u65b0\u6d4b\u8bd5"},{"location":"archived/api_backend_comprehensive_analysis/#4_4","text":"","title":"4. \u80a1\u7968\u7b5b\u9009\u6d4b\u8bd5"},{"location":"archived/api_backend_comprehensive_analysis/#_43","text":"# \u4f4ePE\u80a1\u7968\u7b5b\u9009 curl -X POST \"http://localhost:8124/screen_stocks\" \\ -H \"Content-Type: application/json\" \\ -d '{ \"pe_min\": 0, \"pe_max\": 15, \"market_cap_min\": 100 }' # \u5927\u76d8\u84dd\u7b79\u80a1\u7b5b\u9009 curl -X POST \"http://localhost:8124/screen_stocks\" \\ -H \"Content-Type: application/json\" \\ -d '{ \"market_cap_min\": 1000, \"pe_max\": 25, \"pb_max\": 5 }' # \u4ef7\u503c\u80a1\u7b5b\u9009 curl -X POST \"http://localhost:8124/screen_stocks\" \\ -H \"Content-Type: application/json\" \\ -d '{ \"pe_max\": 15, \"pb_max\": 2, \"market_cap_max\": 500 }'","title":"\u57fa\u7840\u7b5b\u9009\u6d4b\u8bd5"},{"location":"archived/api_backend_comprehensive_analysis/#_44","text":"# \u6d4b\u8bd5\u6781\u503c\u7b5b\u9009 curl -X POST \"http://localhost:8124/screen_stocks\" \\ -H \"Content-Type: application/json\" \\ -d '{ \"pe_min\": 0, \"pe_max\": 9999, \"pb_min\": 0, \"pb_max\": 9999, \"market_cap_min\": 0, \"market_cap_max\": 999999 }' # \u6d4b\u8bd5\u7a7a\u7b5b\u9009\u6761\u4ef6 curl -X POST \"http://localhost:8124/screen_stocks\" \\ -H \"Content-Type: application/json\" \\ -d '{}'","title":"\u8fb9\u754c\u503c\u6d4b\u8bd5"},{"location":"archived/api_backend_comprehensive_analysis/#_45","text":"# \u6d4b\u8bd5\u65e0\u6548\u53c2\u6570\u7ec4\u5408 curl -X POST \"http://localhost:8124/screen_stocks\" \\ -H \"Content-Type: application/json\" \\ -d '{ \"pe_min\": 30, \"pe_max\": 10, \"market_cap_min\": 5000, \"market_cap_max\": 1000 }' # \u6d4b\u8bd5\u8d1f\u503c curl -X POST \"http://localhost:8124/screen_stocks\" \\ -H \"Content-Type: application/json\" \\ -d '{ \"pe_min\": -5, \"pb_min\": -1 }'","title":"\u9519\u8bef\u8bf7\u6c42\u6d4b\u8bd5"},{"location":"archived/api_backend_comprehensive_analysis/#_46","text":"","title":"\u6027\u80fd\u6d4b\u8bd5"},{"location":"archived/api_backend_comprehensive_analysis/#_47","text":"# \u4f7f\u7528ab\u6d4b\u8bd5 ab -n 100 -c 10 -p test_request.json -T application/json http://localhost:8124/api/v1/valuation # \u4f7f\u7528wrk\u6d4b\u8bd5 wrk -t12 -c400 -d30s -s post.lua http://localhost:8124/api/v1/valuation","title":"\u5e76\u53d1\u6d4b\u8bd5"},{"location":"archived/api_backend_comprehensive_analysis/#_48","text":"\u5355\u6b21\u4f30\u503c\u8bf7\u6c42: 3-10\u79d2 (\u53d6\u51b3\u4e8eLLM\u8c03\u7528) \u6570\u636e\u66f4\u65b0\u8bf7\u6c42: 10-60\u79d2 \u80a1\u7968\u7b5b\u9009\u8bf7\u6c42: 1-3\u79d2","title":"\u54cd\u5e94\u65f6\u95f4\u76d1\u63a7"},{"location":"archived/api_backend_comprehensive_analysis/#_49","text":"","title":"\ud83d\udca1 \u4f7f\u7528\u793a\u4f8b"},{"location":"archived/api_backend_comprehensive_analysis/#python","text":"import requests import json # API\u914d\u7f6e API_BASE_URL = \"http://localhost:8124\" def calculate_stock_valuation(ts_code, forecast_years=5, request_llm=True): \"\"\"\u8ba1\u7b97\u80a1\u7968\u4f30\u503c\"\"\" # \u6784\u5efa\u8bf7\u6c42\u53c2\u6570 request_data = { \"ts_code\": ts_code, \"forecast_years\": forecast_years, \"request_llm_summary\": request_llm, \"terminal_value_method\": \"exit_multiple\", \"wacc_weight_mode\": \"target\", # \u53ef\u9009\uff1a\u81ea\u5b9a\u4e49WACC\u53c2\u6570 \"risk_free_rate\": 0.03, \"market_risk_premium\": 0.05, \"beta\": 1.0 } try: # \u53d1\u9001\u8bf7\u6c42 response = requests.post( f\"{API_BASE_URL}/api/v1/valuation\", headers={\"Content-Type\": \"application/json\"}, json=request_data, timeout=60 # 60\u79d2\u8d85\u65f6 ) response.raise_for_status() result = response.json() # \u89e3\u6790\u7ed3\u679c stock_info = result[\"stock_info\"] valuation = result[\"valuation_results\"] dcf_details = valuation[\"dcf_forecast_details\"] print(f\"\u80a1\u7968: {stock_info['name']} ({stock_info['ts_code']})\") print(f\"\u5f53\u524d\u4ef7\u683c: {valuation['latest_price']:.2f}\") print(f\"DCF\u4f30\u503c: {dcf_details['value_per_share']:.2f}\") print(f\"\u4f30\u503c\u5dee\u5f02: {((dcf_details['value_per_share'] / valuation['latest_price'] - 1) * 100):.1f}%\") if valuation[\"llm_analysis_summary\"]: print(\"\\n=== LLM\u5206\u6790 ===\") print(valuation[\"llm_analysis_summary\"]) return result except requests.exceptions.RequestException as e: print(f\"\u8bf7\u6c42\u5931\u8d25: {e}\") return None def screen_stocks(pe_min=None, pe_max=None, market_cap_min=None): \"\"\"\u7b5b\u9009\u80a1\u7968\"\"\" request_data = {} if pe_min is not None: request_data[\"pe_min\"] = pe_min if pe_max is not None: request_data[\"pe_max\"] = pe_max if market_cap_min is not None: request_data[\"market_cap_min\"] = market_cap_min try: response = requests.post( f\"{API_BASE_URL}/screen_stocks\", headers={\"Content-Type\": \"application/json\"}, json=request_data ) response.raise_for_status() result = response.json() print(f\"\u627e\u5230 {result['count']} \u53ea\u7b26\u5408\u6761\u4ef6\u7684\u80a1\u7968:\") for stock in result[\"data\"][:10]: # \u663e\u793a\u524d10\u53ea print(f\"{stock['name']} ({stock['ts_code']}): PE={stock['pe']:.1f}, \u5e02\u503c={stock['total_mv']:.0f}\u4ebf\") return result except requests.exceptions.RequestException as e: print(f\"\u7b5b\u9009\u5931\u8d25: {e}\") return None # \u4f7f\u7528\u793a\u4f8b if __name__ == \"__main__\": # \u8ba1\u7b97\u8d35\u5dde\u8305\u53f0\u4f30\u503c result = calculate_stock_valuation(\"600519.SH\", forecast_years=5) # \u7b5b\u9009\u4f4ePE\u80a1\u7968 screen_stocks(pe_min=0, pe_max=20, market_cap_min=100)","title":"Python\u5ba2\u6237\u7aef\u793a\u4f8b"},{"location":"archived/api_backend_comprehensive_analysis/#javascript","text":"// API\u914d\u7f6e const API_BASE_URL = 'http://localhost:8124'; // \u8ba1\u7b97\u80a1\u7968\u4f30\u503c async function calculateStockValuation(tsCode, options = {}) { const requestData = { ts_code: tsCode, forecast_years: options.forecastYears || 5, request_llm_summary: options.requestLLM || false, ...options }; try { const response = await fetch(`${API_BASE_URL}/api/v1/valuation`, { method: 'POST', headers: { 'Content-Type': 'application/json', }, body: JSON.stringify(requestData) }); if (!response.ok) { throw new Error(`HTTP error! status: ${response.status}`); } const result = await response.json(); console.log(`\u80a1\u7968: ${result.stock_info.name} (${result.stock_info.ts_code})`); console.log(`\u5f53\u524d\u4ef7\u683c: ${result.valuation_results.latest_price}`); console.log(`DCF\u4f30\u503c: ${result.valuation_results.dcf_forecast_details.value_per_share}`); return result; } catch (error) { console.error('\u8bf7\u6c42\u5931\u8d25:', error); throw error; } } // \u80a1\u7968\u7b5b\u9009 async function screenStocks(filters = {}) { const requestData = {}; if (filters.peMin !== undefined) requestData.pe_min = filters.peMin; if (filters.peMax !== undefined) requestData.pe_max = filters.peMax; if (filters.marketCapMin !== undefined) requestData.market_cap_min = filters.marketCapMin; try { const response = await fetch(`${API_BASE_URL}/screen_stocks`, { method: 'POST', headers: { 'Content-Type': 'application/json', }, body: JSON.stringify(requestData) }); if (!response.ok) { throw new Error(`HTTP error! status: ${response.status}`); } const result = await response.json(); console.log(`\u627e\u5230 ${result.count} \u53ea\u7b26\u5408\u6761\u4ef6\u7684\u80a1\u7968`); return result; } catch (error) { console.error('\u7b5b\u9009\u5931\u8d25:', error); throw error; } } // \u4f7f\u7528\u793a\u4f8b (async () => { try { // \u8ba1\u7b97\u4f30\u503c const valuation = await calculateStockValuation('600519.SH', { forecastYears: 5, requestLLM: true }); // \u7b5b\u9009\u80a1\u7968 const screened = await screenStocks({ peMin: 0, peMax: 20, marketCapMin: 100 }); } catch (error) { console.error('API\u8c03\u7528\u5931\u8d25:', error); } })();","title":"JavaScript\u5ba2\u6237\u7aef\u793a\u4f8b"},{"location":"archived/api_backend_comprehensive_analysis/#_50","text":"import asyncio import aiohttp import json async def batch_valuation(session, stock_codes): \"\"\"\u6279\u91cf\u8ba1\u7b97\u80a1\u7968\u4f30\u503c\"\"\" tasks = [] for ts_code in stock_codes: task = calculate_single_valuation(session, ts_code) tasks.append(task) results = await asyncio.gather(*tasks, return_exceptions=True) return results async def calculate_single_valuation(session, ts_code): \"\"\"\u5355\u53ea\u80a1\u7968\u4f30\u503c\"\"\" request_data = { \"ts_code\": ts_code, \"forecast_years\": 5, \"request_llm_summary\": False # \u6279\u91cf\u65f6\u5173\u95edLLM\u4ee5\u63d0\u9ad8\u901f\u5ea6 } try: async with session.post( f\"{API_BASE_URL}/api/v1/valuation\", json=request_data, timeout=aiohttp.ClientTimeout(total=30) ) as response: result = await response.json() return { \"ts_code\": ts_code, \"success\": True, \"data\": result } except Exception as e: return { \"ts_code\": ts_code, \"success\": False, \"error\": str(e) } # \u4f7f\u7528\u793a\u4f8b async def main(): stock_codes = [\"600519.SH\", \"000858.SZ\", \"600036.SH\"] async with aiohttp.ClientSession() as session: results = await batch_valuation(session, stock_codes) for result in results: if result[\"success\"]: stock_info = result[\"data\"][\"stock_info\"] dcf_details = result[\"data\"][\"valuation_results\"][\"dcf_forecast_details\"] print(f\"{stock_info['name']}: {dcf_details['value_per_share']:.2f}\") else: print(f\"{result['ts_code']}: \u5931\u8d25 - {result['error']}\") if __name__ == \"__main__\": asyncio.run(main())","title":"\u6279\u91cf\u5904\u7406\u793a\u4f8b"},{"location":"archived/api_backend_comprehensive_analysis/#_51","text":"","title":"\ud83d\udcdd \u6700\u4f73\u5b9e\u8df5"},{"location":"archived/api_backend_comprehensive_analysis/#1_5","text":"\u6279\u91cf\u5904\u7406 : \u4f7f\u7528\u5f02\u6b65\u8bf7\u6c42\u6279\u91cf\u5904\u7406\u591a\u53ea\u80a1\u7968 \u7f13\u5b58\u7b56\u7565 : \u5bf9\u76f8\u540c\u53c2\u6570\u7684\u4f30\u503c\u7ed3\u679c\u8fdb\u884c\u7f13\u5b58 \u8d85\u65f6\u8bbe\u7f6e : \u6839\u636e\u7f51\u7edc\u73af\u5883\u5408\u7406\u8bbe\u7f6e\u8d85\u65f6\u65f6\u95f4 \u91cd\u8bd5\u673a\u5236 : \u5bf9\u4e34\u65f6\u6027\u9519\u8bef\u5b9e\u73b0\u6307\u6570\u9000\u907f\u91cd\u8bd5","title":"1. \u8bf7\u6c42\u4f18\u5316"},{"location":"archived/api_backend_comprehensive_analysis/#2_5","text":"\u53c2\u6570\u9a8c\u8bc1 : \u5728\u53d1\u9001\u8bf7\u6c42\u524d\u9a8c\u8bc1\u53c2\u6570\u683c\u5f0f \u72b6\u6001\u7801\u68c0\u67e5 : \u68c0\u67e5HTTP\u72b6\u6001\u7801\u548c\u4e1a\u52a1\u9519\u8bef\u7801 \u5f02\u5e38\u6355\u83b7 : \u6355\u83b7\u7f51\u7edc\u5f02\u5e38\u548c\u89e3\u6790\u5f02\u5e38 \u65e5\u5fd7\u8bb0\u5f55 : \u8bb0\u5f55\u8bf7\u6c42\u548c\u54cd\u5e94\u4fe1\u606f\u7528\u4e8e\u8c03\u8bd5","title":"2. \u9519\u8bef\u5904\u7406"},{"location":"archived/api_backend_comprehensive_analysis/#3_5","text":"\u5e76\u53d1\u63a7\u5236 : \u5408\u7406\u63a7\u5236\u5e76\u53d1\u8bf7\u6c42\u6570\u91cf LLM\u8c03\u7528 : \u6279\u91cf\u5904\u7406\u65f6\u5173\u95edLLM\u5206\u6790\u4ee5\u63d0\u9ad8\u901f\u5ea6 \u6570\u636e\u5206\u9875 : \u5bf9\u5927\u91cf\u7ed3\u679c\u8fdb\u884c\u5206\u9875\u5904\u7406 \u8fde\u63a5\u6c60 : \u4f7f\u7528HTTP\u8fde\u63a5\u6c60\u51cf\u5c11\u8fde\u63a5\u5f00\u9500","title":"3. \u6027\u80fd\u4f18\u5316"},{"location":"archived/api_backend_comprehensive_analysis/#4_5","text":"HTTPS : \u751f\u4ea7\u73af\u5883\u4f7f\u7528HTTPS\u534f\u8bae \u8ba4\u8bc1\u6388\u6743 : \u5b9e\u73b0API\u5bc6\u94a5\u6216OAuth\u8ba4\u8bc1 \u9650\u6d41\u63a7\u5236 : \u5b9e\u73b0\u8bf7\u6c42\u9891\u7387\u9650\u5236 \u8f93\u5165\u9a8c\u8bc1 : \u4e25\u683c\u9a8c\u8bc1\u6240\u6709\u8f93\u5165\u53c2\u6570","title":"4. \u5b89\u5168\u8003\u8651"},{"location":"archived/api_backend_comprehensive_analysis/#_52","text":"","title":"\ud83d\udd27 \u6545\u969c\u6392\u9664"},{"location":"archived/api_backend_comprehensive_analysis/#_53","text":"","title":"\u5e38\u89c1\u95ee\u9898"},{"location":"archived/api_backend_comprehensive_analysis/#1_6","text":"\u95ee\u9898 : \u8bf7\u6c42\u8d85\u65f6\u5931\u8d25 \u89e3\u51b3 : - \u589e\u52a0\u8d85\u65f6\u65f6\u95f4\u523060\u79d2 - \u68c0\u67e5\u7f51\u7edc\u8fde\u63a5 - \u9a8c\u8bc1\u670d\u52a1\u662f\u5426\u6b63\u5e38\u8fd0\u884c","title":"1. \u8fde\u63a5\u8d85\u65f6"},{"location":"archived/api_backend_comprehensive_analysis/#2_6","text":"\u95ee\u9898 : \u8fd4\u56de404\u9519\u8bef \u89e3\u51b3 : - \u9a8c\u8bc1\u80a1\u7968\u4ee3\u7801\u683c\u5f0f - \u68c0\u67e5\u6570\u636e\u662f\u5426\u5df2\u66f4\u65b0 - \u786e\u8ba4\u80a1\u7968\u662f\u5426\u5b58\u5728","title":"2. \u6570\u636e\u672a\u627e\u5230"},{"location":"archived/api_backend_comprehensive_analysis/#3_6","text":"\u95ee\u9898 : \u8fd4\u56de500\u9519\u8bef \u89e3\u51b3 : - \u68c0\u67e5\u8bf7\u6c42\u53c2\u6570\u662f\u5426\u5408\u7406 - \u67e5\u770b\u670d\u52a1\u5668\u65e5\u5fd7 - \u9a8c\u8bc1\u8d22\u52a1\u6570\u636e\u5b8c\u6574\u6027","title":"3. \u8ba1\u7b97\u5931\u8d25"},{"location":"archived/api_backend_comprehensive_analysis/#4-llm","text":"\u95ee\u9898 : LLM\u5206\u6790\u8fd4\u56de\u9519\u8bef \u89e3\u51b3 : - \u68c0\u67e5LLM\u670d\u52a1\u914d\u7f6e - \u9a8c\u8bc1API\u5bc6\u94a5\u548c\u7f51\u7edc\u8fde\u63a5 - \u5c1d\u8bd5\u4f7f\u7528\u4e0d\u540c\u7684LLM\u63d0\u4f9b\u5546","title":"4. LLM\u8c03\u7528\u5931\u8d25"},{"location":"archived/api_backend_comprehensive_analysis/#_54","text":"","title":"\u8c03\u8bd5\u6280\u5de7"},{"location":"archived/api_backend_comprehensive_analysis/#1_7","text":"# \u8bbe\u7f6e\u65e5\u5fd7\u7ea7\u522b\u4e3aDEBUG export LOG_LEVEL=DEBUG uvicorn src.api.main:app --reload","title":"1. \u542f\u7528\u8be6\u7ec6\u65e5\u5fd7"},{"location":"archived/api_backend_comprehensive_analysis/#2-swagger-ui","text":"\u8bbf\u95ee http://localhost:8124/docs \u8fdb\u884c\u4ea4\u4e92\u5f0f\u6d4b\u8bd5","title":"2. \u4f7f\u7528Swagger UI"},{"location":"archived/api_backend_comprehensive_analysis/#3_7","text":"import logging # \u542f\u7528\u8bf7\u6c42\u65e5\u5fd7 logging.basicConfig(level=logging.DEBUG)","title":"3. \u68c0\u67e5\u8bf7\u6c42/\u54cd\u5e94"},{"location":"archived/api_backend_comprehensive_analysis/#4_6","text":"# \u4f7f\u7528Pydantic\u9a8c\u8bc1\u6570\u636e from pydantic import ValidationError try: request = StockValuationRequest(**data) except ValidationError as e: print(f\"\u9a8c\u8bc1\u9519\u8bef: {e}\")","title":"4. \u9a8c\u8bc1\u6570\u636e\u683c\u5f0f"},{"location":"archived/api_backend_comprehensive_analysis/#_55","text":"","title":"\ud83d\udcca \u76d1\u63a7\u548c\u8fd0\u7ef4"},{"location":"archived/api_backend_comprehensive_analysis/#_56","text":"\u54cd\u5e94\u65f6\u95f4 : \u5355\u6b21\u8bf7\u6c42\u5904\u7406\u65f6\u95f4 \u9519\u8bef\u7387 : HTTP\u9519\u8bef\u7801\u5206\u5e03 \u5e76\u53d1\u6570 : \u540c\u65f6\u5904\u7406\u7684\u8bf7\u6c42\u6570 \u5185\u5b58\u4f7f\u7528 : \u670d\u52a1\u5185\u5b58\u5360\u7528 CPU\u4f7f\u7528 : \u670d\u52a1CPU\u5360\u7528\u7387","title":"\u5173\u952e\u6307\u6807"},{"location":"archived/api_backend_comprehensive_analysis/#_57","text":"# \u5173\u952e\u65e5\u5fd7\u6a21\u5f0f INFO - Received valuation request for: 600519.SH INFO - Step 1: Fetching data... INFO - Step 2: Processing data... INFO - Base case valuation successful. ERROR - Error during LLM call: API timeout","title":"\u65e5\u5fd7\u76d1\u63a7"},{"location":"archived/api_backend_comprehensive_analysis/#_58","text":"# \u57fa\u7840\u5065\u5eb7\u68c0\u67e5 curl http://localhost:8124/ # \u8be6\u7ec6\u5065\u5eb7\u68c0\u67e5 curl http://localhost:8124/health","title":"\u5065\u5eb7\u68c0\u67e5"},{"location":"archived/api_backend_comprehensive_analysis/#_59","text":"\u6570\u636e\u5e93\u4f18\u5316 : \u6dfb\u52a0\u9002\u5f53\u7684\u7d22\u5f15 \u7f13\u5b58\u7b56\u7565 : \u5b9e\u73b0Redis\u7f13\u5b58 \u5f02\u6b65\u5904\u7406 : \u4f7f\u7528\u5f02\u6b65I/O\u63d0\u9ad8\u5e76\u53d1 \u8d1f\u8f7d\u5747\u8861 : \u90e8\u7f72\u591a\u5b9e\u4f8b\u5206\u62c5\u8d1f\u8f7d","title":"\u6027\u80fd\u4f18\u5316\u5efa\u8bae"},{"location":"archived/api_backend_comprehensive_analysis/#_60","text":"","title":"\ud83d\udcc5 \u6700\u65b0\u66f4\u65b0\u8bb0\u5f55"},{"location":"archived/api_backend_comprehensive_analysis/#v300-2025-09-22","text":"\u91cd\u5927\u529f\u80fd\u66f4\u65b0 : - \u2705 TuShare\u6570\u636e\u6e90 : \u5b8c\u5168\u96c6\u6210TuShare API\uff0c\u652f\u6301\u6570\u636e\u6e90\u70ed\u5207\u6362 - \u2705 LTM\u57fa\u7ebf\u529f\u80fd : \u65b0\u589eLast Twelve Months\u6536\u5165\u57fa\u671f\u652f\u6301 - \u2705 \u6570\u636e\u6e05\u6d17\u4f18\u5316 : \u4fee\u590d\u8d44\u4ea7\u8d1f\u503a\u8868\u57fa\u51c6\u65e5\u56de\u9000\u95ee\u9898\uff0c\u4fdd\u62a4\u5173\u952e\u79d1\u76ee - \u2705 \u654f\u611f\u6027\u5206\u6790\u589e\u5f3a : \u65b0\u589eEV/EBITDA\u500d\u6570\u3001\u9690\u542bPE/PGR\u7b49\u6307\u6807 - \u2705 \u751f\u4ea7\u7ea7\u90e8\u7f72 : \u5b8c\u6574\u7684\u9519\u8bef\u5904\u7406\u3001\u515c\u5e95\u673a\u5236\u548c\u76d1\u63a7\u80fd\u529b API\u63a5\u53e3\u66f4\u65b0 : - \u65b0\u589e ltm_baseline_enabled \u53c2\u6570\u542f\u7528LTM\u57fa\u7ebf - \u589e\u5f3a\u4f30\u503c\u54cd\u5e94\u5b57\u6bb5\uff0c\u5305\u542b\u66f4\u591a\u8bca\u65ad\u4fe1\u606f - \u4f18\u5316\u9519\u8bef\u5904\u7406\u548c\u7528\u6237\u53cb\u597d\u7684\u9519\u8bef\u6d88\u606f \u6570\u636e\u8d28\u91cf\u63d0\u5347 : - TuShare\u4e0ePostgreSQL\u6570\u636e\u6e90\u7aef\u5230\u7aef\u9a8c\u8bc1\u5b8c\u6210 - \u5173\u952e\u4f30\u503c\u6307\u6807(EV/VPS/CAGR/EBITDA)\u5bf9\u9f50\u786e\u8ba4 - \u6309\u5e74\u62e9\u4f18\u6570\u636e\u9009\u62e9\u7b56\u7565\uff0c\u786e\u4fdd\u4f7f\u7528\u6700\u65b0\u5e74\u62a5 \u6027\u80fd\u4f18\u5316 : - \u6570\u636e\u83b7\u53d6\u94fe\u8def\u4f18\u5316\uff0c\u51cf\u5c11API\u8c03\u7528\u6b21\u6570 - Decimal\u7cbe\u5ea6\u8ba1\u7b97\uff0c\u907f\u514d\u6d6e\u70b9\u8bef\u5dee - \u5f02\u6b65\u5904\u7406\u652f\u6301\uff0c\u63d0\u9ad8\u5e76\u53d1\u5904\u7406\u80fd\u529b","title":"v3.0.0 (2025-09-22)"},{"location":"archived/api_backend_comprehensive_analysis/#v2xx-2025-09","text":"\u5386\u53f2\u529f\u80fd : - \u57fa\u7840DCF\u4f30\u503c\u8ba1\u7b97 - PostgreSQL\u6570\u636e\u6e90\u96c6\u6210 - Streamlit\u524d\u7aef - \u57fa\u7840\u654f\u611f\u6027\u5206\u6790 - \u80a1\u7968\u7b5b\u9009\u5668","title":"v2.x.x (2025-09\u4e4b\u524d)"},{"location":"archived/api_backend_comprehensive_analysis/#v310","text":"\u8ba1\u5212\u529f\u80fd : - \u6027\u80fd\u7f13\u5b58\u673a\u5236 - \u6279\u91cf\u4f30\u503cAPI - \u66f4\u591a\u884c\u4e1a\u6a21\u578b\u652f\u6301 - \u5b9e\u65f6\u6570\u636e\u6d41\u5904\u7406 \u8fd9\u4efdAPI\u6587\u6863\u63d0\u4f9b\u4e86\u5b8c\u6574\u7684\u6280\u672f\u89c4\u683c\u548c\u4f7f\u7528\u6307\u5357\uff0c\u65b9\u4fbf\u5176\u4ed6\u9879\u76ee\u8fdb\u884c\u5bf9\u63a5\u548c\u6d4b\u8bd5\u3002\u9879\u76ee\u5df2\u8fbe\u5230\u751f\u4ea7\u7ea7\u6807\u51c6\uff0c\u5177\u5907\u5b8c\u6574\u7684\u4f30\u503c\u5206\u6790\u80fd\u529b\u3002\u5982\u6709\u4efb\u4f55\u95ee\u9898\uff0c\u8bf7\u53c2\u8003\u6545\u969c\u6392\u9664\u90e8\u5206\u6216\u8054\u7cfb\u6280\u672f\u652f\u6301\u3002","title":"\u4e0b\u4e00\u7248\u672c\u8ba1\u5212 (v3.1.0)"},{"location":"archived/dcf_industry_standards_comprehensive_analysis/","text":"DCF\u4f30\u503c\u9879\u76ee\u4e0e\u884c\u4e1a\u6807\u51c6\u6df1\u5ea6\u5bf9\u6bd4\u5206\u6790\u62a5\u544a \u6267\u884c\u6458\u8981 \u672c\u62a5\u544a\u57fa\u4e8e\u5bf9\u539f\u59cbDCF\u4f30\u503c\u4e13\u4e1a\u6821\u9a8c\u62a5\u544a\u548c\u672f\u8bed\u89e3\u91ca\u7248\u62a5\u544a\u7684\u6df1\u5ea6\u6574\u5408\uff0c\u4ece \u79d1\u5b66\u6027\u3001\u5408\u7406\u6027\u3001\u4e25\u8c28\u6027\u3001\u6743\u5a01\u6027 \u56db\u4e2a\u7ef4\u5ea6\uff0c\u5bf9stock_vale_valuation_3.0\u9879\u76ee\u4e0e\u91d1\u878d\u884c\u4e1a\u4e3b\u6d41\u6807\u51c6\u8fdb\u884c\u5168\u65b9\u4f4d\u5bf9\u6bd4\u5206\u6790\u3002\u5206\u6790\u53d1\u73b0\u8be5\u9879\u76ee\u5728\u6280\u672f\u67b6\u6784\u548c\u6838\u5fc3\u903b\u8f91\u4e0a\u8fbe\u5230\u884c\u4e1a\u6807\u51c6\u6c34\u5e73\uff0c\u4f46\u5728\u5173\u952e\u7ec6\u8282\u5904\u7406\u4e0a\u5b58\u5728\u663e\u8457\u6539\u8fdb\u7a7a\u95f4\u3002 DCF\u4f30\u503c\u5b9a\u4e49 \uff1aDiscounted Cash Flow (DCF) \u662f\u4e00\u79cd\u7edd\u5bf9\u4f30\u503c\u65b9\u6cd5\uff0c\u901a\u8fc7\u9884\u6d4b\u516c\u53f8\u672a\u6765\u81ea\u7531\u73b0\u91d1\u6d41\u5e76\u6298\u73b0\u5230\u5f53\u524d\u65f6\u70b9\uff0c\u4ece\u800c\u786e\u5b9a\u516c\u53f8\u5185\u5728\u4ef7\u503c\u7684\u65b9\u6cd5\u3002\u5176\u6838\u5fc3\u5047\u8bbe\u662f\u516c\u53f8\u4ef7\u503c\u7b49\u4e8e\u5176\u672a\u6765\u6240\u6709\u81ea\u7531\u73b0\u91d1\u6d41\u7684\u73b0\u503c\u4e4b\u548c\u3002 \u6838\u5fc3\u53d1\u73b0\uff082025-09-10 \u66f4\u65b0\uff09 \uff1a - \u6280\u672f\u67b6\u6784\u5353\u8d8a\uff1a\u6a21\u5757\u5316\u8bbe\u8ba1\u8d85\u8d8a\u5927\u591a\u6570\u5f00\u6e90\u9879\u76ee - \u7406\u8bba\u57fa\u7840\u624e\u5b9e\uff1aDCF \u6838\u5fc3\u903b\u8f91\u4e0e McKinsey/Damodaran \u6807\u51c6\u4e00\u81f4 - \u6cbb\u7406\u80fd\u529b\u589e\u5f3a\uff1a\u540d\u4e49 GDP \u4e0a\u9650\uff08PGR clamp\uff09\u3001\u9690\u542b PGR\uff08Exit Multiple\uff09\u63d0\u793a\u3001LTM/\u6eda\u52a8\u8d44\u4ea7\u8d1f\u503a\u8868\u3001NWC \u5929\u6570\u8fc7\u6e21\u3001\u884c\u4e1a\u9884\u8bbe\u6a21\u677f\u3001\u80a1\u606f\u53e3\u5f84\u56de\u9000\u94fe\uff08\u5b9e\u65bd\u2192\u9884\u6848\u2192\u5e74\u5ea6\uff09\u5df2\u843d\u5730 - \u900f\u660e\u5ea6\u63d0\u5347\uff1aAPI debug \u6ce8\u5165 baseline_debug\u3001applied_preset \u4e0e diff\uff1bUI \u663e\u793a as-of\uff08\u4ef7\u683c/EPS\uff09\u4e0e\u80a1\u606f\u6765\u6e90 - \u540e\u7eed\u65b9\u5411\uff1a\u6269\u5c55\u884c\u4e1a\u5e93\u3001\u5b8c\u5584\u8d44\u672c\u7ed3\u6784\u53e3\u5f84\uff08\u79df\u8d41/\u4f18\u5148\u80a1/\u53ef\u8f6c\u503a\uff09\u3001\u60c5\u666f/\u8499\u7279\u5361\u6d1b \u6700\u8fd1\u66f4\u65b0\uff08\u76f8\u5bf9\u524d\u7248\u5dee\u5f02\uff09 \u7ec8\u503c\uff08PGR\uff09 \u6c38\u7eed\u589e\u957f\u6cd5\u6309\u540d\u4e49 GDP \u4e0a\u9650\u5939\u6301\uff08\u8bf7\u6c42/ENV \u53ef\u63a7\uff09\uff1b\u8d85\u9650\u7ed9\u51fa\u6765\u6e90\u4e0e\u88ab\u66f4\u6b63\u503c\u63d0\u793a \u9000\u51fa\u4e58\u6570\u6cd5\u8ba1\u7b97\u9690\u542b PGR\uff0c\u5e76\u5bf9\u6bd4 GDP \u4e0a\u9650\u63d0\u793a\u8d8a\u754c LTM \u4e0e\u6eda\u52a8 \u7ecf\u8425\u57fa\u671f\u53ef\u9009 LTM\uff08\u6309 YTD/\u5e74\u5ea6\u62c6\u5206\uff09\uff1b\u8d44\u672c\u7ed3\u6784\u6309\u4f30\u503c\u65e5\u6eda\u52a8\u5230\u6700\u8fd1\u4e00\u884c\u8d44\u4ea7\u8d1f\u503a\u8868\uff0c\u5e76\u91cd\u7b97 last_component_nwc NWC \u53ef\u89e3\u91ca\u6027 \u5f15\u5165 nwc_days_transition_years \u4e0e transition_to_target \uff0c\u9996\u5e74 \u0394NWC \u7684\u65b9\u5411/\u5e45\u5ea6\u4e0e AR/AP/Inv \u5929\u6570\u53d8\u5316\u4e00\u81f4\uff0c\u5355\u6d4b\u8986\u76d6 \u884c\u4e1a\u9884\u8bbe\uff08GICS 11 + \u767d\u9152\u53d8\u4f53\uff09 \u63d0\u4f9b \u03b2\u3001\u9884\u6d4b\u671f\u3001PGR cap\u3001EV/EBITDA\u3001DSO/DIO/DPO \u4e2d\u4f4d\u6570/\u533a\u95f4\uff1b\u4f5c\u4e3a\u6a21\u677f\u52a0\u8f7d\uff0cAPI debug \u8fd4\u56de applied_preset \u4e0e applied_preset_diff \u80a1\u606f\u53e3\u5f84 TTM\uff08\u5b9e\u65bd/\u5b8c\u6210\uff09\u2192 \u65e0\u5219 TTM\u00b7\u9884\u6848 \u2192 \u4ecd\u65e0\u5219 \u5e74\u5ea6\uff1bUI \u6807\u7b7e\u4f53\u73b0\u6765\u6e90 as-of \u4e00\u81f4\u6027 \u4ef7\u683c\uff1a trade_date \u2264 \u4f30\u503c\u65e5 \uff1bEPS\uff08\u5e74\u62a5\uff09\uff1a end_date \u2264 \u4f30\u503c\u65e5 \uff1bUI \u6807\u7b7e\u6ce8\u660e \ud83d\udcda \u4e13\u4e1a\u672f\u8bed\u89e3\u91ca \u57fa\u7840\u6982\u5ff5 DCF\u4f30\u503c \uff1aDiscounted Cash Flow\uff0c\u6298\u73b0\u73b0\u91d1\u6d41\u4f30\u503c\u6cd5\uff0c\u901a\u8fc7\u9884\u6d4b\u516c\u53f8\u672a\u6765\u81ea\u7531\u73b0\u91d1\u6d41\u5e76\u6298\u73b0\u5230\u5f53\u524d\u65f6\u70b9\u786e\u5b9a\u516c\u53f8\u5185\u5728\u4ef7\u503c\u7684\u7edd\u5bf9\u4f30\u503c\u65b9\u6cd5 \u4f01\u4e1a\u4ef7\u503c(EV) \uff1aEnterprise Value\uff0c\u516c\u53f8\u6574\u4f53\u4ef7\u503c\uff0c\u5305\u62ec\u80a1\u6743\u4ef7\u503c\u548c\u503a\u52a1\u4ef7\u503c\uff0c\u51cf\u53bb\u73b0\u91d1\u53ca\u73b0\u91d1\u7b49\u4ef7\u7269 \u80a1\u6743\u4ef7\u503c \uff1aEquity Value\uff0c\u4f01\u4e1a\u4ef7\u503c\u51cf\u53bb\u51c0\u503a\u52a1\u540e\u7684\u4ef7\u503c\uff0c\u4ee3\u8868\u80a1\u4e1c\u6743\u76ca\u7684\u4ef7\u503c \u6c38\u7eed\u589e\u957f\u7387 \uff1aPerpetual Growth Rate\uff0c\u516c\u53f8\u5728\u7ec8\u503c\u9636\u6bb5\u7684\u957f\u671f\u7a33\u5b9a\u589e\u957f\u7387\uff0c\u901a\u5e38\u5047\u8bbe\u516c\u53f8\u6c38\u7eed\u7ecf\u8425 WACC \uff1aWeighted Average Cost of Capital\uff0c\u52a0\u6743\u5e73\u5747\u8d44\u672c\u6210\u672c\uff0c\u516c\u53f8\u5404\u79cd\u878d\u8d44\u6210\u672c\u7684\u52a0\u6743\u5e73\u5747\u503c \u5173\u952e\u6307\u6807\u89e3\u91ca Re (\u80a1\u6743\u6210\u672c) \uff1aCost of Equity\uff0c\u80a1\u4e1c\u8981\u6c42\u7684\u5fc5\u8981\u6536\u76ca\u7387\uff0c\u53cd\u6620\u80a1\u6743\u6295\u8d44\u7684\u98ce\u9669\u548c\u56de\u62a5\u8981\u6c42 Rf (\u65e0\u98ce\u9669\u5229\u7387) \uff1aRisk-Free Rate\uff0c\u7406\u8bba\u4e0a\u65e0\u98ce\u9669\u6295\u8d44\u7684\u6536\u76ca\u7387\uff0c\u901a\u5e38\u4f7f\u7528\u957f\u671f\u56fd\u503a\u6536\u76ca\u7387 \u03b2 (Beta\u7cfb\u6570) \uff1a\u7cfb\u7edf\u6027\u98ce\u9669\u7cfb\u6570\uff0c\u8861\u91cf\u5355\u4e2a\u80a1\u7968\u76f8\u5bf9\u4e8e\u6574\u4e2a\u5e02\u573a\u7684\u6ce2\u52a8\u6027\uff0c\u5e02\u573a\u7ec4\u5408\u7684Beta\u4e3a1.0 Rm (\u5e02\u573a\u56de\u62a5\u7387) \uff1aMarket Return\uff0c\u80a1\u7968\u5e02\u573a\u7684\u9884\u671f\u6536\u76ca\u7387\uff0c\u901a\u5e38\u4f7f\u7528\u5e02\u573a\u6307\u6570\u7684\u5386\u53f2\u5e73\u5747\u6536\u76ca\u7387 CRP (\u56fd\u5bb6\u98ce\u9669\u6ea2\u4ef7) \uff1aCountry Risk Premium\uff0c\u6295\u8d44\u7279\u5b9a\u56fd\u5bb6\u76f8\u6bd4\u53d1\u8fbe\u56fd\u5bb6\u6240\u8981\u6c42\u7684\u989d\u5916\u98ce\u9669\u8865\u507f SRP (\u89c4\u6a21\u98ce\u9669\u6ea2\u4ef7) \uff1aSize Risk Premium\uff0c\u5c0f\u89c4\u6a21\u516c\u53f8\u76f8\u6bd4\u5927\u89c4\u6a21\u516c\u53f8\u6240\u8981\u6c42\u7684\u989d\u5916\u98ce\u9669\u8865\u507f IRP (\u884c\u4e1a\u98ce\u9669\u6ea2\u4ef7) \uff1aIndustry Risk Premium\uff0c\u7279\u5b9a\u884c\u4e1a\u76f8\u6bd4\u5e02\u573a\u6574\u4f53\u6240\u8981\u6c42\u7684\u989d\u5916\u98ce\u9669\u8865\u507f SP (\u89c4\u6a21\u6ea2\u4ef7) \uff1aSize Premium\uff0c\u4e0e\u516c\u53f8\u89c4\u6a21\u76f8\u5173\u7684\u98ce\u9669\u6ea2\u4ef7\uff0c\u901a\u5e38\u7528\u4e8e\u8865\u507f\u5c0f\u516c\u53f8\u7684\u989d\u5916\u98ce\u9669 \u91d1\u878d\u673a\u6784\u80cc\u666f McKinsey (\u9ea6\u80af\u9521) \uff1a\u5168\u7403\u9886\u5148\u7684\u7ba1\u7406\u54a8\u8be2\u516c\u53f8\uff0c\u5176\u4f30\u503c\u65b9\u6cd5\u8bba\u88ab\u5e7f\u6cdb\u8ba4\u4e3a\u662f\u884c\u4e1a\u6807\u51c6 Damodaran \uff1a\u7ebd\u7ea6\u5927\u5b66Stern\u5546\u5b66\u9662\u6559\u6388\uff0c\u516c\u53f8\u4f30\u503c\u9886\u57df\u6743\u5a01\u4e13\u5bb6\uff0c\u88ab\u8a89\u4e3a\u73b0\u4ee3\u4f30\u503c\u4e4b\u7236 CFA Institute \uff1a\u7279\u8bb8\u91d1\u878d\u5206\u6790\u5e08\u534f\u4f1a\uff0c\u5168\u7403\u6295\u8d44\u7ba1\u7406\u884c\u4e1a\u7684\u4e13\u4e1a\u6807\u51c6\u5236\u5b9a\u8005\u548c\u8ba4\u8bc1\u673a\u6784 1. \u65b9\u6cd5\u8bba\u5bf9\u6bd4\u5206\u6790 1.1 DCF\u6a21\u578b\u67b6\u6784\u5bf9\u6bd4 \u5bf9\u6bd4\u7ef4\u5ea6 \u884c\u4e1a\u6807\u51c6 (McKinsey/Damodaran) \u672c\u9879\u76ee\u5b9e\u73b0 \u7b26\u5408\u5ea6 \u5dee\u5f02\u5206\u6790 \u6a21\u578b\u7c7b\u578b \u4e24\u9636\u6bb5DCF\u6a21\u578b \u4e24\u9636\u6bb5DCF\u6a21\u578b \u2705 100% \u5b8c\u5168\u7b26\u5408 \u663e\u6027\u9884\u6d4b\u671f 5-10\u5e74\uff0c\u6309\u884c\u4e1a\u7279\u6027\u8c03\u6574 \u9ed8\u8ba45\u5e74\uff1bUI 3\u201315\u5e74\uff0cAPI 1\u201320\u5e74 \u2705 85% \u5df2\u652f\u6301\u914d\u7f6e\uff0c\u5efa\u8bae\u6309\u884c\u4e1a\u4e0e\u516c\u53f8\u5468\u671f\u8c03\u6574 \u7ec8\u503c\u8ba1\u7b97 \u6c38\u7eed\u589e\u957f\u6cd5 + \u9000\u51fa\u4e58\u6570\u6cd5\u53cc\u9a8c\u8bc1 \u6c38\u7eed\u589e\u957f\u6cd5 + \u9000\u51fa\u4e58\u6570\u6cd5 \u2705 95% \u5b9e\u73b0\u5b8c\u6574\uff0c\u4f46PGR\u4e0a\u9650\u5f85\u4f18\u5316 \u4f01\u4e1a\u4ef7\u503c\u6865\u63a5 \u6807\u51c6EV\u5230Equity\u6865\u63a5 \u6807\u51c6EV\u5230Equity\u6865\u63a5 \u2705 100% \u5b8c\u5168\u7b26\u5408 \u79d1\u5b66\u6027\u8bc4\u4ef7 \uff1aB+ \u4f18\u52bf \uff1a\u4e25\u683c\u9075\u5faa\u4e24\u9636\u6bb5DCF\u7406\u8bba\u6846\u67b6\uff0c\u6a21\u578b\u7ed3\u6784\u5b8c\u6574 \u4e0d\u8db3 \uff1a\u9884\u6d4b\u671f\u8bbe\u5b9a\u7f3a\u4e4f\u884c\u4e1a\u5dee\u5f02\u5316\uff0c\u5f71\u54cd\u4f30\u503c\u7cbe\u5ea6 1.2 \u8ba1\u7b97\u5668\u6a21\u5757\u5316\u8bbe\u8ba1\u5bf9\u6bd4 \u884c\u4e1a\u6807\u51c6\u5b9e\u8df5 \uff1a - McKinsey\u63a8\u8350\u6a21\u5757\u5316\u4f30\u503c\u7ec4\u4ef6 - Damodaran\u5f3a\u8c03\u8ba1\u7b97\u6b65\u9aa4\u7684\u72ec\u7acb\u6027\u548c\u53ef\u9a8c\u8bc1\u6027 - CFA Institute\u8981\u6c42\u8ba1\u7b97\u8fc7\u7a0b\u900f\u660e\u5316 \u672c\u9879\u76ee\u5b9e\u73b0 \uff1a # 6\u4e2a\u4e13\u4e1a\u5316\u8ba1\u7b97\u5668\uff0c\u5b8c\u5168\u7b26\u5408\u6a21\u5757\u5316\u8981\u6c42 - NwcCalculator: \u51c0\u8425\u8fd0\u8d44\u672c\u8ba1\u7b97 - FcfCalculator: \u65e0\u6760\u6746\u81ea\u7531\u73b0\u91d1\u6d41\u8ba1\u7b97 - WaccCalculator: \u52a0\u6743\u5e73\u5747\u8d44\u672c\u6210\u672c\u8ba1\u7b97 - TerminalValueCalculator: \u7ec8\u503c\u8ba1\u7b97 - PresentValueCalculator: \u73b0\u503c\u8ba1\u7b97 - EquityBridgeCalculator: \u4f01\u4e1a\u4ef7\u503c\u5230\u80a1\u6743\u4ef7\u503c\u6865\u63a5 \u6743\u5a01\u6027\u8bc4\u4ef7 \uff1aA- - \u8d85\u8d8a\u540c\u884c \uff1a\u6a21\u5757\u5316\u7a0b\u5ea6\u8d85\u8fc7\u5927\u591a\u6570\u5f00\u6e90\u9879\u76ee - \u7b26\u5408\u6807\u51c6 \uff1a\u5b8c\u5168\u7b26\u5408\u6743\u5a01\u673a\u6784\u7684\u6a21\u5757\u5316\u8981\u6c42 2. \u6838\u5fc3\u516c\u5f0f\u4e0e\u903b\u8f91\u5bf9\u6bd4 2.1 CAPM\u6a21\u578b\u6df1\u5ea6\u5bf9\u6bd4\uff08\u5df2\u66f4\u65b0\uff09 \u673a\u6784 \u6807\u51c6\u516c\u5f0f \u672c\u9879\u76ee\u5b9e\u73b0 \u5dee\u5f02\u5206\u6790 \u6743\u5a01\u6027\u7b26\u5408\u5ea6 CFA Institute Re = Rf + \u03b2\u00d7(Rm-Rf) + CRP + SRP Re = Rf + \u03b2\u00d7(MRP+CRP) + Size + IRP \u5df2\u6db5\u76d6 CRP/IRP/Size 95% Damodaran Re = Rf + \u03b2\u00d7(Rm-Rf) + CRP + IRP Re = Rf + \u03b2\u00d7(MRP+CRP) + Size + IRP \u4e0e\u6743\u5a01\u5b9e\u8df5\u4e00\u81f4 95% McKinsey Re = Rf + \u03b2\u00d7(Rm-Rf) + Size Re = Rf + \u03b2\u00d7(MRP+CRP) + Size + IRP \u589e\u5f3a\u5b9e\u73b0\uff0c\u7b26\u5408\u5b9e\u52a1 95% CAPM\u516c\u5f0f\u8bf4\u660e \uff1a - Re = Rf + \u03b2\u00d7(Rm-Rf) + CRP + SRP \uff1a\u8fd9\u662f\u6269\u5c55\u7684CAPM\u6a21\u578b\u516c\u5f0f\uff0c\u8ba1\u7b97\u80a1\u6743\u6210\u672c\u7684\u5b8c\u6574\u8868\u8fbe\u5f0f - Rf (\u65e0\u98ce\u9669\u5229\u7387) \uff1a\u901a\u5e38\u4f7f\u752810\u5e74\u671f\u6216\u66f4\u957f\u671f\u56fd\u503a\u7684\u5230\u671f\u6536\u76ca\u7387\uff0c\u4ee3\u8868\u7406\u8bba\u4e0a\u7684\u65e0\u98ce\u9669\u6295\u8d44\u56de\u62a5\u7387 - \u03b2\u00d7(Rm-Rf) \uff1a\u5e02\u573a\u98ce\u9669\u6ea2\u4ef7\u90e8\u5206\uff0c\u5176\u4e2d(Rm-Rf)\u662f\u5e02\u573a\u98ce\u9669\u6ea2\u4ef7\uff0c\u03b2\u8861\u91cf\u80a1\u7968\u76f8\u5bf9\u4e8e\u5e02\u573a\u7684\u7cfb\u7edf\u6027\u98ce\u9669 - CRP (\u56fd\u5bb6\u98ce\u9669\u6ea2\u4ef7) \uff1a\u5728\u65b0\u5174\u5e02\u573a\u6295\u8d44\u4e2d\uff0c\u7528\u4e8e\u8865\u507f\u56fd\u5bb6\u7279\u5b9a\u98ce\u9669\u7684\u989d\u5916\u6ea2\u4ef7\uff0c\u901a\u5e38\u4f7f\u7528\u4e3b\u6743\u503a\u5238\u5229\u5dee\u7b49\u65b9\u6cd5\u8ba1\u7b97 - SRP (\u89c4\u6a21\u98ce\u9669\u6ea2\u4ef7) \uff1a\u57fa\u4e8e\u5b9e\u8bc1\u7814\u7a76\u53d1\u73b0\u7684\u5c0f\u516c\u53f8\u957f\u671f\u56de\u62a5\u9ad8\u4e8e\u5927\u516c\u53f8\u7684\u73b0\u8c61\u800c\u8bbe\u7acb\u7684\u98ce\u9669\u6ea2\u4ef7 \u5173\u952e\u7f3a\u9677\u5206\u6790 \uff1a 1. \u56fd\u5bb6\u98ce\u9669\u6ea2\u4ef7(CRP)\u7f3a\u5931 \uff1a # \u5f53\u524d\u5b9e\u73b0 (wacc_calculator.py:105) cost_of_equity = rf_rate + beta * mrp + size_premium # \u884c\u4e1a\u6807\u51c6\u5e94\u8be5\u5305\u542b cost_of_equity = rf_rate + beta * (mrp + crp) + size_premium + industry_risk_premium \u4e13\u4e1a\u5206\u6790 \uff1a \u5728\u65b0\u5174\u5e02\u573a\u4f30\u503c\u4e2d\uff0c\u56fd\u5bb6\u98ce\u9669\u6ea2\u4ef7\u662fCAPM\u6a21\u578b\u7684\u5173\u952e\u7ec4\u6210\u90e8\u5206\u3002\u4e2d\u56fd\u4f5c\u4e3a\u65b0\u5174\u5e02\u573a\uff0c\u5176\u7cfb\u7edf\u6027\u98ce\u9669\u663e\u8457\u9ad8\u4e8e\u53d1\u8fbe\u56fd\u5bb6\uff0c\u4e3b\u8981\u4f53\u73b0\u5728\u653f\u7b56\u98ce\u9669\u3001\u6c47\u7387\u98ce\u9669\u3001\u6d41\u52a8\u6027\u98ce\u9669\u7b49\u65b9\u9762\u3002\u7f3a\u5931CRP\u4f1a\u5bfc\u81f4\u80a1\u6743\u6210\u672c\u7cfb\u7edf\u6027\u4f4e\u4f30\uff0c\u4ece\u800c\u5f71\u54cd\u4f30\u503c\u7684\u51c6\u786e\u6027\u3002 \u5f71\u54cd\u8bc4\u4f30 \uff1a - \u5bf9\u4e2d\u56fdA\u80a1\u4f30\u503c \uff1a\u7cfb\u7edf\u6027\u4f4e\u4f300.5%-1.5%\u7684\u80a1\u6743\u6210\u672c - \u5bf9\u65b0\u5174\u5e02\u573a \uff1a\u4f30\u503c\u504f\u5dee\u53ef\u80fd\u8fbe\u523010%-15% - \u79d1\u5b66\u6027 \uff1a\u7f3a\u4e4f\u5730\u57df\u98ce\u9669\u8c03\u6574\uff0c\u6a21\u578b\u5b8c\u5907\u6027\u4e0d\u8db3 2.2 \u6c38\u7eed\u589e\u957f\u7387\u903b\u8f91\u5bf9\u6bd4 \u6743\u5a01\u673a\u6784 \u6807\u51c6\u8bbe\u5b9a \u672c\u9879\u76ee\u5b9e\u73b0 \u79d1\u5b66\u6027\u8bc4\u4ef7 Damodaran \u957f\u671fGDP\u589e\u957f\u7387 + 1-2% min(pg_rate, risk_free_rate) \u274c \u8fc7\u4e8e\u4fdd\u5b88 McKinsey \u901a\u80c0\u7387 + \u5b9e\u9645\u589e\u957f\u7387 min(pg_rate, risk_free_rate) \u274c \u9650\u5236\u8fc7\u4e25 CFA Institute \u4e0d\u8d85\u8fc7\u957f\u671fGDP\u589e\u957f\u73871.5\u500d min(pg_rate, risk_free_rate) \u26a0\ufe0f \u4e0d\u5408\u7406 \u672f\u8bed\u89e3\u91ca \uff1a - \u6c38\u7eed\u589e\u957f\u7387 \uff1aPerpetual Growth Rate\uff0c\u516c\u53f8\u5728\u7ec8\u503c\u9636\u6bb5\u7684\u957f\u671f\u7a33\u5b9a\u589e\u957f\u7387\uff0c\u7406\u8bba\u4e0a\u4e0d\u5e94\u8d85\u8fc7\u957f\u671fGDP\u589e\u957f\u7387 - GDP\u589e\u957f\u7387 \uff1aGross Domestic Product Growth Rate\uff0c\u8861\u91cf\u56fd\u5bb6\u7ecf\u6d4e\u589e\u957f\u901f\u5ea6\u7684\u6307\u6807\uff0c\u4e2d\u56fd\u957f\u671f\u540d\u4e49GDP\u589e\u957f\u7387\u7ea6\u4e3a6-8% - \u65e0\u98ce\u9669\u5229\u7387 \uff1aRisk-Free Rate\uff0c\u7406\u8bba\u4e0a\u65e0\u98ce\u9669\u6295\u8d44\u7684\u6536\u76ca\u7387\uff0c\u901a\u5e38\u4f7f\u752810\u5e74\u671f\u56fd\u503a\u6536\u76ca\u7387\uff0c\u5f53\u524d\u7ea6\u4e3a3-4% - \u901a\u80c0\u7387 \uff1aInflation Rate\uff0c\u7269\u4ef7\u6c34\u5e73\u7684\u4e0a\u6da8\u901f\u5ea6\uff0c\u901a\u5e38\u4f7f\u7528CPI\u6307\u6807\u8861\u91cf\uff0c\u957f\u671f\u76ee\u6807\u901a\u5e38\u4e3a2-3% \u903b\u8f91\u4e25\u8c28\u6027\u5206\u6790 \uff1a # \u5f53\u524d\u95ee\u9898\u903b\u8f91 (terminal_value_calculator.py:89) pg_rate_to_use = min(pg_rate_decimal, self.risk_free_rate) # \u95ee\u98981\uff1a\u65e0\u98ce\u9669\u5229\u7387\u901a\u5e38\u4e3a3-4%\uff0c\u800c\u957f\u671fGDP\u589e\u957f\u7387\u4e3a5-7% # \u95ee\u98982\uff1a\u4f18\u8d28\u516c\u53f8\u589e\u957f\u901f\u5ea6\u5e94\u53ef\u80fd\u8d85\u8fc7\u65e0\u98ce\u9669\u5229\u7387 # \u95ee\u98983\uff1a\u672a\u8003\u8651\u901a\u80c0\u56e0\u7d20 \u4e13\u4e1a\u5206\u6790 \uff1a \u4ece\u7ecf\u6d4e\u7406\u8bba\u89d2\u5ea6\u5206\u6790\uff0c\u6c38\u7eed\u589e\u957f\u7387\u5e94\u8be5\u53cd\u6620\u516c\u53f8\u957f\u671f\u7a33\u5b9a\u7684\u589e\u957f\u80fd\u529b\u3002\u5c06\u6c38\u7eed\u589e\u957f\u7387\u9650\u5236\u5728\u65e0\u98ce\u9669\u5229\u7387\u4ee5\u4e0b\u5b58\u5728\u903b\u8f91\u7f3a\u9677\uff0c\u56e0\u4e3a\uff1a 1. \u65e0\u98ce\u9669\u5229\u7387\u901a\u5e38\u4e3a3-4%\uff0c\u800c\u957f\u671f\u540d\u4e49GDP\u589e\u957f\u7387\u4e3a6-8% 2. \u4f18\u8d28\u516c\u53f8\u5e94\u8be5\u80fd\u591f\u83b7\u5f97\u8d85\u8fc7\u5e73\u5747\u6c34\u5e73\u7684\u589e\u957f 3. \u8be5\u9650\u5236\u8fdd\u80cc\u4e86\u7ecf\u6d4e\u589e\u957f\u7684\u57fa\u672c\u539f\u7406\u548c\u4f01\u4e1a\u53d1\u5c55\u89c4\u5f8b \u5408\u7406\u6027\u8bc4\u4ef7 \uff1aC - \u6839\u672c\u6027\u7f3a\u9677 \uff1a\u8fdd\u80cc\u7ecf\u6d4e\u589e\u957f\u57fa\u672c\u539f\u7406 - \u5f71\u54cd \uff1a\u7cfb\u7edf\u6027\u4f4e\u4f30\u516c\u53f8\u7ec8\u503c\uff0c\u53ef\u80fd\u4f4e\u4f3020%-30% 2.3 UFCF\u8ba1\u7b97\u516c\u5f0f\u5bf9\u6bd4 \u884c\u4e1a\u6807\u51c6\u516c\u5f0f \uff1a UFCF = EBIT \u00d7 (1-\u7a0e\u7387) + \u6298\u65e7\u644a\u9500 - \u8d44\u672c\u652f\u51fa - \u51c0\u8425\u8fd0\u8d44\u672c\u53d8\u52a8 \u672c\u9879\u76ee\u5b9e\u73b0 \uff1a # fcf_calculator.py\u4e2d\u5b8c\u5168\u7b26\u5408\u6807\u51c6\u516c\u5f0f ufcf = ebit * (1 - tax_rate) + depreciation_amortization - capital_expenditures - change_in_nwc \u672f\u8bed\u89e3\u91ca \uff1a - UFCF (\u65e0\u6760\u6746\u81ea\u7531\u73b0\u91d1\u6d41) \uff1aUnlevered Free Cash Flow\uff0c\u516c\u53f8\u5728\u652f\u4ed8\u503a\u52a1\u5229\u606f\u524d\u7684\u81ea\u7531\u73b0\u91d1\u6d41\uff0c\u53cd\u6620\u516c\u53f8\u6838\u5fc3\u7ecf\u8425\u6d3b\u52a8\u4ea7\u751f\u7684\u73b0\u91d1\u80fd\u529b - EBIT (\u606f\u7a0e\u524d\u5229\u6da6) \uff1aEarnings Before Interest and Taxes\uff0c\u6263\u9664\u5229\u606f\u548c\u6240\u5f97\u7a0e\u524d\u7684\u8425\u4e1a\u5229\u6da6 - \u6298\u65e7\u644a\u9500 \uff1aDepreciation and Amortization\uff0c\u975e\u73b0\u91d1\u8d39\u7528\u652f\u51fa\uff0c\u53cd\u6620\u56fa\u5b9a\u8d44\u4ea7\u548c\u65e0\u5f62\u8d44\u4ea7\u7684\u4ef7\u503c\u644a\u9500 - \u8d44\u672c\u652f\u51fa \uff1aCapital Expenditures\uff0c\u7528\u4e8e\u8d2d\u7f6e\u3001\u7ef4\u62a4\u548c\u5347\u7ea7\u957f\u671f\u8d44\u4ea7\u7684\u73b0\u91d1\u652f\u51fa - \u51c0\u8425\u8fd0\u8d44\u672c\u53d8\u52a8 \uff1aChange in Net Working Capital\uff0c\u6d41\u52a8\u8d44\u4ea7\u51cf\u53bb\u6d41\u52a8\u8d1f\u503a\u7684\u53d8\u52a8\uff0c\u53cd\u6620\u7ecf\u8425\u6027\u8d44\u91d1\u5360\u7528\u53d8\u5316 \u4e25\u8c28\u6027\u8bc4\u4ef7 \uff1aA+ - \u5b8c\u5168\u7b26\u5408 \uff1a\u516c\u5f0f\u5b9e\u73b0\u7cbe\u786e\u65e0\u8bef - \u6280\u672f\u4f18\u52bf \uff1a\u4f7f\u7528Decimal\u786e\u4fdd\u8ba1\u7b97\u7cbe\u5ea6 - \u9a8c\u8bc1\u5b8c\u5907 \uff1a\u5305\u542b\u5b8c\u6574\u7684\u8f93\u5165\u9a8c\u8bc1 3. \u6570\u636e\u4f7f\u7528\u4e0e\u8981\u7d20\u7ef4\u5ea6\u5bf9\u6bd4 3.1 \u8d44\u672c\u7ed3\u6784\u8ba1\u7b97\u5bf9\u6bd4 \u8ba1\u7b97\u8981\u7d20 \u884c\u4e1a\u6807\u51c6\u5b9e\u8df5 \u672c\u9879\u76ee\u5b9e\u73b0 \u5dee\u5f02\u5206\u6790 \u503a\u52a1\u4ef7\u503c \u5305\u542b\u7ecf\u8425\u79df\u8d41\u8d44\u672c\u5316(IFRS 16) \u4ec5\u5305\u542b\u4f20\u7edf\u6709\u606f\u8d1f\u503a \u274c \u91cd\u5927\u9057\u6f0f \u4f18\u5148\u80a1\u5904\u7406 \u4f5c\u4e3a\u72ec\u7acb\u8d44\u672c\u6210\u5206 \u672a\u5355\u72ec\u5904\u7406 \u274c \u7f3a\u5931 \u53ef\u8f6c\u6362\u503a\u5238 \u6df7\u5408\u8bc1\u5238\u590d\u6742\u5904\u7406 \u672a\u8003\u8651 \u274c \u7f3a\u5931 \u5e02\u573a\u4ef7\u503c\u6743\u91cd \u652f\u6301\u76ee\u6807/\u5e02\u573a\u53cc\u91cd\u6a21\u5f0f \u652f\u6301\u76ee\u6807/\u5e02\u573a\u53cc\u91cd\u6a21\u5f0f \u2705 \u826f\u597d \u4f30\u503c\u65e5\u6eda\u52a8\u4e0e\u53e3\u5f84\u4e00\u81f4\u6027 \uff1a - \u884c\u4e1a\u6700\u4f73\u5b9e\u8df5\u8981\u6c42\u4ee5\u201c\u4f30\u503c\u65e5\u524d\u6700\u65b0\u5df2\u62ab\u9732\u8d44\u4ea7\u8d1f\u503a\u8868\u201d\u8ba1\u7b97\u51c0\u503a\u52a1\uff1b\u672c\u9879\u76ee\u5df2\u6309\u4f30\u503c\u65e5\u6eda\u52a8\u53d6\u6570\uff0c\u5e76\u4e0e\u8425\u8fd0\u8d44\u672c\u57fa\u671f last_component_nwc \u5bf9\u9f50\uff08\u73b0\u91d1\u4e0d\u5165 NWC\uff09\uff0c\u51cf\u5c11 \u0394NWC \u53e3\u5f84\u8df3\u53d8\uff0c\u7b26\u5408 McKinsey \u53e3\u5f84\u3002 - \u7ecf\u8425\u57fa\u671f\u652f\u6301 LTM/Interim\uff08\u53ef\u9009\uff09\uff0c\u4ee5 YTD \u4e0e\u4e0a\u5e74\u5e74\u62a5\u62c6\u5206\u8ba1\u7b97 LTM \u6536\u5165\uff0c\u4fbf\u4e8e\u4e2d\u671f/\u5b63\u5ea6\u66f4\u65b0\u540e\u7684\u6eda\u52a8\u91cd\u8bc4\u3002 \u672f\u8bed\u89e3\u91ca \uff1a - \u7ecf\u8425\u79df\u8d41\u8d44\u672c\u5316 \uff1aOperating Lease Capitalization\uff0c\u6839\u636eIFRS 16\u51c6\u5219\u5c06\u7ecf\u8425\u79df\u8d41\u786e\u8ba4\u4e3a\u4f7f\u7528\u6743\u8d44\u4ea7\u548c\u79df\u8d41\u8d1f\u503a - \u4f18\u5148\u80a1 \uff1aPreferred Stock\uff0c\u5177\u6709\u4f18\u5148\u5206\u7ea2\u6743\u548c\u6e05\u7b97\u6743\u7684\u6df7\u5408\u8bc1\u5238\uff0c\u517c\u5177\u503a\u6743\u548c\u80a1\u6743\u7279\u5f81 - \u53ef\u8f6c\u6362\u503a\u5238 \uff1aConvertible Bond\uff0c\u53ef\u4ee5\u6309\u7ea6\u5b9a\u6761\u4ef6\u8f6c\u6362\u4e3a\u53d1\u884c\u516c\u53f8\u666e\u901a\u80a1\u7684\u503a\u52a1\u5de5\u5177 - IFRS 16 \uff1aInternational Financial Reporting Standard 16\uff0c\u56fd\u9645\u8d22\u52a1\u62a5\u544a\u51c6\u5219\u7b2c16\u53f7\uff0c\u5173\u4e8e\u79df\u8d41\u7684\u4f1a\u8ba1\u5904\u7406\u6807\u51c6 \u5f53\u524d\u5b9e\u73b0\u95ee\u9898 \uff1a # wacc_calculator.py:243-259 \u8fc7\u4e8e\u7b80\u5316 debt_market_value = lt_borr + st_borr + bond_payable + non_cur_liab_due_1y \u884c\u4e1a\u6807\u51c6\u5e94\u8be5\u5305\u542b \uff1a # \u5b8c\u6574\u7684\u503a\u52a1\u4ef7\u503c\u8ba1\u7b97 debt_market_value = ( lt_borr + st_borr + bond_payable + non_cur_liab_due_1y + operating_lease_capitalized + # \u7ecf\u8425\u79df\u8d41\u8d44\u672c\u5316 preferred_stock + # \u4f18\u5148\u80a1 convertible_debt_portion # \u53ef\u8f6c\u6362\u503a\u5238\u503a\u52a1\u90e8\u5206 ) \u4e13\u4e1a\u5206\u6790 \uff1a \u5b8c\u6574\u7684\u503a\u52a1\u4ef7\u503c\u8ba1\u7b97\u5e94\u8be5\u5305\u62ec\u6240\u6709\u5177\u6709\u503a\u52a1\u6027\u8d28\u7684\u878d\u8d44\u5de5\u5177\u3002\u4f20\u7edf\u6709\u606f\u8d1f\u503a\u53ea\u662f\u503a\u52a1\u7684\u4e00\u90e8\u5206\uff0c\u6839\u636e\u73b0\u4ee3\u4f1a\u8ba1\u51c6\u5219\u548c\u91d1\u878d\u7406\u8bba\uff0c\u8fd8\u5e94\u8be5\u5305\u62ec\u7ecf\u8425\u79df\u8d41\u8d1f\u503a\u3001\u4f18\u5148\u80a1\u3001\u53ef\u8f6c\u6362\u503a\u5238\u7b49\u6df7\u5408\u878d\u8d44\u5de5\u5177\u7684\u503a\u52a1\u90e8\u5206\u3002\u8fd9\u6837\u624d\u80fd\u51c6\u786e\u53cd\u6620\u516c\u53f8\u7684\u771f\u5b9e\u8d44\u672c\u7ed3\u6784\u548c\u503a\u52a1\u6c34\u5e73\u3002 3.2 \u884c\u4e1a\u57fa\u51c6\u6570\u636e\u5bf9\u6bd4 \u7ef4\u5ea6 \u884c\u4e1a\u6807\u51c6 \u672c\u9879\u76ee \u5dee\u5f02\u5206\u6790 \u884c\u4e1a\u5dee\u5f02\u5316\u53c2\u6570 \u5b8c\u6574\u7684\u884c\u4e1a\u57fa\u51c6\u6570\u636e\u5e93 \u7f3a\u5931 \u274c \u91cd\u5927\u7f3a\u9677 Beta\u57fa\u51c6\u503c \u6309\u884c\u4e1a\u63d0\u4f9b\u6807\u51c6Beta \u4f7f\u7528\u56fa\u5b9a\u503c1.0 \u26a0\ufe0f \u4e0d\u591f\u7cbe\u786e \u9884\u6d4b\u671f\u8bbe\u5b9a \u6309\u884c\u4e1a\u7279\u6027\u8bbe\u5b9a \u9ed8\u8ba45\u5e74\uff1bUI 3\u201315\u5e74\uff0cAPI 1\u201320\u5e74 \u2705 \u6539\u5584 \u672f\u8bed\u89e3\u91ca \uff1a - Beta\u57fa\u51c6\u503c \uff1aBeta Benchmark\uff0c\u4e0d\u540c\u884c\u4e1a\u7684\u7cfb\u7edf\u6027\u98ce\u9669\u7cfb\u6570\uff0c\u53cd\u6620\u884c\u4e1a\u76f8\u5bf9\u4e8e\u5e02\u573a\u7684\u6ce2\u52a8\u6027 - \u9884\u6d4b\u671f \uff1aForecast Period\uff0c\u5bf9\u516c\u53f8\u672a\u6765\u8d22\u52a1\u8868\u73b0\u8fdb\u884c\u9884\u6d4b\u7684\u65f6\u95f4\u8de8\u5ea6\uff0c\u6839\u636e\u884c\u4e1a\u7279\u6027\u6709\u6240\u4e0d\u540c - \u9000\u51fa\u4e58\u6570 \uff1aExit Multiple\uff0c\u7ec8\u503c\u8ba1\u7b97\u4e2d\u4f7f\u7528\u7684\u4f30\u503c\u4e58\u6570\uff0c\u901a\u5e38\u4e3aEV/EBITDA\u6216P/E\u7b49\u6307\u6807 - \u6c38\u7eed\u589e\u957f\u7387 \uff1aPerpetual Growth Rate\uff0c\u516c\u53f8\u5728\u7ec8\u503c\u9636\u6bb5\u7684\u957f\u671f\u7a33\u5b9a\u589e\u957f\u7387\uff0c\u6839\u636e\u884c\u4e1a\u53d1\u5c55\u9636\u6bb5\u8bbe\u5b9a \u884c\u4e1a\u6807\u51c6\u57fa\u51c6\u6570\u636e\u793a\u4f8b \uff1a # \u5e94\u8be5\u5efa\u7acb\u7684\u884c\u4e1a\u57fa\u51c6 INDUSTRY_BENCHMARKS = { 'Technology': { 'beta': 1.2, # \u79d1\u6280\u884c\u4e1a\u6ce2\u52a8\u5927\uff0c\u98ce\u9669\u9ad8 'forecast_period': 10, # \u6280\u672f\u53d8\u5316\u5feb\uff0c\u9700\u8981\u957f\u671f\u9884\u6d4b 'perpetual_growth': 0.06, # \u6210\u957f\u7a7a\u95f4\u5927 'exit_multiple': 12.5 # \u4f30\u503c\u500d\u6570\u9ad8 }, 'Consumer_Staples': { 'beta': 0.8, # \u5fc5\u9700\u54c1\u9700\u6c42\u7a33\u5b9a\uff0c\u98ce\u9669\u4f4e 'forecast_period': 5, # \u4e1a\u52a1\u76f8\u5bf9\u7a33\u5b9a 'perpetual_growth': 0.03, # \u6210\u719f\u884c\u4e1a\u589e\u957f\u6162 'exit_multiple': 8.3 # \u4f30\u503c\u500d\u6570\u9002\u4e2d } } \u4e13\u4e1a\u5206\u6790 \uff1a \u4e0d\u540c\u884c\u4e1a\u5177\u6709\u663e\u8457\u4e0d\u540c\u7684\u98ce\u9669\u7279\u5f81\u548c\u6210\u957f\u6027\u7279\u5f81\uff1a - \u79d1\u6280\u884c\u4e1a \uff1a\u9ad8Beta\u503c(1.2-1.5)\uff0c\u9ad8\u6210\u957f\u6027\uff0c\u9700\u8981\u66f4\u957f\u9884\u6d4b\u671f(10\u5e74)\uff0c\u9ad8\u9000\u51fa\u4e58\u6570(12-15\u500d) - \u6d88\u8d39\u884c\u4e1a \uff1a\u4e2d\u7b49Beta\u503c(0.8-1.0)\uff0c\u7a33\u5b9a\u6210\u957f\uff0c\u4e2d\u7b49\u9884\u6d4b\u671f(5-7\u5e74)\uff0c\u4e2d\u7b49\u9000\u51fa\u4e58\u6570(8-10\u500d) - \u91d1\u878d\u884c\u4e1a \uff1a\u53d7\u76d1\u7ba1\u5f71\u54cd\u5927\uff0c\u7279\u6b8a\u4f1a\u8ba1\u5904\u7406\uff0c\u9002\u7528\u4e13\u95e8\u7684\u4f30\u503c\u65b9\u6cd5 \u5f53\u524d\u9879\u76ee\u7f3a\u4e4f\u884c\u4e1a\u5dee\u5f02\u5316\u5904\u7406\uff0c\u5bfc\u81f4\u4f30\u503c\u53c2\u6570\u8bbe\u7f6e\u4e0d\u591f\u7cbe\u786e\u3002 4. \u79d1\u5b66\u6027\u4e0e\u4e25\u8c28\u6027\u7efc\u5408\u8bc4\u4ef7 4.1 \u79d1\u5b66\u6027\u8bc4\u4ef7 (B+) \u4f18\u52bf \uff1a - \u2705 \u7406\u8bba\u6846\u67b6\u5b8c\u6574\uff0c\u7b26\u5408DCF\u6838\u5fc3\u539f\u7406 - \u2705 \u6a21\u5757\u5316\u8bbe\u8ba1\u79d1\u5b66\uff0c\u4fbf\u4e8e\u9a8c\u8bc1\u548c\u7ef4\u62a4 - \u2705 \u8ba1\u7b97\u7cbe\u5ea6\u63a7\u5236\u826f\u597d\uff0c\u4f7f\u7528Decimal\u7c7b\u578b \u4e0d\u8db3 \uff1a - \u274c CAPM\u6a21\u578b\u7f3a\u4e4f\u56fd\u5bb6\u98ce\u9669\u8c03\u6574 - \u274c \u6c38\u7eed\u589e\u957f\u7387\u903b\u8f91\u8fdd\u80cc\u7ecf\u6d4e\u539f\u7406 - \u274c \u7f3a\u4e4f\u5b9e\u8bc1\u6570\u636e\u652f\u6301\u53c2\u6570\u8bbe\u5b9a 4.2 \u5408\u7406\u6027\u8bc4\u4ef7 (B) \u4f18\u52bf \uff1a - \u2705 \u4e1a\u52a1\u6d41\u7a0b\u8bbe\u8ba1\u5408\u7406\uff0c\u8986\u76d6\u5b8c\u6574\u4f30\u503c\u94fe - \u2705 \u98ce\u9669\u63a7\u5236\u673a\u5236\u5b8c\u5584\uff0c\u5305\u542b\u591a\u91cd\u9a8c\u8bc1 - \u2705 \u7528\u6237\u63a5\u53e3\u8bbe\u8ba1\u5408\u7406\uff0c\u652f\u6301\u591a\u79cd\u8f93\u5165\u65b9\u5f0f \u4e0d\u8db3 \uff1a - \u274c \u53c2\u6570\u8bbe\u7f6e\u8fc7\u4e8e\u4fdd\u5b88\uff0c\u53ef\u80fd\u4f4e\u4f30\u516c\u53f8\u4ef7\u503c - \u274c \u884c\u4e1a\u9002\u5e94\u6027\u4e0d\u8db3\uff0c\u7f3a\u4e4f\u5dee\u5f02\u5316\u5904\u7406 - \u274c \u9884\u6d4b\u903b\u8f91\u8fc7\u4e8e\u7b80\u5316\uff0c\u672a\u8003\u8651\u884c\u4e1a\u751f\u547d\u5468\u671f 4.3 \u4e25\u8c28\u6027\u8bc4\u4ef7 (A-) \u4f18\u52bf \uff1a - \u2705 \u4ee3\u7801\u5b9e\u73b0\u4e25\u8c28\uff0c\u5f02\u5e38\u5904\u7406\u5b8c\u5584 - \u2705 \u8ba1\u7b97\u903b\u8f91\u7cbe\u786e\uff0c\u516c\u5f0f\u5b9e\u73b0\u51c6\u786e - \u2705 \u6570\u636e\u9a8c\u8bc1\u5b8c\u5907\uff0c\u5305\u542b\u5b8c\u6574\u6027\u68c0\u67e5 \u4e0d\u8db3 \uff1a - \u26a0\ufe0f \u67d0\u4e9b\u53c2\u6570\u9a8c\u8bc1\u8fc7\u4e8e\u4e25\u683c\uff08\u5982\u6c38\u7eed\u589e\u957f\u7387\uff09 - \u26a0\ufe0f \u7f3a\u4e4f\u5bf9\u6781\u7aef\u60c5\u51b5\u7684\u5904\u7406 - \u26a0\ufe0f \u6587\u6863\u548c\u6ce8\u91ca\u4e0d\u591f\u8be6\u7ec6 4.4 \u6743\u5a01\u6027\u8bc4\u4ef7 (B) \u4f18\u52bf \uff1a - \u2705 \u7b26\u5408\u4e3b\u6d41DCF\u4f30\u503c\u7406\u8bba\u6846\u67b6 - \u2705 \u53c2\u8003\u4e86\u6743\u5a01\u673a\u6784\u7684\u6700\u4f73\u5b9e\u8df5 - \u2705 \u5b9e\u73b0\u4e86\u6807\u51c6\u7684\u4f30\u503c\u8ba1\u7b97\u6d41\u7a0b \u4e0d\u8db3 \uff1a - \u274c \u7f3a\u4e4f\u6743\u5a01\u673a\u6784\u7684\u76f4\u63a5\u8ba4\u8bc1 - \u274c \u67d0\u4e9b\u5173\u952e\u5047\u8bbe\u4e0e\u6743\u5a01\u6807\u51c6\u5b58\u5728\u504f\u5dee - \u274c \u672a\u5f15\u7528\u6743\u5a01\u6570\u636e\u6e90\u652f\u6301\u53c2\u6570\u8bbe\u5b9a 5. \u6838\u5fc3\u95ee\u9898\u603b\u7ed3\u4e0e\u6539\u8fdb\u5efa\u8bae 5.1 \u9ad8\u4f18\u5148\u7ea7\u95ee\u9898\uff08\u5fc5\u987b\u4fee\u590d\uff09 1. CAPM\u6a21\u578b\u589e\u5f3a def enhanced_capm_calculation(self, beta, market_risk_premium, country_risk_premium, industry_risk_premium): \"\"\" \u589e\u5f3a\u578bCAPM\u8ba1\u7b97\uff0c\u7b26\u5408CFA Institute\u6807\u51c6 \"\"\" # \u57fa\u7840CAPM cost_of_equity = self.risk_free_rate + beta * market_risk_premium # \u56fd\u5bb6\u98ce\u9669\u8c03\u6574\uff08\u5bf9\u65b0\u5174\u5e02\u573a\u5173\u952e\uff09 if self.is_emerging_market: cost_of_equity += beta * country_risk_premium # \u884c\u4e1a\u98ce\u9669\u8c03\u6574 cost_of_equity += industry_risk_premium return cost_of_equity 2. \u6c38\u7eed\u589e\u957f\u7387\u903b\u8f91\u91cd\u6784 def validate_perpetual_growth_rate(self, pg_rate, country_gdp_growth, inflation_rate): \"\"\" \u57fa\u4e8e\u7ecf\u6d4e\u57fa\u672c\u9762\u7684\u6c38\u7eed\u589e\u957f\u7387\u9a8c\u8bc1 \u7b26\u5408Damodaran\u548cMcKinsey\u6807\u51c6 \"\"\" # \u957f\u671f\u540d\u4e49GDP\u589e\u957f\u7387 nominal_gdp_growth = country_gdp_growth + inflation_rate # \u5408\u7406\u8303\u56f4\uff1aGDP\u589e\u957f\u7387\u81f3GDP+2% reasonable_max = nominal_gdp_growth + 0.02 reasonable_min = nominal_gdp_growth - 0.01 # \u9a8c\u8bc1\u8303\u56f4 if pg_rate > reasonable_max: return reasonable_max elif pg_rate < reasonable_min: return reasonable_min return pg_rate 3. \u884c\u4e1a\u57fa\u51c6\u6570\u636e\u5e93\u5efa\u8bbe class IndustryBenchmarks: \"\"\"\u6743\u5a01\u884c\u4e1a\u4f30\u503c\u57fa\u51c6\u6570\u636e\u5e93\"\"\" DATA = { 'Technology': { 'beta': 1.2, 'forecast_period': 10, 'perpetual_growth': 0.06, 'exit_multiple': 12.5, 'revenue_growth': 0.15, 'operating_margin': 0.25 }, 'Consumer': { 'beta': 0.9, 'forecast_period': 7, 'perpetual_growth': 0.04, 'exit_multiple': 9.8, 'revenue_growth': 0.08, 'operating_margin': 0.18 }, # \u66f4\u591a\u884c\u4e1a\u6570\u636e... } 5.2 \u4e2d\u4f18\u5148\u7ea7\u6539\u8fdb 1. \u8d44\u672c\u7ed3\u6784\u8ba1\u7b97\u5b8c\u5584 def calculate_comprehensive_debt_value(self): \"\"\" \u5b8c\u6574\u7684\u503a\u52a1\u4ef7\u503c\u8ba1\u7b97\uff0c\u7b26\u5408IFRS 16\u6807\u51c6 \"\"\" # \u4f20\u7edf\u6709\u606f\u8d1f\u503a traditional_debt = ( self.lt_borr + self.st_borr + self.bond_payable + self.non_cur_liab_due_1y ) # \u7ecf\u8425\u79df\u8d41\u8d44\u672c\u5316\uff08IFRS 16\u8981\u6c42\uff09 operating_lease_value = self.capitalize_operating_leases() # \u5176\u4ed6\u503a\u52a1\u5de5\u5177 preferred_stock = self.get_preferred_stock_value() convertible_debt = self.get_convertible_debt_value() return traditional_debt + operating_lease_value + preferred_stock + convertible_debt 2. \u9884\u6d4b\u671f\u7075\u6d3b\u914d\u7f6e def get_industry_forecast_period(self, industry_type): \"\"\" \u6309\u884c\u4e1a\u7279\u6027\u8bbe\u5b9a\u9884\u6d4b\u671f \"\"\" forecast_periods = { 'Technology': 10, # \u6280\u672f\u53d8\u5316\u5feb\uff0c\u9700\u8981\u957f\u671f\u9884\u6d4b 'Consumer': 7, # \u6d88\u8d39\u884c\u4e1a\u76f8\u5bf9\u7a33\u5b9a 'Financial': 5, # \u53d7\u76d1\u7ba1\u5f71\u54cd\u5927 'Industrial': 8, # \u5468\u671f\u6027\u5f3a\uff0c\u9700\u8981\u8986\u76d6\u5468\u671f 'Healthcare': 10 # \u7814\u53d1\u5468\u671f\u957f } return forecast_periods.get(industry_type, 5) 5.3 \u4f4e\u4f18\u5148\u7ea7\u4f18\u5316 \u589e\u52a0\u654f\u611f\u6027\u5206\u6790\u7ef4\u5ea6 \u5b8c\u5584\u73b0\u91d1\u6d41\u8d28\u91cf\u8bc4\u4f30 \u589e\u52a0\u76f8\u5bf9\u4f30\u503c\u5bf9\u6bd4\u529f\u80fd \u4f18\u5316\u7528\u6237\u754c\u9762\u548c\u62a5\u544a\u751f\u6210 6. \u603b\u4f53\u8bc4\u4ef7\u4e0e\u5efa\u8bae 6.1 \u9879\u76ee\u8bc4\u5206 \u8bc4\u4ef7\u7ef4\u5ea6 \u5f97\u5206 \u7b49\u7ea7 \u8bf4\u660e \u79d1\u5b66\u6027 78/100 B+ \u7406\u8bba\u6846\u67b6\u5b8c\u6574\uff0c\u4f46\u5173\u952e\u53c2\u6570\u8bbe\u7f6e\u5b58\u5728\u95ee\u9898 \u5408\u7406\u6027 75/100 B \u4e1a\u52a1\u6d41\u7a0b\u5408\u7406\uff0c\u4f46\u884c\u4e1a\u9002\u5e94\u6027\u4e0d\u8db3 \u4e25\u8c28\u6027 85/100 A- \u4ee3\u7801\u5b9e\u73b0\u4e25\u8c28\uff0c\u4f46\u67d0\u4e9b\u9a8c\u8bc1\u903b\u8f91\u8fc7\u4e8e\u4fdd\u5b88 \u6743\u5a01\u6027 72/100 B- \u7b26\u5408\u4e3b\u6d41\u6807\u51c6\uff0c\u4f46\u7f3a\u4e4f\u6743\u5a01\u8ba4\u8bc1\u548c\u57fa\u51c6\u6570\u636e \u7efc\u5408\u8bc4\u5206 77.5/100 B+ \u5177\u5907\u4e13\u4e1a\u6c34\u51c6\uff0c\u4f46\u9700\u8981\u5173\u952e\u6539\u8fdb \u8bc4\u5206\u6807\u51c6\u8bf4\u660e \uff1a - B+ (77.5\u5206) \uff1a\u5177\u5907\u4e13\u4e1a\u6c34\u51c6\uff0c\u4f46\u5728\u5173\u952e\u6280\u672f\u7ec6\u8282\u4e0a\u5b58\u5728\u6539\u8fdb\u7a7a\u95f4 - A\u7ea7\u4e13\u4e1a\u6c34\u51c6 \uff1a85\u5206\u4ee5\u4e0a\uff0c\u8fbe\u5230\u884c\u4e1a\u9886\u5148\u6c34\u5e73\uff0c\u7b26\u5408\u4e3b\u6d41\u91d1\u878d\u673a\u6784\u6807\u51c6 - \u5f53\u524d\u6c34\u5e73 \uff1a\u57fa\u7840\u67b6\u6784\u624e\u5b9e\uff0c\u6838\u5fc3\u903b\u8f91\u6b63\u786e\uff0c\u9700\u8981\u4f18\u5316\u5173\u952e\u53c2\u6570\u8bbe\u7f6e 6.2 \u6838\u5fc3\u4f18\u52bf \u6280\u672f\u67b6\u6784\u5353\u8d8a \uff1a\u6a21\u5757\u5316\u8bbe\u8ba1\u8d85\u8d8a\u5927\u591a\u6570\u5f00\u6e90\u9879\u76ee \u7406\u8bba\u57fa\u7840\u624e\u5b9e \uff1aDCF\u6838\u5fc3\u903b\u8f91\u7b26\u5408\u4e3b\u6d41\u6807\u51c6 \u4ee3\u7801\u8d28\u91cf\u9ad8 \uff1a\u5b9e\u73b0\u4e25\u8c28\uff0c\u5f02\u5e38\u5904\u7406\u5b8c\u5584 \u6269\u5c55\u6027\u597d \uff1a\u63d2\u4ef6\u5f0f\u67b6\u6784\u4fbf\u4e8e\u529f\u80fd\u6269\u5c55 6.3 \u5173\u952e\u4e0d\u8db3 CAPM\u6a21\u578b\u7f3a\u9677 \uff1a\u56fd\u5bb6\u98ce\u9669\u6ea2\u4ef7\u7f3a\u5931\uff0c\u5f71\u54cd\u65b0\u5174\u5e02\u573a\u4f30\u503c \u6c38\u7eed\u589e\u957f\u7387\u95ee\u9898 \uff1a\u903b\u8f91\u8bbe\u7f6e\u8fc7\u4e8e\u4fdd\u5b88\uff0c\u53ef\u80fd\u4f4e\u4f30\u516c\u53f8\u4ef7\u503c \u884c\u4e1a\u9002\u5e94\u6027\u4e0d\u8db3 \uff1a\u7f3a\u4e4f\u884c\u4e1a\u5dee\u5f02\u5316\u53c2\u6570\u548c\u57fa\u51c6\u6570\u636e \u6743\u5a01\u6027\u6b20\u7f3a \uff1a\u7f3a\u4e4f\u6743\u5a01\u673a\u6784\u8ba4\u8bc1\u548c\u57fa\u51c6\u6570\u636e\u652f\u6301 6.4 \u6539\u8fdb\u8def\u7ebf\u56fe \u7b2c\u4e00\u9636\u6bb5 \uff081-2\u4e2a\u6708\uff09\uff1a\u5173\u952e\u95ee\u9898\u4fee\u590d [ ] \u5b9e\u73b0\u589e\u5f3a\u578bCAPM\u6a21\u578b\uff0c\u5305\u542b\u56fd\u5bb6\u98ce\u9669\u6ea2\u4ef7 [ ] \u91cd\u6784\u6c38\u7eed\u589e\u957f\u7387\u9a8c\u8bc1\u903b\u8f91 [ ] \u5efa\u7acb\u57fa\u7840\u884c\u4e1a\u57fa\u51c6\u6570\u636e\u5e93 \u7b2c\u4e8c\u9636\u6bb5 \uff082-3\u4e2a\u6708\uff09\uff1a\u884c\u4e1a\u9002\u5e94\u6027\u589e\u5f3a [ ] \u5b8c\u5584\u8d44\u672c\u7ed3\u6784\u8ba1\u7b97\uff0c\u7b26\u5408IFRS 16\u6807\u51c6 [ ] \u5b9e\u73b0\u9884\u6d4b\u671f\u884c\u4e1a\u5dee\u5f02\u5316\u914d\u7f6e [ ] \u589e\u52a0\u884c\u4e1a\u751f\u547d\u5468\u671f\u8003\u91cf \u7b2c\u4e09\u9636\u6bb5 \uff083-4\u4e2a\u6708\uff09\uff1a\u6743\u5a01\u6027\u63d0\u5347 [ ] \u6574\u5408\u6743\u5a01\u6570\u636e\u6e90\u548c\u57fa\u51c6\u6570\u636e [ ] \u589e\u52a0\u76f8\u5bf9\u4f30\u503c\u548c\u654f\u611f\u6027\u5206\u6790 [ ] \u5b8c\u5584\u6587\u6863\u548c\u8ba4\u8bc1\u6750\u6599 7. \u7ed3\u8bba stock_vale_valuation_3.0\u9879\u76ee\u5728DCF\u4f30\u503c\u5b9e\u73b0\u4e0a\u5c55\u73b0\u4e86 \u8f83\u9ad8\u7684\u4e13\u4e1a\u6c34\u51c6 \uff0c\u6280\u672f\u67b6\u6784\u548c\u6838\u5fc3\u8ba1\u7b97\u903b\u8f91\u90fd\u8fbe\u5230\u4e86\u884c\u4e1a\u6807\u51c6\u3002\u9879\u76ee\u5177\u5907\u6210\u4e3a \u4f01\u4e1a\u7ea7\u4f30\u503c\u5e73\u53f0 \u7684\u6f5c\u529b\uff0c\u4f46\u9700\u8981\u5728\u4ee5\u4e0b\u5173\u952e\u65b9\u9762\u8fdb\u884c\u6539\u8fdb\uff1a \u79d1\u5b66\u6027\u63d0\u5347 \uff1a\u4fee\u590dCAPM\u548c\u6c38\u7eed\u589e\u957f\u7387\u7684\u5173\u952e\u7f3a\u9677 \u884c\u4e1a\u9002\u5e94\u6027 \uff1a\u589e\u52a0\u884c\u4e1a\u5dee\u5f02\u5316\u5904\u7406\u548c\u57fa\u51c6\u6570\u636e \u6743\u5a01\u6027\u5efa\u8bbe \uff1a\u6574\u5408\u6743\u5a01\u6570\u636e\u6e90\u548c\u6700\u4f73\u5b9e\u8df5 \u901a\u8fc7\u5b9e\u65bd\u4e0a\u8ff0\u6539\u8fdb\u5efa\u8bae\uff0c\u9879\u76ee\u53ef\u4ee5\u8fbe\u5230 A\u7ea7\u4e13\u4e1a\u6c34\u51c6 \uff0885\u5206\u4ee5\u4e0a\uff09\uff0c\u6210\u4e3a\u771f\u6b63\u610f\u4e49\u4e0a\u7684\u4f01\u4e1a\u7ea7\u4f30\u503c\u5e73\u53f0\u3002\u9879\u76ee\u5df2\u7ecf\u5177\u5907\u4e86\u624e\u5b9e\u7684\u57fa\u7840\uff0c\u5f00\u53d1\u56e2\u961f\u5c55\u73b0\u4e86\u5728\u91d1\u878d\u5de5\u7a0b\u548c\u8f6f\u4ef6\u67b6\u6784\u65b9\u9762\u7684\u6df1\u539a\u529f\u5e95\uff0c\u662f\u4e00\u4e2a\u5177\u6709\u5f88\u9ad8\u4ef7\u503c\u7684\u91d1\u878d\u79d1\u6280\u57fa\u7840\u6846\u67b6\u3002 \u6700\u7ec8\u8bc4\u4ef7 \uff1a\u8fd9\u662f\u4e00\u4e2a \u4f18\u79c0\u7684\u91d1\u878d\u79d1\u6280\u57fa\u7840\u6846\u67b6 \uff0c\u5728\u5173\u952e\u7ec6\u8282\u4e0a\u8fdb\u884c\u4f18\u5316\u540e\uff0c\u5b8c\u5168\u53ef\u4ee5\u8fbe\u5230\u56fd\u9645\u9876\u5c16\u6c34\u5e73\u3002 \ud83d\udccb \u4e13\u4e1a\u603b\u7ed3 \u9879\u76ee\u5b9a\u4f4d stock_vale_valuation_3.0\u662f\u4e00\u4e2a\u57fa\u4e8eDCF\u4f30\u503c\u7406\u8bba\u7684\u4e13\u4e1a\u7ea7\u516c\u53f8\u4f30\u503c\u7cfb\u7edf\uff0c\u91c7\u7528\u6a21\u5757\u5316\u67b6\u6784\u8bbe\u8ba1\uff0c\u96c6\u6210\u4e86\u5b8c\u6574\u7684\u8d22\u52a1\u9884\u6d4b\u548c\u73b0\u91d1\u6d41\u8ba1\u7b97\u529f\u80fd\u3002 \u6280\u672f\u4f18\u52bf \u67b6\u6784\u8bbe\u8ba1 \uff1a\u91c7\u75286\u4e2a\u4e13\u4e1a\u5316\u8ba1\u7b97\u5668\u6a21\u5757\uff0c\u5b9e\u73b0\u4e86\u9ad8\u5185\u805a\u4f4e\u8026\u5408\u7684\u7cfb\u7edf\u67b6\u6784 \u8ba1\u7b97\u7cbe\u5ea6 \uff1a\u4f7f\u7528Decimal\u7c7b\u578b\u786e\u4fdd\u91d1\u878d\u8ba1\u7b97\u7cbe\u5ea6\uff0c\u907f\u514d\u6d6e\u70b9\u6570\u8bef\u5dee \u4ee3\u7801\u8d28\u91cf \uff1a\u5f02\u5e38\u5904\u7406\u5b8c\u5584\uff0c\u5305\u542b\u5b8c\u6574\u7684\u8f93\u5165\u9a8c\u8bc1\u548c\u8fb9\u754c\u6761\u4ef6\u68c0\u67e5 \u4e3b\u8981\u4e0d\u8db3 CAPM\u6a21\u578b \uff1a\u7f3a\u5c11\u56fd\u5bb6\u98ce\u9669\u6ea2\u4ef7\u8c03\u6574\uff0c\u5bf9\u65b0\u5174\u5e02\u573a\u4f30\u503c\u4e0d\u591f\u51c6\u786e \u6c38\u7eed\u589e\u957f\u7387 \uff1a\u9650\u5236\u903b\u8f91\u8fc7\u4e8e\u4fdd\u5b88\uff0c\u53ef\u80fd\u7cfb\u7edf\u6027\u4f4e\u4f30\u516c\u53f8\u7ec8\u503c \u884c\u4e1a\u9002\u5e94\u6027 \uff1a\u7f3a\u4e4f\u884c\u4e1a\u5dee\u5f02\u5316\u53c2\u6570\u8bbe\u7f6e\uff0c\u5f71\u54cd\u4f30\u503c\u7cbe\u5ea6 \u6539\u8fdb\u65b9\u5411 \u6a21\u578b\u5b8c\u5584 \uff1a\u589e\u5f3aCAPM\u6a21\u578b\uff0c\u5b8c\u5584\u6c38\u7eed\u589e\u957f\u7387\u903b\u8f91 \u6570\u636e\u5efa\u8bbe \uff1a\u5efa\u7acb\u884c\u4e1a\u57fa\u51c6\u6570\u636e\u5e93\uff0c\u63d0\u4f9b\u5dee\u5f02\u5316\u53c2\u6570 \u6743\u5a01\u6027\u63d0\u5347 \uff1a\u6574\u5408\u6743\u5a01\u6570\u636e\u6e90\uff0c\u7b26\u5408\u56fd\u9645\u4f30\u503c\u6807\u51c6 \u7ed3\u8bba \u8be5\u9879\u76ee\u5177\u5907\u6210\u4e3a\u4f01\u4e1a\u7ea7\u4f30\u503c\u5e73\u53f0\u7684\u6280\u672f\u57fa\u7840\uff0c\u901a\u8fc7\u5173\u952e\u6539\u8fdb\u53ef\u8fbe\u5230\u884c\u4e1a\u9886\u5148\u6c34\u5e73\u3002","title":"DCF\u4f30\u503c\u9879\u76ee\u4e0e\u884c\u4e1a\u6807\u51c6\u6df1\u5ea6\u5bf9\u6bd4\u5206\u6790\u62a5\u544a"},{"location":"archived/dcf_industry_standards_comprehensive_analysis/#dcf","text":"","title":"DCF\u4f30\u503c\u9879\u76ee\u4e0e\u884c\u4e1a\u6807\u51c6\u6df1\u5ea6\u5bf9\u6bd4\u5206\u6790\u62a5\u544a"},{"location":"archived/dcf_industry_standards_comprehensive_analysis/#_1","text":"\u672c\u62a5\u544a\u57fa\u4e8e\u5bf9\u539f\u59cbDCF\u4f30\u503c\u4e13\u4e1a\u6821\u9a8c\u62a5\u544a\u548c\u672f\u8bed\u89e3\u91ca\u7248\u62a5\u544a\u7684\u6df1\u5ea6\u6574\u5408\uff0c\u4ece \u79d1\u5b66\u6027\u3001\u5408\u7406\u6027\u3001\u4e25\u8c28\u6027\u3001\u6743\u5a01\u6027 \u56db\u4e2a\u7ef4\u5ea6\uff0c\u5bf9stock_vale_valuation_3.0\u9879\u76ee\u4e0e\u91d1\u878d\u884c\u4e1a\u4e3b\u6d41\u6807\u51c6\u8fdb\u884c\u5168\u65b9\u4f4d\u5bf9\u6bd4\u5206\u6790\u3002\u5206\u6790\u53d1\u73b0\u8be5\u9879\u76ee\u5728\u6280\u672f\u67b6\u6784\u548c\u6838\u5fc3\u903b\u8f91\u4e0a\u8fbe\u5230\u884c\u4e1a\u6807\u51c6\u6c34\u5e73\uff0c\u4f46\u5728\u5173\u952e\u7ec6\u8282\u5904\u7406\u4e0a\u5b58\u5728\u663e\u8457\u6539\u8fdb\u7a7a\u95f4\u3002 DCF\u4f30\u503c\u5b9a\u4e49 \uff1aDiscounted Cash Flow (DCF) \u662f\u4e00\u79cd\u7edd\u5bf9\u4f30\u503c\u65b9\u6cd5\uff0c\u901a\u8fc7\u9884\u6d4b\u516c\u53f8\u672a\u6765\u81ea\u7531\u73b0\u91d1\u6d41\u5e76\u6298\u73b0\u5230\u5f53\u524d\u65f6\u70b9\uff0c\u4ece\u800c\u786e\u5b9a\u516c\u53f8\u5185\u5728\u4ef7\u503c\u7684\u65b9\u6cd5\u3002\u5176\u6838\u5fc3\u5047\u8bbe\u662f\u516c\u53f8\u4ef7\u503c\u7b49\u4e8e\u5176\u672a\u6765\u6240\u6709\u81ea\u7531\u73b0\u91d1\u6d41\u7684\u73b0\u503c\u4e4b\u548c\u3002 \u6838\u5fc3\u53d1\u73b0\uff082025-09-10 \u66f4\u65b0\uff09 \uff1a - \u6280\u672f\u67b6\u6784\u5353\u8d8a\uff1a\u6a21\u5757\u5316\u8bbe\u8ba1\u8d85\u8d8a\u5927\u591a\u6570\u5f00\u6e90\u9879\u76ee - \u7406\u8bba\u57fa\u7840\u624e\u5b9e\uff1aDCF \u6838\u5fc3\u903b\u8f91\u4e0e McKinsey/Damodaran \u6807\u51c6\u4e00\u81f4 - \u6cbb\u7406\u80fd\u529b\u589e\u5f3a\uff1a\u540d\u4e49 GDP \u4e0a\u9650\uff08PGR clamp\uff09\u3001\u9690\u542b PGR\uff08Exit Multiple\uff09\u63d0\u793a\u3001LTM/\u6eda\u52a8\u8d44\u4ea7\u8d1f\u503a\u8868\u3001NWC \u5929\u6570\u8fc7\u6e21\u3001\u884c\u4e1a\u9884\u8bbe\u6a21\u677f\u3001\u80a1\u606f\u53e3\u5f84\u56de\u9000\u94fe\uff08\u5b9e\u65bd\u2192\u9884\u6848\u2192\u5e74\u5ea6\uff09\u5df2\u843d\u5730 - \u900f\u660e\u5ea6\u63d0\u5347\uff1aAPI debug \u6ce8\u5165 baseline_debug\u3001applied_preset \u4e0e diff\uff1bUI \u663e\u793a as-of\uff08\u4ef7\u683c/EPS\uff09\u4e0e\u80a1\u606f\u6765\u6e90 - \u540e\u7eed\u65b9\u5411\uff1a\u6269\u5c55\u884c\u4e1a\u5e93\u3001\u5b8c\u5584\u8d44\u672c\u7ed3\u6784\u53e3\u5f84\uff08\u79df\u8d41/\u4f18\u5148\u80a1/\u53ef\u8f6c\u503a\uff09\u3001\u60c5\u666f/\u8499\u7279\u5361\u6d1b","title":"\u6267\u884c\u6458\u8981"},{"location":"archived/dcf_industry_standards_comprehensive_analysis/#_2","text":"\u7ec8\u503c\uff08PGR\uff09 \u6c38\u7eed\u589e\u957f\u6cd5\u6309\u540d\u4e49 GDP \u4e0a\u9650\u5939\u6301\uff08\u8bf7\u6c42/ENV \u53ef\u63a7\uff09\uff1b\u8d85\u9650\u7ed9\u51fa\u6765\u6e90\u4e0e\u88ab\u66f4\u6b63\u503c\u63d0\u793a \u9000\u51fa\u4e58\u6570\u6cd5\u8ba1\u7b97\u9690\u542b PGR\uff0c\u5e76\u5bf9\u6bd4 GDP \u4e0a\u9650\u63d0\u793a\u8d8a\u754c LTM \u4e0e\u6eda\u52a8 \u7ecf\u8425\u57fa\u671f\u53ef\u9009 LTM\uff08\u6309 YTD/\u5e74\u5ea6\u62c6\u5206\uff09\uff1b\u8d44\u672c\u7ed3\u6784\u6309\u4f30\u503c\u65e5\u6eda\u52a8\u5230\u6700\u8fd1\u4e00\u884c\u8d44\u4ea7\u8d1f\u503a\u8868\uff0c\u5e76\u91cd\u7b97 last_component_nwc NWC \u53ef\u89e3\u91ca\u6027 \u5f15\u5165 nwc_days_transition_years \u4e0e transition_to_target \uff0c\u9996\u5e74 \u0394NWC \u7684\u65b9\u5411/\u5e45\u5ea6\u4e0e AR/AP/Inv \u5929\u6570\u53d8\u5316\u4e00\u81f4\uff0c\u5355\u6d4b\u8986\u76d6 \u884c\u4e1a\u9884\u8bbe\uff08GICS 11 + \u767d\u9152\u53d8\u4f53\uff09 \u63d0\u4f9b \u03b2\u3001\u9884\u6d4b\u671f\u3001PGR cap\u3001EV/EBITDA\u3001DSO/DIO/DPO \u4e2d\u4f4d\u6570/\u533a\u95f4\uff1b\u4f5c\u4e3a\u6a21\u677f\u52a0\u8f7d\uff0cAPI debug \u8fd4\u56de applied_preset \u4e0e applied_preset_diff \u80a1\u606f\u53e3\u5f84 TTM\uff08\u5b9e\u65bd/\u5b8c\u6210\uff09\u2192 \u65e0\u5219 TTM\u00b7\u9884\u6848 \u2192 \u4ecd\u65e0\u5219 \u5e74\u5ea6\uff1bUI \u6807\u7b7e\u4f53\u73b0\u6765\u6e90 as-of \u4e00\u81f4\u6027 \u4ef7\u683c\uff1a trade_date \u2264 \u4f30\u503c\u65e5 \uff1bEPS\uff08\u5e74\u62a5\uff09\uff1a end_date \u2264 \u4f30\u503c\u65e5 \uff1bUI \u6807\u7b7e\u6ce8\u660e","title":"\u6700\u8fd1\u66f4\u65b0\uff08\u76f8\u5bf9\u524d\u7248\u5dee\u5f02\uff09"},{"location":"archived/dcf_industry_standards_comprehensive_analysis/#_3","text":"","title":"\ud83d\udcda \u4e13\u4e1a\u672f\u8bed\u89e3\u91ca"},{"location":"archived/dcf_industry_standards_comprehensive_analysis/#_4","text":"DCF\u4f30\u503c \uff1aDiscounted Cash Flow\uff0c\u6298\u73b0\u73b0\u91d1\u6d41\u4f30\u503c\u6cd5\uff0c\u901a\u8fc7\u9884\u6d4b\u516c\u53f8\u672a\u6765\u81ea\u7531\u73b0\u91d1\u6d41\u5e76\u6298\u73b0\u5230\u5f53\u524d\u65f6\u70b9\u786e\u5b9a\u516c\u53f8\u5185\u5728\u4ef7\u503c\u7684\u7edd\u5bf9\u4f30\u503c\u65b9\u6cd5 \u4f01\u4e1a\u4ef7\u503c(EV) \uff1aEnterprise Value\uff0c\u516c\u53f8\u6574\u4f53\u4ef7\u503c\uff0c\u5305\u62ec\u80a1\u6743\u4ef7\u503c\u548c\u503a\u52a1\u4ef7\u503c\uff0c\u51cf\u53bb\u73b0\u91d1\u53ca\u73b0\u91d1\u7b49\u4ef7\u7269 \u80a1\u6743\u4ef7\u503c \uff1aEquity Value\uff0c\u4f01\u4e1a\u4ef7\u503c\u51cf\u53bb\u51c0\u503a\u52a1\u540e\u7684\u4ef7\u503c\uff0c\u4ee3\u8868\u80a1\u4e1c\u6743\u76ca\u7684\u4ef7\u503c \u6c38\u7eed\u589e\u957f\u7387 \uff1aPerpetual Growth Rate\uff0c\u516c\u53f8\u5728\u7ec8\u503c\u9636\u6bb5\u7684\u957f\u671f\u7a33\u5b9a\u589e\u957f\u7387\uff0c\u901a\u5e38\u5047\u8bbe\u516c\u53f8\u6c38\u7eed\u7ecf\u8425 WACC \uff1aWeighted Average Cost of Capital\uff0c\u52a0\u6743\u5e73\u5747\u8d44\u672c\u6210\u672c\uff0c\u516c\u53f8\u5404\u79cd\u878d\u8d44\u6210\u672c\u7684\u52a0\u6743\u5e73\u5747\u503c","title":"\u57fa\u7840\u6982\u5ff5"},{"location":"archived/dcf_industry_standards_comprehensive_analysis/#_5","text":"Re (\u80a1\u6743\u6210\u672c) \uff1aCost of Equity\uff0c\u80a1\u4e1c\u8981\u6c42\u7684\u5fc5\u8981\u6536\u76ca\u7387\uff0c\u53cd\u6620\u80a1\u6743\u6295\u8d44\u7684\u98ce\u9669\u548c\u56de\u62a5\u8981\u6c42 Rf (\u65e0\u98ce\u9669\u5229\u7387) \uff1aRisk-Free Rate\uff0c\u7406\u8bba\u4e0a\u65e0\u98ce\u9669\u6295\u8d44\u7684\u6536\u76ca\u7387\uff0c\u901a\u5e38\u4f7f\u7528\u957f\u671f\u56fd\u503a\u6536\u76ca\u7387 \u03b2 (Beta\u7cfb\u6570) \uff1a\u7cfb\u7edf\u6027\u98ce\u9669\u7cfb\u6570\uff0c\u8861\u91cf\u5355\u4e2a\u80a1\u7968\u76f8\u5bf9\u4e8e\u6574\u4e2a\u5e02\u573a\u7684\u6ce2\u52a8\u6027\uff0c\u5e02\u573a\u7ec4\u5408\u7684Beta\u4e3a1.0 Rm (\u5e02\u573a\u56de\u62a5\u7387) \uff1aMarket Return\uff0c\u80a1\u7968\u5e02\u573a\u7684\u9884\u671f\u6536\u76ca\u7387\uff0c\u901a\u5e38\u4f7f\u7528\u5e02\u573a\u6307\u6570\u7684\u5386\u53f2\u5e73\u5747\u6536\u76ca\u7387 CRP (\u56fd\u5bb6\u98ce\u9669\u6ea2\u4ef7) \uff1aCountry Risk Premium\uff0c\u6295\u8d44\u7279\u5b9a\u56fd\u5bb6\u76f8\u6bd4\u53d1\u8fbe\u56fd\u5bb6\u6240\u8981\u6c42\u7684\u989d\u5916\u98ce\u9669\u8865\u507f SRP (\u89c4\u6a21\u98ce\u9669\u6ea2\u4ef7) \uff1aSize Risk Premium\uff0c\u5c0f\u89c4\u6a21\u516c\u53f8\u76f8\u6bd4\u5927\u89c4\u6a21\u516c\u53f8\u6240\u8981\u6c42\u7684\u989d\u5916\u98ce\u9669\u8865\u507f IRP (\u884c\u4e1a\u98ce\u9669\u6ea2\u4ef7) \uff1aIndustry Risk Premium\uff0c\u7279\u5b9a\u884c\u4e1a\u76f8\u6bd4\u5e02\u573a\u6574\u4f53\u6240\u8981\u6c42\u7684\u989d\u5916\u98ce\u9669\u8865\u507f SP (\u89c4\u6a21\u6ea2\u4ef7) \uff1aSize Premium\uff0c\u4e0e\u516c\u53f8\u89c4\u6a21\u76f8\u5173\u7684\u98ce\u9669\u6ea2\u4ef7\uff0c\u901a\u5e38\u7528\u4e8e\u8865\u507f\u5c0f\u516c\u53f8\u7684\u989d\u5916\u98ce\u9669","title":"\u5173\u952e\u6307\u6807\u89e3\u91ca"},{"location":"archived/dcf_industry_standards_comprehensive_analysis/#_6","text":"McKinsey (\u9ea6\u80af\u9521) \uff1a\u5168\u7403\u9886\u5148\u7684\u7ba1\u7406\u54a8\u8be2\u516c\u53f8\uff0c\u5176\u4f30\u503c\u65b9\u6cd5\u8bba\u88ab\u5e7f\u6cdb\u8ba4\u4e3a\u662f\u884c\u4e1a\u6807\u51c6 Damodaran \uff1a\u7ebd\u7ea6\u5927\u5b66Stern\u5546\u5b66\u9662\u6559\u6388\uff0c\u516c\u53f8\u4f30\u503c\u9886\u57df\u6743\u5a01\u4e13\u5bb6\uff0c\u88ab\u8a89\u4e3a\u73b0\u4ee3\u4f30\u503c\u4e4b\u7236 CFA Institute \uff1a\u7279\u8bb8\u91d1\u878d\u5206\u6790\u5e08\u534f\u4f1a\uff0c\u5168\u7403\u6295\u8d44\u7ba1\u7406\u884c\u4e1a\u7684\u4e13\u4e1a\u6807\u51c6\u5236\u5b9a\u8005\u548c\u8ba4\u8bc1\u673a\u6784","title":"\u91d1\u878d\u673a\u6784\u80cc\u666f"},{"location":"archived/dcf_industry_standards_comprehensive_analysis/#1","text":"","title":"1. \u65b9\u6cd5\u8bba\u5bf9\u6bd4\u5206\u6790"},{"location":"archived/dcf_industry_standards_comprehensive_analysis/#11-dcf","text":"\u5bf9\u6bd4\u7ef4\u5ea6 \u884c\u4e1a\u6807\u51c6 (McKinsey/Damodaran) \u672c\u9879\u76ee\u5b9e\u73b0 \u7b26\u5408\u5ea6 \u5dee\u5f02\u5206\u6790 \u6a21\u578b\u7c7b\u578b \u4e24\u9636\u6bb5DCF\u6a21\u578b \u4e24\u9636\u6bb5DCF\u6a21\u578b \u2705 100% \u5b8c\u5168\u7b26\u5408 \u663e\u6027\u9884\u6d4b\u671f 5-10\u5e74\uff0c\u6309\u884c\u4e1a\u7279\u6027\u8c03\u6574 \u9ed8\u8ba45\u5e74\uff1bUI 3\u201315\u5e74\uff0cAPI 1\u201320\u5e74 \u2705 85% \u5df2\u652f\u6301\u914d\u7f6e\uff0c\u5efa\u8bae\u6309\u884c\u4e1a\u4e0e\u516c\u53f8\u5468\u671f\u8c03\u6574 \u7ec8\u503c\u8ba1\u7b97 \u6c38\u7eed\u589e\u957f\u6cd5 + \u9000\u51fa\u4e58\u6570\u6cd5\u53cc\u9a8c\u8bc1 \u6c38\u7eed\u589e\u957f\u6cd5 + \u9000\u51fa\u4e58\u6570\u6cd5 \u2705 95% \u5b9e\u73b0\u5b8c\u6574\uff0c\u4f46PGR\u4e0a\u9650\u5f85\u4f18\u5316 \u4f01\u4e1a\u4ef7\u503c\u6865\u63a5 \u6807\u51c6EV\u5230Equity\u6865\u63a5 \u6807\u51c6EV\u5230Equity\u6865\u63a5 \u2705 100% \u5b8c\u5168\u7b26\u5408","title":"1.1 DCF\u6a21\u578b\u67b6\u6784\u5bf9\u6bd4"},{"location":"archived/dcf_industry_standards_comprehensive_analysis/#b","text":"\u4f18\u52bf \uff1a\u4e25\u683c\u9075\u5faa\u4e24\u9636\u6bb5DCF\u7406\u8bba\u6846\u67b6\uff0c\u6a21\u578b\u7ed3\u6784\u5b8c\u6574 \u4e0d\u8db3 \uff1a\u9884\u6d4b\u671f\u8bbe\u5b9a\u7f3a\u4e4f\u884c\u4e1a\u5dee\u5f02\u5316\uff0c\u5f71\u54cd\u4f30\u503c\u7cbe\u5ea6","title":"\u79d1\u5b66\u6027\u8bc4\u4ef7\uff1aB+"},{"location":"archived/dcf_industry_standards_comprehensive_analysis/#12","text":"\u884c\u4e1a\u6807\u51c6\u5b9e\u8df5 \uff1a - McKinsey\u63a8\u8350\u6a21\u5757\u5316\u4f30\u503c\u7ec4\u4ef6 - Damodaran\u5f3a\u8c03\u8ba1\u7b97\u6b65\u9aa4\u7684\u72ec\u7acb\u6027\u548c\u53ef\u9a8c\u8bc1\u6027 - CFA Institute\u8981\u6c42\u8ba1\u7b97\u8fc7\u7a0b\u900f\u660e\u5316 \u672c\u9879\u76ee\u5b9e\u73b0 \uff1a # 6\u4e2a\u4e13\u4e1a\u5316\u8ba1\u7b97\u5668\uff0c\u5b8c\u5168\u7b26\u5408\u6a21\u5757\u5316\u8981\u6c42 - NwcCalculator: \u51c0\u8425\u8fd0\u8d44\u672c\u8ba1\u7b97 - FcfCalculator: \u65e0\u6760\u6746\u81ea\u7531\u73b0\u91d1\u6d41\u8ba1\u7b97 - WaccCalculator: \u52a0\u6743\u5e73\u5747\u8d44\u672c\u6210\u672c\u8ba1\u7b97 - TerminalValueCalculator: \u7ec8\u503c\u8ba1\u7b97 - PresentValueCalculator: \u73b0\u503c\u8ba1\u7b97 - EquityBridgeCalculator: \u4f01\u4e1a\u4ef7\u503c\u5230\u80a1\u6743\u4ef7\u503c\u6865\u63a5 \u6743\u5a01\u6027\u8bc4\u4ef7 \uff1aA- - \u8d85\u8d8a\u540c\u884c \uff1a\u6a21\u5757\u5316\u7a0b\u5ea6\u8d85\u8fc7\u5927\u591a\u6570\u5f00\u6e90\u9879\u76ee - \u7b26\u5408\u6807\u51c6 \uff1a\u5b8c\u5168\u7b26\u5408\u6743\u5a01\u673a\u6784\u7684\u6a21\u5757\u5316\u8981\u6c42","title":"1.2 \u8ba1\u7b97\u5668\u6a21\u5757\u5316\u8bbe\u8ba1\u5bf9\u6bd4"},{"location":"archived/dcf_industry_standards_comprehensive_analysis/#2","text":"","title":"2. \u6838\u5fc3\u516c\u5f0f\u4e0e\u903b\u8f91\u5bf9\u6bd4"},{"location":"archived/dcf_industry_standards_comprehensive_analysis/#21-capm","text":"\u673a\u6784 \u6807\u51c6\u516c\u5f0f \u672c\u9879\u76ee\u5b9e\u73b0 \u5dee\u5f02\u5206\u6790 \u6743\u5a01\u6027\u7b26\u5408\u5ea6 CFA Institute Re = Rf + \u03b2\u00d7(Rm-Rf) + CRP + SRP Re = Rf + \u03b2\u00d7(MRP+CRP) + Size + IRP \u5df2\u6db5\u76d6 CRP/IRP/Size 95% Damodaran Re = Rf + \u03b2\u00d7(Rm-Rf) + CRP + IRP Re = Rf + \u03b2\u00d7(MRP+CRP) + Size + IRP \u4e0e\u6743\u5a01\u5b9e\u8df5\u4e00\u81f4 95% McKinsey Re = Rf + \u03b2\u00d7(Rm-Rf) + Size Re = Rf + \u03b2\u00d7(MRP+CRP) + Size + IRP \u589e\u5f3a\u5b9e\u73b0\uff0c\u7b26\u5408\u5b9e\u52a1 95% CAPM\u516c\u5f0f\u8bf4\u660e \uff1a - Re = Rf + \u03b2\u00d7(Rm-Rf) + CRP + SRP \uff1a\u8fd9\u662f\u6269\u5c55\u7684CAPM\u6a21\u578b\u516c\u5f0f\uff0c\u8ba1\u7b97\u80a1\u6743\u6210\u672c\u7684\u5b8c\u6574\u8868\u8fbe\u5f0f - Rf (\u65e0\u98ce\u9669\u5229\u7387) \uff1a\u901a\u5e38\u4f7f\u752810\u5e74\u671f\u6216\u66f4\u957f\u671f\u56fd\u503a\u7684\u5230\u671f\u6536\u76ca\u7387\uff0c\u4ee3\u8868\u7406\u8bba\u4e0a\u7684\u65e0\u98ce\u9669\u6295\u8d44\u56de\u62a5\u7387 - \u03b2\u00d7(Rm-Rf) \uff1a\u5e02\u573a\u98ce\u9669\u6ea2\u4ef7\u90e8\u5206\uff0c\u5176\u4e2d(Rm-Rf)\u662f\u5e02\u573a\u98ce\u9669\u6ea2\u4ef7\uff0c\u03b2\u8861\u91cf\u80a1\u7968\u76f8\u5bf9\u4e8e\u5e02\u573a\u7684\u7cfb\u7edf\u6027\u98ce\u9669 - CRP (\u56fd\u5bb6\u98ce\u9669\u6ea2\u4ef7) \uff1a\u5728\u65b0\u5174\u5e02\u573a\u6295\u8d44\u4e2d\uff0c\u7528\u4e8e\u8865\u507f\u56fd\u5bb6\u7279\u5b9a\u98ce\u9669\u7684\u989d\u5916\u6ea2\u4ef7\uff0c\u901a\u5e38\u4f7f\u7528\u4e3b\u6743\u503a\u5238\u5229\u5dee\u7b49\u65b9\u6cd5\u8ba1\u7b97 - SRP (\u89c4\u6a21\u98ce\u9669\u6ea2\u4ef7) \uff1a\u57fa\u4e8e\u5b9e\u8bc1\u7814\u7a76\u53d1\u73b0\u7684\u5c0f\u516c\u53f8\u957f\u671f\u56de\u62a5\u9ad8\u4e8e\u5927\u516c\u53f8\u7684\u73b0\u8c61\u800c\u8bbe\u7acb\u7684\u98ce\u9669\u6ea2\u4ef7","title":"2.1 CAPM\u6a21\u578b\u6df1\u5ea6\u5bf9\u6bd4\uff08\u5df2\u66f4\u65b0\uff09"},{"location":"archived/dcf_industry_standards_comprehensive_analysis/#_7","text":"1. \u56fd\u5bb6\u98ce\u9669\u6ea2\u4ef7(CRP)\u7f3a\u5931 \uff1a # \u5f53\u524d\u5b9e\u73b0 (wacc_calculator.py:105) cost_of_equity = rf_rate + beta * mrp + size_premium # \u884c\u4e1a\u6807\u51c6\u5e94\u8be5\u5305\u542b cost_of_equity = rf_rate + beta * (mrp + crp) + size_premium + industry_risk_premium \u4e13\u4e1a\u5206\u6790 \uff1a \u5728\u65b0\u5174\u5e02\u573a\u4f30\u503c\u4e2d\uff0c\u56fd\u5bb6\u98ce\u9669\u6ea2\u4ef7\u662fCAPM\u6a21\u578b\u7684\u5173\u952e\u7ec4\u6210\u90e8\u5206\u3002\u4e2d\u56fd\u4f5c\u4e3a\u65b0\u5174\u5e02\u573a\uff0c\u5176\u7cfb\u7edf\u6027\u98ce\u9669\u663e\u8457\u9ad8\u4e8e\u53d1\u8fbe\u56fd\u5bb6\uff0c\u4e3b\u8981\u4f53\u73b0\u5728\u653f\u7b56\u98ce\u9669\u3001\u6c47\u7387\u98ce\u9669\u3001\u6d41\u52a8\u6027\u98ce\u9669\u7b49\u65b9\u9762\u3002\u7f3a\u5931CRP\u4f1a\u5bfc\u81f4\u80a1\u6743\u6210\u672c\u7cfb\u7edf\u6027\u4f4e\u4f30\uff0c\u4ece\u800c\u5f71\u54cd\u4f30\u503c\u7684\u51c6\u786e\u6027\u3002 \u5f71\u54cd\u8bc4\u4f30 \uff1a - \u5bf9\u4e2d\u56fdA\u80a1\u4f30\u503c \uff1a\u7cfb\u7edf\u6027\u4f4e\u4f300.5%-1.5%\u7684\u80a1\u6743\u6210\u672c - \u5bf9\u65b0\u5174\u5e02\u573a \uff1a\u4f30\u503c\u504f\u5dee\u53ef\u80fd\u8fbe\u523010%-15% - \u79d1\u5b66\u6027 \uff1a\u7f3a\u4e4f\u5730\u57df\u98ce\u9669\u8c03\u6574\uff0c\u6a21\u578b\u5b8c\u5907\u6027\u4e0d\u8db3","title":"\u5173\u952e\u7f3a\u9677\u5206\u6790\uff1a"},{"location":"archived/dcf_industry_standards_comprehensive_analysis/#22","text":"\u6743\u5a01\u673a\u6784 \u6807\u51c6\u8bbe\u5b9a \u672c\u9879\u76ee\u5b9e\u73b0 \u79d1\u5b66\u6027\u8bc4\u4ef7 Damodaran \u957f\u671fGDP\u589e\u957f\u7387 + 1-2% min(pg_rate, risk_free_rate) \u274c \u8fc7\u4e8e\u4fdd\u5b88 McKinsey \u901a\u80c0\u7387 + \u5b9e\u9645\u589e\u957f\u7387 min(pg_rate, risk_free_rate) \u274c \u9650\u5236\u8fc7\u4e25 CFA Institute \u4e0d\u8d85\u8fc7\u957f\u671fGDP\u589e\u957f\u73871.5\u500d min(pg_rate, risk_free_rate) \u26a0\ufe0f \u4e0d\u5408\u7406 \u672f\u8bed\u89e3\u91ca \uff1a - \u6c38\u7eed\u589e\u957f\u7387 \uff1aPerpetual Growth Rate\uff0c\u516c\u53f8\u5728\u7ec8\u503c\u9636\u6bb5\u7684\u957f\u671f\u7a33\u5b9a\u589e\u957f\u7387\uff0c\u7406\u8bba\u4e0a\u4e0d\u5e94\u8d85\u8fc7\u957f\u671fGDP\u589e\u957f\u7387 - GDP\u589e\u957f\u7387 \uff1aGross Domestic Product Growth Rate\uff0c\u8861\u91cf\u56fd\u5bb6\u7ecf\u6d4e\u589e\u957f\u901f\u5ea6\u7684\u6307\u6807\uff0c\u4e2d\u56fd\u957f\u671f\u540d\u4e49GDP\u589e\u957f\u7387\u7ea6\u4e3a6-8% - \u65e0\u98ce\u9669\u5229\u7387 \uff1aRisk-Free Rate\uff0c\u7406\u8bba\u4e0a\u65e0\u98ce\u9669\u6295\u8d44\u7684\u6536\u76ca\u7387\uff0c\u901a\u5e38\u4f7f\u752810\u5e74\u671f\u56fd\u503a\u6536\u76ca\u7387\uff0c\u5f53\u524d\u7ea6\u4e3a3-4% - \u901a\u80c0\u7387 \uff1aInflation Rate\uff0c\u7269\u4ef7\u6c34\u5e73\u7684\u4e0a\u6da8\u901f\u5ea6\uff0c\u901a\u5e38\u4f7f\u7528CPI\u6307\u6807\u8861\u91cf\uff0c\u957f\u671f\u76ee\u6807\u901a\u5e38\u4e3a2-3%","title":"2.2 \u6c38\u7eed\u589e\u957f\u7387\u903b\u8f91\u5bf9\u6bd4"},{"location":"archived/dcf_industry_standards_comprehensive_analysis/#_8","text":"# \u5f53\u524d\u95ee\u9898\u903b\u8f91 (terminal_value_calculator.py:89) pg_rate_to_use = min(pg_rate_decimal, self.risk_free_rate) # \u95ee\u98981\uff1a\u65e0\u98ce\u9669\u5229\u7387\u901a\u5e38\u4e3a3-4%\uff0c\u800c\u957f\u671fGDP\u589e\u957f\u7387\u4e3a5-7% # \u95ee\u98982\uff1a\u4f18\u8d28\u516c\u53f8\u589e\u957f\u901f\u5ea6\u5e94\u53ef\u80fd\u8d85\u8fc7\u65e0\u98ce\u9669\u5229\u7387 # \u95ee\u98983\uff1a\u672a\u8003\u8651\u901a\u80c0\u56e0\u7d20 \u4e13\u4e1a\u5206\u6790 \uff1a \u4ece\u7ecf\u6d4e\u7406\u8bba\u89d2\u5ea6\u5206\u6790\uff0c\u6c38\u7eed\u589e\u957f\u7387\u5e94\u8be5\u53cd\u6620\u516c\u53f8\u957f\u671f\u7a33\u5b9a\u7684\u589e\u957f\u80fd\u529b\u3002\u5c06\u6c38\u7eed\u589e\u957f\u7387\u9650\u5236\u5728\u65e0\u98ce\u9669\u5229\u7387\u4ee5\u4e0b\u5b58\u5728\u903b\u8f91\u7f3a\u9677\uff0c\u56e0\u4e3a\uff1a 1. \u65e0\u98ce\u9669\u5229\u7387\u901a\u5e38\u4e3a3-4%\uff0c\u800c\u957f\u671f\u540d\u4e49GDP\u589e\u957f\u7387\u4e3a6-8% 2. \u4f18\u8d28\u516c\u53f8\u5e94\u8be5\u80fd\u591f\u83b7\u5f97\u8d85\u8fc7\u5e73\u5747\u6c34\u5e73\u7684\u589e\u957f 3. \u8be5\u9650\u5236\u8fdd\u80cc\u4e86\u7ecf\u6d4e\u589e\u957f\u7684\u57fa\u672c\u539f\u7406\u548c\u4f01\u4e1a\u53d1\u5c55\u89c4\u5f8b \u5408\u7406\u6027\u8bc4\u4ef7 \uff1aC - \u6839\u672c\u6027\u7f3a\u9677 \uff1a\u8fdd\u80cc\u7ecf\u6d4e\u589e\u957f\u57fa\u672c\u539f\u7406 - \u5f71\u54cd \uff1a\u7cfb\u7edf\u6027\u4f4e\u4f30\u516c\u53f8\u7ec8\u503c\uff0c\u53ef\u80fd\u4f4e\u4f3020%-30%","title":"\u903b\u8f91\u4e25\u8c28\u6027\u5206\u6790\uff1a"},{"location":"archived/dcf_industry_standards_comprehensive_analysis/#23-ufcf","text":"\u884c\u4e1a\u6807\u51c6\u516c\u5f0f \uff1a UFCF = EBIT \u00d7 (1-\u7a0e\u7387) + \u6298\u65e7\u644a\u9500 - \u8d44\u672c\u652f\u51fa - \u51c0\u8425\u8fd0\u8d44\u672c\u53d8\u52a8 \u672c\u9879\u76ee\u5b9e\u73b0 \uff1a # fcf_calculator.py\u4e2d\u5b8c\u5168\u7b26\u5408\u6807\u51c6\u516c\u5f0f ufcf = ebit * (1 - tax_rate) + depreciation_amortization - capital_expenditures - change_in_nwc \u672f\u8bed\u89e3\u91ca \uff1a - UFCF (\u65e0\u6760\u6746\u81ea\u7531\u73b0\u91d1\u6d41) \uff1aUnlevered Free Cash Flow\uff0c\u516c\u53f8\u5728\u652f\u4ed8\u503a\u52a1\u5229\u606f\u524d\u7684\u81ea\u7531\u73b0\u91d1\u6d41\uff0c\u53cd\u6620\u516c\u53f8\u6838\u5fc3\u7ecf\u8425\u6d3b\u52a8\u4ea7\u751f\u7684\u73b0\u91d1\u80fd\u529b - EBIT (\u606f\u7a0e\u524d\u5229\u6da6) \uff1aEarnings Before Interest and Taxes\uff0c\u6263\u9664\u5229\u606f\u548c\u6240\u5f97\u7a0e\u524d\u7684\u8425\u4e1a\u5229\u6da6 - \u6298\u65e7\u644a\u9500 \uff1aDepreciation and Amortization\uff0c\u975e\u73b0\u91d1\u8d39\u7528\u652f\u51fa\uff0c\u53cd\u6620\u56fa\u5b9a\u8d44\u4ea7\u548c\u65e0\u5f62\u8d44\u4ea7\u7684\u4ef7\u503c\u644a\u9500 - \u8d44\u672c\u652f\u51fa \uff1aCapital Expenditures\uff0c\u7528\u4e8e\u8d2d\u7f6e\u3001\u7ef4\u62a4\u548c\u5347\u7ea7\u957f\u671f\u8d44\u4ea7\u7684\u73b0\u91d1\u652f\u51fa - \u51c0\u8425\u8fd0\u8d44\u672c\u53d8\u52a8 \uff1aChange in Net Working Capital\uff0c\u6d41\u52a8\u8d44\u4ea7\u51cf\u53bb\u6d41\u52a8\u8d1f\u503a\u7684\u53d8\u52a8\uff0c\u53cd\u6620\u7ecf\u8425\u6027\u8d44\u91d1\u5360\u7528\u53d8\u5316 \u4e25\u8c28\u6027\u8bc4\u4ef7 \uff1aA+ - \u5b8c\u5168\u7b26\u5408 \uff1a\u516c\u5f0f\u5b9e\u73b0\u7cbe\u786e\u65e0\u8bef - \u6280\u672f\u4f18\u52bf \uff1a\u4f7f\u7528Decimal\u786e\u4fdd\u8ba1\u7b97\u7cbe\u5ea6 - \u9a8c\u8bc1\u5b8c\u5907 \uff1a\u5305\u542b\u5b8c\u6574\u7684\u8f93\u5165\u9a8c\u8bc1","title":"2.3 UFCF\u8ba1\u7b97\u516c\u5f0f\u5bf9\u6bd4"},{"location":"archived/dcf_industry_standards_comprehensive_analysis/#3","text":"","title":"3. \u6570\u636e\u4f7f\u7528\u4e0e\u8981\u7d20\u7ef4\u5ea6\u5bf9\u6bd4"},{"location":"archived/dcf_industry_standards_comprehensive_analysis/#31","text":"\u8ba1\u7b97\u8981\u7d20 \u884c\u4e1a\u6807\u51c6\u5b9e\u8df5 \u672c\u9879\u76ee\u5b9e\u73b0 \u5dee\u5f02\u5206\u6790 \u503a\u52a1\u4ef7\u503c \u5305\u542b\u7ecf\u8425\u79df\u8d41\u8d44\u672c\u5316(IFRS 16) \u4ec5\u5305\u542b\u4f20\u7edf\u6709\u606f\u8d1f\u503a \u274c \u91cd\u5927\u9057\u6f0f \u4f18\u5148\u80a1\u5904\u7406 \u4f5c\u4e3a\u72ec\u7acb\u8d44\u672c\u6210\u5206 \u672a\u5355\u72ec\u5904\u7406 \u274c \u7f3a\u5931 \u53ef\u8f6c\u6362\u503a\u5238 \u6df7\u5408\u8bc1\u5238\u590d\u6742\u5904\u7406 \u672a\u8003\u8651 \u274c \u7f3a\u5931 \u5e02\u573a\u4ef7\u503c\u6743\u91cd \u652f\u6301\u76ee\u6807/\u5e02\u573a\u53cc\u91cd\u6a21\u5f0f \u652f\u6301\u76ee\u6807/\u5e02\u573a\u53cc\u91cd\u6a21\u5f0f \u2705 \u826f\u597d \u4f30\u503c\u65e5\u6eda\u52a8\u4e0e\u53e3\u5f84\u4e00\u81f4\u6027 \uff1a - \u884c\u4e1a\u6700\u4f73\u5b9e\u8df5\u8981\u6c42\u4ee5\u201c\u4f30\u503c\u65e5\u524d\u6700\u65b0\u5df2\u62ab\u9732\u8d44\u4ea7\u8d1f\u503a\u8868\u201d\u8ba1\u7b97\u51c0\u503a\u52a1\uff1b\u672c\u9879\u76ee\u5df2\u6309\u4f30\u503c\u65e5\u6eda\u52a8\u53d6\u6570\uff0c\u5e76\u4e0e\u8425\u8fd0\u8d44\u672c\u57fa\u671f last_component_nwc \u5bf9\u9f50\uff08\u73b0\u91d1\u4e0d\u5165 NWC\uff09\uff0c\u51cf\u5c11 \u0394NWC \u53e3\u5f84\u8df3\u53d8\uff0c\u7b26\u5408 McKinsey \u53e3\u5f84\u3002 - \u7ecf\u8425\u57fa\u671f\u652f\u6301 LTM/Interim\uff08\u53ef\u9009\uff09\uff0c\u4ee5 YTD \u4e0e\u4e0a\u5e74\u5e74\u62a5\u62c6\u5206\u8ba1\u7b97 LTM \u6536\u5165\uff0c\u4fbf\u4e8e\u4e2d\u671f/\u5b63\u5ea6\u66f4\u65b0\u540e\u7684\u6eda\u52a8\u91cd\u8bc4\u3002 \u672f\u8bed\u89e3\u91ca \uff1a - \u7ecf\u8425\u79df\u8d41\u8d44\u672c\u5316 \uff1aOperating Lease Capitalization\uff0c\u6839\u636eIFRS 16\u51c6\u5219\u5c06\u7ecf\u8425\u79df\u8d41\u786e\u8ba4\u4e3a\u4f7f\u7528\u6743\u8d44\u4ea7\u548c\u79df\u8d41\u8d1f\u503a - \u4f18\u5148\u80a1 \uff1aPreferred Stock\uff0c\u5177\u6709\u4f18\u5148\u5206\u7ea2\u6743\u548c\u6e05\u7b97\u6743\u7684\u6df7\u5408\u8bc1\u5238\uff0c\u517c\u5177\u503a\u6743\u548c\u80a1\u6743\u7279\u5f81 - \u53ef\u8f6c\u6362\u503a\u5238 \uff1aConvertible Bond\uff0c\u53ef\u4ee5\u6309\u7ea6\u5b9a\u6761\u4ef6\u8f6c\u6362\u4e3a\u53d1\u884c\u516c\u53f8\u666e\u901a\u80a1\u7684\u503a\u52a1\u5de5\u5177 - IFRS 16 \uff1aInternational Financial Reporting Standard 16\uff0c\u56fd\u9645\u8d22\u52a1\u62a5\u544a\u51c6\u5219\u7b2c16\u53f7\uff0c\u5173\u4e8e\u79df\u8d41\u7684\u4f1a\u8ba1\u5904\u7406\u6807\u51c6","title":"3.1 \u8d44\u672c\u7ed3\u6784\u8ba1\u7b97\u5bf9\u6bd4"},{"location":"archived/dcf_industry_standards_comprehensive_analysis/#_9","text":"# wacc_calculator.py:243-259 \u8fc7\u4e8e\u7b80\u5316 debt_market_value = lt_borr + st_borr + bond_payable + non_cur_liab_due_1y \u884c\u4e1a\u6807\u51c6\u5e94\u8be5\u5305\u542b \uff1a # \u5b8c\u6574\u7684\u503a\u52a1\u4ef7\u503c\u8ba1\u7b97 debt_market_value = ( lt_borr + st_borr + bond_payable + non_cur_liab_due_1y + operating_lease_capitalized + # \u7ecf\u8425\u79df\u8d41\u8d44\u672c\u5316 preferred_stock + # \u4f18\u5148\u80a1 convertible_debt_portion # \u53ef\u8f6c\u6362\u503a\u5238\u503a\u52a1\u90e8\u5206 ) \u4e13\u4e1a\u5206\u6790 \uff1a \u5b8c\u6574\u7684\u503a\u52a1\u4ef7\u503c\u8ba1\u7b97\u5e94\u8be5\u5305\u62ec\u6240\u6709\u5177\u6709\u503a\u52a1\u6027\u8d28\u7684\u878d\u8d44\u5de5\u5177\u3002\u4f20\u7edf\u6709\u606f\u8d1f\u503a\u53ea\u662f\u503a\u52a1\u7684\u4e00\u90e8\u5206\uff0c\u6839\u636e\u73b0\u4ee3\u4f1a\u8ba1\u51c6\u5219\u548c\u91d1\u878d\u7406\u8bba\uff0c\u8fd8\u5e94\u8be5\u5305\u62ec\u7ecf\u8425\u79df\u8d41\u8d1f\u503a\u3001\u4f18\u5148\u80a1\u3001\u53ef\u8f6c\u6362\u503a\u5238\u7b49\u6df7\u5408\u878d\u8d44\u5de5\u5177\u7684\u503a\u52a1\u90e8\u5206\u3002\u8fd9\u6837\u624d\u80fd\u51c6\u786e\u53cd\u6620\u516c\u53f8\u7684\u771f\u5b9e\u8d44\u672c\u7ed3\u6784\u548c\u503a\u52a1\u6c34\u5e73\u3002","title":"\u5f53\u524d\u5b9e\u73b0\u95ee\u9898\uff1a"},{"location":"archived/dcf_industry_standards_comprehensive_analysis/#32","text":"\u7ef4\u5ea6 \u884c\u4e1a\u6807\u51c6 \u672c\u9879\u76ee \u5dee\u5f02\u5206\u6790 \u884c\u4e1a\u5dee\u5f02\u5316\u53c2\u6570 \u5b8c\u6574\u7684\u884c\u4e1a\u57fa\u51c6\u6570\u636e\u5e93 \u7f3a\u5931 \u274c \u91cd\u5927\u7f3a\u9677 Beta\u57fa\u51c6\u503c \u6309\u884c\u4e1a\u63d0\u4f9b\u6807\u51c6Beta \u4f7f\u7528\u56fa\u5b9a\u503c1.0 \u26a0\ufe0f \u4e0d\u591f\u7cbe\u786e \u9884\u6d4b\u671f\u8bbe\u5b9a \u6309\u884c\u4e1a\u7279\u6027\u8bbe\u5b9a \u9ed8\u8ba45\u5e74\uff1bUI 3\u201315\u5e74\uff0cAPI 1\u201320\u5e74 \u2705 \u6539\u5584 \u672f\u8bed\u89e3\u91ca \uff1a - Beta\u57fa\u51c6\u503c \uff1aBeta Benchmark\uff0c\u4e0d\u540c\u884c\u4e1a\u7684\u7cfb\u7edf\u6027\u98ce\u9669\u7cfb\u6570\uff0c\u53cd\u6620\u884c\u4e1a\u76f8\u5bf9\u4e8e\u5e02\u573a\u7684\u6ce2\u52a8\u6027 - \u9884\u6d4b\u671f \uff1aForecast Period\uff0c\u5bf9\u516c\u53f8\u672a\u6765\u8d22\u52a1\u8868\u73b0\u8fdb\u884c\u9884\u6d4b\u7684\u65f6\u95f4\u8de8\u5ea6\uff0c\u6839\u636e\u884c\u4e1a\u7279\u6027\u6709\u6240\u4e0d\u540c - \u9000\u51fa\u4e58\u6570 \uff1aExit Multiple\uff0c\u7ec8\u503c\u8ba1\u7b97\u4e2d\u4f7f\u7528\u7684\u4f30\u503c\u4e58\u6570\uff0c\u901a\u5e38\u4e3aEV/EBITDA\u6216P/E\u7b49\u6307\u6807 - \u6c38\u7eed\u589e\u957f\u7387 \uff1aPerpetual Growth Rate\uff0c\u516c\u53f8\u5728\u7ec8\u503c\u9636\u6bb5\u7684\u957f\u671f\u7a33\u5b9a\u589e\u957f\u7387\uff0c\u6839\u636e\u884c\u4e1a\u53d1\u5c55\u9636\u6bb5\u8bbe\u5b9a \u884c\u4e1a\u6807\u51c6\u57fa\u51c6\u6570\u636e\u793a\u4f8b \uff1a # \u5e94\u8be5\u5efa\u7acb\u7684\u884c\u4e1a\u57fa\u51c6 INDUSTRY_BENCHMARKS = { 'Technology': { 'beta': 1.2, # \u79d1\u6280\u884c\u4e1a\u6ce2\u52a8\u5927\uff0c\u98ce\u9669\u9ad8 'forecast_period': 10, # \u6280\u672f\u53d8\u5316\u5feb\uff0c\u9700\u8981\u957f\u671f\u9884\u6d4b 'perpetual_growth': 0.06, # \u6210\u957f\u7a7a\u95f4\u5927 'exit_multiple': 12.5 # \u4f30\u503c\u500d\u6570\u9ad8 }, 'Consumer_Staples': { 'beta': 0.8, # \u5fc5\u9700\u54c1\u9700\u6c42\u7a33\u5b9a\uff0c\u98ce\u9669\u4f4e 'forecast_period': 5, # \u4e1a\u52a1\u76f8\u5bf9\u7a33\u5b9a 'perpetual_growth': 0.03, # \u6210\u719f\u884c\u4e1a\u589e\u957f\u6162 'exit_multiple': 8.3 # \u4f30\u503c\u500d\u6570\u9002\u4e2d } } \u4e13\u4e1a\u5206\u6790 \uff1a \u4e0d\u540c\u884c\u4e1a\u5177\u6709\u663e\u8457\u4e0d\u540c\u7684\u98ce\u9669\u7279\u5f81\u548c\u6210\u957f\u6027\u7279\u5f81\uff1a - \u79d1\u6280\u884c\u4e1a \uff1a\u9ad8Beta\u503c(1.2-1.5)\uff0c\u9ad8\u6210\u957f\u6027\uff0c\u9700\u8981\u66f4\u957f\u9884\u6d4b\u671f(10\u5e74)\uff0c\u9ad8\u9000\u51fa\u4e58\u6570(12-15\u500d) - \u6d88\u8d39\u884c\u4e1a \uff1a\u4e2d\u7b49Beta\u503c(0.8-1.0)\uff0c\u7a33\u5b9a\u6210\u957f\uff0c\u4e2d\u7b49\u9884\u6d4b\u671f(5-7\u5e74)\uff0c\u4e2d\u7b49\u9000\u51fa\u4e58\u6570(8-10\u500d) - \u91d1\u878d\u884c\u4e1a \uff1a\u53d7\u76d1\u7ba1\u5f71\u54cd\u5927\uff0c\u7279\u6b8a\u4f1a\u8ba1\u5904\u7406\uff0c\u9002\u7528\u4e13\u95e8\u7684\u4f30\u503c\u65b9\u6cd5 \u5f53\u524d\u9879\u76ee\u7f3a\u4e4f\u884c\u4e1a\u5dee\u5f02\u5316\u5904\u7406\uff0c\u5bfc\u81f4\u4f30\u503c\u53c2\u6570\u8bbe\u7f6e\u4e0d\u591f\u7cbe\u786e\u3002","title":"3.2 \u884c\u4e1a\u57fa\u51c6\u6570\u636e\u5bf9\u6bd4"},{"location":"archived/dcf_industry_standards_comprehensive_analysis/#4","text":"","title":"4. \u79d1\u5b66\u6027\u4e0e\u4e25\u8c28\u6027\u7efc\u5408\u8bc4\u4ef7"},{"location":"archived/dcf_industry_standards_comprehensive_analysis/#41-b","text":"\u4f18\u52bf \uff1a - \u2705 \u7406\u8bba\u6846\u67b6\u5b8c\u6574\uff0c\u7b26\u5408DCF\u6838\u5fc3\u539f\u7406 - \u2705 \u6a21\u5757\u5316\u8bbe\u8ba1\u79d1\u5b66\uff0c\u4fbf\u4e8e\u9a8c\u8bc1\u548c\u7ef4\u62a4 - \u2705 \u8ba1\u7b97\u7cbe\u5ea6\u63a7\u5236\u826f\u597d\uff0c\u4f7f\u7528Decimal\u7c7b\u578b \u4e0d\u8db3 \uff1a - \u274c CAPM\u6a21\u578b\u7f3a\u4e4f\u56fd\u5bb6\u98ce\u9669\u8c03\u6574 - \u274c \u6c38\u7eed\u589e\u957f\u7387\u903b\u8f91\u8fdd\u80cc\u7ecf\u6d4e\u539f\u7406 - \u274c \u7f3a\u4e4f\u5b9e\u8bc1\u6570\u636e\u652f\u6301\u53c2\u6570\u8bbe\u5b9a","title":"4.1 \u79d1\u5b66\u6027\u8bc4\u4ef7 (B+)"},{"location":"archived/dcf_industry_standards_comprehensive_analysis/#42-b","text":"\u4f18\u52bf \uff1a - \u2705 \u4e1a\u52a1\u6d41\u7a0b\u8bbe\u8ba1\u5408\u7406\uff0c\u8986\u76d6\u5b8c\u6574\u4f30\u503c\u94fe - \u2705 \u98ce\u9669\u63a7\u5236\u673a\u5236\u5b8c\u5584\uff0c\u5305\u542b\u591a\u91cd\u9a8c\u8bc1 - \u2705 \u7528\u6237\u63a5\u53e3\u8bbe\u8ba1\u5408\u7406\uff0c\u652f\u6301\u591a\u79cd\u8f93\u5165\u65b9\u5f0f \u4e0d\u8db3 \uff1a - \u274c \u53c2\u6570\u8bbe\u7f6e\u8fc7\u4e8e\u4fdd\u5b88\uff0c\u53ef\u80fd\u4f4e\u4f30\u516c\u53f8\u4ef7\u503c - \u274c \u884c\u4e1a\u9002\u5e94\u6027\u4e0d\u8db3\uff0c\u7f3a\u4e4f\u5dee\u5f02\u5316\u5904\u7406 - \u274c \u9884\u6d4b\u903b\u8f91\u8fc7\u4e8e\u7b80\u5316\uff0c\u672a\u8003\u8651\u884c\u4e1a\u751f\u547d\u5468\u671f","title":"4.2 \u5408\u7406\u6027\u8bc4\u4ef7 (B)"},{"location":"archived/dcf_industry_standards_comprehensive_analysis/#43-a-","text":"\u4f18\u52bf \uff1a - \u2705 \u4ee3\u7801\u5b9e\u73b0\u4e25\u8c28\uff0c\u5f02\u5e38\u5904\u7406\u5b8c\u5584 - \u2705 \u8ba1\u7b97\u903b\u8f91\u7cbe\u786e\uff0c\u516c\u5f0f\u5b9e\u73b0\u51c6\u786e - \u2705 \u6570\u636e\u9a8c\u8bc1\u5b8c\u5907\uff0c\u5305\u542b\u5b8c\u6574\u6027\u68c0\u67e5 \u4e0d\u8db3 \uff1a - \u26a0\ufe0f \u67d0\u4e9b\u53c2\u6570\u9a8c\u8bc1\u8fc7\u4e8e\u4e25\u683c\uff08\u5982\u6c38\u7eed\u589e\u957f\u7387\uff09 - \u26a0\ufe0f \u7f3a\u4e4f\u5bf9\u6781\u7aef\u60c5\u51b5\u7684\u5904\u7406 - \u26a0\ufe0f \u6587\u6863\u548c\u6ce8\u91ca\u4e0d\u591f\u8be6\u7ec6","title":"4.3 \u4e25\u8c28\u6027\u8bc4\u4ef7 (A-)"},{"location":"archived/dcf_industry_standards_comprehensive_analysis/#44-b","text":"\u4f18\u52bf \uff1a - \u2705 \u7b26\u5408\u4e3b\u6d41DCF\u4f30\u503c\u7406\u8bba\u6846\u67b6 - \u2705 \u53c2\u8003\u4e86\u6743\u5a01\u673a\u6784\u7684\u6700\u4f73\u5b9e\u8df5 - \u2705 \u5b9e\u73b0\u4e86\u6807\u51c6\u7684\u4f30\u503c\u8ba1\u7b97\u6d41\u7a0b \u4e0d\u8db3 \uff1a - \u274c \u7f3a\u4e4f\u6743\u5a01\u673a\u6784\u7684\u76f4\u63a5\u8ba4\u8bc1 - \u274c \u67d0\u4e9b\u5173\u952e\u5047\u8bbe\u4e0e\u6743\u5a01\u6807\u51c6\u5b58\u5728\u504f\u5dee - \u274c \u672a\u5f15\u7528\u6743\u5a01\u6570\u636e\u6e90\u652f\u6301\u53c2\u6570\u8bbe\u5b9a","title":"4.4 \u6743\u5a01\u6027\u8bc4\u4ef7 (B)"},{"location":"archived/dcf_industry_standards_comprehensive_analysis/#5","text":"","title":"5. \u6838\u5fc3\u95ee\u9898\u603b\u7ed3\u4e0e\u6539\u8fdb\u5efa\u8bae"},{"location":"archived/dcf_industry_standards_comprehensive_analysis/#51","text":"","title":"5.1 \u9ad8\u4f18\u5148\u7ea7\u95ee\u9898\uff08\u5fc5\u987b\u4fee\u590d\uff09"},{"location":"archived/dcf_industry_standards_comprehensive_analysis/#1-capm","text":"def enhanced_capm_calculation(self, beta, market_risk_premium, country_risk_premium, industry_risk_premium): \"\"\" \u589e\u5f3a\u578bCAPM\u8ba1\u7b97\uff0c\u7b26\u5408CFA Institute\u6807\u51c6 \"\"\" # \u57fa\u7840CAPM cost_of_equity = self.risk_free_rate + beta * market_risk_premium # \u56fd\u5bb6\u98ce\u9669\u8c03\u6574\uff08\u5bf9\u65b0\u5174\u5e02\u573a\u5173\u952e\uff09 if self.is_emerging_market: cost_of_equity += beta * country_risk_premium # \u884c\u4e1a\u98ce\u9669\u8c03\u6574 cost_of_equity += industry_risk_premium return cost_of_equity","title":"1. CAPM\u6a21\u578b\u589e\u5f3a"},{"location":"archived/dcf_industry_standards_comprehensive_analysis/#2_1","text":"def validate_perpetual_growth_rate(self, pg_rate, country_gdp_growth, inflation_rate): \"\"\" \u57fa\u4e8e\u7ecf\u6d4e\u57fa\u672c\u9762\u7684\u6c38\u7eed\u589e\u957f\u7387\u9a8c\u8bc1 \u7b26\u5408Damodaran\u548cMcKinsey\u6807\u51c6 \"\"\" # \u957f\u671f\u540d\u4e49GDP\u589e\u957f\u7387 nominal_gdp_growth = country_gdp_growth + inflation_rate # \u5408\u7406\u8303\u56f4\uff1aGDP\u589e\u957f\u7387\u81f3GDP+2% reasonable_max = nominal_gdp_growth + 0.02 reasonable_min = nominal_gdp_growth - 0.01 # \u9a8c\u8bc1\u8303\u56f4 if pg_rate > reasonable_max: return reasonable_max elif pg_rate < reasonable_min: return reasonable_min return pg_rate","title":"2. \u6c38\u7eed\u589e\u957f\u7387\u903b\u8f91\u91cd\u6784"},{"location":"archived/dcf_industry_standards_comprehensive_analysis/#3_1","text":"class IndustryBenchmarks: \"\"\"\u6743\u5a01\u884c\u4e1a\u4f30\u503c\u57fa\u51c6\u6570\u636e\u5e93\"\"\" DATA = { 'Technology': { 'beta': 1.2, 'forecast_period': 10, 'perpetual_growth': 0.06, 'exit_multiple': 12.5, 'revenue_growth': 0.15, 'operating_margin': 0.25 }, 'Consumer': { 'beta': 0.9, 'forecast_period': 7, 'perpetual_growth': 0.04, 'exit_multiple': 9.8, 'revenue_growth': 0.08, 'operating_margin': 0.18 }, # \u66f4\u591a\u884c\u4e1a\u6570\u636e... }","title":"3. \u884c\u4e1a\u57fa\u51c6\u6570\u636e\u5e93\u5efa\u8bbe"},{"location":"archived/dcf_industry_standards_comprehensive_analysis/#52","text":"","title":"5.2 \u4e2d\u4f18\u5148\u7ea7\u6539\u8fdb"},{"location":"archived/dcf_industry_standards_comprehensive_analysis/#1_1","text":"def calculate_comprehensive_debt_value(self): \"\"\" \u5b8c\u6574\u7684\u503a\u52a1\u4ef7\u503c\u8ba1\u7b97\uff0c\u7b26\u5408IFRS 16\u6807\u51c6 \"\"\" # \u4f20\u7edf\u6709\u606f\u8d1f\u503a traditional_debt = ( self.lt_borr + self.st_borr + self.bond_payable + self.non_cur_liab_due_1y ) # \u7ecf\u8425\u79df\u8d41\u8d44\u672c\u5316\uff08IFRS 16\u8981\u6c42\uff09 operating_lease_value = self.capitalize_operating_leases() # \u5176\u4ed6\u503a\u52a1\u5de5\u5177 preferred_stock = self.get_preferred_stock_value() convertible_debt = self.get_convertible_debt_value() return traditional_debt + operating_lease_value + preferred_stock + convertible_debt","title":"1. \u8d44\u672c\u7ed3\u6784\u8ba1\u7b97\u5b8c\u5584"},{"location":"archived/dcf_industry_standards_comprehensive_analysis/#2_2","text":"def get_industry_forecast_period(self, industry_type): \"\"\" \u6309\u884c\u4e1a\u7279\u6027\u8bbe\u5b9a\u9884\u6d4b\u671f \"\"\" forecast_periods = { 'Technology': 10, # \u6280\u672f\u53d8\u5316\u5feb\uff0c\u9700\u8981\u957f\u671f\u9884\u6d4b 'Consumer': 7, # \u6d88\u8d39\u884c\u4e1a\u76f8\u5bf9\u7a33\u5b9a 'Financial': 5, # \u53d7\u76d1\u7ba1\u5f71\u54cd\u5927 'Industrial': 8, # \u5468\u671f\u6027\u5f3a\uff0c\u9700\u8981\u8986\u76d6\u5468\u671f 'Healthcare': 10 # \u7814\u53d1\u5468\u671f\u957f } return forecast_periods.get(industry_type, 5)","title":"2. \u9884\u6d4b\u671f\u7075\u6d3b\u914d\u7f6e"},{"location":"archived/dcf_industry_standards_comprehensive_analysis/#53","text":"\u589e\u52a0\u654f\u611f\u6027\u5206\u6790\u7ef4\u5ea6 \u5b8c\u5584\u73b0\u91d1\u6d41\u8d28\u91cf\u8bc4\u4f30 \u589e\u52a0\u76f8\u5bf9\u4f30\u503c\u5bf9\u6bd4\u529f\u80fd \u4f18\u5316\u7528\u6237\u754c\u9762\u548c\u62a5\u544a\u751f\u6210","title":"5.3 \u4f4e\u4f18\u5148\u7ea7\u4f18\u5316"},{"location":"archived/dcf_industry_standards_comprehensive_analysis/#6","text":"","title":"6. \u603b\u4f53\u8bc4\u4ef7\u4e0e\u5efa\u8bae"},{"location":"archived/dcf_industry_standards_comprehensive_analysis/#61","text":"\u8bc4\u4ef7\u7ef4\u5ea6 \u5f97\u5206 \u7b49\u7ea7 \u8bf4\u660e \u79d1\u5b66\u6027 78/100 B+ \u7406\u8bba\u6846\u67b6\u5b8c\u6574\uff0c\u4f46\u5173\u952e\u53c2\u6570\u8bbe\u7f6e\u5b58\u5728\u95ee\u9898 \u5408\u7406\u6027 75/100 B \u4e1a\u52a1\u6d41\u7a0b\u5408\u7406\uff0c\u4f46\u884c\u4e1a\u9002\u5e94\u6027\u4e0d\u8db3 \u4e25\u8c28\u6027 85/100 A- \u4ee3\u7801\u5b9e\u73b0\u4e25\u8c28\uff0c\u4f46\u67d0\u4e9b\u9a8c\u8bc1\u903b\u8f91\u8fc7\u4e8e\u4fdd\u5b88 \u6743\u5a01\u6027 72/100 B- \u7b26\u5408\u4e3b\u6d41\u6807\u51c6\uff0c\u4f46\u7f3a\u4e4f\u6743\u5a01\u8ba4\u8bc1\u548c\u57fa\u51c6\u6570\u636e \u7efc\u5408\u8bc4\u5206 77.5/100 B+ \u5177\u5907\u4e13\u4e1a\u6c34\u51c6\uff0c\u4f46\u9700\u8981\u5173\u952e\u6539\u8fdb \u8bc4\u5206\u6807\u51c6\u8bf4\u660e \uff1a - B+ (77.5\u5206) \uff1a\u5177\u5907\u4e13\u4e1a\u6c34\u51c6\uff0c\u4f46\u5728\u5173\u952e\u6280\u672f\u7ec6\u8282\u4e0a\u5b58\u5728\u6539\u8fdb\u7a7a\u95f4 - A\u7ea7\u4e13\u4e1a\u6c34\u51c6 \uff1a85\u5206\u4ee5\u4e0a\uff0c\u8fbe\u5230\u884c\u4e1a\u9886\u5148\u6c34\u5e73\uff0c\u7b26\u5408\u4e3b\u6d41\u91d1\u878d\u673a\u6784\u6807\u51c6 - \u5f53\u524d\u6c34\u5e73 \uff1a\u57fa\u7840\u67b6\u6784\u624e\u5b9e\uff0c\u6838\u5fc3\u903b\u8f91\u6b63\u786e\uff0c\u9700\u8981\u4f18\u5316\u5173\u952e\u53c2\u6570\u8bbe\u7f6e","title":"6.1 \u9879\u76ee\u8bc4\u5206"},{"location":"archived/dcf_industry_standards_comprehensive_analysis/#62","text":"\u6280\u672f\u67b6\u6784\u5353\u8d8a \uff1a\u6a21\u5757\u5316\u8bbe\u8ba1\u8d85\u8d8a\u5927\u591a\u6570\u5f00\u6e90\u9879\u76ee \u7406\u8bba\u57fa\u7840\u624e\u5b9e \uff1aDCF\u6838\u5fc3\u903b\u8f91\u7b26\u5408\u4e3b\u6d41\u6807\u51c6 \u4ee3\u7801\u8d28\u91cf\u9ad8 \uff1a\u5b9e\u73b0\u4e25\u8c28\uff0c\u5f02\u5e38\u5904\u7406\u5b8c\u5584 \u6269\u5c55\u6027\u597d \uff1a\u63d2\u4ef6\u5f0f\u67b6\u6784\u4fbf\u4e8e\u529f\u80fd\u6269\u5c55","title":"6.2 \u6838\u5fc3\u4f18\u52bf"},{"location":"archived/dcf_industry_standards_comprehensive_analysis/#63","text":"CAPM\u6a21\u578b\u7f3a\u9677 \uff1a\u56fd\u5bb6\u98ce\u9669\u6ea2\u4ef7\u7f3a\u5931\uff0c\u5f71\u54cd\u65b0\u5174\u5e02\u573a\u4f30\u503c \u6c38\u7eed\u589e\u957f\u7387\u95ee\u9898 \uff1a\u903b\u8f91\u8bbe\u7f6e\u8fc7\u4e8e\u4fdd\u5b88\uff0c\u53ef\u80fd\u4f4e\u4f30\u516c\u53f8\u4ef7\u503c \u884c\u4e1a\u9002\u5e94\u6027\u4e0d\u8db3 \uff1a\u7f3a\u4e4f\u884c\u4e1a\u5dee\u5f02\u5316\u53c2\u6570\u548c\u57fa\u51c6\u6570\u636e \u6743\u5a01\u6027\u6b20\u7f3a \uff1a\u7f3a\u4e4f\u6743\u5a01\u673a\u6784\u8ba4\u8bc1\u548c\u57fa\u51c6\u6570\u636e\u652f\u6301","title":"6.3 \u5173\u952e\u4e0d\u8db3"},{"location":"archived/dcf_industry_standards_comprehensive_analysis/#64","text":"","title":"6.4 \u6539\u8fdb\u8def\u7ebf\u56fe"},{"location":"archived/dcf_industry_standards_comprehensive_analysis/#1-2","text":"[ ] \u5b9e\u73b0\u589e\u5f3a\u578bCAPM\u6a21\u578b\uff0c\u5305\u542b\u56fd\u5bb6\u98ce\u9669\u6ea2\u4ef7 [ ] \u91cd\u6784\u6c38\u7eed\u589e\u957f\u7387\u9a8c\u8bc1\u903b\u8f91 [ ] \u5efa\u7acb\u57fa\u7840\u884c\u4e1a\u57fa\u51c6\u6570\u636e\u5e93","title":"\u7b2c\u4e00\u9636\u6bb5\uff081-2\u4e2a\u6708\uff09\uff1a\u5173\u952e\u95ee\u9898\u4fee\u590d"},{"location":"archived/dcf_industry_standards_comprehensive_analysis/#2-3","text":"[ ] \u5b8c\u5584\u8d44\u672c\u7ed3\u6784\u8ba1\u7b97\uff0c\u7b26\u5408IFRS 16\u6807\u51c6 [ ] \u5b9e\u73b0\u9884\u6d4b\u671f\u884c\u4e1a\u5dee\u5f02\u5316\u914d\u7f6e [ ] \u589e\u52a0\u884c\u4e1a\u751f\u547d\u5468\u671f\u8003\u91cf","title":"\u7b2c\u4e8c\u9636\u6bb5\uff082-3\u4e2a\u6708\uff09\uff1a\u884c\u4e1a\u9002\u5e94\u6027\u589e\u5f3a"},{"location":"archived/dcf_industry_standards_comprehensive_analysis/#3-4","text":"[ ] \u6574\u5408\u6743\u5a01\u6570\u636e\u6e90\u548c\u57fa\u51c6\u6570\u636e [ ] \u589e\u52a0\u76f8\u5bf9\u4f30\u503c\u548c\u654f\u611f\u6027\u5206\u6790 [ ] \u5b8c\u5584\u6587\u6863\u548c\u8ba4\u8bc1\u6750\u6599","title":"\u7b2c\u4e09\u9636\u6bb5\uff083-4\u4e2a\u6708\uff09\uff1a\u6743\u5a01\u6027\u63d0\u5347"},{"location":"archived/dcf_industry_standards_comprehensive_analysis/#7","text":"stock_vale_valuation_3.0\u9879\u76ee\u5728DCF\u4f30\u503c\u5b9e\u73b0\u4e0a\u5c55\u73b0\u4e86 \u8f83\u9ad8\u7684\u4e13\u4e1a\u6c34\u51c6 \uff0c\u6280\u672f\u67b6\u6784\u548c\u6838\u5fc3\u8ba1\u7b97\u903b\u8f91\u90fd\u8fbe\u5230\u4e86\u884c\u4e1a\u6807\u51c6\u3002\u9879\u76ee\u5177\u5907\u6210\u4e3a \u4f01\u4e1a\u7ea7\u4f30\u503c\u5e73\u53f0 \u7684\u6f5c\u529b\uff0c\u4f46\u9700\u8981\u5728\u4ee5\u4e0b\u5173\u952e\u65b9\u9762\u8fdb\u884c\u6539\u8fdb\uff1a \u79d1\u5b66\u6027\u63d0\u5347 \uff1a\u4fee\u590dCAPM\u548c\u6c38\u7eed\u589e\u957f\u7387\u7684\u5173\u952e\u7f3a\u9677 \u884c\u4e1a\u9002\u5e94\u6027 \uff1a\u589e\u52a0\u884c\u4e1a\u5dee\u5f02\u5316\u5904\u7406\u548c\u57fa\u51c6\u6570\u636e \u6743\u5a01\u6027\u5efa\u8bbe \uff1a\u6574\u5408\u6743\u5a01\u6570\u636e\u6e90\u548c\u6700\u4f73\u5b9e\u8df5 \u901a\u8fc7\u5b9e\u65bd\u4e0a\u8ff0\u6539\u8fdb\u5efa\u8bae\uff0c\u9879\u76ee\u53ef\u4ee5\u8fbe\u5230 A\u7ea7\u4e13\u4e1a\u6c34\u51c6 \uff0885\u5206\u4ee5\u4e0a\uff09\uff0c\u6210\u4e3a\u771f\u6b63\u610f\u4e49\u4e0a\u7684\u4f01\u4e1a\u7ea7\u4f30\u503c\u5e73\u53f0\u3002\u9879\u76ee\u5df2\u7ecf\u5177\u5907\u4e86\u624e\u5b9e\u7684\u57fa\u7840\uff0c\u5f00\u53d1\u56e2\u961f\u5c55\u73b0\u4e86\u5728\u91d1\u878d\u5de5\u7a0b\u548c\u8f6f\u4ef6\u67b6\u6784\u65b9\u9762\u7684\u6df1\u539a\u529f\u5e95\uff0c\u662f\u4e00\u4e2a\u5177\u6709\u5f88\u9ad8\u4ef7\u503c\u7684\u91d1\u878d\u79d1\u6280\u57fa\u7840\u6846\u67b6\u3002 \u6700\u7ec8\u8bc4\u4ef7 \uff1a\u8fd9\u662f\u4e00\u4e2a \u4f18\u79c0\u7684\u91d1\u878d\u79d1\u6280\u57fa\u7840\u6846\u67b6 \uff0c\u5728\u5173\u952e\u7ec6\u8282\u4e0a\u8fdb\u884c\u4f18\u5316\u540e\uff0c\u5b8c\u5168\u53ef\u4ee5\u8fbe\u5230\u56fd\u9645\u9876\u5c16\u6c34\u5e73\u3002","title":"7. \u7ed3\u8bba"},{"location":"archived/dcf_industry_standards_comprehensive_analysis/#_10","text":"","title":"\ud83d\udccb \u4e13\u4e1a\u603b\u7ed3"},{"location":"archived/dcf_industry_standards_comprehensive_analysis/#_11","text":"stock_vale_valuation_3.0\u662f\u4e00\u4e2a\u57fa\u4e8eDCF\u4f30\u503c\u7406\u8bba\u7684\u4e13\u4e1a\u7ea7\u516c\u53f8\u4f30\u503c\u7cfb\u7edf\uff0c\u91c7\u7528\u6a21\u5757\u5316\u67b6\u6784\u8bbe\u8ba1\uff0c\u96c6\u6210\u4e86\u5b8c\u6574\u7684\u8d22\u52a1\u9884\u6d4b\u548c\u73b0\u91d1\u6d41\u8ba1\u7b97\u529f\u80fd\u3002","title":"\u9879\u76ee\u5b9a\u4f4d"},{"location":"archived/dcf_industry_standards_comprehensive_analysis/#_12","text":"\u67b6\u6784\u8bbe\u8ba1 \uff1a\u91c7\u75286\u4e2a\u4e13\u4e1a\u5316\u8ba1\u7b97\u5668\u6a21\u5757\uff0c\u5b9e\u73b0\u4e86\u9ad8\u5185\u805a\u4f4e\u8026\u5408\u7684\u7cfb\u7edf\u67b6\u6784 \u8ba1\u7b97\u7cbe\u5ea6 \uff1a\u4f7f\u7528Decimal\u7c7b\u578b\u786e\u4fdd\u91d1\u878d\u8ba1\u7b97\u7cbe\u5ea6\uff0c\u907f\u514d\u6d6e\u70b9\u6570\u8bef\u5dee \u4ee3\u7801\u8d28\u91cf \uff1a\u5f02\u5e38\u5904\u7406\u5b8c\u5584\uff0c\u5305\u542b\u5b8c\u6574\u7684\u8f93\u5165\u9a8c\u8bc1\u548c\u8fb9\u754c\u6761\u4ef6\u68c0\u67e5","title":"\u6280\u672f\u4f18\u52bf"},{"location":"archived/dcf_industry_standards_comprehensive_analysis/#_13","text":"CAPM\u6a21\u578b \uff1a\u7f3a\u5c11\u56fd\u5bb6\u98ce\u9669\u6ea2\u4ef7\u8c03\u6574\uff0c\u5bf9\u65b0\u5174\u5e02\u573a\u4f30\u503c\u4e0d\u591f\u51c6\u786e \u6c38\u7eed\u589e\u957f\u7387 \uff1a\u9650\u5236\u903b\u8f91\u8fc7\u4e8e\u4fdd\u5b88\uff0c\u53ef\u80fd\u7cfb\u7edf\u6027\u4f4e\u4f30\u516c\u53f8\u7ec8\u503c \u884c\u4e1a\u9002\u5e94\u6027 \uff1a\u7f3a\u4e4f\u884c\u4e1a\u5dee\u5f02\u5316\u53c2\u6570\u8bbe\u7f6e\uff0c\u5f71\u54cd\u4f30\u503c\u7cbe\u5ea6","title":"\u4e3b\u8981\u4e0d\u8db3"},{"location":"archived/dcf_industry_standards_comprehensive_analysis/#_14","text":"\u6a21\u578b\u5b8c\u5584 \uff1a\u589e\u5f3aCAPM\u6a21\u578b\uff0c\u5b8c\u5584\u6c38\u7eed\u589e\u957f\u7387\u903b\u8f91 \u6570\u636e\u5efa\u8bbe \uff1a\u5efa\u7acb\u884c\u4e1a\u57fa\u51c6\u6570\u636e\u5e93\uff0c\u63d0\u4f9b\u5dee\u5f02\u5316\u53c2\u6570 \u6743\u5a01\u6027\u63d0\u5347 \uff1a\u6574\u5408\u6743\u5a01\u6570\u636e\u6e90\uff0c\u7b26\u5408\u56fd\u9645\u4f30\u503c\u6807\u51c6","title":"\u6539\u8fdb\u65b9\u5411"},{"location":"archived/dcf_industry_standards_comprehensive_analysis/#_15","text":"\u8be5\u9879\u76ee\u5177\u5907\u6210\u4e3a\u4f01\u4e1a\u7ea7\u4f30\u503c\u5e73\u53f0\u7684\u6280\u672f\u57fa\u7840\uff0c\u901a\u8fc7\u5173\u952e\u6539\u8fdb\u53ef\u8fbe\u5230\u884c\u4e1a\u9886\u5148\u6c34\u5e73\u3002","title":"\u7ed3\u8bba"},{"location":"archived/dcf_optimization_plan/","text":"DCF \u6838\u5fc3\u4e1a\u52a1\u903b\u8f91\u4f18\u5316\u65b9\u6848\uff08v1\uff09 \u76ee\u6807\u4e0e\u8303\u56f4 \u76ee\u6807\uff1a\u5c06\u6a21\u578b\u4ece\u201c\u53c2\u6570\u53ef\u8c03\u7684\u6807\u51c6 DCF\u201d\u5347\u7ea7\u4e3a\u201c\u5e26\u884c\u4e1a\u6821\u51c6\u3001\u5b8f\u89c2\u7ea6\u675f\u3001\u53e3\u5f84\u7edf\u4e00\u3001\u53ef\u5ba1\u8ba1\u201d\u7684\u4f01\u4e1a\u7ea7 DCF\u3002 \u8303\u56f4\uff1a\u6298\u73b0\u65f6\u70b9\u3001WACC \u7ed3\u6784\u3001\u7ec8\u503c\u6cbb\u7406\u3001\u5229\u6da6\u4e0e\u6210\u672c\u8def\u5f84\u3001\u8425\u8fd0\u8d44\u672c\u53e3\u5f84\u3001\u900f\u660e\u5ea6\u4e0e\u5ba1\u8ba1\u3001\u654f\u611f\u6027\u4e0e\u60c5\u666f\u3001\u6570\u636e\u8d28\u91cf\u3001\u6d4b\u8bd5\u4e0e UX\u3002 \u6838\u5fc3\u4f18\u5316\uff08\u9ad8\u4f18\u5148\u7ea7\uff09 \u6298\u73b0\u65f6\u70b9\uff08Mid-Year Convention\uff09 \u9ed8\u8ba4\u652f\u6301\u5e74\u4e2d\u6298\u73b0\uff0c\u7ed3\u679c\u9875\u6807\u6ce8\u6298\u73b0\u60ef\u4f8b\u3002 \u5df2\u843d\u5730\uff1a PresentValueCalculator(mid_year_convention) \uff1bStreamlit \u590d\u9009\u9879\uff1a mid_year_convention \u3002 WACC/Ke \u7ed3\u6784\uff08CRP / IRP\uff09 Ke = Rf + \u03b2\u00d7(MRP + CRP) + Size + IRP\uff1bRf/\u03b2/MRP \u652f\u6301 UI \u8986\u76d6\u4e0e ENV\u3002 \u5df2\u843d\u5730\uff1a COUNTRY_RISK_PREMIUM \u3001 INDUSTRY_RISK_PREMIUM \uff08ENV+API+UI\uff09\u3002 \u7ec8\u503c\u6cbb\u7406\uff08TV\uff09 \u6c38\u7eed\u589e\u957f\u6cd5\uff1a\u4ee5\u201c\u540d\u4e49 GDP\uff08\u901a\u80c0+\u5b9e\u9645\uff09\u201d\u4e3a\u4e0a\u9650\u6821\u9a8c\uff08min(PGR, GDP_cap)\uff09\uff0c\u8d85\u9650\u7ed9\u51fa\u6765\u6e90\u4e0e\u88ab\u66f4\u6b63\u503c\uff08\u5df2\u843d\u5730\uff1aENV/\u8bf7\u6c42\u63a7\u5236\uff09\u3002 \u9000\u51fa\u4e58\u6570\u6cd5\uff1a\u63d0\u4f9b\u884c\u4e1a\u533a\u95f4\u53c2\u8003\u4e0e\u504f\u79bb\u8b66\u793a\uff1b\u540c\u6b65\u5c55\u793a\u9690\u542b PGR \u4e0e EV/EBITDA\uff08\u5df2\u843d\u5730\uff1a\u9690\u542b PGR \u8ba1\u7b97\u4e0e\u63d0\u793a\uff09\u3002 \u5229\u6da6\u7387\u4e0e COGS \u53cc\u6a21\u5f0f \u53cd\u63a8\u6cd5\uff08\u9ed8\u8ba4\uff09\uff1aRevenue \u2212 EBIT \u2212 SGA \u2212 RD\uff0c\u4fdd\u6301\u635f\u76ca\u6052\u7b49\u5f0f\uff0c\u5339\u914d\u76ee\u6807\u5229\u6da6\u7387/\u8d39\u7528\u7387\u3002 \u76f4\u63a5\u6bd4\u7387\u6cd5\uff08\u53ef\u9009\uff09\uff1aCOGS = Revenue \u00d7 \u5386\u53f2 COGS/Revenue \u4e2d\u4f4d\u6570\uff0c\u9002\u7528\u4e8e\u8ddf\u8e2a\u6bdb\u5229\u8d8b\u52bf\u3002 \u5df2\u843d\u5730\uff1a cogs_forecast_mode = residual|direct_ratio \uff08API+UI\uff09\u3002 \u8425\u8fd0\u8d44\u672c\uff08NWC\uff09\u4e0e \u0394NWC \u57fa\u671f \u201c\u7eaf\u5386\u53f2\u4e2d\u4f4d\u6570\u201d\u573a\u666f\uff1aDIO/DPO \u7528\u635f\u76ca\u53e3\u5f84\u7684 COGS\uff1b\u201c\u76ee\u6807/\u8fc7\u6e21\u201d\u573a\u666f\u7528\u5386\u53f2 COGS \u6bd4\u7387\uff0c\u964d\u4f4e\u626d\u66f2\u3002 \u7edf\u4e00\u5e76\u517c\u5bb9 \u0394NWC \u57fa\u671f\u952e\u540d\uff1a last_historical_nwc/last_actual_nwc \u3002 \u7ed3\u679c\u9875\u56fa\u5b9a\u5c55\u793a\u9996\u5e74 \u0394NWC \u6784\u6210\uff08AR/Inv/AP/OCA/OCL\uff09\u53ca\u57fa\u671f\u3002 LTM/Interim \u57fa\u671f\uff08\u65b0\u589e\uff09\uff1a\u652f\u6301 ltm_baseline_enabled \uff08\u9ed8\u8ba4\u5173\u95ed\uff09\u4ee5 LTM \u53e3\u5f84\u786e\u5b9a last_actual_revenue \uff1b\u4f30\u503c\u65e5\u6eda\u52a8\u6700\u65b0\u8d44\u4ea7\u8d1f\u503a\u8868\u5e76\u91cd\u7b97 last_component_nwc \uff08\u5df2\u843d\u5730\uff09\u3002 \u7a0e\u7387\u4e0e NOPAT \u6709\u6548\u7a0e\u7387\u4ece\u5386\u53f2\u4e2d\u4f4d\u6570\u8fc7\u6e21\u5230\u76ee\u6807\uff0c\u8bbe\u5408\u7406\u4e0a\u4e0b\u9650\uff08\u5982 5%\u201335%\uff09\uff0c\u8d8a\u754c\u544a\u8b66\u3002 Capex \u4e0e D&A \u8054\u52a8 \u7ef4\u6301\u6027\u6295\u8d44\u7ea6\u675f\uff08Capex \u2265 D&A\uff09+ \u6536\u5165\u9a71\u52a8\u7684\u6269\u5f20\u9879\uff0c\u957f\u671f\u8d8b\u4e8e\u7a33\u6001\uff08\u540e\u7eed\u843d\u5730\uff09\u3002 \u80a1\u6743\u6865\u53e3\u5f84 Net Debt = \u6709\u606f\u8d1f\u503a \u2212 \u73b0\u91d1\u7b49\u4ef7\u7269\uff1b\u5728\u6865\u63a5\u4e2d\u6263\u9664\u5c11\u6570\u80a1\u4e1c\u6743\u76ca\u4e0e\u4f18\u5148\u80a1\uff1bUI \u6807\u6ce8\u53e3\u5f84\u3002 \u9884\u6d4b\u589e\u5f3a\uff08\u4e2d\u4f18\u5148\u7ea7\uff09 \u6536\u5165\u8def\u5f84\uff1a\u5386\u53f2 CAGR \u00d7\uff08\u540d\u4e49 GDP/\u884c\u4e1a\u57fa\u51c6\uff09\u00d7\uff08\u4efd\u989d\u56e0\u5b50\uff09\uff0c\u5e76\u63d0\u4f9b\u201c\u884c\u4e1a\u9884\u8bbe\u201d\u5feb\u6377\u9879\u3002 \u5229\u6da6\u7387\u8def\u5f84\uff1a\u7ebf\u6027\u2192\u903b\u8f91/\u6307\u6570\u5e73\u6ed1\u53ef\u9009\uff1b\u81ea\u52a8\u5939\u6301\u5728\u5386\u53f2/\u884c\u4e1a\u4e0a\u4e0b\u9650\u3002 \u884c\u4e1a\u6807\u5c3a\u5e93\uff1a\u03b2\u3001\u9884\u6d4b\u671f\u3001PGR \u4e0a\u9650\u3001EV/EBITDA \u53c2\u8003\u3001DSO/DIO/DPO \u5178\u578b\u503c\u3002 \u900f\u660e\u5ea6\u4e0e\u53ef\u5ba1\u8ba1 \u5173\u952e\u5047\u8bbe\u6458\u8981\u5361\u7247\uff08\u5e38\u9a7b\uff09\uff1a WACC \u6784\u6210\uff08Rf/\u03b2/MRP/CRP/IRP/\u6743\u91cd/Ke/Kd(AT)\uff09 TV \u65b9\u6cd5\u4e0e\u53c2\u6570\u3001\u9690\u542b PGR \u4e0e EV/EBITDA \u6536\u5165/\u5229\u6da6\u7387/COGS \u6a21\u5f0f\u4e0e\u8def\u5f84\u3001\u9996\u5e74 \u0394NWC \u6784\u6210\u3001\u51c0\u503a\u52a1\u53e3\u5f84 \u5ba1\u8ba1\u5bfc\u51fa\uff1a\u8bf7\u6c42\u8f7d\u8377\u3001\u6620\u5c04\u540e\u5047\u8bbe\u3001\u5386\u53f2\u4e2d\u4f4d\u6570\u3001\u9010\u5e74\u9884\u6d4b\u8868\u3001DCF \u5206\u89e3\uff08JSON/CSV\uff09\u3002 \u57fa\u671f\u8c03\u8bd5\uff1a\u5728 debug_request_slice \u4e2d\u6ce8\u5165 baseline_debug \uff08Annual/LTM \u6a21\u5f0f\u3001YTD/LTM \u6784\u6210\uff09\uff0c\u4f7f\u6eda\u52a8\u91cd\u8bc4\u53ef\u8ffd\u6eaf\u3002 \u654f\u611f\u6027\u4e0e\u60c5\u666f \u4e8c\u7ef4\u654f\u611f\u6027\u4fdd\u6301\uff1b\u65b0\u589e\u8f7b\u91cf\u8499\u7279\u5361\u6d1b\uff081000 \u6b21\uff09\uff1a\u8f93\u51fa\u4f30\u503c\u5206\u5e03\u3001\u7f6e\u4fe1\u533a\u95f4\u3001\u5173\u952e\u9a71\u52a8\u6392\u5e8f\u3002 \u4e09\u60c5\u666f\uff08\u60b2\u89c2/\u57fa\u51c6/\u4e50\u89c2\uff09\u8054\u52a8\u8c03\u6574\u589e\u957f/\u5229\u6da6\u7387/WACC/PGR\uff0c\u5e76\u5408\u5e76\u5c55\u793a\u533a\u95f4\u4e0e\u9a71\u52a8\u3002 \u6570\u636e\u8d28\u91cf\u6cbb\u7406 \u6307\u6807\u8986\u76d6\u7387\u3001\u5f02\u5e38\u503c\u8ba1\u6570\u3001\u65f6\u6548\u6027\u6807\u8bc6\uff08\u53ef\u89c6\u5316\u8bc4\u5206\uff09\uff1b\u8de8\u6e90\u4e00\u81f4\u6027\u4e0e\u57fa\u51c6\u6821\u9a8c\u3002 \u53e3\u5f84\u4e00\u81f4\u6027\u68c0\u67e5\uff1a\u635f\u76ca\u6052\u7b49\u5f0f\u3001\u5468\u8f6c\u57fa\u5e95\u4e00\u81f4\u6027\u3001\u0394NWC \u57fa\u671f\u6709\u6548\u6027\u2014\u89e6\u53d1\u63d0\u793a\u4e0e\u4fee\u6b63\u5efa\u8bae\u3002 \u6d4b\u8bd5\u4e0e\u57fa\u51c6 \u5355\u5143\u6d4b\u8bd5\uff1a mid_year_convention\u3001CRP/IRP \u5bf9 Ke/WACC \u5f71\u54cd cogs_forecast_mode \u4e24\u6a21\u5f0f\u8fb9\u754c\u4e0e\u4e00\u81f4\u6027 \u0394NWC \u57fa\u671f\u952e\u540d\u4e0e\u9996\u5e74 \u0394NWC \u5408\u7406\u6027 TV \u4e0a\u9650\u6821\u9a8c\uff08\u540d\u4e49 GDP\uff09\u4e0e\u9690\u542b\u6307\u6807 \u56de\u5f52\u6837\u4f8b\uff1a\u5efa\u7acb\u951a\u5b9a\u80a1\u7968\uff08\u4e0d\u540c\u884c\u4e1a\uff09\u76ee\u6807\u533a\u95f4\uff0c\u9632\u6b62\u6a21\u578b\u6f02\u79fb\u3002 Streamlit \u4f53\u9a8c \u884c\u4e1a\u6a21\u677f\uff1a\u4e00\u952e\u52a0\u8f7d\u201c\u9884\u6d4b\u671f/\u589e\u957f/PGR/WACC/\u5468\u8f6c/\u4e58\u6570\u533a\u95f4\u201d\uff0c\u5e76\u5c55\u793a\u884c\u4e1a\u8b66\u793a\u3002 \u89e3\u91ca\u529b\uff1a\u4ef7\u503c\u9a71\u52a8\u5206\u89e3\u56fe\uff08\u589e\u957f\u3001\u5229\u6da6\u7387\u3001WACC\u3001PGR\u3001\u0394NWC\u3001Capex/D&A \u8d21\u732e\uff09\u3002 NWC \u63a7\u4ef6\uff1a\u65b0\u589e\u201c\u8425\u8fd0\u8d44\u672c\u57fa\u51c6\u53e3\u5f84\uff08component/aggregate\uff09\u201d\u4e0e\u201c\u5929\u6570\u8fc7\u6e21\u5e74\u6570\uff08\u9ed8\u8ba43\u5e74\uff09\u201d\u3002 \u5b9e\u65bd\u8def\u7ebf\u56fe\uff082025-09-10\uff09 \u91cc\u7a0b\u7891 1\uff08\u672c\u6708\uff09 [x] Mid-Year Convention\uff08\u5df2\u843d\u5730\uff1aAPI+UI\uff09 [x] CRP/IRP\uff08\u5df2\u843d\u5730\uff1aENV+API+UI\uff09 [x] COGS \u53cc\u6a21\u5f0f\uff08\u5df2\u843d\u5730\uff1aAPI+UI\uff09 [x] \u0394NWC \u57fa\u671f\u7edf\u4e00\u4e0e\u8c03\u8bd5\u660e\u7ec6\uff08\u5df2\u843d\u5730\uff09 [x] LTM/Interim \u57fa\u671f\u4e0e\u6700\u65b0\u8d44\u4ea7\u8d1f\u503a\u8868\u6eda\u52a8\uff08\u5df2\u843d\u5730\uff1aAPI+Fetcher+UI\uff09 \u91cc\u7a0b\u7891 2\uff08\u4e0b\u6708\uff09 [x] TV \u540d\u4e49 GDP \u4e0a\u9650\u6821\u9a8c\u4e0e\u9690\u542b PGR \u63d0\u793a\uff08\u5df2\u843d\u5730\uff09 [ ] \u5173\u952e\u5047\u8bbe\u6458\u8981\u5361\u7247\u5e38\u9a7b\u4e0e\u5ba1\u8ba1\u5bfc\u51fa\uff08\u8fdb\u884c\u4e2d\uff1adebug_* \u5df2\u53ef\u7528\uff09 [x] \u884c\u4e1a\u6807\u5c3a\u5e93 v1\uff08\u03b2/\u9884\u6d4b\u671f/PGR/\u5468\u8f6c/\u4e58\u6570\uff0cGICS 11 + \u767d\u9152\u53d8\u4f53\uff09\uff08\u5df2\u843d\u5730\uff09 [x] \u80a1\u606f\u53e3\u5f84\u56de\u9000\u94fe\uff08TTM \u5b9e\u65bd/\u5b8c\u6210 \u2192 \u9884\u6848 \u2192 \u5e74\u5ea6\uff09\u4e0e UI \u6807\u7b7e\uff08\u5df2\u843d\u5730\uff09 [x] as-of \u4e00\u81f4\u6027\uff08\u4ef7\u683c\u2264\u4f30\u503c\u65e5\u3001EPS\u2264\u4f30\u503c\u65e5\uff09\u4e0e UI \u6807\u7b7e\uff08\u5df2\u843d\u5730\uff09 \u91cc\u7a0b\u7891 3\uff08+1 \u6708\uff09 [ ] \u6536\u5165\u591a\u56e0\u5b50\u4e0e\u5229\u6da6\u5e73\u6ed1\u8def\u5f84\u5f00\u5173 [ ] \u7ef4\u6301\u6027/\u6269\u5f20\u6027 Capex \u4e0e D&A \u8054\u52a8 [ ] \u8499\u7279\u5361\u6d1b\u60c5\u666f\u4e0e\u4e09\u60c5\u666f\u8054\u52a8 \u4ee3\u7801\u53c2\u8003 \u9884\u6d4b\u5f15\u64ce\uff1a src/core/financial/forecaster.py \u73b0\u503c\uff1a src/core/calculators/dcf/present_value_calculator.py \u7ec8\u503c\uff1a src/core/calculators/dcf/terminal_value_calculator.py WACC\uff1a src/core/calculators/dcf/wacc_calculator.py \u80a1\u6743\u6865\uff1a src/core/calculators/equity_bridge_calculator.py Streamlit \u53c2\u6570\uff1a frontend-streamlit/streamlit_app.py \u914d\u7f6e\u4e0e\u5b57\u6bb5\uff08\u8282\u9009\uff09 ENV\uff1a COUNTRY_RISK_PREMIUM \u3001 INDUSTRY_RISK_PREMIUM \u3001 RISK_FREE_RATE \u3001 MARKET_RISK_PREMIUM \u2026 API\uff08\u65b0\u589e\uff09\uff1a mid_year_convention: bool \u3001 cogs_forecast_mode: residual|direct_ratio \u3001 nwc_baseline_mode: component|aggregate \u3001 nwc_days_transition_years: int \u3001 country_risk_premium \u3001 industry_risk_premium \u3001 ltm_baseline_enabled: bool ENV\uff08\u65b0\u589e\uff09\uff1a DEFAULT_LTM_BASELINE_ENABLED=0 \uff08\u9ed8\u8ba4\u5173\u95ed\uff1b\u524d\u7aef\u53ef\u8986\u76d6\uff09 \u9a8c\u6536\u6807\u51c6\uff08\u5173\u952e\uff09 \u5f00\u5173\u9ed8\u8ba4\u5173\u95ed\u65f6\u4f30\u503c\u56de\u5f52\u4e00\u81f4\uff1b\u5f00\u542f\u540e\u5f71\u54cd\u65b9\u5411\u4e0e\u5e45\u5ea6\u53ef\u89e3\u91ca\u3002 nwc_baseline_mode=component \u65f6\uff0c\u4e0e aggregate \u76f8\u6bd4\uff0c\u9996\u5e74 \u0394NWC \u4e0d\u51fa\u73b0\u975e\u7ecf\u6d4e\u6027\u8df3\u53d8\uff1b\u5f53\u8bbe\u7f6e nwc_days_transition_years>0 \uff0c\u0394NWC \u5728\u9884\u6d4b\u5934\u4e24\u5e74\u5e73\u6ed1\u91ca\u653e\u3002 \u5173\u952e\u5047\u8bbe\u4e0e\u8f93\u51fa\u5728 UI \u53ef\u89c6\u5e76\u53ef\u5bfc\u51fa\uff1b\u8c03\u8bd5\u9762\u677f\u5305\u542b\u201c\u8bf7\u6c42\u6458\u5f55/\u6620\u5c04\u5047\u8bbe/\u5386\u53f2\u4e2d\u4f4d\u6570/\u9996\u5e74\u6784\u6210\u201d\u3002 \u884c\u4e1a\u4e0e\u5b8f\u89c2\u7ea6\u675f\u751f\u6548\u65f6\uff0cTV \u4e0e Ke \u66f4\u5177\u5408\u7406\u6027\u4e0e\u7a33\u5b9a\u6027\u3002 LTM/Interim\uff1a\u5f00\u542f ltm_baseline_enabled \u65f6\uff0c baseline_debug \u663e\u793a YTD/LTM \u5206\u89e3\uff1b\u5173\u95ed\u65f6\u4f7f\u7528\u6700\u65b0\u5e74\u62a5\uff1b\u4e24\u79cd\u57fa\u671f\u4e0b\u9996\u5e74 \u0394NWC \u65b9\u5411\u4e0e\u5e45\u5ea6\u53ef\u89e3\u91ca\u3001\u4e14\u4e0e NWC \u57fa\u51c6\u53e3\u5f84\u4e00\u81f4\u3002","title":"DCF \u6838\u5fc3\u4e1a\u52a1\u903b\u8f91\u4f18\u5316\u65b9\u6848\uff08v1\uff09"},{"location":"archived/dcf_optimization_plan/#dcf-v1","text":"","title":"DCF \u6838\u5fc3\u4e1a\u52a1\u903b\u8f91\u4f18\u5316\u65b9\u6848\uff08v1\uff09"},{"location":"archived/dcf_optimization_plan/#_1","text":"\u76ee\u6807\uff1a\u5c06\u6a21\u578b\u4ece\u201c\u53c2\u6570\u53ef\u8c03\u7684\u6807\u51c6 DCF\u201d\u5347\u7ea7\u4e3a\u201c\u5e26\u884c\u4e1a\u6821\u51c6\u3001\u5b8f\u89c2\u7ea6\u675f\u3001\u53e3\u5f84\u7edf\u4e00\u3001\u53ef\u5ba1\u8ba1\u201d\u7684\u4f01\u4e1a\u7ea7 DCF\u3002 \u8303\u56f4\uff1a\u6298\u73b0\u65f6\u70b9\u3001WACC \u7ed3\u6784\u3001\u7ec8\u503c\u6cbb\u7406\u3001\u5229\u6da6\u4e0e\u6210\u672c\u8def\u5f84\u3001\u8425\u8fd0\u8d44\u672c\u53e3\u5f84\u3001\u900f\u660e\u5ea6\u4e0e\u5ba1\u8ba1\u3001\u654f\u611f\u6027\u4e0e\u60c5\u666f\u3001\u6570\u636e\u8d28\u91cf\u3001\u6d4b\u8bd5\u4e0e UX\u3002","title":"\u76ee\u6807\u4e0e\u8303\u56f4"},{"location":"archived/dcf_optimization_plan/#_2","text":"\u6298\u73b0\u65f6\u70b9\uff08Mid-Year Convention\uff09 \u9ed8\u8ba4\u652f\u6301\u5e74\u4e2d\u6298\u73b0\uff0c\u7ed3\u679c\u9875\u6807\u6ce8\u6298\u73b0\u60ef\u4f8b\u3002 \u5df2\u843d\u5730\uff1a PresentValueCalculator(mid_year_convention) \uff1bStreamlit \u590d\u9009\u9879\uff1a mid_year_convention \u3002 WACC/Ke \u7ed3\u6784\uff08CRP / IRP\uff09 Ke = Rf + \u03b2\u00d7(MRP + CRP) + Size + IRP\uff1bRf/\u03b2/MRP \u652f\u6301 UI \u8986\u76d6\u4e0e ENV\u3002 \u5df2\u843d\u5730\uff1a COUNTRY_RISK_PREMIUM \u3001 INDUSTRY_RISK_PREMIUM \uff08ENV+API+UI\uff09\u3002 \u7ec8\u503c\u6cbb\u7406\uff08TV\uff09 \u6c38\u7eed\u589e\u957f\u6cd5\uff1a\u4ee5\u201c\u540d\u4e49 GDP\uff08\u901a\u80c0+\u5b9e\u9645\uff09\u201d\u4e3a\u4e0a\u9650\u6821\u9a8c\uff08min(PGR, GDP_cap)\uff09\uff0c\u8d85\u9650\u7ed9\u51fa\u6765\u6e90\u4e0e\u88ab\u66f4\u6b63\u503c\uff08\u5df2\u843d\u5730\uff1aENV/\u8bf7\u6c42\u63a7\u5236\uff09\u3002 \u9000\u51fa\u4e58\u6570\u6cd5\uff1a\u63d0\u4f9b\u884c\u4e1a\u533a\u95f4\u53c2\u8003\u4e0e\u504f\u79bb\u8b66\u793a\uff1b\u540c\u6b65\u5c55\u793a\u9690\u542b PGR \u4e0e EV/EBITDA\uff08\u5df2\u843d\u5730\uff1a\u9690\u542b PGR \u8ba1\u7b97\u4e0e\u63d0\u793a\uff09\u3002 \u5229\u6da6\u7387\u4e0e COGS \u53cc\u6a21\u5f0f \u53cd\u63a8\u6cd5\uff08\u9ed8\u8ba4\uff09\uff1aRevenue \u2212 EBIT \u2212 SGA \u2212 RD\uff0c\u4fdd\u6301\u635f\u76ca\u6052\u7b49\u5f0f\uff0c\u5339\u914d\u76ee\u6807\u5229\u6da6\u7387/\u8d39\u7528\u7387\u3002 \u76f4\u63a5\u6bd4\u7387\u6cd5\uff08\u53ef\u9009\uff09\uff1aCOGS = Revenue \u00d7 \u5386\u53f2 COGS/Revenue \u4e2d\u4f4d\u6570\uff0c\u9002\u7528\u4e8e\u8ddf\u8e2a\u6bdb\u5229\u8d8b\u52bf\u3002 \u5df2\u843d\u5730\uff1a cogs_forecast_mode = residual|direct_ratio \uff08API+UI\uff09\u3002 \u8425\u8fd0\u8d44\u672c\uff08NWC\uff09\u4e0e \u0394NWC \u57fa\u671f \u201c\u7eaf\u5386\u53f2\u4e2d\u4f4d\u6570\u201d\u573a\u666f\uff1aDIO/DPO \u7528\u635f\u76ca\u53e3\u5f84\u7684 COGS\uff1b\u201c\u76ee\u6807/\u8fc7\u6e21\u201d\u573a\u666f\u7528\u5386\u53f2 COGS \u6bd4\u7387\uff0c\u964d\u4f4e\u626d\u66f2\u3002 \u7edf\u4e00\u5e76\u517c\u5bb9 \u0394NWC \u57fa\u671f\u952e\u540d\uff1a last_historical_nwc/last_actual_nwc \u3002 \u7ed3\u679c\u9875\u56fa\u5b9a\u5c55\u793a\u9996\u5e74 \u0394NWC \u6784\u6210\uff08AR/Inv/AP/OCA/OCL\uff09\u53ca\u57fa\u671f\u3002 LTM/Interim \u57fa\u671f\uff08\u65b0\u589e\uff09\uff1a\u652f\u6301 ltm_baseline_enabled \uff08\u9ed8\u8ba4\u5173\u95ed\uff09\u4ee5 LTM \u53e3\u5f84\u786e\u5b9a last_actual_revenue \uff1b\u4f30\u503c\u65e5\u6eda\u52a8\u6700\u65b0\u8d44\u4ea7\u8d1f\u503a\u8868\u5e76\u91cd\u7b97 last_component_nwc \uff08\u5df2\u843d\u5730\uff09\u3002 \u7a0e\u7387\u4e0e NOPAT \u6709\u6548\u7a0e\u7387\u4ece\u5386\u53f2\u4e2d\u4f4d\u6570\u8fc7\u6e21\u5230\u76ee\u6807\uff0c\u8bbe\u5408\u7406\u4e0a\u4e0b\u9650\uff08\u5982 5%\u201335%\uff09\uff0c\u8d8a\u754c\u544a\u8b66\u3002 Capex \u4e0e D&A \u8054\u52a8 \u7ef4\u6301\u6027\u6295\u8d44\u7ea6\u675f\uff08Capex \u2265 D&A\uff09+ \u6536\u5165\u9a71\u52a8\u7684\u6269\u5f20\u9879\uff0c\u957f\u671f\u8d8b\u4e8e\u7a33\u6001\uff08\u540e\u7eed\u843d\u5730\uff09\u3002 \u80a1\u6743\u6865\u53e3\u5f84 Net Debt = \u6709\u606f\u8d1f\u503a \u2212 \u73b0\u91d1\u7b49\u4ef7\u7269\uff1b\u5728\u6865\u63a5\u4e2d\u6263\u9664\u5c11\u6570\u80a1\u4e1c\u6743\u76ca\u4e0e\u4f18\u5148\u80a1\uff1bUI \u6807\u6ce8\u53e3\u5f84\u3002","title":"\u6838\u5fc3\u4f18\u5316\uff08\u9ad8\u4f18\u5148\u7ea7\uff09"},{"location":"archived/dcf_optimization_plan/#_3","text":"\u6536\u5165\u8def\u5f84\uff1a\u5386\u53f2 CAGR \u00d7\uff08\u540d\u4e49 GDP/\u884c\u4e1a\u57fa\u51c6\uff09\u00d7\uff08\u4efd\u989d\u56e0\u5b50\uff09\uff0c\u5e76\u63d0\u4f9b\u201c\u884c\u4e1a\u9884\u8bbe\u201d\u5feb\u6377\u9879\u3002 \u5229\u6da6\u7387\u8def\u5f84\uff1a\u7ebf\u6027\u2192\u903b\u8f91/\u6307\u6570\u5e73\u6ed1\u53ef\u9009\uff1b\u81ea\u52a8\u5939\u6301\u5728\u5386\u53f2/\u884c\u4e1a\u4e0a\u4e0b\u9650\u3002 \u884c\u4e1a\u6807\u5c3a\u5e93\uff1a\u03b2\u3001\u9884\u6d4b\u671f\u3001PGR \u4e0a\u9650\u3001EV/EBITDA \u53c2\u8003\u3001DSO/DIO/DPO \u5178\u578b\u503c\u3002","title":"\u9884\u6d4b\u589e\u5f3a\uff08\u4e2d\u4f18\u5148\u7ea7\uff09"},{"location":"archived/dcf_optimization_plan/#_4","text":"\u5173\u952e\u5047\u8bbe\u6458\u8981\u5361\u7247\uff08\u5e38\u9a7b\uff09\uff1a WACC \u6784\u6210\uff08Rf/\u03b2/MRP/CRP/IRP/\u6743\u91cd/Ke/Kd(AT)\uff09 TV \u65b9\u6cd5\u4e0e\u53c2\u6570\u3001\u9690\u542b PGR \u4e0e EV/EBITDA \u6536\u5165/\u5229\u6da6\u7387/COGS \u6a21\u5f0f\u4e0e\u8def\u5f84\u3001\u9996\u5e74 \u0394NWC \u6784\u6210\u3001\u51c0\u503a\u52a1\u53e3\u5f84 \u5ba1\u8ba1\u5bfc\u51fa\uff1a\u8bf7\u6c42\u8f7d\u8377\u3001\u6620\u5c04\u540e\u5047\u8bbe\u3001\u5386\u53f2\u4e2d\u4f4d\u6570\u3001\u9010\u5e74\u9884\u6d4b\u8868\u3001DCF \u5206\u89e3\uff08JSON/CSV\uff09\u3002 \u57fa\u671f\u8c03\u8bd5\uff1a\u5728 debug_request_slice \u4e2d\u6ce8\u5165 baseline_debug \uff08Annual/LTM \u6a21\u5f0f\u3001YTD/LTM \u6784\u6210\uff09\uff0c\u4f7f\u6eda\u52a8\u91cd\u8bc4\u53ef\u8ffd\u6eaf\u3002","title":"\u900f\u660e\u5ea6\u4e0e\u53ef\u5ba1\u8ba1"},{"location":"archived/dcf_optimization_plan/#_5","text":"\u4e8c\u7ef4\u654f\u611f\u6027\u4fdd\u6301\uff1b\u65b0\u589e\u8f7b\u91cf\u8499\u7279\u5361\u6d1b\uff081000 \u6b21\uff09\uff1a\u8f93\u51fa\u4f30\u503c\u5206\u5e03\u3001\u7f6e\u4fe1\u533a\u95f4\u3001\u5173\u952e\u9a71\u52a8\u6392\u5e8f\u3002 \u4e09\u60c5\u666f\uff08\u60b2\u89c2/\u57fa\u51c6/\u4e50\u89c2\uff09\u8054\u52a8\u8c03\u6574\u589e\u957f/\u5229\u6da6\u7387/WACC/PGR\uff0c\u5e76\u5408\u5e76\u5c55\u793a\u533a\u95f4\u4e0e\u9a71\u52a8\u3002","title":"\u654f\u611f\u6027\u4e0e\u60c5\u666f"},{"location":"archived/dcf_optimization_plan/#_6","text":"\u6307\u6807\u8986\u76d6\u7387\u3001\u5f02\u5e38\u503c\u8ba1\u6570\u3001\u65f6\u6548\u6027\u6807\u8bc6\uff08\u53ef\u89c6\u5316\u8bc4\u5206\uff09\uff1b\u8de8\u6e90\u4e00\u81f4\u6027\u4e0e\u57fa\u51c6\u6821\u9a8c\u3002 \u53e3\u5f84\u4e00\u81f4\u6027\u68c0\u67e5\uff1a\u635f\u76ca\u6052\u7b49\u5f0f\u3001\u5468\u8f6c\u57fa\u5e95\u4e00\u81f4\u6027\u3001\u0394NWC \u57fa\u671f\u6709\u6548\u6027\u2014\u89e6\u53d1\u63d0\u793a\u4e0e\u4fee\u6b63\u5efa\u8bae\u3002","title":"\u6570\u636e\u8d28\u91cf\u6cbb\u7406"},{"location":"archived/dcf_optimization_plan/#_7","text":"\u5355\u5143\u6d4b\u8bd5\uff1a mid_year_convention\u3001CRP/IRP \u5bf9 Ke/WACC \u5f71\u54cd cogs_forecast_mode \u4e24\u6a21\u5f0f\u8fb9\u754c\u4e0e\u4e00\u81f4\u6027 \u0394NWC \u57fa\u671f\u952e\u540d\u4e0e\u9996\u5e74 \u0394NWC \u5408\u7406\u6027 TV \u4e0a\u9650\u6821\u9a8c\uff08\u540d\u4e49 GDP\uff09\u4e0e\u9690\u542b\u6307\u6807 \u56de\u5f52\u6837\u4f8b\uff1a\u5efa\u7acb\u951a\u5b9a\u80a1\u7968\uff08\u4e0d\u540c\u884c\u4e1a\uff09\u76ee\u6807\u533a\u95f4\uff0c\u9632\u6b62\u6a21\u578b\u6f02\u79fb\u3002","title":"\u6d4b\u8bd5\u4e0e\u57fa\u51c6"},{"location":"archived/dcf_optimization_plan/#streamlit","text":"\u884c\u4e1a\u6a21\u677f\uff1a\u4e00\u952e\u52a0\u8f7d\u201c\u9884\u6d4b\u671f/\u589e\u957f/PGR/WACC/\u5468\u8f6c/\u4e58\u6570\u533a\u95f4\u201d\uff0c\u5e76\u5c55\u793a\u884c\u4e1a\u8b66\u793a\u3002 \u89e3\u91ca\u529b\uff1a\u4ef7\u503c\u9a71\u52a8\u5206\u89e3\u56fe\uff08\u589e\u957f\u3001\u5229\u6da6\u7387\u3001WACC\u3001PGR\u3001\u0394NWC\u3001Capex/D&A \u8d21\u732e\uff09\u3002 NWC \u63a7\u4ef6\uff1a\u65b0\u589e\u201c\u8425\u8fd0\u8d44\u672c\u57fa\u51c6\u53e3\u5f84\uff08component/aggregate\uff09\u201d\u4e0e\u201c\u5929\u6570\u8fc7\u6e21\u5e74\u6570\uff08\u9ed8\u8ba43\u5e74\uff09\u201d\u3002","title":"Streamlit \u4f53\u9a8c"},{"location":"archived/dcf_optimization_plan/#2025-09-10","text":"\u91cc\u7a0b\u7891 1\uff08\u672c\u6708\uff09 [x] Mid-Year Convention\uff08\u5df2\u843d\u5730\uff1aAPI+UI\uff09 [x] CRP/IRP\uff08\u5df2\u843d\u5730\uff1aENV+API+UI\uff09 [x] COGS \u53cc\u6a21\u5f0f\uff08\u5df2\u843d\u5730\uff1aAPI+UI\uff09 [x] \u0394NWC \u57fa\u671f\u7edf\u4e00\u4e0e\u8c03\u8bd5\u660e\u7ec6\uff08\u5df2\u843d\u5730\uff09 [x] LTM/Interim \u57fa\u671f\u4e0e\u6700\u65b0\u8d44\u4ea7\u8d1f\u503a\u8868\u6eda\u52a8\uff08\u5df2\u843d\u5730\uff1aAPI+Fetcher+UI\uff09 \u91cc\u7a0b\u7891 2\uff08\u4e0b\u6708\uff09 [x] TV \u540d\u4e49 GDP \u4e0a\u9650\u6821\u9a8c\u4e0e\u9690\u542b PGR \u63d0\u793a\uff08\u5df2\u843d\u5730\uff09 [ ] \u5173\u952e\u5047\u8bbe\u6458\u8981\u5361\u7247\u5e38\u9a7b\u4e0e\u5ba1\u8ba1\u5bfc\u51fa\uff08\u8fdb\u884c\u4e2d\uff1adebug_* \u5df2\u53ef\u7528\uff09 [x] \u884c\u4e1a\u6807\u5c3a\u5e93 v1\uff08\u03b2/\u9884\u6d4b\u671f/PGR/\u5468\u8f6c/\u4e58\u6570\uff0cGICS 11 + \u767d\u9152\u53d8\u4f53\uff09\uff08\u5df2\u843d\u5730\uff09 [x] \u80a1\u606f\u53e3\u5f84\u56de\u9000\u94fe\uff08TTM \u5b9e\u65bd/\u5b8c\u6210 \u2192 \u9884\u6848 \u2192 \u5e74\u5ea6\uff09\u4e0e UI \u6807\u7b7e\uff08\u5df2\u843d\u5730\uff09 [x] as-of \u4e00\u81f4\u6027\uff08\u4ef7\u683c\u2264\u4f30\u503c\u65e5\u3001EPS\u2264\u4f30\u503c\u65e5\uff09\u4e0e UI \u6807\u7b7e\uff08\u5df2\u843d\u5730\uff09 \u91cc\u7a0b\u7891 3\uff08+1 \u6708\uff09 [ ] \u6536\u5165\u591a\u56e0\u5b50\u4e0e\u5229\u6da6\u5e73\u6ed1\u8def\u5f84\u5f00\u5173 [ ] \u7ef4\u6301\u6027/\u6269\u5f20\u6027 Capex \u4e0e D&A \u8054\u52a8 [ ] \u8499\u7279\u5361\u6d1b\u60c5\u666f\u4e0e\u4e09\u60c5\u666f\u8054\u52a8","title":"\u5b9e\u65bd\u8def\u7ebf\u56fe\uff082025-09-10\uff09"},{"location":"archived/dcf_optimization_plan/#_8","text":"\u9884\u6d4b\u5f15\u64ce\uff1a src/core/financial/forecaster.py \u73b0\u503c\uff1a src/core/calculators/dcf/present_value_calculator.py \u7ec8\u503c\uff1a src/core/calculators/dcf/terminal_value_calculator.py WACC\uff1a src/core/calculators/dcf/wacc_calculator.py \u80a1\u6743\u6865\uff1a src/core/calculators/equity_bridge_calculator.py Streamlit \u53c2\u6570\uff1a frontend-streamlit/streamlit_app.py","title":"\u4ee3\u7801\u53c2\u8003"},{"location":"archived/dcf_optimization_plan/#_9","text":"ENV\uff1a COUNTRY_RISK_PREMIUM \u3001 INDUSTRY_RISK_PREMIUM \u3001 RISK_FREE_RATE \u3001 MARKET_RISK_PREMIUM \u2026 API\uff08\u65b0\u589e\uff09\uff1a mid_year_convention: bool \u3001 cogs_forecast_mode: residual|direct_ratio \u3001 nwc_baseline_mode: component|aggregate \u3001 nwc_days_transition_years: int \u3001 country_risk_premium \u3001 industry_risk_premium \u3001 ltm_baseline_enabled: bool ENV\uff08\u65b0\u589e\uff09\uff1a DEFAULT_LTM_BASELINE_ENABLED=0 \uff08\u9ed8\u8ba4\u5173\u95ed\uff1b\u524d\u7aef\u53ef\u8986\u76d6\uff09","title":"\u914d\u7f6e\u4e0e\u5b57\u6bb5\uff08\u8282\u9009\uff09"},{"location":"archived/dcf_optimization_plan/#_10","text":"\u5f00\u5173\u9ed8\u8ba4\u5173\u95ed\u65f6\u4f30\u503c\u56de\u5f52\u4e00\u81f4\uff1b\u5f00\u542f\u540e\u5f71\u54cd\u65b9\u5411\u4e0e\u5e45\u5ea6\u53ef\u89e3\u91ca\u3002 nwc_baseline_mode=component \u65f6\uff0c\u4e0e aggregate \u76f8\u6bd4\uff0c\u9996\u5e74 \u0394NWC \u4e0d\u51fa\u73b0\u975e\u7ecf\u6d4e\u6027\u8df3\u53d8\uff1b\u5f53\u8bbe\u7f6e nwc_days_transition_years>0 \uff0c\u0394NWC \u5728\u9884\u6d4b\u5934\u4e24\u5e74\u5e73\u6ed1\u91ca\u653e\u3002 \u5173\u952e\u5047\u8bbe\u4e0e\u8f93\u51fa\u5728 UI \u53ef\u89c6\u5e76\u53ef\u5bfc\u51fa\uff1b\u8c03\u8bd5\u9762\u677f\u5305\u542b\u201c\u8bf7\u6c42\u6458\u5f55/\u6620\u5c04\u5047\u8bbe/\u5386\u53f2\u4e2d\u4f4d\u6570/\u9996\u5e74\u6784\u6210\u201d\u3002 \u884c\u4e1a\u4e0e\u5b8f\u89c2\u7ea6\u675f\u751f\u6548\u65f6\uff0cTV \u4e0e Ke \u66f4\u5177\u5408\u7406\u6027\u4e0e\u7a33\u5b9a\u6027\u3002 LTM/Interim\uff1a\u5f00\u542f ltm_baseline_enabled \u65f6\uff0c baseline_debug \u663e\u793a YTD/LTM \u5206\u89e3\uff1b\u5173\u95ed\u65f6\u4f7f\u7528\u6700\u65b0\u5e74\u62a5\uff1b\u4e24\u79cd\u57fa\u671f\u4e0b\u9996\u5e74 \u0394NWC \u65b9\u5411\u4e0e\u5e45\u5ea6\u53ef\u89e3\u91ca\u3001\u4e14\u4e0e NWC \u57fa\u51c6\u53e3\u5f84\u4e00\u81f4\u3002","title":"\u9a8c\u6536\u6807\u51c6\uff08\u5173\u952e\uff09"},{"location":"archived/dcf_rolling_revaluation_guide/","text":"DCF \u6eda\u52a8\u91cd\u8bc4\u5b9e\u8df5\u6307\u5357\uff08\u5b63\u5ea6/\u4e2d\u62a5\u66f4\u65b0\u7248\uff09 \u7ed3\u8bba\u901f\u89c8 \u5b63\u62a5/\u4e2d\u62a5\u53d1\u5e03\u540e \u53ef\u4ee5\u4e14\u5efa\u8bae\u8fdb\u884c\u6eda\u52a8\u91cd\u8bc4 \u3002\u6838\u5fc3\u662f\u628a\u201c\u4f30\u503c\u65e5\u201d\u4e0e\u201c\u57fa\u671f\u53e3\u5f84\u201d\u540c\u6b65\u5230\u6700\u65b0\u62a5\u8868\uff0c\u7136\u540e\u7528\u4e00\u81f4\u53e3\u5f84\u91cd\u7b97\u7ecf\u8425\u4e0e\u8d44\u672c\u7ed3\u6784\u4e24\u6761\u7ebf\u3002 \u201c\u57fa\u671f\u73b0\u91d1\u201d\u7528\u4e8e EV\u2192Equity \u6865\u7684\u51c0\u503a\u52a1\u8ba1\u7b97\uff0c\u5e94\u53d6 \u4f30\u503c\u65e5\u7684\u73b0\u91d1\u53ca\u73b0\u91d1\u7b49\u4ef7\u7269 \uff08\u5254\u9664\u53d7\u9650\u73b0\u91d1\uff09\uff0c\u800c\u4e0d\u662f\u5e73\u5747\u503c\u6216\u5e74\u672b\u6570\u3002 \u672c\u9879\u76ee\u5df2\u652f\u6301\u6eda\u52a8\u91cd\u8bc4\u7684\u5173\u952e\u8981\u7d20\uff1a \u5e74\u4e2d\u6298\u73b0\uff08Mid-Year Convention\uff09 WACC \u589e\u5f3a CAPM\uff08CRP/IRP\uff09\u4e0e\u201c\u76ee\u6807/\u5e02\u573a\u4ef7\u503c\u201d\u4e24\u79cd\u6743\u91cd\u6a21\u5f0f NWC \u5206\u9879\u53e3\u5f84\u57fa\u671f\uff08 last_component_nwc \uff09\u4e0e\u65e5\u6570\u5e73\u6ed1\u8fc7\u6e21\uff08 nwc_days_transition_years \uff09 \u80a1\u6743\u6865\u4ee5\u201c\u6700\u65b0\u8d44\u4ea7\u8d1f\u503a\u8868\u201d\u4e00\u884c\u8ba1\u7b97\u51c0\u503a\u52a1 \u80a1\u606f\u4e0e as-of \u5c55\u793a\uff082025-09-10\uff09\uff1a TTM \u80a1\u606f\u4f18\u5148\u91c7\u7528\u201c\u5b9e\u65bd/\u5b8c\u6210\u201d\uff0c\u6ca1\u6709\u5219\u201cTTM\u00b7\u9884\u6848\u201d\uff0c\u4ecd\u6ca1\u6709\u5219\u201c\u5e74\u5ea6\u6700\u8fd1\u4e00\u6b21\u201d\uff1bUI \u6807\u7b7e\u540c\u6b65\u6807\u6ce8\u6765\u6e90 \u6700\u65b0\u4ef7\u683c\u6309 trade_date \u2264 \u4f30\u503c\u65e5 \u56de\u9000\uff0cEPS\uff08\u5e74\u62a5\uff09\u6309 end_date \u2264 \u4f30\u503c\u65e5 \u56de\u9000\uff1b\u57fa\u672c\u4fe1\u606f\u4e2d\u663e\u793a as-of \u82e5\u8981\u201c\u5b8c\u5168 LTM\uff08\u8fc7\u53bb12\u4e2a\u6708\uff09\u57fa\u671f\u201d\u7684\u7ecf\u8425\u6eda\u52a8\uff0c\u9700\u8981\u5f88\u5c0f\u7684\u6293\u53d6\u4e0e\u5904\u7406\u6269\u5c55\uff1b\u5f53\u524d\u5df2\u53ef\u5b9e\u73b0\u201c\u8d44\u672c\u7ed3\u6784\u6eda\u52a8+\u5e74\u4e2d\u6298\u73b0+NWC\u5e73\u6ed1\u201d\u7684\u89c4\u8303\u91cd\u8bc4\u3002 \u91cd\u8bc4\u7684\u4e24\u79cd\u65b9\u5f0f \u5feb\u901f\u91cd\u8bc4\uff08\u4ec5\u5e02\u573a\u4fa7\u6eda\u52a8\uff09 \u4f30\u503c\u65e5\u8bbe\u5230\u5b63\u62a5/\u4e2d\u62a5\u62ab\u9732\u540e\uff0c\u66f4\u65b0\uff1a\u80a1\u4ef7/\u603b\u80a1\u672c\uff08E\uff09\u3001Rd/Rf/\u03b2/MRP/CRP/IRP\u3001\u7ec8\u503c\u5047\u8bbe\uff1b\u52fe\u9009\u5e74\u4e2d\u6298\u73b0\u3002 EV \u53d8\u5316\u4e3b\u8981\u53d7 WACC \u4e0e TV \u9a71\u52a8\uff1b\u51c0\u503a\u52a1\u4e0e\u7ecf\u8425\u57fa\u671f\u4ecd\u662f\u4e0a\u6b21\u5e74\u62a5\u53e3\u5f84\uff08\u5feb\u901f\u4f46\u7c97\u7565\uff09\u3002 \u89c4\u8303\u91cd\u8bc4\uff08\u7ecf\u8425+\u8d44\u672c\u7ed3\u6784\u6eda\u52a8\uff09 \u4f30\u503c\u65e5\u8bbe\u5230\u5b63\u62a5/\u4e2d\u62a5\u62ab\u9732\u65e5\uff08\u6216\u63a5\u8fd1\u7684\u4ea4\u6613\u65e5\uff09\u3002 NWC \u57fa\u671f\u7528\u5206\u9879\u53e3\u5f84 last_component_nwc \uff0c\u5e76\u8bbe\u7f6e nwc_days_transition_years \uff08\u5efa\u8bae 3 \u5e74\uff09\u4ece last_*_days \u2192 \u5386\u53f2\u4e2d\u4f4d\u6570\u65e5\u6570\u5e73\u6ed1\u8fc7\u6e21\uff0c\u907f\u514d\u9996\u5e74 \u0394NWC \u8df3\u53d8\u3002 \u51c0\u503a\u52a1\uff1a\u4ee5\u201c\u6700\u65b0\u8d44\u4ea7\u8d1f\u503a\u8868\u201d\u4e00\u884c\u7684 \u6709\u606f\u503a\u52a1 \u2212 \u73b0\u91d1\u53ca\u73b0\u91d1\u7b49\u4ef7\u7269 \u8ba1\u7b97\uff08\u4f30\u503c\u65e5\u53e3\u5f84\uff09\u3002 \u52fe\u9009\u5e74\u4e2d\u6298\u73b0\uff1bTV \u53c2\u6570\u6309\u6700\u65b0\u5224\u65ad\u91cd\u4f30\u3002 \u5173\u952e\u53e3\u5f84\u4e0e\u516c\u5f0f UFCF \u4e0d\u542b\u73b0\u91d1\uff1aNWC \u4ee5\u7ecf\u8425\u6027\u79d1\u76ee\u8ba1\u7b97\uff08\u73b0\u91d1\u4e0d\u8fdb NWC\uff09\u3002 \u51c0\u503a\u52a1\uff08\u4f30\u503c\u65e5\uff09\uff1a NetDebt = Interest-bearing Debt \u2212 Cash & Equivalents \u3002 WACC\uff1a Ke = Rf + \u03b2 \u00d7 (MRP + CRP) + Size + IRP Kd_AT = Kd \u00d7 (1 \u2212 Tax) \uff08\u5efa\u8bae\u7528\u8fb9\u9645\u7a0e\u7387\uff1b\u7cfb\u7edf\u5f53\u524d\u7528\u76ee\u6807\u6709\u6548\u7a0e\u7387\uff09 WACC = w_e \u00d7 Ke + w_d \u00d7 Kd_AT \u6743\u91cd\u6a21\u5f0f\uff1a \u76ee\u6807\u7ed3\u6784\uff1a w_d = target_debt_ratio \uff0c w_e = 1 \u2212 w_d \u3002 \u5e02\u573a\u4ef7\u503c\uff1a w_d = D/(D+E) \uff08 E=\u5e02\u503c=\u80a1\u4ef7\u00d7\u603b\u80a1\u672c \uff1b D\u2248\u6709\u606f\u503a\u8d26\u9762\u503c\u8fd1\u4f3c\u5e02\u573a\u4ef7\u503c \uff09\u3002 \u6298\u73b0\u65f6\u70b9\uff1a\u53ef\u542f\u7528\u5e74\u4e2d\u6298\u73b0\uff08Mid-Year\uff09\uff0c\u7b49\u4ef7\u4e8e\u6307\u6570\u7528 (year \u2212 0.5) \u3002 \u5728\u5f53\u524d\u7cfb\u7edf\u5982\u4f55\u64cd\u4f5c \u4f30\u503c\u65e5\uff1a\u5728 UI \u9009\u62e9\u4e2d\u62a5/\u5b63\u62a5\u4e4b\u540e\u7684\u65e5\u671f\uff08\u6216\u4f60\u6307\u5b9a\u7684\u4f30\u503c\u65e5\uff09\u3002 \u52fe\u9009\u201c\u4f7f\u7528\u5e74\u4e2d\u6298\u73b0\uff08mid_year_convention\uff09\u201d\u3002 NWC \u57fa\u51c6\u53e3\u5f84\uff1a\u9009\u62e9 component \uff08\u5206\u9879\u53e3\u5f84\uff0c\u63a8\u8350\uff09\uff0c\u5e76\u8bbe\u7f6e\u201c\u5929\u6570\u8fc7\u6e21\u5e74\u6570\u201d=3\uff08\u53ef\u8c03\uff09\u3002 WACC \u6743\u91cd\u6a21\u5f0f\uff1a \u82e5\u5f3a\u8c03\u8d34\u8fd1\u73b0\u72b6\uff0c\u9009\u201c\u4f7f\u7528\u6700\u65b0\u5e02\u573a\u4ef7\u503c\u8ba1\u7b97\u6743\u91cd\uff08market\uff09\u201d\u3002 \u82e5\u7ed3\u6784\u9884\u8ba1\u56de\u5f52\u5e38\u6001/\u76ee\u6807\uff0c\u9009\u201c\u4f7f\u7528\u76ee\u6807\u503a\u52a1\u6bd4\u4f8b\uff08target\uff09\u201d\u3002 CRP/IRP\uff1a\u6839\u636e\u516c\u53f8\u5e02\u573a/\u884c\u4e1a\u8bbe\u7f6e\uff08.env \u6216 UI \u8f93\u5165\uff09\uff0cKe \u5c06\u81ea\u52a8\u7eb3\u5165\u3002 \u7ec8\u503c\u65b9\u6cd5\uff1a\u9000\u51fa\u4e58\u6570\u6216\u6c38\u7eed\u589e\u957f\u7387\u6309\u6700\u65b0\u5224\u65ad\u8bbe\u5b9a\uff08\u540e\u7eed\u5c06\u52a0\u5165\u540d\u4e49 GDP \u4e0a\u9650\u6821\u9a8c\u4e0e\u5e38\u9a7b\u63d0\u793a\uff09\u3002 \u8c03\u8bd5\u533a\u68c0\u67e5\uff1a \u8bf7\u6c42\u8f7d\u8377\u6458\u5f55\uff08\u542b nwc_baseline_mode \u3001 nwc_days_transition_years \u3001 mid_year_convention \uff09 \u6620\u5c04\u540e\u5047\u8bbe\u3001\u5386\u53f2\u4e2d\u4f4d\u6570\uff08\u542b last_component_nwc \u3001 last_*_days \uff09 \u9996\u5e74\u9884\u6d4b\u5173\u952e\u9879\uff08 delta_nwc \u3001 ufcf \u7b49\uff09 \u57fa\u671f\u73b0\u91d1\u7684\u9009\u53d6\uff08\u91cd\u8bc4\u5fc5\u8bfb\uff09 \u53d6\u201c\u4f30\u503c\u65e5\u65f6\u70b9\u201d\u7684\u73b0\u91d1\u53ca\u73b0\u91d1\u7b49\u4ef7\u7269\uff08\u5254\u9664\u53d7\u9650\u73b0\u91d1\uff09\u3002 \u82e5\u53ea\u6709\u5e74\u672b\u73b0\u91d1\uff0c\u53ef\u7528\uff1a \u671f\u521d\u73b0\u91d1 + \u81ea\u7531\u73b0\u91d1\u6d41\uff08YTD \u7ecf\u8425/\u6295\u8d44/\u7b79\u8d44\u51c0\u989d\uff09 \u00b1 \u91cd\u5927\u4e8b\u9879 \u56de\u6eda\u81f3\u4f30\u503c\u65e5\u3002 \u4e0e NWC \u4e00\u81f4\u6027\uff1a\u73b0\u91d1\u4e0d\u8fdb NWC\uff0c\u4f7f\u7528\u5206\u9879 NWC \u57fa\u671f\u5373\u53ef\u6d88\u9664 \u0394NWC \u7684\u53e3\u5f84\u8df3\u53d8\u3002 LTM\uff08\u8fc7\u53bb12\u4e2a\u6708\uff09\u652f\u6301 end_type \u53e3\u5f84\u6620\u5c04\uff1a 1=Q1 \u3001 2=H1 \u3001 3=Q3 \u3001 4=\u5e74\u5ea6 \uff08\u5747\u4e3a\u5f53\u5e74 YTD \u53e3\u5f84\uff09\u3002 \u65b0\u589e UI/API \u5f00\u5173\uff1a ltm_baseline_enabled \uff08\u9ed8\u8ba4 False\uff09\u3002\u5f00\u542f\u540e\uff1a \u7ecf\u8425\u57fa\u671f\uff08last_actual_revenue\uff09\u91c7\u7528 LTM \u6362\u7b97\uff1a \u82e5\u6700\u65b0\u4e3a\u5e74\u62a5\uff08end_type=4\uff09\uff1aLTM=\u5f53\u5e74\u5e74\u62a5\uff1b \u82e5\u4e3a 1/2/3\uff1a LTM = YTD_curr + (Annual_prev \u2212 YTD_prev) \uff08\u5206\u522b\u5bf9 revenue \u4e0e total_revenue \u8ba1\u7b97\uff0c\u4f18\u5148\u91c7\u7528 revenue \uff09\u3002 \u8d44\u672c\u7ed3\u6784\u4e0e NWC \u57fa\u671f\uff1a latest_balance_sheet \u6307\u5411\u4f30\u503c\u65e5\u4e4b\u524d\u6700\u8fd1\u4e00\u671f\uff1b last_component_nwc \u57fa\u4e8e\u8be5\u884c\u91cd\u7b97\uff0c\u907f\u514d\u9996\u5e74\u53e3\u5f84\u8df3\u53d8\u3002 \u56de\u9000\u7b56\u7565\uff1a\u5982\u7f3a\u4e0a\u5e74\u540c\u53e3\u5f84\uff08YTD_prev\uff09\u6216\u4e0a\u5e74\u5e74\u62a5\uff08Annual_prev\uff09\uff0c\u5219\u56de\u9000\u4e3a\u201c\u5e74\u62a5\u57fa\u671f\u201d\uff1b\u8c03\u8bd5\u533a\u4f1a\u63d0\u793a\u3002 \u4fdd\u6301\u4e00\u81f4\u6027\uff1a \u5386\u53f2\u4e2d\u4f4d\u6570\uff08\u6bd4\u7387/\u5468\u8f6c\uff09\u4ecd\u57fa\u4e8e\u5e74\u62a5\u5386\u53f2\u5e8f\u5217\u63d0\u53d6\uff1b \u9996\u5e74 last_*_days \u4f7f\u7528\u5386\u53f2\u4e2d\u4f4d\u6570\u5e76\u6309\u8bbe\u7f6e\u8fc7\u6e21\u5e74\u6570\u4ece\u201c\u6700\u65b0\u4e00\u671f\u5b9e\u9645\u503c\u201d\u5e73\u6ed1\uff08\u5982\u53ef\u5f97\uff09\u3002 \u5907\u6ce8\uff1a\u4e0d\u5f00\u542f LTM \u65f6\uff0c\u7cfb\u7edf\u6cbf\u7528\u201c\u5e74\u62a5\u57fa\u671f + \u6700\u65b0\u8d44\u4ea7\u8d1f\u503a\u8868 + \u5e74\u4e2d\u6298\u73b0 + NWC \u5e73\u6ed1\u201d\u7684\u89c4\u8303\u91cd\u8bc4\u3002 \u53e3\u5f84\u4e0e\u663e\u793a\uff082025-09-10 \u66f4\u65b0\uff09 \u57fa\u672c\u4fe1\u606f caption \u663e\u793a\uff1a\u6536\u5165\u57fa\u671f\uff08LTM/\u5e74\u62a5\uff09+ \u8d44\u4ea7\u8d1f\u503a\u8868\u57fa\u51c6\u65e5 \u6700\u65b0\u4ef7\u683c\u6807\u7b7e\uff1a\u5e26 as-of\uff08\u4f30\u503c\u65e5\u6216\u5c0f\u4e8e\u7b49\u4e8e\u4f30\u503c\u65e5\u7684\u6700\u8fd1\u4ea4\u6613\u65e5\uff09 \u6bcf\u80a1\u6536\u76ca\u6807\u7b7e\uff1a\u663e\u793a\u201c\u5e74\u62a5YYYY\u201d\uff08\u2264\u4f30\u503c\u65e5\u7684\u6700\u8fd1\u5e74\u62a5\u5e74\u4efd\uff09 \u80a1\u606f\u6807\u7b7e\uff1a\u4f9d\u636e\u6765\u6e90\u663e\u793a\u201c(TTM)/(TTM\u00b7\u9884\u6848)/(\u5e74\u5ea6)\u201d \u4f55\u65f6\u9009\u54ea\u79cd WACC \u6743\u91cd\u66f4\u79d1\u5b66 \u5e02\u573a\u4ef7\u503c\u6743\u91cd\uff08market\uff09\uff1a\u8d34\u8fd1\u73b0\u72b6\u7684\u5373\u671f\u4f30\u503c\uff1b\u4f46\u53d7\u5e02\u4ef7\u6ce2\u52a8\u5f71\u54cd\u5927\u3002 \u76ee\u6807\u503a\u52a1\u6bd4\u4f8b\uff08target\uff09\uff1a\u9002\u5408\u7ed3\u6784\u5c06\u56de\u5f52\u76ee\u6807/\u884c\u4e1a\u5747\u8861\u3001\u6216\u73b0\u72b6\u660e\u663e\u504f\u79bb\u7684\u60c5\u51b5\u3002 \u6700\u4f73\u5b9e\u8df5\uff1a\u4e24\u8005\u4ea4\u53c9\u6838\u5bf9\uff1b\u82e5\u5dee\u5f02\u663e\u8457\uff0c\u5efa\u8bae\u505a\u654f\u611f\u6027\u5206\u6790\u5e76\u8bf4\u660e\u7406\u7531\u3002 \u5e38\u89c1\u9677\u9631\u4e0e\u5efa\u8bae \u4e0d\u8981\u7528\u201c\u8d44\u4ea7\u8d1f\u503a\u7387\u201d\uff08\u8d26\u9762\u53e3\u5f84\uff09\u4ee3\u66ff WACC \u4e2d\u7684\u201c\u503a\u52a1\u6bd4\u4f8b\u201d\uff08\u5e02\u503c\u53e3\u5f84\u7684\u6709\u606f\u503a\u6743\u91cd\uff09\u3002 \u4e0d\u8981\u7528\u5e73\u5747\u73b0\u91d1\u6216\u5e74\u672b\u73b0\u91d1\u4ee3\u66ff\u201c\u4f30\u503c\u65e5\u73b0\u91d1\u201d\uff1b\u80a1\u6743\u6865\u4e2d\u7684\u51c0\u503a\u52a1\u5fc5\u987b\u662f\u4f30\u503c\u65e5\u53e3\u5f84\u3002 \u5e74\u4e2d\u4e0d\u6539\u4f30\u503c\u65e5\u800c\u76f4\u63a5\u63d2\u5165\u4e2d\u62a5\u6570\u636e\uff0c\u4f1a\u9020\u6210\u65f6\u95f4\u9519\u914d\uff1b\u5efa\u8bae\u5207\u4f30\u503c\u65e5\u6216\u4f7f\u7528\u5e74\u4e2d\u6298\u73b0/\u77ed\u671f\u5206\u6bb5\uff08stub\uff09\u3002 \u7eb3\u5165\u79df\u8d41\u8d1f\u503a\uff08IFRS16\uff09\u65f6\uff0c\u8981\u4e0e UFCF/EBITDA \u53e3\u5f84\u914d\u5957\uff0c\u907f\u514d\u53cc\u91cd\u8c03\u6574\u6216\u9057\u6f0f\u3002 \u91cd\u8bc4\u6e05\u5355\uff08Checklist\uff09 [ ] \u4f30\u503c\u65e5\u9009\u62e9\u5e76\u5bf9\u9f50\u6240\u6709\u6570\u636e [ ] mid_year_convention \u52fe\u9009 [ ] nwc_baseline_mode=component\uff1bnwc_days_transition_years=3\uff08\u5efa\u8bae\uff09 [ ] WACC \u6743\u91cd\u6a21\u5f0f\u4e0e Ke \u53c2\u6570\uff08Rf/\u03b2/MRP/CRP/IRP\uff09\u66f4\u65b0 [ ] \u7ec8\u503c\u53c2\u6570\uff08\u9000\u51fa\u4e58\u6570/PGR\uff09\u66f4\u65b0\uff1b\uff08\u540e\u7eed\uff1a\u540d\u4e49 GDP \u4e0a\u9650\u6821\u9a8c\uff09 [ ] \u51c0\u503a\u52a1\uff1a\u4f30\u503c\u65e5\u6709\u606f\u503a\u52a1\u4e0e\u73b0\u91d1\uff08\u5254\u9664\u53d7\u9650\uff09\u53e3\u5f84\u4e00\u81f4 [ ] \u8c03\u8bd5\u533a\uff1a\u8bf7\u6c42/\u6620\u5c04/\u5386\u53f2\u4e2d\u4f4d\u6570/\u9996\u5e74\u9884\u6d4b\u6838\u5bf9 \u0394NWC \u4e0e UFCF \u5408\u7406\u6027 API \u5b57\u6bb5\u901f\u67e5\uff08\u4e0e UI \u5bf9\u5e94\uff09 mid_year_convention: bool ltm_baseline_enabled: bool nwc_baseline_mode: component|aggregate nwc_days_transition_years: int wacc_weight_mode: market|target , target_debt_ratio cost_of_debt , risk_free_rate , beta , market_risk_premium , country_risk_premium , industry_risk_premium terminal_value_method: exit_multiple|perpetual_growth , exit_multiple , perpetual_growth_rate \u6700\u540e\u66f4\u65b0\uff1a2025-09-10","title":"DCF \u6eda\u52a8\u91cd\u8bc4\u5b9e\u8df5\u6307\u5357\uff08\u5b63\u5ea6/\u4e2d\u62a5\u66f4\u65b0\u7248\uff09"},{"location":"archived/dcf_rolling_revaluation_guide/#dcf","text":"","title":"DCF \u6eda\u52a8\u91cd\u8bc4\u5b9e\u8df5\u6307\u5357\uff08\u5b63\u5ea6/\u4e2d\u62a5\u66f4\u65b0\u7248\uff09"},{"location":"archived/dcf_rolling_revaluation_guide/#_1","text":"\u5b63\u62a5/\u4e2d\u62a5\u53d1\u5e03\u540e \u53ef\u4ee5\u4e14\u5efa\u8bae\u8fdb\u884c\u6eda\u52a8\u91cd\u8bc4 \u3002\u6838\u5fc3\u662f\u628a\u201c\u4f30\u503c\u65e5\u201d\u4e0e\u201c\u57fa\u671f\u53e3\u5f84\u201d\u540c\u6b65\u5230\u6700\u65b0\u62a5\u8868\uff0c\u7136\u540e\u7528\u4e00\u81f4\u53e3\u5f84\u91cd\u7b97\u7ecf\u8425\u4e0e\u8d44\u672c\u7ed3\u6784\u4e24\u6761\u7ebf\u3002 \u201c\u57fa\u671f\u73b0\u91d1\u201d\u7528\u4e8e EV\u2192Equity \u6865\u7684\u51c0\u503a\u52a1\u8ba1\u7b97\uff0c\u5e94\u53d6 \u4f30\u503c\u65e5\u7684\u73b0\u91d1\u53ca\u73b0\u91d1\u7b49\u4ef7\u7269 \uff08\u5254\u9664\u53d7\u9650\u73b0\u91d1\uff09\uff0c\u800c\u4e0d\u662f\u5e73\u5747\u503c\u6216\u5e74\u672b\u6570\u3002 \u672c\u9879\u76ee\u5df2\u652f\u6301\u6eda\u52a8\u91cd\u8bc4\u7684\u5173\u952e\u8981\u7d20\uff1a \u5e74\u4e2d\u6298\u73b0\uff08Mid-Year Convention\uff09 WACC \u589e\u5f3a CAPM\uff08CRP/IRP\uff09\u4e0e\u201c\u76ee\u6807/\u5e02\u573a\u4ef7\u503c\u201d\u4e24\u79cd\u6743\u91cd\u6a21\u5f0f NWC \u5206\u9879\u53e3\u5f84\u57fa\u671f\uff08 last_component_nwc \uff09\u4e0e\u65e5\u6570\u5e73\u6ed1\u8fc7\u6e21\uff08 nwc_days_transition_years \uff09 \u80a1\u6743\u6865\u4ee5\u201c\u6700\u65b0\u8d44\u4ea7\u8d1f\u503a\u8868\u201d\u4e00\u884c\u8ba1\u7b97\u51c0\u503a\u52a1 \u80a1\u606f\u4e0e as-of \u5c55\u793a\uff082025-09-10\uff09\uff1a TTM \u80a1\u606f\u4f18\u5148\u91c7\u7528\u201c\u5b9e\u65bd/\u5b8c\u6210\u201d\uff0c\u6ca1\u6709\u5219\u201cTTM\u00b7\u9884\u6848\u201d\uff0c\u4ecd\u6ca1\u6709\u5219\u201c\u5e74\u5ea6\u6700\u8fd1\u4e00\u6b21\u201d\uff1bUI \u6807\u7b7e\u540c\u6b65\u6807\u6ce8\u6765\u6e90 \u6700\u65b0\u4ef7\u683c\u6309 trade_date \u2264 \u4f30\u503c\u65e5 \u56de\u9000\uff0cEPS\uff08\u5e74\u62a5\uff09\u6309 end_date \u2264 \u4f30\u503c\u65e5 \u56de\u9000\uff1b\u57fa\u672c\u4fe1\u606f\u4e2d\u663e\u793a as-of \u82e5\u8981\u201c\u5b8c\u5168 LTM\uff08\u8fc7\u53bb12\u4e2a\u6708\uff09\u57fa\u671f\u201d\u7684\u7ecf\u8425\u6eda\u52a8\uff0c\u9700\u8981\u5f88\u5c0f\u7684\u6293\u53d6\u4e0e\u5904\u7406\u6269\u5c55\uff1b\u5f53\u524d\u5df2\u53ef\u5b9e\u73b0\u201c\u8d44\u672c\u7ed3\u6784\u6eda\u52a8+\u5e74\u4e2d\u6298\u73b0+NWC\u5e73\u6ed1\u201d\u7684\u89c4\u8303\u91cd\u8bc4\u3002","title":"\u7ed3\u8bba\u901f\u89c8"},{"location":"archived/dcf_rolling_revaluation_guide/#_2","text":"\u5feb\u901f\u91cd\u8bc4\uff08\u4ec5\u5e02\u573a\u4fa7\u6eda\u52a8\uff09 \u4f30\u503c\u65e5\u8bbe\u5230\u5b63\u62a5/\u4e2d\u62a5\u62ab\u9732\u540e\uff0c\u66f4\u65b0\uff1a\u80a1\u4ef7/\u603b\u80a1\u672c\uff08E\uff09\u3001Rd/Rf/\u03b2/MRP/CRP/IRP\u3001\u7ec8\u503c\u5047\u8bbe\uff1b\u52fe\u9009\u5e74\u4e2d\u6298\u73b0\u3002 EV \u53d8\u5316\u4e3b\u8981\u53d7 WACC \u4e0e TV \u9a71\u52a8\uff1b\u51c0\u503a\u52a1\u4e0e\u7ecf\u8425\u57fa\u671f\u4ecd\u662f\u4e0a\u6b21\u5e74\u62a5\u53e3\u5f84\uff08\u5feb\u901f\u4f46\u7c97\u7565\uff09\u3002 \u89c4\u8303\u91cd\u8bc4\uff08\u7ecf\u8425+\u8d44\u672c\u7ed3\u6784\u6eda\u52a8\uff09 \u4f30\u503c\u65e5\u8bbe\u5230\u5b63\u62a5/\u4e2d\u62a5\u62ab\u9732\u65e5\uff08\u6216\u63a5\u8fd1\u7684\u4ea4\u6613\u65e5\uff09\u3002 NWC \u57fa\u671f\u7528\u5206\u9879\u53e3\u5f84 last_component_nwc \uff0c\u5e76\u8bbe\u7f6e nwc_days_transition_years \uff08\u5efa\u8bae 3 \u5e74\uff09\u4ece last_*_days \u2192 \u5386\u53f2\u4e2d\u4f4d\u6570\u65e5\u6570\u5e73\u6ed1\u8fc7\u6e21\uff0c\u907f\u514d\u9996\u5e74 \u0394NWC \u8df3\u53d8\u3002 \u51c0\u503a\u52a1\uff1a\u4ee5\u201c\u6700\u65b0\u8d44\u4ea7\u8d1f\u503a\u8868\u201d\u4e00\u884c\u7684 \u6709\u606f\u503a\u52a1 \u2212 \u73b0\u91d1\u53ca\u73b0\u91d1\u7b49\u4ef7\u7269 \u8ba1\u7b97\uff08\u4f30\u503c\u65e5\u53e3\u5f84\uff09\u3002 \u52fe\u9009\u5e74\u4e2d\u6298\u73b0\uff1bTV \u53c2\u6570\u6309\u6700\u65b0\u5224\u65ad\u91cd\u4f30\u3002","title":"\u91cd\u8bc4\u7684\u4e24\u79cd\u65b9\u5f0f"},{"location":"archived/dcf_rolling_revaluation_guide/#_3","text":"UFCF \u4e0d\u542b\u73b0\u91d1\uff1aNWC \u4ee5\u7ecf\u8425\u6027\u79d1\u76ee\u8ba1\u7b97\uff08\u73b0\u91d1\u4e0d\u8fdb NWC\uff09\u3002 \u51c0\u503a\u52a1\uff08\u4f30\u503c\u65e5\uff09\uff1a NetDebt = Interest-bearing Debt \u2212 Cash & Equivalents \u3002 WACC\uff1a Ke = Rf + \u03b2 \u00d7 (MRP + CRP) + Size + IRP Kd_AT = Kd \u00d7 (1 \u2212 Tax) \uff08\u5efa\u8bae\u7528\u8fb9\u9645\u7a0e\u7387\uff1b\u7cfb\u7edf\u5f53\u524d\u7528\u76ee\u6807\u6709\u6548\u7a0e\u7387\uff09 WACC = w_e \u00d7 Ke + w_d \u00d7 Kd_AT \u6743\u91cd\u6a21\u5f0f\uff1a \u76ee\u6807\u7ed3\u6784\uff1a w_d = target_debt_ratio \uff0c w_e = 1 \u2212 w_d \u3002 \u5e02\u573a\u4ef7\u503c\uff1a w_d = D/(D+E) \uff08 E=\u5e02\u503c=\u80a1\u4ef7\u00d7\u603b\u80a1\u672c \uff1b D\u2248\u6709\u606f\u503a\u8d26\u9762\u503c\u8fd1\u4f3c\u5e02\u573a\u4ef7\u503c \uff09\u3002 \u6298\u73b0\u65f6\u70b9\uff1a\u53ef\u542f\u7528\u5e74\u4e2d\u6298\u73b0\uff08Mid-Year\uff09\uff0c\u7b49\u4ef7\u4e8e\u6307\u6570\u7528 (year \u2212 0.5) \u3002","title":"\u5173\u952e\u53e3\u5f84\u4e0e\u516c\u5f0f"},{"location":"archived/dcf_rolling_revaluation_guide/#_4","text":"\u4f30\u503c\u65e5\uff1a\u5728 UI \u9009\u62e9\u4e2d\u62a5/\u5b63\u62a5\u4e4b\u540e\u7684\u65e5\u671f\uff08\u6216\u4f60\u6307\u5b9a\u7684\u4f30\u503c\u65e5\uff09\u3002 \u52fe\u9009\u201c\u4f7f\u7528\u5e74\u4e2d\u6298\u73b0\uff08mid_year_convention\uff09\u201d\u3002 NWC \u57fa\u51c6\u53e3\u5f84\uff1a\u9009\u62e9 component \uff08\u5206\u9879\u53e3\u5f84\uff0c\u63a8\u8350\uff09\uff0c\u5e76\u8bbe\u7f6e\u201c\u5929\u6570\u8fc7\u6e21\u5e74\u6570\u201d=3\uff08\u53ef\u8c03\uff09\u3002 WACC \u6743\u91cd\u6a21\u5f0f\uff1a \u82e5\u5f3a\u8c03\u8d34\u8fd1\u73b0\u72b6\uff0c\u9009\u201c\u4f7f\u7528\u6700\u65b0\u5e02\u573a\u4ef7\u503c\u8ba1\u7b97\u6743\u91cd\uff08market\uff09\u201d\u3002 \u82e5\u7ed3\u6784\u9884\u8ba1\u56de\u5f52\u5e38\u6001/\u76ee\u6807\uff0c\u9009\u201c\u4f7f\u7528\u76ee\u6807\u503a\u52a1\u6bd4\u4f8b\uff08target\uff09\u201d\u3002 CRP/IRP\uff1a\u6839\u636e\u516c\u53f8\u5e02\u573a/\u884c\u4e1a\u8bbe\u7f6e\uff08.env \u6216 UI \u8f93\u5165\uff09\uff0cKe \u5c06\u81ea\u52a8\u7eb3\u5165\u3002 \u7ec8\u503c\u65b9\u6cd5\uff1a\u9000\u51fa\u4e58\u6570\u6216\u6c38\u7eed\u589e\u957f\u7387\u6309\u6700\u65b0\u5224\u65ad\u8bbe\u5b9a\uff08\u540e\u7eed\u5c06\u52a0\u5165\u540d\u4e49 GDP \u4e0a\u9650\u6821\u9a8c\u4e0e\u5e38\u9a7b\u63d0\u793a\uff09\u3002 \u8c03\u8bd5\u533a\u68c0\u67e5\uff1a \u8bf7\u6c42\u8f7d\u8377\u6458\u5f55\uff08\u542b nwc_baseline_mode \u3001 nwc_days_transition_years \u3001 mid_year_convention \uff09 \u6620\u5c04\u540e\u5047\u8bbe\u3001\u5386\u53f2\u4e2d\u4f4d\u6570\uff08\u542b last_component_nwc \u3001 last_*_days \uff09 \u9996\u5e74\u9884\u6d4b\u5173\u952e\u9879\uff08 delta_nwc \u3001 ufcf \u7b49\uff09","title":"\u5728\u5f53\u524d\u7cfb\u7edf\u5982\u4f55\u64cd\u4f5c"},{"location":"archived/dcf_rolling_revaluation_guide/#_5","text":"\u53d6\u201c\u4f30\u503c\u65e5\u65f6\u70b9\u201d\u7684\u73b0\u91d1\u53ca\u73b0\u91d1\u7b49\u4ef7\u7269\uff08\u5254\u9664\u53d7\u9650\u73b0\u91d1\uff09\u3002 \u82e5\u53ea\u6709\u5e74\u672b\u73b0\u91d1\uff0c\u53ef\u7528\uff1a \u671f\u521d\u73b0\u91d1 + \u81ea\u7531\u73b0\u91d1\u6d41\uff08YTD \u7ecf\u8425/\u6295\u8d44/\u7b79\u8d44\u51c0\u989d\uff09 \u00b1 \u91cd\u5927\u4e8b\u9879 \u56de\u6eda\u81f3\u4f30\u503c\u65e5\u3002 \u4e0e NWC \u4e00\u81f4\u6027\uff1a\u73b0\u91d1\u4e0d\u8fdb NWC\uff0c\u4f7f\u7528\u5206\u9879 NWC \u57fa\u671f\u5373\u53ef\u6d88\u9664 \u0394NWC \u7684\u53e3\u5f84\u8df3\u53d8\u3002","title":"\u57fa\u671f\u73b0\u91d1\u7684\u9009\u53d6\uff08\u91cd\u8bc4\u5fc5\u8bfb\uff09"},{"location":"archived/dcf_rolling_revaluation_guide/#ltm12","text":"end_type \u53e3\u5f84\u6620\u5c04\uff1a 1=Q1 \u3001 2=H1 \u3001 3=Q3 \u3001 4=\u5e74\u5ea6 \uff08\u5747\u4e3a\u5f53\u5e74 YTD \u53e3\u5f84\uff09\u3002 \u65b0\u589e UI/API \u5f00\u5173\uff1a ltm_baseline_enabled \uff08\u9ed8\u8ba4 False\uff09\u3002\u5f00\u542f\u540e\uff1a \u7ecf\u8425\u57fa\u671f\uff08last_actual_revenue\uff09\u91c7\u7528 LTM \u6362\u7b97\uff1a \u82e5\u6700\u65b0\u4e3a\u5e74\u62a5\uff08end_type=4\uff09\uff1aLTM=\u5f53\u5e74\u5e74\u62a5\uff1b \u82e5\u4e3a 1/2/3\uff1a LTM = YTD_curr + (Annual_prev \u2212 YTD_prev) \uff08\u5206\u522b\u5bf9 revenue \u4e0e total_revenue \u8ba1\u7b97\uff0c\u4f18\u5148\u91c7\u7528 revenue \uff09\u3002 \u8d44\u672c\u7ed3\u6784\u4e0e NWC \u57fa\u671f\uff1a latest_balance_sheet \u6307\u5411\u4f30\u503c\u65e5\u4e4b\u524d\u6700\u8fd1\u4e00\u671f\uff1b last_component_nwc \u57fa\u4e8e\u8be5\u884c\u91cd\u7b97\uff0c\u907f\u514d\u9996\u5e74\u53e3\u5f84\u8df3\u53d8\u3002 \u56de\u9000\u7b56\u7565\uff1a\u5982\u7f3a\u4e0a\u5e74\u540c\u53e3\u5f84\uff08YTD_prev\uff09\u6216\u4e0a\u5e74\u5e74\u62a5\uff08Annual_prev\uff09\uff0c\u5219\u56de\u9000\u4e3a\u201c\u5e74\u62a5\u57fa\u671f\u201d\uff1b\u8c03\u8bd5\u533a\u4f1a\u63d0\u793a\u3002 \u4fdd\u6301\u4e00\u81f4\u6027\uff1a \u5386\u53f2\u4e2d\u4f4d\u6570\uff08\u6bd4\u7387/\u5468\u8f6c\uff09\u4ecd\u57fa\u4e8e\u5e74\u62a5\u5386\u53f2\u5e8f\u5217\u63d0\u53d6\uff1b \u9996\u5e74 last_*_days \u4f7f\u7528\u5386\u53f2\u4e2d\u4f4d\u6570\u5e76\u6309\u8bbe\u7f6e\u8fc7\u6e21\u5e74\u6570\u4ece\u201c\u6700\u65b0\u4e00\u671f\u5b9e\u9645\u503c\u201d\u5e73\u6ed1\uff08\u5982\u53ef\u5f97\uff09\u3002 \u5907\u6ce8\uff1a\u4e0d\u5f00\u542f LTM \u65f6\uff0c\u7cfb\u7edf\u6cbf\u7528\u201c\u5e74\u62a5\u57fa\u671f + \u6700\u65b0\u8d44\u4ea7\u8d1f\u503a\u8868 + \u5e74\u4e2d\u6298\u73b0 + NWC \u5e73\u6ed1\u201d\u7684\u89c4\u8303\u91cd\u8bc4\u3002","title":"LTM\uff08\u8fc7\u53bb12\u4e2a\u6708\uff09\u652f\u6301"},{"location":"archived/dcf_rolling_revaluation_guide/#2025-09-10","text":"\u57fa\u672c\u4fe1\u606f caption \u663e\u793a\uff1a\u6536\u5165\u57fa\u671f\uff08LTM/\u5e74\u62a5\uff09+ \u8d44\u4ea7\u8d1f\u503a\u8868\u57fa\u51c6\u65e5 \u6700\u65b0\u4ef7\u683c\u6807\u7b7e\uff1a\u5e26 as-of\uff08\u4f30\u503c\u65e5\u6216\u5c0f\u4e8e\u7b49\u4e8e\u4f30\u503c\u65e5\u7684\u6700\u8fd1\u4ea4\u6613\u65e5\uff09 \u6bcf\u80a1\u6536\u76ca\u6807\u7b7e\uff1a\u663e\u793a\u201c\u5e74\u62a5YYYY\u201d\uff08\u2264\u4f30\u503c\u65e5\u7684\u6700\u8fd1\u5e74\u62a5\u5e74\u4efd\uff09 \u80a1\u606f\u6807\u7b7e\uff1a\u4f9d\u636e\u6765\u6e90\u663e\u793a\u201c(TTM)/(TTM\u00b7\u9884\u6848)/(\u5e74\u5ea6)\u201d","title":"\u53e3\u5f84\u4e0e\u663e\u793a\uff082025-09-10 \u66f4\u65b0\uff09"},{"location":"archived/dcf_rolling_revaluation_guide/#wacc","text":"\u5e02\u573a\u4ef7\u503c\u6743\u91cd\uff08market\uff09\uff1a\u8d34\u8fd1\u73b0\u72b6\u7684\u5373\u671f\u4f30\u503c\uff1b\u4f46\u53d7\u5e02\u4ef7\u6ce2\u52a8\u5f71\u54cd\u5927\u3002 \u76ee\u6807\u503a\u52a1\u6bd4\u4f8b\uff08target\uff09\uff1a\u9002\u5408\u7ed3\u6784\u5c06\u56de\u5f52\u76ee\u6807/\u884c\u4e1a\u5747\u8861\u3001\u6216\u73b0\u72b6\u660e\u663e\u504f\u79bb\u7684\u60c5\u51b5\u3002 \u6700\u4f73\u5b9e\u8df5\uff1a\u4e24\u8005\u4ea4\u53c9\u6838\u5bf9\uff1b\u82e5\u5dee\u5f02\u663e\u8457\uff0c\u5efa\u8bae\u505a\u654f\u611f\u6027\u5206\u6790\u5e76\u8bf4\u660e\u7406\u7531\u3002","title":"\u4f55\u65f6\u9009\u54ea\u79cd WACC \u6743\u91cd\u66f4\u79d1\u5b66"},{"location":"archived/dcf_rolling_revaluation_guide/#_6","text":"\u4e0d\u8981\u7528\u201c\u8d44\u4ea7\u8d1f\u503a\u7387\u201d\uff08\u8d26\u9762\u53e3\u5f84\uff09\u4ee3\u66ff WACC \u4e2d\u7684\u201c\u503a\u52a1\u6bd4\u4f8b\u201d\uff08\u5e02\u503c\u53e3\u5f84\u7684\u6709\u606f\u503a\u6743\u91cd\uff09\u3002 \u4e0d\u8981\u7528\u5e73\u5747\u73b0\u91d1\u6216\u5e74\u672b\u73b0\u91d1\u4ee3\u66ff\u201c\u4f30\u503c\u65e5\u73b0\u91d1\u201d\uff1b\u80a1\u6743\u6865\u4e2d\u7684\u51c0\u503a\u52a1\u5fc5\u987b\u662f\u4f30\u503c\u65e5\u53e3\u5f84\u3002 \u5e74\u4e2d\u4e0d\u6539\u4f30\u503c\u65e5\u800c\u76f4\u63a5\u63d2\u5165\u4e2d\u62a5\u6570\u636e\uff0c\u4f1a\u9020\u6210\u65f6\u95f4\u9519\u914d\uff1b\u5efa\u8bae\u5207\u4f30\u503c\u65e5\u6216\u4f7f\u7528\u5e74\u4e2d\u6298\u73b0/\u77ed\u671f\u5206\u6bb5\uff08stub\uff09\u3002 \u7eb3\u5165\u79df\u8d41\u8d1f\u503a\uff08IFRS16\uff09\u65f6\uff0c\u8981\u4e0e UFCF/EBITDA \u53e3\u5f84\u914d\u5957\uff0c\u907f\u514d\u53cc\u91cd\u8c03\u6574\u6216\u9057\u6f0f\u3002","title":"\u5e38\u89c1\u9677\u9631\u4e0e\u5efa\u8bae"},{"location":"archived/dcf_rolling_revaluation_guide/#checklist","text":"[ ] \u4f30\u503c\u65e5\u9009\u62e9\u5e76\u5bf9\u9f50\u6240\u6709\u6570\u636e [ ] mid_year_convention \u52fe\u9009 [ ] nwc_baseline_mode=component\uff1bnwc_days_transition_years=3\uff08\u5efa\u8bae\uff09 [ ] WACC \u6743\u91cd\u6a21\u5f0f\u4e0e Ke \u53c2\u6570\uff08Rf/\u03b2/MRP/CRP/IRP\uff09\u66f4\u65b0 [ ] \u7ec8\u503c\u53c2\u6570\uff08\u9000\u51fa\u4e58\u6570/PGR\uff09\u66f4\u65b0\uff1b\uff08\u540e\u7eed\uff1a\u540d\u4e49 GDP \u4e0a\u9650\u6821\u9a8c\uff09 [ ] \u51c0\u503a\u52a1\uff1a\u4f30\u503c\u65e5\u6709\u606f\u503a\u52a1\u4e0e\u73b0\u91d1\uff08\u5254\u9664\u53d7\u9650\uff09\u53e3\u5f84\u4e00\u81f4 [ ] \u8c03\u8bd5\u533a\uff1a\u8bf7\u6c42/\u6620\u5c04/\u5386\u53f2\u4e2d\u4f4d\u6570/\u9996\u5e74\u9884\u6d4b\u6838\u5bf9 \u0394NWC \u4e0e UFCF \u5408\u7406\u6027","title":"\u91cd\u8bc4\u6e05\u5355\uff08Checklist\uff09"},{"location":"archived/dcf_rolling_revaluation_guide/#api-ui","text":"mid_year_convention: bool ltm_baseline_enabled: bool nwc_baseline_mode: component|aggregate nwc_days_transition_years: int wacc_weight_mode: market|target , target_debt_ratio cost_of_debt , risk_free_rate , beta , market_risk_premium , country_risk_premium , industry_risk_premium terminal_value_method: exit_multiple|perpetual_growth , exit_multiple , perpetual_growth_rate \u6700\u540e\u66f4\u65b0\uff1a2025-09-10","title":"API \u5b57\u6bb5\u901f\u67e5\uff08\u4e0e UI \u5bf9\u5e94\uff09"},{"location":"archived/directory_optimization_plan/","text":"\u9879\u76ee\u76ee\u5f55\u7ed3\u6784\u4f18\u5316\u65b9\u6848 \u5f53\u524d\u76ee\u5f55\u7ed3\u6784\u95ee\u9898\u5206\u6790 1. \u6839\u76ee\u5f55\u6587\u4ef6\u8fc7\u591a\u4e14\u6563\u4e71 \u95ee\u9898\u63cf\u8ff0 : - \u6839\u76ee\u5f55\u4e0b\u67098\u4e2a\u8ba1\u7b97\u5668\u6587\u4ef6\u76f4\u63a5\u6563\u843d - \u7f3a\u4e4f\u6e05\u6670\u7684\u6a21\u5757\u5206\u5c42\u548c\u7ec4\u7ec7 - \u6587\u4ef6\u547d\u540d\u4e0d\u591f\u89c4\u8303\u7edf\u4e00 \u5f53\u524d\u6563\u4e71\u6587\u4ef6 : \u251c\u2500\u2500 equity_bridge_calculator.py \u251c\u2500\u2500 fcf_calculator.py \u251c\u2500\u2500 nwc_calculator.py \u251c\u2500\u2500 present_value_calculator.py \u251c\u2500\u2500 terminal_value_calculator.py \u251c\u2500\u2500 wacc_calculator.py \u251c\u2500\u2500 data_fetcher.py \u251c\u2500\u2500 data_processor.py \u251c\u2500\u2500 financial_forecaster.py \u251c\u2500\u2500 stock_screener_app.py \u251c\u2500\u2500 stock_screener_data.py \u251c\u2500\u2500 streamlit_app.py \u251c\u2500\u2500 st_utils.py \u251c\u2500\u2500 tushare_screener_poc.py 2. \u7f3a\u4e4f\u6e05\u6670\u7684\u4e1a\u52a1\u6a21\u5757\u5212\u5206 \u95ee\u9898 : - \u4f30\u503c\u8ba1\u7b97\u3001\u6570\u636e\u5904\u7406\u3001\u754c\u9762\u5c55\u793a\u6df7\u6742\u5728\u6839\u76ee\u5f55 - \u6ca1\u6709\u6309\u7167\u4e1a\u52a1\u529f\u80fd\u8fdb\u884c\u6a21\u5757\u5316\u7ec4\u7ec7 - \u96be\u4ee5\u7ef4\u62a4\u548c\u6269\u5c55 3. \u6df7\u5408\u67b6\u6784\u51c6\u5907\u4e0d\u8db3 \u95ee\u9898 : - data_sources/ \u76ee\u5f55\u7ed3\u6784\u5df2\u5efa\u7acb\u4f46\u7a7a\u7f6e - \u7f3a\u4e4f\u4e0e\u73b0\u6709\u4ee3\u7801\u7684\u6574\u5408\u89c4\u5212 - \u65b0\u65e7\u67b6\u6784\u5e76\u5b58\u5bfc\u81f4\u6df7\u4e71 \u4f18\u5316\u76ee\u6807 1. \u5efa\u7acb\u6e05\u6670\u7684\u5206\u5c42\u67b6\u6784 \u4e1a\u52a1\u5c42 : \u4f30\u503c\u8ba1\u7b97\u3001\u8d22\u52a1\u5206\u6790 \u670d\u52a1\u5c42 : \u6570\u636e\u670d\u52a1\u3001\u7f13\u5b58\u670d\u52a1 \u6570\u636e\u5c42 : \u6570\u636e\u83b7\u53d6\u3001\u6570\u636e\u5904\u7406 \u63a5\u53e3\u5c42 : API\u63a5\u53e3\u3001\u7528\u6237\u754c\u9762 2. \u6a21\u5757\u5316\u7ec4\u7ec7 \u6309\u529f\u80fd\u57df\u5212\u5206\u6a21\u5757 \u6bcf\u4e2a\u6a21\u5757\u804c\u8d23\u5355\u4e00 \u6a21\u5757\u95f4\u4f9d\u8d56\u5173\u7cfb\u6e05\u6670 3. \u4e3a\u6df7\u5408\u67b6\u6784\u505a\u51c6\u5907 \u9884\u7559\u6570\u636e\u6e90\u6269\u5c55\u7a7a\u95f4 \u652f\u6301\u65b0\u65e7\u67b6\u6784\u5e73\u6ed1\u8fc7\u6e21 \u4fbf\u4e8e\u540e\u7eed\u91cd\u6784\u548c\u8fc1\u79fb \u4f18\u5316\u65b9\u6848 \u65b0\u76ee\u5f55\u7ed3\u6784\u8bbe\u8ba1 stock_vale_valuation_3.0/ \u251c\u2500\u2500 README.md \u251c\u2500\u2500 pyproject.toml \u251c\u2500\u2500 Dockerfile \u251c\u2500\u2500 supervisord.conf \u251c\u2500\u2500 .env.example \u251c\u2500\u2500 .gitignore \u251c\u2500\u2500 .pre-commit-config.yaml \u251c\u2500\u2500 .clineignore \u2502 \u251c\u2500\u2500 .trae/ # IDE\u914d\u7f6e \u2502 \u2514\u2500\u2500 rules/ \u2502 \u251c\u2500\u2500 config/ # \u914d\u7f6e\u6587\u4ef6 \u2502 \u2514\u2500\u2500 llm_prompt_template.md \u2502 \u251c\u2500\u2500 src/ # \u6e90\u4ee3\u7801\u4e3b\u76ee\u5f55 \u2502 \u251c\u2500\u2500 __init__.py \u2502 \u2502 \u2502 \u251c\u2500\u2500 core/ # \u6838\u5fc3\u4e1a\u52a1\u903b\u8f91 \u2502 \u2502 \u251c\u2500\u2500 __init__.py \u2502 \u2502 \u251c\u2500\u2500 calculators/ # \u4f30\u503c\u8ba1\u7b97\u5668\u6a21\u5757 \u2502 \u2502 \u2502 \u251c\u2500\u2500 __init__.py \u2502 \u2502 \u2502 \u251c\u2500\u2500 base.py # \u8ba1\u7b97\u5668\u57fa\u7c7b \u2502 \u2502 \u2502 \u251c\u2500\u2500 dcf/ # DCF\u4f30\u503c\u76f8\u5173 \u2502 \u2502 \u2502 \u2502 \u251c\u2500\u2500 __init__.py \u2502 \u2502 \u2502 \u2502 \u251c\u2500\u2500 fcf_calculator.py \u2502 \u2502 \u2502 \u2502 \u251c\u2500\u2500 terminal_value_calculator.py \u2502 \u2502 \u2502 \u2502 \u251c\u2500\u2500 present_value_calculator.py \u2502 \u2502 \u2502 \u2502 \u2514\u2500\u2500 wacc_calculator.py \u2502 \u2502 \u2502 \u251c\u2500\u2500 equity_bridge_calculator.py \u2502 \u2502 \u2502 \u2514\u2500\u2500 nwc_calculator.py \u2502 \u2502 \u2502 \u2502 \u2502 \u251c\u2500\u2500 financial/ # \u8d22\u52a1\u5206\u6790\u6a21\u5757 \u2502 \u2502 \u2502 \u251c\u2500\u2500 __init__.py \u2502 \u2502 \u2502 \u251c\u2500\u2500 forecaster.py # \u91cd\u547d\u540d\u81eafinancial_forecaster.py \u2502 \u2502 \u2502 \u2514\u2500\u2500 processor.py # \u91cd\u547d\u540d\u81eadata_processor.py \u2502 \u2502 \u2502 \u2502 \u2502 \u2514\u2500\u2500 screener/ # \u80a1\u7968\u7b5b\u9009\u6a21\u5757 \u2502 \u2502 \u251c\u2500\u2500 __init__.py \u2502 \u2502 \u251c\u2500\u2500 engine.py # \u91cd\u547d\u540d\u81eastock_screener_app.py \u2502 \u2502 \u2514\u2500\u2500 data_handler.py # \u91cd\u547d\u540d\u81eastock_screener_data.py \u2502 \u2502 \u2502 \u251c\u2500\u2500 data/ # \u6570\u636e\u5c42 \u2502 \u2502 \u251c\u2500\u2500 __init__.py \u2502 \u2502 \u251c\u2500\u2500 fetchers/ # \u6570\u636e\u83b7\u53d6\u5668 \u2502 \u2502 \u2502 \u251c\u2500\u2500 __init__.py \u2502 \u2502 \u2502 \u251c\u2500\u2500 base.py # \u6570\u636e\u83b7\u53d6\u5668\u57fa\u7c7b \u2502 \u2502 \u2502 \u251c\u2500\u2500 tushare_fetcher.py \u2502 \u2502 \u2502 \u2514\u2500\u2500 postgresql_fetcher.py \u2502 \u2502 \u2502 \u2502 \u2502 \u251c\u2500\u2500 processors/ # \u6570\u636e\u5904\u7406\u5668 \u2502 \u2502 \u2502 \u251c\u2500\u2500 __init__.py \u2502 \u2502 \u2502 \u2514\u2500\u2500 base_processor.py \u2502 \u2502 \u2502 \u2502 \u2502 \u2514\u2500\u2500 cache/ # \u7f13\u5b58\u7ba1\u7406 \u2502 \u2502 \u251c\u2500\u2500 __init__.py \u2502 \u2502 \u251c\u2500\u2500 redis_cache.py \u2502 \u2502 \u2514\u2500\u2500 local_cache.py \u2502 \u2502 \u2502 \u251c\u2500\u2500 services/ # \u670d\u52a1\u5c42 \u2502 \u2502 \u251c\u2500\u2500 __init__.py \u2502 \u2502 \u251c\u2500\u2500 data_source_manager.py # \u6570\u636e\u6e90\u7ba1\u7406\u5668 \u2502 \u2502 \u251c\u2500\u2500 valuation_service.py # \u4f30\u503c\u670d\u52a1 \u2502 \u2502 \u2514\u2500\u2500 health_checker.py # \u5065\u5eb7\u68c0\u67e5\u670d\u52a1 \u2502 \u2502 \u2502 \u2514\u2500\u2500 utils/ # \u5de5\u5177\u6a21\u5757 \u2502 \u251c\u2500\u2500 __init__.py \u2502 \u251c\u2500\u2500 streamlit_utils.py # \u91cd\u547d\u540d\u81east_utils.py \u2502 \u2514\u2500\u2500 common.py # \u901a\u7528\u5de5\u5177\u51fd\u6570 \u2502 \u251c\u2500\u2500 api/ # API\u63a5\u53e3\u5c42 \u2502 \u251c\u2500\u2500 __init__.py \u2502 \u251c\u2500\u2500 main.py \u2502 \u251c\u2500\u2500 models.py \u2502 \u251c\u2500\u2500 sensitivity_models.py \u2502 \u251c\u2500\u2500 utils.py \u2502 \u2514\u2500\u2500 llm_utils.py \u2502 \u251c\u2500\u2500 apps/ # \u5e94\u7528\u7a0b\u5e8f \u2502 \u251c\u2500\u2500 __init__.py \u2502 \u251c\u2500\u2500 streamlit_app.py # \u4e3bStreamlit\u5e94\u7528 \u2502 \u2514\u2500\u2500 poc/ # \u6982\u5ff5\u9a8c\u8bc1\u5e94\u7528 \u2502 \u251c\u2500\u2500 __init__.py \u2502 \u2514\u2500\u2500 tushare_screener_poc.py \u2502 \u251c\u2500\u2500 data_sources/ # \u6df7\u5408\u67b6\u6784\u6570\u636e\u6e90(\u4fdd\u7559) \u2502 \u251c\u2500\u2500 cache/ \u2502 \u251c\u2500\u2500 fetchers/ \u2502 \u251c\u2500\u2500 health/ \u2502 \u2514\u2500\u2500 managers/ \u2502 \u251c\u2500\u2500 tests/ # \u6d4b\u8bd5\u76ee\u5f55 \u2502 \u251c\u2500\u2500 __init__.py \u2502 \u251c\u2500\u2500 unit/ # \u5355\u5143\u6d4b\u8bd5 \u2502 \u2502 \u251c\u2500\u2500 core/ \u2502 \u2502 \u251c\u2500\u2500 data/ \u2502 \u2502 \u2514\u2500\u2500 services/ \u2502 \u251c\u2500\u2500 integration/ # \u96c6\u6210\u6d4b\u8bd5 \u2502 \u2514\u2500\u2500 api/ # API\u6d4b\u8bd5 \u2502 \u251c\u2500\u2500 dev_docs/ # \u5f00\u53d1\u6587\u6863 \u251c\u2500\u2500 memory-bank/ # \u8bb0\u5fc6\u5e93 \u2514\u2500\u2500 wiki/ # \u9879\u76ee\u6587\u6863 \u91cd\u6784\u6b65\u9aa4 \u7b2c\u4e00\u9636\u6bb5: \u521b\u5efa\u65b0\u76ee\u5f55\u7ed3\u6784 \u521b\u5efasrc\u4e3b\u76ee\u5f55\u548c\u5b50\u6a21\u5757 bash mkdir -p src/{core/{calculators/{dcf},financial,screener},data/{fetchers,processors,cache},services,utils} mkdir -p apps/poc mkdir -p tests/{unit/{core,data,services},integration} \u521b\u5efa__init__.py\u6587\u4ef6 \u4e3a\u6240\u6709Python\u5305\u76ee\u5f55\u6dfb\u52a0__init__.py \u5b9a\u4e49\u6a21\u5757\u5bfc\u51fa\u63a5\u53e3 \u7b2c\u4e8c\u9636\u6bb5: \u79fb\u52a8\u548c\u91cd\u547d\u540d\u6587\u4ef6 \u79fb\u52a8\u8ba1\u7b97\u5668\u6587\u4ef6\u5230core/calculators/ ```bash # DCF\u76f8\u5173\u8ba1\u7b97\u5668 mv fcf_calculator.py src/core/calculators/dcf/ mv terminal_value_calculator.py src/core/calculators/dcf/ mv present_value_calculator.py src/core/calculators/dcf/ mv wacc_calculator.py src/core/calculators/dcf/ # \u5176\u4ed6\u8ba1\u7b97\u5668 mv equity_bridge_calculator.py src/core/calculators/ mv nwc_calculator.py src/core/calculators/ ``` \u79fb\u52a8\u8d22\u52a1\u5206\u6790\u6587\u4ef6 bash mv financial_forecaster.py src/core/financial/forecaster.py mv data_processor.py src/core/financial/processor.py \u79fb\u52a8\u7b5b\u9009\u5668\u6587\u4ef6 bash mv stock_screener_app.py src/core/screener/engine.py mv stock_screener_data.py src/core/screener/data_handler.py \u79fb\u52a8\u5e94\u7528\u7a0b\u5e8f\u6587\u4ef6 bash mv streamlit_app.py apps/ mv tushare_screener_poc.py apps/poc/ \u79fb\u52a8\u5de5\u5177\u6587\u4ef6 bash mv st_utils.py src/utils/streamlit_utils.py mv data_fetcher.py src/data/fetchers/base_fetcher.py \u7b2c\u4e09\u9636\u6bb5: \u66f4\u65b0\u5bfc\u5165\u8def\u5f84 \u66f4\u65b0\u6240\u6709\u6587\u4ef6\u7684import\u8bed\u53e5 \u4f7f\u7528\u76f8\u5bf9\u5bfc\u5165\u6216\u7edd\u5bf9\u5bfc\u5165 \u786e\u4fdd\u6a21\u5757\u8def\u5f84\u6b63\u786e \u66f4\u65b0\u6d4b\u8bd5\u6587\u4ef6\u5bfc\u5165 \u4fee\u6539\u6d4b\u8bd5\u6587\u4ef6\u4e2d\u7684\u5bfc\u5165\u8def\u5f84 \u786e\u4fdd\u6d4b\u8bd5\u4ecd\u80fd\u6b63\u5e38\u8fd0\u884c \u66f4\u65b0API\u548c\u5e94\u7528\u7a0b\u5e8f\u5bfc\u5165 \u4fee\u6539FastAPI\u8def\u7531\u5bfc\u5165 \u4fee\u6539Streamlit\u5e94\u7528\u5bfc\u5165 \u7b2c\u56db\u9636\u6bb5: \u521b\u5efa\u6a21\u5757\u63a5\u53e3 \u5b9a\u4e49__init__.py\u5bfc\u51fa ```python # src/core/calculators/ init .py from .dcf.fcf_calculator import FCFCalculator from .dcf.wacc_calculator import WACCCalculator from .equity_bridge_calculator import EquityBridgeCalculator all = ['FCFCalculator', 'WACCCalculator', 'EquityBridgeCalculator'] ``` \u521b\u5efa\u57fa\u7c7b\u548c\u63a5\u53e3 ```python # src/core/calculators/base.py from abc import ABC, abstractmethod class BaseCalculator(ABC): \"\"\"\u8ba1\u7b97\u5668\u57fa\u7c7b\"\"\" @abstractmethod def calculate(self, *args, **kwargs): \"\"\"\u6267\u884c\u8ba1\u7b97\"\"\" pass ``` \u7b2c\u4e94\u9636\u6bb5: \u9a8c\u8bc1\u548c\u6d4b\u8bd5 \u8fd0\u884c\u6240\u6709\u6d4b\u8bd5 bash python -m pytest tests/ -v \u9a8c\u8bc1\u5e94\u7528\u7a0b\u5e8f\u542f\u52a8 ```bash # \u9a8c\u8bc1API\u670d\u52a1 uvicorn api.main:app --reload # \u9a8c\u8bc1Streamlit\u5e94\u7528 streamlit run apps/streamlit_app.py ``` \u68c0\u67e5\u4ee3\u7801\u8d28\u91cf bash ruff check src/ black --check src/ \u8fc1\u79fb\u6ce8\u610f\u4e8b\u9879 1. \u4fdd\u6301\u5411\u540e\u517c\u5bb9 \u5728\u6839\u76ee\u5f55\u4fdd\u7559\u7b26\u53f7\u94fe\u63a5\u6216\u5bfc\u5165\u522b\u540d \u9010\u6b65\u8fc1\u79fb\uff0c\u907f\u514d\u4e00\u6b21\u6027\u5927\u6539\u52a8 \u786e\u4fdd\u73b0\u6709\u529f\u80fd\u4e0d\u53d7\u5f71\u54cd 2. \u66f4\u65b0\u914d\u7f6e\u6587\u4ef6 \u4fee\u6539pyproject.toml\u4e2d\u7684\u5305\u8def\u5f84 \u66f4\u65b0\u6d4b\u8bd5\u914d\u7f6e \u8c03\u6574\u4ee3\u7801\u8d28\u91cf\u68c0\u67e5\u8def\u5f84 3. \u6587\u6863\u66f4\u65b0 \u66f4\u65b0README.md\u4e2d\u7684\u9879\u76ee\u7ed3\u6784\u8bf4\u660e \u4fee\u6539\u5f00\u53d1\u6587\u6863\u4e2d\u7684\u8def\u5f84\u5f15\u7528 \u66f4\u65b0API\u6587\u6863 \u9884\u671f\u6536\u76ca 1. \u4ee3\u7801\u7ec4\u7ec7\u66f4\u6e05\u6670 \u6309\u529f\u80fd\u57df\u5212\u5206\uff0c\u804c\u8d23\u660e\u786e \u964d\u4f4e\u6a21\u5757\u95f4\u8026\u5408\u5ea6 \u63d0\u9ad8\u4ee3\u7801\u53ef\u7ef4\u62a4\u6027 2. \u6269\u5c55\u6027\u66f4\u597d \u4e3a\u6df7\u5408\u67b6\u6784\u9884\u7559\u7a7a\u95f4 \u652f\u6301\u65b0\u529f\u80fd\u6a21\u5757\u6dfb\u52a0 \u4fbf\u4e8e\u56e2\u961f\u534f\u4f5c\u5f00\u53d1 3. \u8d28\u91cf\u63d0\u5347 \u66f4\u5bb9\u6613\u8fdb\u884c\u5355\u5143\u6d4b\u8bd5 \u4ee3\u7801\u590d\u7528\u6027\u63d0\u9ad8 \u964d\u4f4e\u91cd\u6784\u98ce\u9669 \u5b9e\u65bd\u65f6\u95f4\u8868 \u7b2c\u4e00\u9636\u6bb5 : 1\u5929 - \u521b\u5efa\u76ee\u5f55\u7ed3\u6784 \u7b2c\u4e8c\u9636\u6bb5 : 2\u5929 - \u79fb\u52a8\u548c\u91cd\u547d\u540d\u6587\u4ef6 \u7b2c\u4e09\u9636\u6bb5 : 2\u5929 - \u66f4\u65b0\u5bfc\u5165\u8def\u5f84 \u7b2c\u56db\u9636\u6bb5 : 1\u5929 - \u521b\u5efa\u6a21\u5757\u63a5\u53e3 \u7b2c\u4e94\u9636\u6bb5 : 1\u5929 - \u9a8c\u8bc1\u548c\u6d4b\u8bd5 \u603b\u8ba1 : 7\u4e2a\u5de5\u4f5c\u65e5 \u98ce\u9669\u8bc4\u4f30 \u9ad8\u98ce\u9669 \u5bfc\u5165\u8def\u5f84\u66f4\u65b0\u53ef\u80fd\u9057\u6f0f \u6d4b\u8bd5\u7528\u4f8b\u53ef\u80fd\u5931\u8d25 \u73b0\u6709\u529f\u80fd\u53ef\u80fd\u53d7\u5f71\u54cd \u7f13\u89e3\u63aa\u65bd \u5206\u9636\u6bb5\u5b9e\u65bd\uff0c\u6bcf\u9636\u6bb5\u9a8c\u8bc1 \u4fdd\u6301\u5b8c\u6574\u7684\u6d4b\u8bd5\u8986\u76d6 \u5efa\u7acb\u56de\u6eda\u673a\u5236 \u5145\u5206\u7684\u4ee3\u7801\u5ba1\u67e5 \u6587\u6863\u521b\u5efa\u65f6\u95f4: 2025\u5e741\u6708 \u6700\u540e\u66f4\u65b0: 2025\u5e741\u6708","title":"\u9879\u76ee\u76ee\u5f55\u7ed3\u6784\u4f18\u5316\u65b9\u6848"},{"location":"archived/directory_optimization_plan/#_1","text":"","title":"\u9879\u76ee\u76ee\u5f55\u7ed3\u6784\u4f18\u5316\u65b9\u6848"},{"location":"archived/directory_optimization_plan/#_2","text":"","title":"\u5f53\u524d\u76ee\u5f55\u7ed3\u6784\u95ee\u9898\u5206\u6790"},{"location":"archived/directory_optimization_plan/#1","text":"\u95ee\u9898\u63cf\u8ff0 : - \u6839\u76ee\u5f55\u4e0b\u67098\u4e2a\u8ba1\u7b97\u5668\u6587\u4ef6\u76f4\u63a5\u6563\u843d - \u7f3a\u4e4f\u6e05\u6670\u7684\u6a21\u5757\u5206\u5c42\u548c\u7ec4\u7ec7 - \u6587\u4ef6\u547d\u540d\u4e0d\u591f\u89c4\u8303\u7edf\u4e00 \u5f53\u524d\u6563\u4e71\u6587\u4ef6 : \u251c\u2500\u2500 equity_bridge_calculator.py \u251c\u2500\u2500 fcf_calculator.py \u251c\u2500\u2500 nwc_calculator.py \u251c\u2500\u2500 present_value_calculator.py \u251c\u2500\u2500 terminal_value_calculator.py \u251c\u2500\u2500 wacc_calculator.py \u251c\u2500\u2500 data_fetcher.py \u251c\u2500\u2500 data_processor.py \u251c\u2500\u2500 financial_forecaster.py \u251c\u2500\u2500 stock_screener_app.py \u251c\u2500\u2500 stock_screener_data.py \u251c\u2500\u2500 streamlit_app.py \u251c\u2500\u2500 st_utils.py \u251c\u2500\u2500 tushare_screener_poc.py","title":"1. \u6839\u76ee\u5f55\u6587\u4ef6\u8fc7\u591a\u4e14\u6563\u4e71"},{"location":"archived/directory_optimization_plan/#2","text":"\u95ee\u9898 : - \u4f30\u503c\u8ba1\u7b97\u3001\u6570\u636e\u5904\u7406\u3001\u754c\u9762\u5c55\u793a\u6df7\u6742\u5728\u6839\u76ee\u5f55 - \u6ca1\u6709\u6309\u7167\u4e1a\u52a1\u529f\u80fd\u8fdb\u884c\u6a21\u5757\u5316\u7ec4\u7ec7 - \u96be\u4ee5\u7ef4\u62a4\u548c\u6269\u5c55","title":"2. \u7f3a\u4e4f\u6e05\u6670\u7684\u4e1a\u52a1\u6a21\u5757\u5212\u5206"},{"location":"archived/directory_optimization_plan/#3","text":"\u95ee\u9898 : - data_sources/ \u76ee\u5f55\u7ed3\u6784\u5df2\u5efa\u7acb\u4f46\u7a7a\u7f6e - \u7f3a\u4e4f\u4e0e\u73b0\u6709\u4ee3\u7801\u7684\u6574\u5408\u89c4\u5212 - \u65b0\u65e7\u67b6\u6784\u5e76\u5b58\u5bfc\u81f4\u6df7\u4e71","title":"3. \u6df7\u5408\u67b6\u6784\u51c6\u5907\u4e0d\u8db3"},{"location":"archived/directory_optimization_plan/#_3","text":"","title":"\u4f18\u5316\u76ee\u6807"},{"location":"archived/directory_optimization_plan/#1_1","text":"\u4e1a\u52a1\u5c42 : \u4f30\u503c\u8ba1\u7b97\u3001\u8d22\u52a1\u5206\u6790 \u670d\u52a1\u5c42 : \u6570\u636e\u670d\u52a1\u3001\u7f13\u5b58\u670d\u52a1 \u6570\u636e\u5c42 : \u6570\u636e\u83b7\u53d6\u3001\u6570\u636e\u5904\u7406 \u63a5\u53e3\u5c42 : API\u63a5\u53e3\u3001\u7528\u6237\u754c\u9762","title":"1. \u5efa\u7acb\u6e05\u6670\u7684\u5206\u5c42\u67b6\u6784"},{"location":"archived/directory_optimization_plan/#2_1","text":"\u6309\u529f\u80fd\u57df\u5212\u5206\u6a21\u5757 \u6bcf\u4e2a\u6a21\u5757\u804c\u8d23\u5355\u4e00 \u6a21\u5757\u95f4\u4f9d\u8d56\u5173\u7cfb\u6e05\u6670","title":"2. \u6a21\u5757\u5316\u7ec4\u7ec7"},{"location":"archived/directory_optimization_plan/#3_1","text":"\u9884\u7559\u6570\u636e\u6e90\u6269\u5c55\u7a7a\u95f4 \u652f\u6301\u65b0\u65e7\u67b6\u6784\u5e73\u6ed1\u8fc7\u6e21 \u4fbf\u4e8e\u540e\u7eed\u91cd\u6784\u548c\u8fc1\u79fb","title":"3. \u4e3a\u6df7\u5408\u67b6\u6784\u505a\u51c6\u5907"},{"location":"archived/directory_optimization_plan/#_4","text":"","title":"\u4f18\u5316\u65b9\u6848"},{"location":"archived/directory_optimization_plan/#_5","text":"stock_vale_valuation_3.0/ \u251c\u2500\u2500 README.md \u251c\u2500\u2500 pyproject.toml \u251c\u2500\u2500 Dockerfile \u251c\u2500\u2500 supervisord.conf \u251c\u2500\u2500 .env.example \u251c\u2500\u2500 .gitignore \u251c\u2500\u2500 .pre-commit-config.yaml \u251c\u2500\u2500 .clineignore \u2502 \u251c\u2500\u2500 .trae/ # IDE\u914d\u7f6e \u2502 \u2514\u2500\u2500 rules/ \u2502 \u251c\u2500\u2500 config/ # \u914d\u7f6e\u6587\u4ef6 \u2502 \u2514\u2500\u2500 llm_prompt_template.md \u2502 \u251c\u2500\u2500 src/ # \u6e90\u4ee3\u7801\u4e3b\u76ee\u5f55 \u2502 \u251c\u2500\u2500 __init__.py \u2502 \u2502 \u2502 \u251c\u2500\u2500 core/ # \u6838\u5fc3\u4e1a\u52a1\u903b\u8f91 \u2502 \u2502 \u251c\u2500\u2500 __init__.py \u2502 \u2502 \u251c\u2500\u2500 calculators/ # \u4f30\u503c\u8ba1\u7b97\u5668\u6a21\u5757 \u2502 \u2502 \u2502 \u251c\u2500\u2500 __init__.py \u2502 \u2502 \u2502 \u251c\u2500\u2500 base.py # \u8ba1\u7b97\u5668\u57fa\u7c7b \u2502 \u2502 \u2502 \u251c\u2500\u2500 dcf/ # DCF\u4f30\u503c\u76f8\u5173 \u2502 \u2502 \u2502 \u2502 \u251c\u2500\u2500 __init__.py \u2502 \u2502 \u2502 \u2502 \u251c\u2500\u2500 fcf_calculator.py \u2502 \u2502 \u2502 \u2502 \u251c\u2500\u2500 terminal_value_calculator.py \u2502 \u2502 \u2502 \u2502 \u251c\u2500\u2500 present_value_calculator.py \u2502 \u2502 \u2502 \u2502 \u2514\u2500\u2500 wacc_calculator.py \u2502 \u2502 \u2502 \u251c\u2500\u2500 equity_bridge_calculator.py \u2502 \u2502 \u2502 \u2514\u2500\u2500 nwc_calculator.py \u2502 \u2502 \u2502 \u2502 \u2502 \u251c\u2500\u2500 financial/ # \u8d22\u52a1\u5206\u6790\u6a21\u5757 \u2502 \u2502 \u2502 \u251c\u2500\u2500 __init__.py \u2502 \u2502 \u2502 \u251c\u2500\u2500 forecaster.py # \u91cd\u547d\u540d\u81eafinancial_forecaster.py \u2502 \u2502 \u2502 \u2514\u2500\u2500 processor.py # \u91cd\u547d\u540d\u81eadata_processor.py \u2502 \u2502 \u2502 \u2502 \u2502 \u2514\u2500\u2500 screener/ # \u80a1\u7968\u7b5b\u9009\u6a21\u5757 \u2502 \u2502 \u251c\u2500\u2500 __init__.py \u2502 \u2502 \u251c\u2500\u2500 engine.py # \u91cd\u547d\u540d\u81eastock_screener_app.py \u2502 \u2502 \u2514\u2500\u2500 data_handler.py # \u91cd\u547d\u540d\u81eastock_screener_data.py \u2502 \u2502 \u2502 \u251c\u2500\u2500 data/ # \u6570\u636e\u5c42 \u2502 \u2502 \u251c\u2500\u2500 __init__.py \u2502 \u2502 \u251c\u2500\u2500 fetchers/ # \u6570\u636e\u83b7\u53d6\u5668 \u2502 \u2502 \u2502 \u251c\u2500\u2500 __init__.py \u2502 \u2502 \u2502 \u251c\u2500\u2500 base.py # \u6570\u636e\u83b7\u53d6\u5668\u57fa\u7c7b \u2502 \u2502 \u2502 \u251c\u2500\u2500 tushare_fetcher.py \u2502 \u2502 \u2502 \u2514\u2500\u2500 postgresql_fetcher.py \u2502 \u2502 \u2502 \u2502 \u2502 \u251c\u2500\u2500 processors/ # \u6570\u636e\u5904\u7406\u5668 \u2502 \u2502 \u2502 \u251c\u2500\u2500 __init__.py \u2502 \u2502 \u2502 \u2514\u2500\u2500 base_processor.py \u2502 \u2502 \u2502 \u2502 \u2502 \u2514\u2500\u2500 cache/ # \u7f13\u5b58\u7ba1\u7406 \u2502 \u2502 \u251c\u2500\u2500 __init__.py \u2502 \u2502 \u251c\u2500\u2500 redis_cache.py \u2502 \u2502 \u2514\u2500\u2500 local_cache.py \u2502 \u2502 \u2502 \u251c\u2500\u2500 services/ # \u670d\u52a1\u5c42 \u2502 \u2502 \u251c\u2500\u2500 __init__.py \u2502 \u2502 \u251c\u2500\u2500 data_source_manager.py # \u6570\u636e\u6e90\u7ba1\u7406\u5668 \u2502 \u2502 \u251c\u2500\u2500 valuation_service.py # \u4f30\u503c\u670d\u52a1 \u2502 \u2502 \u2514\u2500\u2500 health_checker.py # \u5065\u5eb7\u68c0\u67e5\u670d\u52a1 \u2502 \u2502 \u2502 \u2514\u2500\u2500 utils/ # \u5de5\u5177\u6a21\u5757 \u2502 \u251c\u2500\u2500 __init__.py \u2502 \u251c\u2500\u2500 streamlit_utils.py # \u91cd\u547d\u540d\u81east_utils.py \u2502 \u2514\u2500\u2500 common.py # \u901a\u7528\u5de5\u5177\u51fd\u6570 \u2502 \u251c\u2500\u2500 api/ # API\u63a5\u53e3\u5c42 \u2502 \u251c\u2500\u2500 __init__.py \u2502 \u251c\u2500\u2500 main.py \u2502 \u251c\u2500\u2500 models.py \u2502 \u251c\u2500\u2500 sensitivity_models.py \u2502 \u251c\u2500\u2500 utils.py \u2502 \u2514\u2500\u2500 llm_utils.py \u2502 \u251c\u2500\u2500 apps/ # \u5e94\u7528\u7a0b\u5e8f \u2502 \u251c\u2500\u2500 __init__.py \u2502 \u251c\u2500\u2500 streamlit_app.py # \u4e3bStreamlit\u5e94\u7528 \u2502 \u2514\u2500\u2500 poc/ # \u6982\u5ff5\u9a8c\u8bc1\u5e94\u7528 \u2502 \u251c\u2500\u2500 __init__.py \u2502 \u2514\u2500\u2500 tushare_screener_poc.py \u2502 \u251c\u2500\u2500 data_sources/ # \u6df7\u5408\u67b6\u6784\u6570\u636e\u6e90(\u4fdd\u7559) \u2502 \u251c\u2500\u2500 cache/ \u2502 \u251c\u2500\u2500 fetchers/ \u2502 \u251c\u2500\u2500 health/ \u2502 \u2514\u2500\u2500 managers/ \u2502 \u251c\u2500\u2500 tests/ # \u6d4b\u8bd5\u76ee\u5f55 \u2502 \u251c\u2500\u2500 __init__.py \u2502 \u251c\u2500\u2500 unit/ # \u5355\u5143\u6d4b\u8bd5 \u2502 \u2502 \u251c\u2500\u2500 core/ \u2502 \u2502 \u251c\u2500\u2500 data/ \u2502 \u2502 \u2514\u2500\u2500 services/ \u2502 \u251c\u2500\u2500 integration/ # \u96c6\u6210\u6d4b\u8bd5 \u2502 \u2514\u2500\u2500 api/ # API\u6d4b\u8bd5 \u2502 \u251c\u2500\u2500 dev_docs/ # \u5f00\u53d1\u6587\u6863 \u251c\u2500\u2500 memory-bank/ # \u8bb0\u5fc6\u5e93 \u2514\u2500\u2500 wiki/ # \u9879\u76ee\u6587\u6863","title":"\u65b0\u76ee\u5f55\u7ed3\u6784\u8bbe\u8ba1"},{"location":"archived/directory_optimization_plan/#_6","text":"","title":"\u91cd\u6784\u6b65\u9aa4"},{"location":"archived/directory_optimization_plan/#_7","text":"\u521b\u5efasrc\u4e3b\u76ee\u5f55\u548c\u5b50\u6a21\u5757 bash mkdir -p src/{core/{calculators/{dcf},financial,screener},data/{fetchers,processors,cache},services,utils} mkdir -p apps/poc mkdir -p tests/{unit/{core,data,services},integration} \u521b\u5efa__init__.py\u6587\u4ef6 \u4e3a\u6240\u6709Python\u5305\u76ee\u5f55\u6dfb\u52a0__init__.py \u5b9a\u4e49\u6a21\u5757\u5bfc\u51fa\u63a5\u53e3","title":"\u7b2c\u4e00\u9636\u6bb5: \u521b\u5efa\u65b0\u76ee\u5f55\u7ed3\u6784"},{"location":"archived/directory_optimization_plan/#_8","text":"\u79fb\u52a8\u8ba1\u7b97\u5668\u6587\u4ef6\u5230core/calculators/ ```bash # DCF\u76f8\u5173\u8ba1\u7b97\u5668 mv fcf_calculator.py src/core/calculators/dcf/ mv terminal_value_calculator.py src/core/calculators/dcf/ mv present_value_calculator.py src/core/calculators/dcf/ mv wacc_calculator.py src/core/calculators/dcf/ # \u5176\u4ed6\u8ba1\u7b97\u5668 mv equity_bridge_calculator.py src/core/calculators/ mv nwc_calculator.py src/core/calculators/ ``` \u79fb\u52a8\u8d22\u52a1\u5206\u6790\u6587\u4ef6 bash mv financial_forecaster.py src/core/financial/forecaster.py mv data_processor.py src/core/financial/processor.py \u79fb\u52a8\u7b5b\u9009\u5668\u6587\u4ef6 bash mv stock_screener_app.py src/core/screener/engine.py mv stock_screener_data.py src/core/screener/data_handler.py \u79fb\u52a8\u5e94\u7528\u7a0b\u5e8f\u6587\u4ef6 bash mv streamlit_app.py apps/ mv tushare_screener_poc.py apps/poc/ \u79fb\u52a8\u5de5\u5177\u6587\u4ef6 bash mv st_utils.py src/utils/streamlit_utils.py mv data_fetcher.py src/data/fetchers/base_fetcher.py","title":"\u7b2c\u4e8c\u9636\u6bb5: \u79fb\u52a8\u548c\u91cd\u547d\u540d\u6587\u4ef6"},{"location":"archived/directory_optimization_plan/#_9","text":"\u66f4\u65b0\u6240\u6709\u6587\u4ef6\u7684import\u8bed\u53e5 \u4f7f\u7528\u76f8\u5bf9\u5bfc\u5165\u6216\u7edd\u5bf9\u5bfc\u5165 \u786e\u4fdd\u6a21\u5757\u8def\u5f84\u6b63\u786e \u66f4\u65b0\u6d4b\u8bd5\u6587\u4ef6\u5bfc\u5165 \u4fee\u6539\u6d4b\u8bd5\u6587\u4ef6\u4e2d\u7684\u5bfc\u5165\u8def\u5f84 \u786e\u4fdd\u6d4b\u8bd5\u4ecd\u80fd\u6b63\u5e38\u8fd0\u884c \u66f4\u65b0API\u548c\u5e94\u7528\u7a0b\u5e8f\u5bfc\u5165 \u4fee\u6539FastAPI\u8def\u7531\u5bfc\u5165 \u4fee\u6539Streamlit\u5e94\u7528\u5bfc\u5165","title":"\u7b2c\u4e09\u9636\u6bb5: \u66f4\u65b0\u5bfc\u5165\u8def\u5f84"},{"location":"archived/directory_optimization_plan/#_10","text":"\u5b9a\u4e49__init__.py\u5bfc\u51fa ```python # src/core/calculators/ init .py from .dcf.fcf_calculator import FCFCalculator from .dcf.wacc_calculator import WACCCalculator from .equity_bridge_calculator import EquityBridgeCalculator all = ['FCFCalculator', 'WACCCalculator', 'EquityBridgeCalculator'] ``` \u521b\u5efa\u57fa\u7c7b\u548c\u63a5\u53e3 ```python # src/core/calculators/base.py from abc import ABC, abstractmethod class BaseCalculator(ABC): \"\"\"\u8ba1\u7b97\u5668\u57fa\u7c7b\"\"\" @abstractmethod def calculate(self, *args, **kwargs): \"\"\"\u6267\u884c\u8ba1\u7b97\"\"\" pass ```","title":"\u7b2c\u56db\u9636\u6bb5: \u521b\u5efa\u6a21\u5757\u63a5\u53e3"},{"location":"archived/directory_optimization_plan/#_11","text":"\u8fd0\u884c\u6240\u6709\u6d4b\u8bd5 bash python -m pytest tests/ -v \u9a8c\u8bc1\u5e94\u7528\u7a0b\u5e8f\u542f\u52a8 ```bash # \u9a8c\u8bc1API\u670d\u52a1 uvicorn api.main:app --reload # \u9a8c\u8bc1Streamlit\u5e94\u7528 streamlit run apps/streamlit_app.py ``` \u68c0\u67e5\u4ee3\u7801\u8d28\u91cf bash ruff check src/ black --check src/","title":"\u7b2c\u4e94\u9636\u6bb5: \u9a8c\u8bc1\u548c\u6d4b\u8bd5"},{"location":"archived/directory_optimization_plan/#_12","text":"","title":"\u8fc1\u79fb\u6ce8\u610f\u4e8b\u9879"},{"location":"archived/directory_optimization_plan/#1_2","text":"\u5728\u6839\u76ee\u5f55\u4fdd\u7559\u7b26\u53f7\u94fe\u63a5\u6216\u5bfc\u5165\u522b\u540d \u9010\u6b65\u8fc1\u79fb\uff0c\u907f\u514d\u4e00\u6b21\u6027\u5927\u6539\u52a8 \u786e\u4fdd\u73b0\u6709\u529f\u80fd\u4e0d\u53d7\u5f71\u54cd","title":"1. \u4fdd\u6301\u5411\u540e\u517c\u5bb9"},{"location":"archived/directory_optimization_plan/#2_2","text":"\u4fee\u6539pyproject.toml\u4e2d\u7684\u5305\u8def\u5f84 \u66f4\u65b0\u6d4b\u8bd5\u914d\u7f6e \u8c03\u6574\u4ee3\u7801\u8d28\u91cf\u68c0\u67e5\u8def\u5f84","title":"2. \u66f4\u65b0\u914d\u7f6e\u6587\u4ef6"},{"location":"archived/directory_optimization_plan/#3_2","text":"\u66f4\u65b0README.md\u4e2d\u7684\u9879\u76ee\u7ed3\u6784\u8bf4\u660e \u4fee\u6539\u5f00\u53d1\u6587\u6863\u4e2d\u7684\u8def\u5f84\u5f15\u7528 \u66f4\u65b0API\u6587\u6863","title":"3. \u6587\u6863\u66f4\u65b0"},{"location":"archived/directory_optimization_plan/#_13","text":"","title":"\u9884\u671f\u6536\u76ca"},{"location":"archived/directory_optimization_plan/#1_3","text":"\u6309\u529f\u80fd\u57df\u5212\u5206\uff0c\u804c\u8d23\u660e\u786e \u964d\u4f4e\u6a21\u5757\u95f4\u8026\u5408\u5ea6 \u63d0\u9ad8\u4ee3\u7801\u53ef\u7ef4\u62a4\u6027","title":"1. \u4ee3\u7801\u7ec4\u7ec7\u66f4\u6e05\u6670"},{"location":"archived/directory_optimization_plan/#2_3","text":"\u4e3a\u6df7\u5408\u67b6\u6784\u9884\u7559\u7a7a\u95f4 \u652f\u6301\u65b0\u529f\u80fd\u6a21\u5757\u6dfb\u52a0 \u4fbf\u4e8e\u56e2\u961f\u534f\u4f5c\u5f00\u53d1","title":"2. \u6269\u5c55\u6027\u66f4\u597d"},{"location":"archived/directory_optimization_plan/#3_3","text":"\u66f4\u5bb9\u6613\u8fdb\u884c\u5355\u5143\u6d4b\u8bd5 \u4ee3\u7801\u590d\u7528\u6027\u63d0\u9ad8 \u964d\u4f4e\u91cd\u6784\u98ce\u9669","title":"3. \u8d28\u91cf\u63d0\u5347"},{"location":"archived/directory_optimization_plan/#_14","text":"\u7b2c\u4e00\u9636\u6bb5 : 1\u5929 - \u521b\u5efa\u76ee\u5f55\u7ed3\u6784 \u7b2c\u4e8c\u9636\u6bb5 : 2\u5929 - \u79fb\u52a8\u548c\u91cd\u547d\u540d\u6587\u4ef6 \u7b2c\u4e09\u9636\u6bb5 : 2\u5929 - \u66f4\u65b0\u5bfc\u5165\u8def\u5f84 \u7b2c\u56db\u9636\u6bb5 : 1\u5929 - \u521b\u5efa\u6a21\u5757\u63a5\u53e3 \u7b2c\u4e94\u9636\u6bb5 : 1\u5929 - \u9a8c\u8bc1\u548c\u6d4b\u8bd5 \u603b\u8ba1 : 7\u4e2a\u5de5\u4f5c\u65e5","title":"\u5b9e\u65bd\u65f6\u95f4\u8868"},{"location":"archived/directory_optimization_plan/#_15","text":"","title":"\u98ce\u9669\u8bc4\u4f30"},{"location":"archived/directory_optimization_plan/#_16","text":"\u5bfc\u5165\u8def\u5f84\u66f4\u65b0\u53ef\u80fd\u9057\u6f0f \u6d4b\u8bd5\u7528\u4f8b\u53ef\u80fd\u5931\u8d25 \u73b0\u6709\u529f\u80fd\u53ef\u80fd\u53d7\u5f71\u54cd","title":"\u9ad8\u98ce\u9669"},{"location":"archived/directory_optimization_plan/#_17","text":"\u5206\u9636\u6bb5\u5b9e\u65bd\uff0c\u6bcf\u9636\u6bb5\u9a8c\u8bc1 \u4fdd\u6301\u5b8c\u6574\u7684\u6d4b\u8bd5\u8986\u76d6 \u5efa\u7acb\u56de\u6eda\u673a\u5236 \u5145\u5206\u7684\u4ee3\u7801\u5ba1\u67e5 \u6587\u6863\u521b\u5efa\u65f6\u95f4: 2025\u5e741\u6708 \u6700\u540e\u66f4\u65b0: 2025\u5e741\u6708","title":"\u7f13\u89e3\u63aa\u65bd"},{"location":"archived/mckinsey_financial_ratios_and_forecasting_analysis/","text":"Stock Vale Valuation 3.0 \u8d22\u52a1\u6bd4\u7387\u4e0e\u9884\u6d4b\u903b\u8f91 McKinsey \u6807\u51c6\u5408\u89c4\u6027\u4e13\u9898\u5206\u6790\u62a5\u544a \ud83d\udccb \u6267\u884c\u6458\u8981 \u672c\u62a5\u544a\u57fa\u4e8e\u5bf9 stock_vale_valuation_3.0 \u9879\u76ee\u8d22\u52a1\u8ba1\u7b97\u6838\u5fc3\u6a21\u5757\u7684\u6df1\u5ea6\u6280\u672f\u5206\u6790\uff0c\u4ece McKinsey \u8d22\u52a1\u5206\u6790\u6807\u51c6 \u7684\u89d2\u5ea6\u5bf9\u9879\u76ee\u7684\u8d22\u52a1\u6bd4\u7387\u8ba1\u7b97\u903b\u8f91\u3001\u8d22\u52a1\u9884\u6d4b\u7b97\u6cd5\u3001\u6570\u636e\u8d28\u91cf\u5904\u7406\u6d41\u7a0b\u8fdb\u884c\u5168\u9762\u8bc4\u4f30\u3002\u5206\u6790\u53d1\u73b0\u8be5\u9879\u76ee\u5728\u6280\u672f\u5b9e\u73b0\u548c\u57fa\u7840\u903b\u8f91\u4e0a\u8fbe\u5230\u4e13\u4e1a\u6c34\u51c6\uff0c\u4f46\u5728\u9ad8\u7ea7\u8d22\u52a1\u5206\u6790\u6280\u5de7\u548c\u884c\u4e1a\u9002\u5e94\u6027\u65b9\u9762\u5b58\u5728\u91cd\u8981\u6539\u8fdb\u7a7a\u95f4\u3002 \u6838\u5fc3\u53d1\u73b0\uff082025-09-10 \u66f4\u65b0\uff09 \uff1a - \u6280\u672f\u5b9e\u73b0\u4f18\u79c0 \uff1a\u6a21\u5757\u5316\u8bbe\u8ba1\u6e05\u6670\uff0c\u8ba1\u7b97\u7cbe\u5ea6\u9ad8\uff0c\u5f02\u5e38\u5904\u7406\u5b8c\u5584 - \u57fa\u7840\u903b\u8f91\u6b63\u786e \uff1a\u8d22\u52a1\u6bd4\u7387\u8ba1\u7b97\u7b26\u5408\u57fa\u672c\u8d22\u52a1\u5206\u6790\u539f\u7406 - \u9884\u6d4b\u6a21\u578b\u79d1\u5b66 \uff1a\u6536\u5165\u9884\u6d4b\u548c\u8d22\u52a1\u9884\u6d4b\u7b97\u6cd5\u57fa\u672c\u5408\u7406 - McKinsey\u6807\u51c6\u7b26\u5408\u5ea6\u4e2d\u7b49 \uff1a\u57fa\u7840\u529f\u80fd\u7b26\u5408\uff0c\u4f46\u7f3a\u4e4f\u9ad8\u7ea7\u5206\u6790\u529f\u80fd - \u6eda\u52a8\u4e0e\u53e3\u5f84\u7edf\u4e00\u6539\u8fdb \uff1a\u652f\u6301 LTM/Interim \u57fa\u671f\uff08\u53ef\u9009\uff09\uff0c last_component_nwc \u4e0e\u201c\u4f30\u503c\u65e5\u6eda\u52a8\u7684\u6700\u65b0\u8d44\u4ea7\u8d1f\u503a\u8868\u201d\u5bf9\u9f50\uff0c\u51cf\u5c11\u9996\u5e74 \u0394NWC \u53e3\u5f84\u8df3\u53d8 - NWC \u53ef\u89e3\u91ca\u6027\u589e\u5f3a \uff1a\u5f15\u5165 nwc_days_transition_years \u4e0e transition_to_target \uff0c\u0394NWC \u5728 AR/AP/Inv \u7684\u65b9\u5411\u4e0e\u5e45\u5ea6\u4e0e\u5929\u6570\u53d8\u5316\u543b\u5408\uff0c\u5e76\u65b0\u589e\u5355\u6d4b\u8986\u76d6 - \u80a1\u606f\u4e0e as-of \uff1aTTM\uff08\u5b9e\u65bd/\u5b8c\u6210\uff09\u2192 \u9884\u6848 \u2192 \u5e74\u5ea6 \u56de\u9000\u94fe\uff1b\u4ef7\u683c/EPS as-of \u5408\u89c4\u663e\u793a\uff1b\u884c\u4e1a\u9884\u8bbe\u6a21\u677f\u63d0\u5347\u5047\u8bbe\u8d28\u91cf - \u6539\u8fdb\u6f5c\u529b\u5de8\u5927 \uff1a\u901a\u8fc7\u5173\u952e\u6539\u8fdb\u53ef\u8fbe\u5230\u4f01\u4e1a\u7ea7\u8d22\u52a1\u5206\u6790\u5e73\u53f0\u6807\u51c6 \ud83c\udfaf \u5206\u6790\u8303\u56f4\u4e0e\u65b9\u6cd5\u8bba 1.1 \u5206\u6790\u8303\u56f4 \u6838\u5fc3\u6a21\u5757\u5206\u6790 \uff1a - \u8d22\u52a1\u6bd4\u7387\u8ba1\u7b97 \uff1a src/core/financial/processor.py - \u8d22\u52a1\u9884\u6d4b\u7b97\u6cd5 \uff1a src/core/financial/forecaster.py - \u6570\u636e\u8d28\u91cf\u63a7\u5236 \uff1a\u6570\u636e\u83b7\u53d6\u3001\u6e05\u6d17\u3001\u9a8c\u8bc1\u6d41\u7a0b - \u8ba1\u7b97\u5668\u96c6\u7fa4 \uff1aNWC\u3001WACC\u3001FCF\u7b49\u4e13\u4e1a\u5316\u8ba1\u7b97\u5668 1.2 McKinsey \u6807\u51c6\u57fa\u51c6 McKinsey \u8d22\u52a1\u5206\u6790\u6700\u4f73\u5b9e\u8df5 \uff1a - \u6807\u51c6\u5316\u8d22\u52a1\u6bd4\u7387\u8ba1\u7b97\u65b9\u6cd5 - \u79d1\u5b66\u7684\u8d22\u52a1\u9884\u6d4b\u6a21\u578b - \u5b8c\u6574\u7684\u6570\u636e\u8d28\u91cf\u63a7\u5236\u4f53\u7cfb - \u884c\u4e1a\u5dee\u5f02\u5316\u5206\u6790\u6846\u67b6 - \u60c5\u666f\u5206\u6790\u548c\u654f\u611f\u6027\u5206\u6790 \ud83d\udcca \u8d22\u52a1\u6bd4\u7387\u8ba1\u7b97\u903b\u8f91\u5206\u6790 2.1 \u76c8\u5229\u80fd\u529b\u6bd4\u7387\u5408\u89c4\u6027 2.1.1 \u8425\u4e1a\u5229\u6da6\u7387\u8ba1\u7b97 \u5b9e\u73b0\u4ee3\u7801 \uff1a processor.py:647-658 op_profit_col = \"operate_profit\" if \"operate_profit\" in is_df.columns else \"ebit\" if op_profit_col in is_df.columns: self.historical_ratios[\"operating_margin_median\"] = self._calculate_median_ratio_or_days( is_df[op_profit_col], is_df.get(\"revenue\", pd.Series()), days_in_year=None, ) \u516c\u5f0f\u5206\u6790 \uff1a \u8425\u4e1a\u5229\u6da6\u7387 = EBIT / \u8425\u4e1a\u6536\u5165\uff08Revenue\uff09 McKinsey \u6807\u51c6\u5bf9\u6bd4 \uff1a - \u6807\u51c6\u5b9a\u4e49 \uff1aOperating Income / Revenue - \u672c\u9879\u76ee\u5b9e\u73b0 \uff1a\u5b8c\u5168\u7b26\u5408\uff0c\u652f\u6301EBIT\u548cOperating Profit\u53cc\u91cd\u8bc6\u522b - \u7b26\u5408\u5ea6 \uff1a\u2705 100% \u4e13\u4e1a\u8bc4\u4ef7 \uff1aA+ - \u667a\u80fd\u5b57\u6bb5\u8bc6\u522b\uff0c\u63d0\u9ad8\u6570\u636e\u9002\u5e94\u6027 - \u4f7f\u7528\u4e2d\u4f4d\u6570\u8ba1\u7b97\uff0c\u7b26\u5408\u8d22\u52a1\u5206\u6790\u6807\u51c6 - \u5f02\u5e38\u5904\u7406\u5b8c\u5584 2.1.2 \u9500\u8d27\u6210\u672c\u5360\u6536\u6bd4\u8ba1\u7b97 \u5b9e\u73b0\u4ee3\u7801 \uff1a processor.py:568-574 self.historical_ratios[\"cogs_to_revenue_ratio\"] = self._calculate_median_ratio_or_days( is_df.get(\"oper_cost\", pd.Series(dtype=\"float64\")), is_df.get(\"revenue\", pd.Series(dtype=\"float64\")), days_in_year=None, ) McKinsey \u6807\u51c6\u7b26\u5408\u5ea6 \uff1a\u2705 95% - \u4f7f\u7528\u4e2d\u4f4d\u6570\u800c\u975e\u5e73\u5747\u503c\uff0c\u7b26\u5408\u8d22\u52a1\u5206\u6790\u6700\u4f73\u5b9e\u8df5 - \u5904\u7406\u4e86\u5f02\u5e38\u503c\u548c\u7f3a\u5931\u6570\u636e - \u8ba1\u7b97\u903b\u8f91\u4e25\u8c28 2.2 \u8fd0\u8425\u6548\u7387\u6bd4\u7387\u5408\u89c4\u6027 2.2.1 \u5e94\u6536\u8d26\u6b3e\u5468\u8f6c\u5929\u6570 \u5b9e\u73b0\u4ee3\u7801 \uff1a processor.py:703-718 self.historical_ratios[\"accounts_receivable_days\"] = self._calculate_median_ratio_or_days( bs_merged_ar[\"accounts_receiv_bill\"], bs_merged_ar[\"revenue\"], days_in_year=360, ) \u516c\u5f0f\u5206\u6790 \uff1a \u5e94\u6536\u8d26\u6b3e\u5468\u8f6c\u5929\u6570 = (\u5e94\u6536\u8d26\u6b3e / \u6536\u5165) \u00d7 360\u5929 McKinsey \u6807\u51c6\u5bf9\u6bd4 \uff1a - \u6807\u51c6\u5b9a\u4e49 \uff1a(Accounts Receivable / Revenue) \u00d7 365\uff08\u6216\u6309\u4f1a\u8ba1\u5e74\u5ea6\u5b9e\u9645\u5929\u6570\uff09 - \u672c\u9879\u76ee\u5b9e\u73b0 \uff1a\u9ed8\u8ba4 360 \u5929\uff08\u672c\u5730\u5316\u60ef\u4f8b\uff09\uff0c\u53ef\u6269\u5c55\u4e3a 365/366 \u6216\u6309\u4f1a\u8ba1\u5e74\u5ea6\u914d\u7f6e - \u5dee\u5f02\u5206\u6790 \uff1a\u9ed8\u8ba4 360 \u5929\u5408\u7406\uff0c\u5efa\u8bae\u63d0\u4f9b\u53ef\u914d\u7f6e/\u6309\u671f\u672b\u65e5\u81ea\u52a8\u8bc6\u522b - \u7b26\u5408\u5ea6 \uff1a\u2705 90% \u6539\u8fdb\u5efa\u8bae \uff1a def get_days_in_year(financial_year_end_date): \"\"\"\u6839\u636e\u5b9e\u9645\u4f1a\u8ba1\u5e74\u5ea6\u786e\u5b9a\u5929\u6570\"\"\" year = financial_year_end_date.year if calendar.isleap(year): return 366 return 365 # \u6216\u8005\u63d0\u4f9b\u914d\u7f6e\u9009\u9879 days_in_year = config.get('days_in_year', 360) # 360/365/366 2.3 \u8d44\u672c\u7ed3\u6784\u6bd4\u7387\u5408\u89c4\u6027 2.3.1 \u51c0\u8425\u8fd0\u8d44\u672c\u8ba1\u7b97 NWC\u8ba1\u7b97\u5668\u5b9e\u73b0 \uff1a nwc_calculator.py:11-22 def calculate_nwc(self, df: pd.DataFrame) -> pd.Series: \"\"\" NWC = \u6d41\u52a8\u8d44\u4ea7\u5408\u8ba1 - \u8d27\u5e01\u8d44\u91d1 - (\u6d41\u52a8\u8d1f\u503a\u5408\u8ba1 - \u77ed\u671f\u501f\u6b3e - \u4e00\u5e74\u5185\u5230\u671f\u7684\u975e\u6d41\u52a8\u8d1f\u503a) \"\"\" required_cols = [ \"total_cur_assets\", \"money_cap\", \"total_cur_liab\", \"st_borr\", \"non_cur_liab_due_1y\", ] McKinsey \u6807\u51c6\u7b26\u5408\u5ea6 \uff1a\u2705 100% - \u5b9a\u4e49\u7cbe\u786e\uff0c\u7b26\u5408DCF\u4f30\u503c\u8981\u6c42 - \u6392\u9664\u975e\u7ecf\u8425\u6027\u73b0\u91d1\u548c\u6709\u606f\u8d1f\u503a - \u8ba1\u7b97\u903b\u8f91\u4e25\u8c28 2.4 \u6838\u5fc3\u8ba1\u7b97\u51fd\u6570\u5206\u6790 2.4.1 _calculate_median_ratio_or_days\u51fd\u6570 \u51fd\u6570\u4f4d\u7f6e \uff1a processor.py:401-487 \u6280\u672f\u4f18\u52bf \uff1a - \u6570\u636e\u7cbe\u5ea6 \uff1a\u4f7f\u7528Decimal\u786e\u4fdd\u9ad8\u7cbe\u5ea6\u8ba1\u7b97 - \u5f02\u5e38\u5904\u7406 \uff1a\u5b8c\u6574\u7684\u9664\u96f6\u68c0\u67e5\u548c\u65e0\u6548\u503c\u5904\u7406 - \u7edf\u8ba1\u65b9\u6cd5 \uff1a\u4f7f\u7528\u4e2d\u4f4d\u6570\u907f\u514d\u5f02\u5e38\u503c\u5f71\u54cd - \u7075\u6d3b\u6027 \uff1a\u652f\u6301\u6bd4\u7387\u548c\u5468\u8f6c\u5929\u6570\u53cc\u91cd\u8ba1\u7b97\u6a21\u5f0f McKinsey \u6807\u51c6\u7b26\u5408\u5ea6 \uff1a\u2705 95% - \u5b8c\u5168\u7b26\u5408\u8d22\u52a1\u6bd4\u7387\u8ba1\u7b97\u6807\u51c6 - \u5f02\u5e38\u503c\u5904\u7406\u7b26\u5408\u6700\u4f73\u5b9e\u8df5 - \u8ba1\u7b97\u7cbe\u5ea6\u8fbe\u5230\u4e13\u4e1a\u6c34\u51c6 \ud83d\udcc8 \u8d22\u52a1\u9884\u6d4b\u7b97\u6cd5\u5408\u89c4\u6027\u5206\u6790 3.1 \u6536\u5165\u9884\u6d4b\u7b97\u6cd5 3.1.1 \u6838\u5fc3\u7b97\u6cd5\u5b9e\u73b0 \u5b9e\u73b0\u4ee3\u7801 \uff1a forecaster.py:228-300 current_growth_rate = historical_cagr * ((Decimal(\"1\") - decay_rate) ** (year - 1)) current_revenue *= Decimal(\"1\") + current_growth_rate \u7b97\u6cd5\u5206\u6790 \uff1a - \u5386\u53f2CAGR \uff1a\u4ece historical_ratios \u83b7\u53d6 - \u8870\u51cf\u7387 \uff1a\u9ed8\u8ba40.1\uff0c\u8003\u8651\u589e\u957f\u7387\u81ea\u7136\u8870\u51cf - \u9884\u6d4b\u671f \uff1a\u9ed8\u8ba45\u5e74 - \u57fa\u671f\u53e3\u5f84 \uff1a\u9ed8\u8ba4\u4f7f\u7528\u6700\u65b0\u5e74\u62a5 revenue \uff1b\u82e5\u5f00\u542f ltm_baseline_enabled \uff0c\u5219\u4f7f\u7528 LTM = YTD_curr + (Annual_prev \u2212 YTD_prev) \uff08\u4f18\u5148 revenue \uff0c\u56de\u9000 total_revenue \uff09 McKinsey \u6807\u51c6\u7b26\u5408\u5ea6 \uff1a\u26a0\ufe0f 75% - \u4f18\u52bf \uff1a\u8003\u8651\u589e\u957f\u7387\u8870\u51cf\uff0c\u7b26\u5408\u5546\u4e1a\u89c4\u5f8b - \u4e0d\u8db3 \uff1a\u8870\u51cf\u6a21\u578b\u8fc7\u4e8e\u7b80\u5316\uff0c\u7f3a\u4e4f\u5b8f\u89c2\u7ecf\u6d4e\u56e0\u7d20 \u6539\u8fdb\u5efa\u8bae \uff1a def enhanced_revenue_forecast(self, historical_data, macro_factors): \"\"\" \u589e\u5f3a\u578b\u6536\u5165\u9884\u6d4b\uff0c\u7b26\u5408McKinsey\u6807\u51c6 \"\"\" # \u57fa\u7840\u589e\u957f\u7387 base_growth = self.calculate_historical_cagr(historical_data) # \u5b8f\u89c2\u7ecf\u6d4e\u8c03\u6574 gdp_adjustment = macro_factors.get('gdp_growth', 0.05) industry_adjustment = macro_factors.get('industry_growth', 0.0) # \u5b63\u8282\u6027\u8c03\u6574 seasonal_factor = self.calculate_seasonal_factor(historical_data) # \u7efc\u5408\u589e\u957f\u7387 adjusted_growth = base_growth * (1 + gdp_adjustment) * (1 + industry_adjustment) return adjusted_growth * seasonal_factor 3.2 \u5229\u6da6\u8868\u9884\u6d4b\u7b97\u6cd5 3.2.1 \u9884\u6d4b\u6a21\u5f0f\u8bbe\u8ba1 \u7cfb\u7edf\u652f\u6301\u4e24\u79cd\u9884\u6d4b\u6a21\u5f0f \uff1a forecaster.py:111-180 A. historical_median \u6a21\u5f0f - \u4f7f\u7528\u5386\u53f2\u4e2d\u4f4d\u6570\u4f5c\u4e3a\u9884\u6d4b\u503c - \u9002\u7528\u4e8e\u7a33\u5b9a\u7684\u6210\u719f\u4f01\u4e1a B. transition_to_target \u6a21\u5f0f - \u4ece\u5386\u53f2\u503c\u7ebf\u6027\u8fc7\u6e21\u5230\u76ee\u6807\u503c - \u9002\u7528\u4e8e\u4e1a\u52a1\u8f6c\u578b\u671f\u4f01\u4e1a McKinsey \u6807\u51c6\u7b26\u5408\u5ea6 \uff1a\u2705 85% - \u9884\u6d4b\u6a21\u5f0f\u8bbe\u8ba1\u5408\u7406\uff0c\u7b26\u5408\u4e1a\u52a1\u5b9e\u9645 - \u652f\u6301\u4f01\u4e1a\u4e0d\u540c\u53d1\u5c55\u9636\u6bb5\u7684\u9884\u6d4b\u9700\u6c42 3.2.2 COGS \u53cd\u63a8\u4e0e\u76f4\u63a5\u6bd4\u7387\uff08\u5df2\u5b9e\u73b0\u53cc\u6a21\u5f0f\uff09 \u5df2\u652f\u6301\u4e24\u79cd\u6a21\u5f0f \uff1a - \u53cd\u63a8\u6cd5\uff08\u9ed8\u8ba4\uff09\uff1a COGS = Revenue \u2212 EBIT \u2212 SGA \u2212 RD \uff0c\u4fdd\u6301\u635f\u76ca\u6052\u7b49\u5f0f\u3001\u4e0e\u76ee\u6807\u5229\u6da6\u7387/\u8d39\u7528\u7387\u4e00\u81f4 - \u76f4\u63a5\u6bd4\u7387\uff1a COGS = Revenue \u00d7 median(COGS/Revenue) \uff0c\u4fbf\u4e8e\u8ddf\u8e2a\u6bdb\u5229\u8def\u5f84\u4e0e\u8d8b\u52bf \u5b9e\u73b0\u7ec6\u8282 \uff1a - UI \u5f00\u5173\uff1a cogs_forecast_mode = residual|direct_ratio - \u4e0e\u5468\u8f6c\u8054\u52a8\uff1a\u7eaf\u201c\u5386\u53f2\u4e2d\u4f4d\u6570\u201d\u573a\u666f\u91c7\u7528\u6b8b\u5dee COGS\uff0c\u6df7\u5408\u573a\u666f\u91c7\u7528\u5386\u53f2 COGS \u6bd4\u7387\uff0c\u964d\u4f4e\u8fc7\u6e21/\u76ee\u6807\u5047\u8bbe\u5bf9\u5468\u8f6c\u89c4\u6a21\u7684\u626d\u66f2 3.3 \u8425\u8fd0\u8d44\u672c\u9884\u6d4b\u7b97\u6cd5 3.3.1 \u5468\u8f6c\u5929\u6570\u6cd5\u5b9e\u73b0\uff08\u53e3\u5f84\u7edf\u4e00 + \u8fc7\u6e21\u5e73\u6ed1\uff09 \u6838\u5fc3\u516c\u5f0f \uff1a forecaster.py:455-691 # \u5e94\u6536\u8d26\u6b3e accounts_receivable = (revenue / Decimal(\"360\")) * days # \u5b58\u8d27 inventories = (cogs / Decimal(\"360\")) * days # \u5e94\u4ed8\u8d26\u6b3e accounts_payable = (cogs / Decimal(\"360\")) * days McKinsey \u6807\u51c6\u7b26\u5408\u5ea6 \uff1a\u2705 88% - \u4f7f\u7528\u5468\u8f6c\u5929\u6570\u6cd5\u7b26\u5408\u8d22\u52a1\u9884\u6d4b\u6700\u4f73\u5b9e\u8df5 - \u9884\u6d4b\u57fa\u671f\u6539\u4e3a\u201c\u5206\u9879\u53e3\u5f84 NWC\u201d\uff08 last_component_nwc \uff09\uff0c\u4e0e\u9884\u6d4b\u671f\u53e3\u5f84\u4e00\u81f4 - \u57fa\u671f\u6765\u6e90\u4e0e\u6eda\u52a8\uff1a last_component_nwc \u57fa\u4e8e\u201c\u4f30\u503c\u65e5\u524d\u6700\u65b0\u8d44\u4ea7\u8d1f\u503a\u8868\u201d\u91cd\u7b97\uff08\u5b63\u5ea6/\u4e2d\u62a5/\u5e74\u62a5\u5747\u53ef\uff09\uff0c\u4e0e\u80a1\u6743\u6865\u53e3\u5f84\u4e00\u81f4 - DSO/DIO/DPO \u652f\u6301\u201c\u4ece last_days \u5411\u5386\u53f2\u4e2d\u4f4d\u6570\u7ebf\u6027\u8fc7\u6e21\uff08nwc_days_transition_years\uff09\u201d\uff0c\u907f\u514d\u9996\u5e74 \u0394NWC \u8df3\u53d8 \u4ecd\u9700\u6539\u8fdb\uff1a - 360\u5929\u5047\u8bbe\u53ef\u6269\u5c55\u4e3a 360/365/366/\u6309\u4f1a\u8ba1\u5e74\u5ea6 - \u884c\u4e1a\u5178\u578b\u503c\u4e0e\u5b63\u8282\u6027\u5c1a\u672a\u7eb3\u5165 3.4 \u4e0eMcKinsey\u9884\u6d4b\u6807\u51c6\u5bf9\u6bd4 \u9884\u6d4b\u7ef4\u5ea6 McKinsey\u6807\u51c6 \u672c\u9879\u76ee\u5b9e\u73b0 \u7b26\u5408\u5ea6 \u5dee\u5f02\u5206\u6790 \u6536\u5165\u9884\u6d4b \u591a\u56e0\u7d20\u6a21\u578b+\u5b8f\u89c2\u8c03\u6574 CAGR\u8870\u51cf\u6a21\u578b \u26a0\ufe0f 70% \u7f3a\u4e4f\u5b8f\u89c2\u56e0\u7d20 \u6210\u672c\u9884\u6d4b \u76f4\u63a5\u6bd4\u7387\u9884\u6d4b \u53cd\u63a8\u6cd5+\u76f4\u63a5\u6bd4\u7387\u53cc\u6a21\u5f0f \u2705 85% \u5df2\u63d0\u4f9b\u6a21\u5f0f\u5f00\u5173 \u8425\u8fd0\u8d44\u672c \u5468\u8f6c\u5929\u6570+\u5b63\u8282\u6027 \u5468\u8f6c\u5929\u6570 + \u5206\u9879\u57fa\u51c6 + \u65e5\u6570\u5e73\u6ed1 \u2705 88% \u5b63\u8282\u6027/\u884c\u4e1a\u6807\u5c3a\u5f85\u8865 \u9884\u6d4b\u6a21\u5f0f \u591a\u60c5\u666f\u5206\u6790 \u53cc\u6a21\u5f0f\u9884\u6d4b \u26a0\ufe0f 80% \u7f3a\u4e4f\u60c5\u666f\u5206\u6790 \ud83e\uddee \u6570\u636e\u8d28\u91cf\u5904\u7406\u6d41\u7a0b\u5408\u89c4\u6027 4.1 \u5f02\u5e38\u503c\u68c0\u6d4b\u673a\u5236 4.1.1 IQR\u65b9\u6cd5\u5b9e\u73b0 \u5b9e\u73b0\u4ee3\u7801 \uff1a processor.py:293-320 if df_to_clean[col].notna().sum() >= 4: q1 = df_to_clean[col].quantile(0.25) q3 = df_to_clean[col].quantile(0.75) iqr = q3 - q1 if iqr > 1e-9: lower_bound = q1 - 1.5 * iqr upper_bound = q3 + 1.5 * iqr outliers_mask = (df_to_clean[col] < lower_bound) | (df_to_clean[col] > upper_bound) \u79d1\u5b66\u6027\u8bc4\u4f30 \uff1a - \u2705 \u7edf\u8ba1\u57fa\u7840\u624e\u5b9e\uff1aIQR\u65b9\u6cd5\u5bf9\u5f02\u5e38\u503c\u68c0\u6d4b\u5177\u6709\u9c81\u68d2\u6027 - \u2705 \u6570\u636e\u91cf\u8981\u6c42\u5408\u7406\uff1a\u8981\u6c42\u81f3\u5c114\u4e2a\u6709\u6548\u6570\u636e\u70b9 - \u2705 \u8fb9\u754c\u6761\u4ef6\u5904\u7406\uff1a\u8003\u8651IQR\u63a5\u8fd1\u96f6\u7684\u60c5\u51b5 McKinsey \u6807\u51c6\u7b26\u5408\u5ea6 \uff1a\u2705 90% 4.2 \u6570\u636e\u6807\u51c6\u5316\u6d41\u7a0b 4.2.1 \u6570\u636e\u7c7b\u578b\u6807\u51c6\u5316 \u5b9e\u73b0\u4ee3\u7801 \uff1a processor.py:408-413 s1_decimal = series1.apply(lambda x: Decimal(str(x)) if pd.notna(x) else None) s2_decimal = series2.apply(lambda x: Decimal(str(x)) if pd.notna(x) else None) McKinsey \u6807\u51c6\u7b26\u5408\u5ea6 \uff1a\u2705 100% - \u7edf\u4e00\u4f7f\u7528Decimal\u8fdb\u884c\u9ad8\u7cbe\u5ea6\u8ba1\u7b97 - \u5b8c\u6574\u7684\u7c7b\u578b\u8f6c\u6362\u548c\u5f02\u5e38\u5904\u7406 4.3 McKinsey\u6570\u636e\u8d28\u91cf\u6846\u67b6\u7b26\u5408\u5ea6 DQ\u7ef4\u5ea6 McKinsey\u6807\u51c6 \u672c\u9879\u76ee\u5b9e\u73b0 \u7b26\u5408\u5ea6 \u6539\u8fdb\u5efa\u8bae \u5b8c\u6574\u6027 \u6570\u636e\u8986\u76d6\u7387\u76d1\u63a7 \u826f\u597d\u7f3a\u5931\u503c\u5904\u7406 75% \u589e\u52a0\u8986\u76d6\u7387\u76d1\u63a7 \u51c6\u786e\u6027 \u4ea4\u53c9\u9a8c\u8bc1\u673a\u5236 \u826f\u597d\u5f02\u5e38\u503c\u68c0\u6d4b 70% \u589e\u52a0\u4ea4\u53c9\u9a8c\u8bc1 \u4e00\u81f4\u6027 \u8de8\u7cfb\u7edf\u4e00\u81f4\u6027 \u5185\u90e8\u4e00\u81f4\u6027\u826f\u597d 80% \u5b8c\u5584\u8de8\u6e90\u9a8c\u8bc1 \u53ca\u65f6\u6027 \u65f6\u6548\u6027\u76d1\u63a7 \u7f3a\u4e4f\u65f6\u6548\u6027\u9a8c\u8bc1 40% \u589e\u52a0\u65f6\u6548\u68c0\u67e5 \u6709\u6548\u6027 \u4e1a\u52a1\u89c4\u5219\u9a8c\u8bc1 \u5b8c\u5584\u7684\u7c7b\u578b\u9a8c\u8bc1 85% \u5b8c\u5584\u4e1a\u52a1\u89c4\u5219 \u552f\u4e00\u6027 \u5168\u5c40\u552f\u4e00\u6027 \u57fa\u7840\u53bb\u91cd\u673a\u5236 60% \u589e\u5f3a\u552f\u4e00\u6027\u9a8c\u8bc1 \ud83d\udea8 \u5173\u952e\u95ee\u9898\u8bc6\u522b\u4e0e\u6539\u8fdb\u5efa\u8bae 5.1 \u9ad8\u4f18\u5148\u7ea7\u95ee\u9898\uff08\u66f4\u65b0\uff09 5.1.1 \u6210\u672c\u9884\u6d4b\u6a21\u5f0f\uff08\u5df2\u5b8c\u6210\uff09 \u5df2\u5b9e\u73b0 COGS \u76f4\u63a5\u6bd4\u7387\u6a21\u5f0f\u4e0e UI \u5f00\u5173\uff0c\u517c\u5bb9\u53cd\u63a8\u6cd5\uff0c\u6ee1\u8db3 McKinsey \u5bf9\u6bdb\u5229\u8def\u5f84\u53ef\u8ffd\u8e2a\u6027\u7684\u8981\u6c42\u3002 5.1.2 \u884c\u4e1a\u9002\u5e94\u6027\u4e0d\u8db3 \u95ee\u9898 \uff1a\u7f3a\u4e4f\u884c\u4e1a\u5dee\u5f02\u5316\u53c2\u6570 \u5f71\u54cd \uff1a\u8de8\u884c\u4e1a\u4f30\u503c\u51c6\u786e\u6027\u4e0d\u8db3 \u4fee\u590d\u5efa\u8bae \uff1a class IndustryFinancialParameters: \"\"\"\u884c\u4e1a\u8d22\u52a1\u53c2\u6570\u6570\u636e\u5e93\"\"\" PARAMETERS = { 'Technology': { 'revenue_growth': 0.15, 'operating_margin': 0.25, 'inventory_days': 45, 'receivable_days': 60 }, 'Manufacturing': { 'revenue_growth': 0.08, 'operating_margin': 0.15, 'inventory_days': 60, 'receivable_days': 45 }, 'Retail': { 'revenue_growth': 0.05, 'operating_margin': 0.08, 'inventory_days': 30, 'receivable_days': 15 } } 5.1.3 \u60c5\u666f\u5206\u6790\u7f3a\u5931 \u95ee\u9898 \uff1a\u7f3a\u4e4fMcKinsey\u6807\u51c6\u7684\u591a\u60c5\u666f\u5206\u6790 \u5f71\u54cd \uff1a\u98ce\u9669\u8bc4\u4f30\u4e0d\u5b8c\u6574 \u4fee\u590d\u5efa\u8bae \uff1a def scenario_analysis(self, base_forecast, scenarios): \"\"\" McKinsey\u6807\u51c6\u60c5\u666f\u5206\u6790 \"\"\" results = {} for scenario_name, adjustments in scenarios.items(): scenario_forecast = base_forecast.copy() # \u5e94\u7528\u60c5\u666f\u8c03\u6574 for metric, adjustment in adjustments.items(): if metric in scenario_forecast: scenario_forecast[metric] *= adjustment results[scenario_name] = scenario_forecast return results 5.2 \u4e2d\u4f18\u5148\u7ea7\u6539\u8fdb 5.2.1 \u6570\u636e\u8d28\u91cf\u76d1\u63a7\u589e\u5f3a class DataQualityMonitor: \"\"\"\u6570\u636e\u8d28\u91cf\u76d1\u63a7\u7cfb\u7edf\"\"\" def __init__(self): self.metrics = { 'completeness': self._calculate_completeness, 'accuracy': self._calculate_accuracy, 'timeliness': self._calculate_timeliness } def generate_quality_report(self, data): \"\"\"\u751f\u6210\u6570\u636e\u8d28\u91cf\u62a5\u544a\"\"\" scores = {} for metric_name, calculator in self.metrics.items(): scores[metric_name] = calculator(data) return { 'overall_score': sum(scores.values()) / len(scores), 'detailed_scores': scores, 'recommendations': self._generate_recommendations(scores) } 5.2.2 \u9884\u6d4b\u7b97\u6cd5\u4f18\u5316 class AdvancedForecastEngine: \"\"\"\u9ad8\u7ea7\u9884\u6d4b\u5f15\u64ce\"\"\" def __init__(self): self.models = { 'arima': self._arima_forecast, 'exponential_smoothing': self._exponential_smoothing, 'machine_learning': self._ml_forecast } def ensemble_forecast(self, data, models_weights=None): \"\"\"\u96c6\u6210\u9884\u6d4b\"\"\" forecasts = {} for model_name, model_func in self.models.items(): forecasts[model_name] = model_func(data) # \u52a0\u6743\u96c6\u6210 if models_weights is None: models_weights = {name: 1/len(self.models) for name in self.models} ensemble_result = sum( forecasts[model] * weight for model, weight in models_weights.items() ) return ensemble_result 5.3 \u4f4e\u4f18\u5148\u7ea7\u4f18\u5316 5.3.1 \u4f1a\u8ba1\u671f\u95f4\u6807\u51c6\u5316 def standardize_accounting_period(self, financial_data): \"\"\"\u4f1a\u8ba1\u671f\u95f4\u6807\u51c6\u5316\"\"\" # \u652f\u6301360\u5929\u3001365\u5929\u3001366\u5929 period_config = self.config.get('accounting_period', 360) if period_config == 'actual': # \u6839\u636e\u5b9e\u9645\u5e74\u5ea6\u5929\u6570 return self._calculate_actual_days(financial_data) else: return period_config 5.3.2 \u589e\u5f3a\u7684\u654f\u611f\u6027\u5206\u6790 def advanced_sensitivity_analysis(self, base_params, sensitivity_ranges): \"\"\"\u9ad8\u7ea7\u654f\u611f\u6027\u5206\u6790\"\"\" sensitivity_results = {} for param_name, range_values in sensitivity_ranges.items(): param_results = [] for value in range_values: modified_params = base_params.copy() modified_params[param_name] = value # \u8fd0\u884c\u4f30\u503c result = self.run_valuation(modified_params) param_results.append(result) sensitivity_results[param_name] = param_results return sensitivity_results \ud83d\udcca \u603b\u4f53\u8bc4\u4ef7\u4e0e\u5efa\u8bae 6.1 \u7efc\u5408\u8bc4\u5206 \u8bc4\u4f30\u7ef4\u5ea6 \u5f97\u5206 \u7b49\u7ea7 \u8bf4\u660e \u8d22\u52a1\u6bd4\u7387\u8ba1\u7b97 92/100 A- \u8ba1\u7b97\u51c6\u786e\uff0c\u7cbe\u5ea6\u63a7\u5236\u4f18\u79c0 \u8d22\u52a1\u9884\u6d4b\u7b97\u6cd5 84/100 B+ \u53cc\u6a21\u5f0f\u6210\u672c\u3001NWC \u53e3\u5f84\u4e0e\u8fc7\u6e21\u8865\u5f3a \u6570\u636e\u8d28\u91cf\u63a7\u5236 85/100 B+ \u6e05\u6d17\u903b\u8f91\u5b8c\u5584\uff0c\u76d1\u63a7\u4e0d\u8db3 McKinsey\u6807\u51c6\u7b26\u5408\u5ea6 85/100 A- \u5173\u952e\u73af\u8282\u589e\u5f3a\uff0c\u884c\u4e1a/\u60c5\u666f\u5f85\u8865 \u6280\u672f\u5b9e\u73b0\u8d28\u91cf 90/100 A- \u4ee3\u7801\u8d28\u91cf\u9ad8\uff0c\u67b6\u6784\u6e05\u6670 \u884c\u4e1a\u9002\u5e94\u6027 70/100 B- \u7f3a\u4e4f\u884c\u4e1a\u5dee\u5f02\u5316\u5904\u7406 \u7efc\u5408\u8bc4\u5206 82.5/100 B+ \u5177\u5907\u4e13\u4e1a\u6c34\u51c6\uff0c\u9700\u8981\u5173\u952e\u6539\u8fdb 6.2 \u6838\u5fc3\u4f18\u52bf \u6280\u672f\u67b6\u6784\u5353\u8d8a \uff1a\u6a21\u5757\u5316\u8bbe\u8ba1\uff0c\u804c\u8d23\u5206\u79bb\u6e05\u6670 \u8ba1\u7b97\u7cbe\u5ea6\u9ad8 \uff1a\u4f7f\u7528Decimal\u786e\u4fdd\u91d1\u878d\u8ba1\u7b97\u7cbe\u5ea6 \u5f02\u5e38\u5904\u7406\u5b8c\u5584 \uff1a\u5b8c\u6574\u7684\u8fb9\u754c\u6761\u4ef6\u68c0\u67e5\u548c\u9519\u8bef\u5904\u7406 \u57fa\u7840\u903b\u8f91\u6b63\u786e \uff1a\u8d22\u52a1\u6bd4\u7387\u8ba1\u7b97\u7b26\u5408\u57fa\u672c\u8d22\u52a1\u539f\u7406 \u4ee3\u7801\u8d28\u91cf\u4f18\u79c0 \uff1a\u7c7b\u578b\u6ce8\u89e3\u5b8c\u6574\uff0c\u6d4b\u8bd5\u8986\u76d6\u826f\u597d 6.3 \u4e3b\u8981\u4e0d\u8db3 \u9884\u6d4b\u6a21\u578b\u7b80\u5316 \uff1a\u7f3a\u4e4f\u591a\u56e0\u7d20\u9884\u6d4b\u548c\u5b8f\u89c2\u7ecf\u6d4e\u8003\u8651 \u884c\u4e1a\u9002\u5e94\u6027\u4e0d\u8db3 \uff1a\u7f3a\u4e4f\u884c\u4e1a\u7279\u5b9a\u7684\u8d22\u52a1\u53c2\u6570 \u60c5\u666f\u5206\u6790\u7f3a\u5931 \uff1a\u4e0d\u7b26\u5408McKinsey\u591a\u60c5\u666f\u5206\u6790\u6807\u51c6 \u6570\u636e\u8d28\u91cf\u76d1\u63a7\u8584\u5f31 \uff1a\u7f3a\u4e4f\u6301\u7eed\u7684\u6570\u636e\u8d28\u91cf\u76d1\u63a7\u673a\u5236 6.4 \u6539\u8fdb\u4ef7\u503c\u8bc4\u4f30 \u901a\u8fc7\u5b9e\u65bd\u5efa\u8bae\u7684\u6539\u8fdb\u63aa\u65bd\uff0c\u9879\u76ee\u53ef\u4ee5\u4ece B+\u7ea7(82.5\u5206)\u63d0\u5347\u81f3A\u7ea7(90\u5206\u4ee5\u4e0a) \uff0c\u6210\u4e3a\u771f\u6b63\u610f\u4e49\u4e0a\u7684\u4f01\u4e1a\u7ea7\u8d22\u52a1\u5206\u6790\u5e73\u53f0\u3002 6.5 \u5b9e\u65bd\u8def\u7ebf\u56fe \u7b2c\u4e00\u9636\u6bb5\uff081-2\u4e2a\u6708\uff09\uff1a\u5173\u952e\u95ee\u9898\u4fee\u590d [ ] \u4fee\u590dCOGS\u9884\u6d4b\u903b\u8f91\uff0c\u6539\u4e3a\u76f4\u63a5\u6bd4\u7387\u9884\u6d4b [ ] \u5efa\u7acb\u884c\u4e1a\u8d22\u52a1\u53c2\u6570\u6570\u636e\u5e93 [ ] \u5b9e\u73b0\u57fa\u7840\u60c5\u666f\u5206\u6790\u529f\u80fd \u7b2c\u4e8c\u9636\u6bb5\uff082-3\u4e2a\u6708\uff09\uff1a\u9884\u6d4b\u7b97\u6cd5\u589e\u5f3a [ ] \u96c6\u6210\u5b8f\u89c2\u7ecf\u6d4e\u56e0\u7d20\u8c03\u6574 [ ] \u5b9e\u73b0\u5b63\u8282\u6027\u8c03\u6574\u7b97\u6cd5 [ ] \u589e\u5f3a\u6570\u636e\u8d28\u91cf\u76d1\u63a7\u673a\u5236 \u7b2c\u4e09\u9636\u6bb5\uff083-4\u4e2a\u6708\uff09\uff1aMcKinsey\u6807\u51c6\u5408\u89c4 [ ] \u5b8c\u5584\u591a\u60c5\u666f\u5206\u6790\u6846\u67b6 [ ] \u5b9e\u73b0\u9ad8\u7ea7\u654f\u611f\u6027\u5206\u6790 [ ] \u5efa\u7acb\u5b8c\u6574\u7684\u6570\u636e\u8d28\u91cf\u6cbb\u7406\u4f53\u7cfb \ud83c\udfaf \u7ed3\u8bba stock_vale_valuation_3.0 \u9879\u76ee\u5728\u8d22\u52a1\u6bd4\u7387\u8ba1\u7b97\u548c\u9884\u6d4b\u903b\u8f91\u65b9\u9762\u5c55\u73b0\u4e86 \u8f83\u9ad8\u7684\u4e13\u4e1a\u6c34\u51c6 \uff0c\u6280\u672f\u67b6\u6784\u548c\u6838\u5fc3\u8ba1\u7b97\u903b\u8f91\u90fd\u8fbe\u5230\u4e86\u4e13\u4e1a\u6807\u51c6\u3002\u9879\u76ee\u5177\u5907\u6210\u4e3a \u4f01\u4e1a\u7ea7\u8d22\u52a1\u5206\u6790\u5e73\u53f0 \u7684\u6f5c\u529b\uff0c\u4f46\u9700\u8981\u5728\u4ee5\u4e0b\u5173\u952e\u65b9\u9762\u8fdb\u884c\u6539\u8fdb\uff1a \u9884\u6d4b\u6a21\u578b\u79d1\u5b66\u6027 \uff1a\u4fee\u590dCOGS\u5012\u63a8\u903b\u8f91\uff0c\u589e\u5f3a\u9884\u6d4b\u7b97\u6cd5 \u884c\u4e1a\u9002\u5e94\u6027 \uff1a\u5efa\u7acb\u884c\u4e1a\u5dee\u5f02\u5316\u53c2\u6570\u548c\u9884\u6d4b\u6a21\u578b McKinsey\u6807\u51c6\u5408\u89c4 \uff1a\u5b9e\u73b0\u591a\u60c5\u666f\u5206\u6790\u548c\u654f\u611f\u6027\u5206\u6790 \u6570\u636e\u8d28\u91cf\u6cbb\u7406 \uff1a\u5efa\u7acb\u5b8c\u5584\u7684\u6570\u636e\u8d28\u91cf\u76d1\u63a7\u4f53\u7cfb \u901a\u8fc7\u5b9e\u65bd\u4e0a\u8ff0\u6539\u8fdb\u5efa\u8bae\uff0c\u9879\u76ee\u53ef\u4ee5\u8fbe\u5230 A\u7ea7\u4e13\u4e1a\u6c34\u51c6 \uff0890\u5206\u4ee5\u4e0a\uff09\uff0c\u6210\u4e3a\u771f\u6b63\u610f\u4e49\u4e0a\u7684\u4f01\u4e1a\u7ea7\u8d22\u52a1\u5206\u6790\u5e73\u53f0\u3002\u9879\u76ee\u5df2\u7ecf\u5177\u5907\u4e86\u624e\u5b9e\u7684\u57fa\u7840\uff0c\u5f00\u53d1\u56e2\u961f\u5c55\u73b0\u4e86\u5728\u91d1\u878d\u5de5\u7a0b\u548c\u8f6f\u4ef6\u67b6\u6784\u65b9\u9762\u7684\u6df1\u539a\u529f\u5e95\uff0c\u662f\u4e00\u4e2a\u5177\u6709\u5f88\u9ad8\u4ef7\u503c\u7684\u91d1\u878d\u79d1\u6280\u57fa\u7840\u6846\u67b6\u3002 \u6700\u7ec8\u8bc4\u4ef7 \uff1a\u8fd9\u662f\u4e00\u4e2a \u4f18\u79c0\u7684\u8d22\u52a1\u8ba1\u7b97\u57fa\u7840\u6846\u67b6 \uff0c\u5728\u5173\u952e\u7ec6\u8282\u4e0a\u8fdb\u884c\u4f18\u5316\u540e\uff0c\u5b8c\u5168\u53ef\u4ee5\u8fbe\u5230\u56fd\u9645\u9876\u5c16\u6c34\u5e73\u3002 \ud83d\udd27 \u4ee3\u7801\u53c2\u8003\u4e0e\u5f53\u524d\u5b9e\u73b0\u6458\u8981\uff08\u66f4\u65b0\uff09 \u6bd4\u7387\u4e0e\u5904\u7406\uff1a src/core/financial/processor.py \uff08\u5386\u53f2\u4e2d\u4f4d\u6570\u3001\u5468\u8f6c\u3001 last_component_nwc \u3001 last_*_days \uff09 \u9884\u6d4b\u5f15\u64ce\uff1a src/core/financial/forecaster.py \uff08\u6536\u5165\u8870\u51cf\u3001\u5229\u6da6\u4e24\u6a21\u5f0f\u3001 nwc_baseline_mode \u4e0e\u65e5\u6570\u5e73\u6ed1\u3001COGS \u53cc\u6a21\u5f0f\uff09 DCF \u6838\u5fc3\uff1a \u73b0\u503c\uff1a src/core/calculators/dcf/present_value_calculator.py \uff08\u5e74\u672b/\u5e74\u4e2d\u6298\u73b0\uff09 \u7ec8\u503c\uff1a src/core/calculators/dcf/terminal_value_calculator.py \uff08\u5f53\u524d PGR \u2264 Rf\uff09 WACC\uff1a src/core/calculators/dcf/wacc_calculator.py \uff08Ke = Rf + \u03b2\u00d7(MRP+CRP) + Size + IRP\uff09 \ud83e\udde9 \u914d\u7f6e\u4e0e\u4f18\u5316\u5efa\u8bae\uff08\u843d\u5730\u6307\u5f15\uff09 \u4f1a\u8ba1\u671f\u95f4\uff1a\u589e\u52a0 days_in_year \u5168\u5c40\u914d\u7f6e\uff08360/365/366/actual\uff09\u5e76\u5728\u5468\u8f6c\u8ba1\u7b97\u4e2d\u542f\u7528 \u6210\u672c\u9884\u6d4b\uff1a\u4fdd\u7559\u53cd\u63a8\u6cd5\uff0c\u540c\u65f6\u65b0\u589e\u201c\u76f4\u63a5\u6bd4\u7387\u9884\u6d4b\u201d\u5f00\u5173\uff1bUI \u589e\u52a0\u6a21\u5f0f\u9009\u62e9 \u5b8f\u89c2/\u884c\u4e1a\uff1a\u63a5\u5165\u884c\u4e1a\u53c2\u6570\u57fa\u51c6\u4e0e\u540d\u4e49 GDP \u57fa\u51c6\uff0c\u7528\u4e8e\u6536\u5165\u4e0e PGR \u6821\u9a8c \u0394NWC \u5ba1\u8ba1\uff1a\u7ed3\u679c\u9875\u56fa\u5b9a\u5c55\u793a\u9996\u5e74 \u0394NWC \u6784\u6210\uff08AR\u3001Inv\u3001AP\u3001OCA\u3001OCL\uff09\uff0c\u5bf9\u7167\u5386\u53f2\u4e2d\u4f4d\u6570 \u57fa\u671f\u6eda\u52a8\uff1a\u5728 UI \u66b4\u9732 ltm_baseline_enabled \u4e0e\u201c\u4f30\u503c\u57fa\u51c6\u65e5\u201d\uff0c\u8c03\u8bd5\u533a\u5c55\u793a baseline_debug \uff08YTD/LTM \u5206\u89e3\uff09\u4e0e\u6700\u65b0\u8d44\u4ea7\u8d1f\u503a\u8868\u65e5\u671f/\u53e3\u5f84 \ud83d\udccb \u4e13\u4e1a\u672f\u8bed\u5bf9\u7167\u8868 \u4e2d\u6587\u672f\u8bed \u82f1\u6587\u672f\u8bed McKinsey \u6807\u51c6\u5b9a\u4e49 \u8425\u4e1a\u5229\u6da6\u7387 Operating Margin EBIT / Total Revenue\uff0c\u8861\u91cf\u6838\u5fc3\u76c8\u5229\u80fd\u529b \u5e94\u6536\u8d26\u6b3e\u5468\u8f6c\u5929\u6570 Days Sales Outstanding (DSO) (Accounts Receivable / Revenue) \u00d7 365\uff0c\u8861\u91cf\u6536\u6b3e\u6548\u7387 \u5b58\u8d27\u5468\u8f6c\u5929\u6570 Days Inventory Outstanding (DIO) (Inventory / COGS) \u00d7 365\uff0c\u8861\u91cf\u5b58\u8d27\u7ba1\u7406\u6548\u7387 \u51c0\u8425\u8fd0\u8d44\u672c Net Working Capital (NWC) Current Assets - Current Liabilities\uff0c\u8861\u91cf\u77ed\u671f\u6d41\u52a8\u6027 \u60c5\u666f\u5206\u6790 Scenario Analysis \u4e50\u89c2\u3001\u57fa\u51c6\u3001\u60b2\u89c2\u591a\u79cd\u60c5\u666f\u4e0b\u7684\u9884\u6d4b\u5206\u6790 \u654f\u611f\u6027\u5206\u6790 Sensitivity Analysis \u5173\u952e\u53c2\u6570\u53d8\u5316\u5bf9\u7ed3\u679c\u5f71\u54cd\u7684\u5206\u6790 \u6570\u636e\u8d28\u91cf Data Quality \u6570\u636e\u7684\u5b8c\u6574\u6027\u3001\u51c6\u786e\u6027\u3001\u4e00\u81f4\u6027\u3001\u53ca\u65f6\u6027\u7b49\u7ef4\u5ea6 \u62a5\u544a\u751f\u6210\u65f6\u95f4 \uff1a2025\u5e749\u670810\u65e5 \u5206\u6790\u57fa\u51c6 \uff1aMcKinsey & Company \u8d22\u52a1\u5206\u6790\u6807\u51c6 (\u7b2c7\u7248) \u9879\u76ee\u7248\u672c \uff1astock_vale_valuation_3.0 \u5b9e\u73b0\u4eae\u70b9\uff082025-09-10\uff09 \uff1a - nwc_days_transition_years \u652f\u6301\u6309\u5e74\u5e73\u6ed1\u5411\u76ee\u6807/\u4e2d\u4f4d\u6570\u8fc7\u6e21\uff0c\u907f\u514d \u0394NWC \u9996\u5e74\u8df3\u53d8 - last_component_nwc \u57fa\u4e8e\u4f30\u503c\u65e5\u7684\u6700\u65b0\u8d44\u4ea7\u8d1f\u503a\u8868\u4e00\u884c\u91cd\u7b97\uff0c\u907f\u514d\u53e3\u5f84\u4e0d\u4e00\u81f4 - \u5355\u5143\u6d4b\u8bd5\u9a8c\u8bc1\uff1a - \u964d\u4f4e DSO \u6216\u63d0\u9ad8 DPO \u2192 \u0394NWC \u4e3a\u8d1f\uff08\u91ca\u653e\u73b0\u91d1\uff09 - \u63d0\u9ad8 DIO \u2192 \u0394NWC \u4e3a\u6b63\uff08\u5360\u7528\u73b0\u91d1\uff09 - \u5e45\u5ea6\u4e0e \u6536\u5165/COGS \u00d7 \u5929\u6570\u53d8\u5316/360 \u6210\u6bd4\u4f8b \ud83d\udcc9 \u6570\u636e\u8d28\u91cf\u4e0e\u53e3\u5f84\uff08\u65b0\u589e\uff09 \u80a1\u606f TTM \u53e3\u5f84 \uff1a\u4f18\u5148\u91c7\u7528\u201c\u5b9e\u65bd/\u5b8c\u6210\u201d\uff1b\u65e0\u5219\u201cTTM\u00b7\u9884\u6848\u201d\uff1b\u4ecd\u65e0\u5219\u201c\u5e74\u5ea6\u6700\u8fd1\u4e00\u6b21\u201d as-of \u4e00\u81f4\u6027 \uff1a\u4ef7\u683c\u4f7f\u7528 trade_date \u2264 \u4f30\u503c\u65e5 \u7684\u6700\u8fd1\u8bb0\u5f55\uff1bEPS\uff08\u5e74\u62a5\uff09\u4f7f\u7528 end_date \u2264 \u4f30\u503c\u65e5 \u7684\u6700\u8fd1\u8bb0\u5f55\uff1bUI \u6807\u7b7e\u8bf4\u660e\u53e3\u5f84\u4e0e\u6765\u6e90 \u884c\u4e1a\u9884\u8bbe \uff1aGICS 11 + \u767d\u9152\u53d8\u4f53\u63d0\u4f9b \u03b2/\u9884\u6d4b\u671f/PGR cap/\u4e58\u6570/\u5468\u8f6c\u533a\u95f4\uff1bAPI debug \u8fd4\u56de applied_preset \u4e0e applied_preset_diff","title":"Stock Vale Valuation 3.0 \u8d22\u52a1\u6bd4\u7387\u4e0e\u9884\u6d4b\u903b\u8f91 McKinsey \u6807\u51c6\u5408\u89c4\u6027\u4e13\u9898\u5206\u6790\u62a5\u544a"},{"location":"archived/mckinsey_financial_ratios_and_forecasting_analysis/#stock-vale-valuation-30-mckinsey","text":"","title":"Stock Vale Valuation 3.0 \u8d22\u52a1\u6bd4\u7387\u4e0e\u9884\u6d4b\u903b\u8f91 McKinsey \u6807\u51c6\u5408\u89c4\u6027\u4e13\u9898\u5206\u6790\u62a5\u544a"},{"location":"archived/mckinsey_financial_ratios_and_forecasting_analysis/#_1","text":"\u672c\u62a5\u544a\u57fa\u4e8e\u5bf9 stock_vale_valuation_3.0 \u9879\u76ee\u8d22\u52a1\u8ba1\u7b97\u6838\u5fc3\u6a21\u5757\u7684\u6df1\u5ea6\u6280\u672f\u5206\u6790\uff0c\u4ece McKinsey \u8d22\u52a1\u5206\u6790\u6807\u51c6 \u7684\u89d2\u5ea6\u5bf9\u9879\u76ee\u7684\u8d22\u52a1\u6bd4\u7387\u8ba1\u7b97\u903b\u8f91\u3001\u8d22\u52a1\u9884\u6d4b\u7b97\u6cd5\u3001\u6570\u636e\u8d28\u91cf\u5904\u7406\u6d41\u7a0b\u8fdb\u884c\u5168\u9762\u8bc4\u4f30\u3002\u5206\u6790\u53d1\u73b0\u8be5\u9879\u76ee\u5728\u6280\u672f\u5b9e\u73b0\u548c\u57fa\u7840\u903b\u8f91\u4e0a\u8fbe\u5230\u4e13\u4e1a\u6c34\u51c6\uff0c\u4f46\u5728\u9ad8\u7ea7\u8d22\u52a1\u5206\u6790\u6280\u5de7\u548c\u884c\u4e1a\u9002\u5e94\u6027\u65b9\u9762\u5b58\u5728\u91cd\u8981\u6539\u8fdb\u7a7a\u95f4\u3002 \u6838\u5fc3\u53d1\u73b0\uff082025-09-10 \u66f4\u65b0\uff09 \uff1a - \u6280\u672f\u5b9e\u73b0\u4f18\u79c0 \uff1a\u6a21\u5757\u5316\u8bbe\u8ba1\u6e05\u6670\uff0c\u8ba1\u7b97\u7cbe\u5ea6\u9ad8\uff0c\u5f02\u5e38\u5904\u7406\u5b8c\u5584 - \u57fa\u7840\u903b\u8f91\u6b63\u786e \uff1a\u8d22\u52a1\u6bd4\u7387\u8ba1\u7b97\u7b26\u5408\u57fa\u672c\u8d22\u52a1\u5206\u6790\u539f\u7406 - \u9884\u6d4b\u6a21\u578b\u79d1\u5b66 \uff1a\u6536\u5165\u9884\u6d4b\u548c\u8d22\u52a1\u9884\u6d4b\u7b97\u6cd5\u57fa\u672c\u5408\u7406 - McKinsey\u6807\u51c6\u7b26\u5408\u5ea6\u4e2d\u7b49 \uff1a\u57fa\u7840\u529f\u80fd\u7b26\u5408\uff0c\u4f46\u7f3a\u4e4f\u9ad8\u7ea7\u5206\u6790\u529f\u80fd - \u6eda\u52a8\u4e0e\u53e3\u5f84\u7edf\u4e00\u6539\u8fdb \uff1a\u652f\u6301 LTM/Interim \u57fa\u671f\uff08\u53ef\u9009\uff09\uff0c last_component_nwc \u4e0e\u201c\u4f30\u503c\u65e5\u6eda\u52a8\u7684\u6700\u65b0\u8d44\u4ea7\u8d1f\u503a\u8868\u201d\u5bf9\u9f50\uff0c\u51cf\u5c11\u9996\u5e74 \u0394NWC \u53e3\u5f84\u8df3\u53d8 - NWC \u53ef\u89e3\u91ca\u6027\u589e\u5f3a \uff1a\u5f15\u5165 nwc_days_transition_years \u4e0e transition_to_target \uff0c\u0394NWC \u5728 AR/AP/Inv \u7684\u65b9\u5411\u4e0e\u5e45\u5ea6\u4e0e\u5929\u6570\u53d8\u5316\u543b\u5408\uff0c\u5e76\u65b0\u589e\u5355\u6d4b\u8986\u76d6 - \u80a1\u606f\u4e0e as-of \uff1aTTM\uff08\u5b9e\u65bd/\u5b8c\u6210\uff09\u2192 \u9884\u6848 \u2192 \u5e74\u5ea6 \u56de\u9000\u94fe\uff1b\u4ef7\u683c/EPS as-of \u5408\u89c4\u663e\u793a\uff1b\u884c\u4e1a\u9884\u8bbe\u6a21\u677f\u63d0\u5347\u5047\u8bbe\u8d28\u91cf - \u6539\u8fdb\u6f5c\u529b\u5de8\u5927 \uff1a\u901a\u8fc7\u5173\u952e\u6539\u8fdb\u53ef\u8fbe\u5230\u4f01\u4e1a\u7ea7\u8d22\u52a1\u5206\u6790\u5e73\u53f0\u6807\u51c6","title":"\ud83d\udccb \u6267\u884c\u6458\u8981"},{"location":"archived/mckinsey_financial_ratios_and_forecasting_analysis/#_2","text":"","title":"\ud83c\udfaf \u5206\u6790\u8303\u56f4\u4e0e\u65b9\u6cd5\u8bba"},{"location":"archived/mckinsey_financial_ratios_and_forecasting_analysis/#11","text":"\u6838\u5fc3\u6a21\u5757\u5206\u6790 \uff1a - \u8d22\u52a1\u6bd4\u7387\u8ba1\u7b97 \uff1a src/core/financial/processor.py - \u8d22\u52a1\u9884\u6d4b\u7b97\u6cd5 \uff1a src/core/financial/forecaster.py - \u6570\u636e\u8d28\u91cf\u63a7\u5236 \uff1a\u6570\u636e\u83b7\u53d6\u3001\u6e05\u6d17\u3001\u9a8c\u8bc1\u6d41\u7a0b - \u8ba1\u7b97\u5668\u96c6\u7fa4 \uff1aNWC\u3001WACC\u3001FCF\u7b49\u4e13\u4e1a\u5316\u8ba1\u7b97\u5668","title":"1.1 \u5206\u6790\u8303\u56f4"},{"location":"archived/mckinsey_financial_ratios_and_forecasting_analysis/#12-mckinsey","text":"McKinsey \u8d22\u52a1\u5206\u6790\u6700\u4f73\u5b9e\u8df5 \uff1a - \u6807\u51c6\u5316\u8d22\u52a1\u6bd4\u7387\u8ba1\u7b97\u65b9\u6cd5 - \u79d1\u5b66\u7684\u8d22\u52a1\u9884\u6d4b\u6a21\u578b - \u5b8c\u6574\u7684\u6570\u636e\u8d28\u91cf\u63a7\u5236\u4f53\u7cfb - \u884c\u4e1a\u5dee\u5f02\u5316\u5206\u6790\u6846\u67b6 - \u60c5\u666f\u5206\u6790\u548c\u654f\u611f\u6027\u5206\u6790","title":"1.2 McKinsey \u6807\u51c6\u57fa\u51c6"},{"location":"archived/mckinsey_financial_ratios_and_forecasting_analysis/#_3","text":"","title":"\ud83d\udcca \u8d22\u52a1\u6bd4\u7387\u8ba1\u7b97\u903b\u8f91\u5206\u6790"},{"location":"archived/mckinsey_financial_ratios_and_forecasting_analysis/#21","text":"","title":"2.1 \u76c8\u5229\u80fd\u529b\u6bd4\u7387\u5408\u89c4\u6027"},{"location":"archived/mckinsey_financial_ratios_and_forecasting_analysis/#211","text":"\u5b9e\u73b0\u4ee3\u7801 \uff1a processor.py:647-658 op_profit_col = \"operate_profit\" if \"operate_profit\" in is_df.columns else \"ebit\" if op_profit_col in is_df.columns: self.historical_ratios[\"operating_margin_median\"] = self._calculate_median_ratio_or_days( is_df[op_profit_col], is_df.get(\"revenue\", pd.Series()), days_in_year=None, ) \u516c\u5f0f\u5206\u6790 \uff1a \u8425\u4e1a\u5229\u6da6\u7387 = EBIT / \u8425\u4e1a\u6536\u5165\uff08Revenue\uff09 McKinsey \u6807\u51c6\u5bf9\u6bd4 \uff1a - \u6807\u51c6\u5b9a\u4e49 \uff1aOperating Income / Revenue - \u672c\u9879\u76ee\u5b9e\u73b0 \uff1a\u5b8c\u5168\u7b26\u5408\uff0c\u652f\u6301EBIT\u548cOperating Profit\u53cc\u91cd\u8bc6\u522b - \u7b26\u5408\u5ea6 \uff1a\u2705 100% \u4e13\u4e1a\u8bc4\u4ef7 \uff1aA+ - \u667a\u80fd\u5b57\u6bb5\u8bc6\u522b\uff0c\u63d0\u9ad8\u6570\u636e\u9002\u5e94\u6027 - \u4f7f\u7528\u4e2d\u4f4d\u6570\u8ba1\u7b97\uff0c\u7b26\u5408\u8d22\u52a1\u5206\u6790\u6807\u51c6 - \u5f02\u5e38\u5904\u7406\u5b8c\u5584","title":"2.1.1 \u8425\u4e1a\u5229\u6da6\u7387\u8ba1\u7b97"},{"location":"archived/mckinsey_financial_ratios_and_forecasting_analysis/#212","text":"\u5b9e\u73b0\u4ee3\u7801 \uff1a processor.py:568-574 self.historical_ratios[\"cogs_to_revenue_ratio\"] = self._calculate_median_ratio_or_days( is_df.get(\"oper_cost\", pd.Series(dtype=\"float64\")), is_df.get(\"revenue\", pd.Series(dtype=\"float64\")), days_in_year=None, ) McKinsey \u6807\u51c6\u7b26\u5408\u5ea6 \uff1a\u2705 95% - \u4f7f\u7528\u4e2d\u4f4d\u6570\u800c\u975e\u5e73\u5747\u503c\uff0c\u7b26\u5408\u8d22\u52a1\u5206\u6790\u6700\u4f73\u5b9e\u8df5 - \u5904\u7406\u4e86\u5f02\u5e38\u503c\u548c\u7f3a\u5931\u6570\u636e - \u8ba1\u7b97\u903b\u8f91\u4e25\u8c28","title":"2.1.2 \u9500\u8d27\u6210\u672c\u5360\u6536\u6bd4\u8ba1\u7b97"},{"location":"archived/mckinsey_financial_ratios_and_forecasting_analysis/#22","text":"","title":"2.2 \u8fd0\u8425\u6548\u7387\u6bd4\u7387\u5408\u89c4\u6027"},{"location":"archived/mckinsey_financial_ratios_and_forecasting_analysis/#221","text":"\u5b9e\u73b0\u4ee3\u7801 \uff1a processor.py:703-718 self.historical_ratios[\"accounts_receivable_days\"] = self._calculate_median_ratio_or_days( bs_merged_ar[\"accounts_receiv_bill\"], bs_merged_ar[\"revenue\"], days_in_year=360, ) \u516c\u5f0f\u5206\u6790 \uff1a \u5e94\u6536\u8d26\u6b3e\u5468\u8f6c\u5929\u6570 = (\u5e94\u6536\u8d26\u6b3e / \u6536\u5165) \u00d7 360\u5929 McKinsey \u6807\u51c6\u5bf9\u6bd4 \uff1a - \u6807\u51c6\u5b9a\u4e49 \uff1a(Accounts Receivable / Revenue) \u00d7 365\uff08\u6216\u6309\u4f1a\u8ba1\u5e74\u5ea6\u5b9e\u9645\u5929\u6570\uff09 - \u672c\u9879\u76ee\u5b9e\u73b0 \uff1a\u9ed8\u8ba4 360 \u5929\uff08\u672c\u5730\u5316\u60ef\u4f8b\uff09\uff0c\u53ef\u6269\u5c55\u4e3a 365/366 \u6216\u6309\u4f1a\u8ba1\u5e74\u5ea6\u914d\u7f6e - \u5dee\u5f02\u5206\u6790 \uff1a\u9ed8\u8ba4 360 \u5929\u5408\u7406\uff0c\u5efa\u8bae\u63d0\u4f9b\u53ef\u914d\u7f6e/\u6309\u671f\u672b\u65e5\u81ea\u52a8\u8bc6\u522b - \u7b26\u5408\u5ea6 \uff1a\u2705 90% \u6539\u8fdb\u5efa\u8bae \uff1a def get_days_in_year(financial_year_end_date): \"\"\"\u6839\u636e\u5b9e\u9645\u4f1a\u8ba1\u5e74\u5ea6\u786e\u5b9a\u5929\u6570\"\"\" year = financial_year_end_date.year if calendar.isleap(year): return 366 return 365 # \u6216\u8005\u63d0\u4f9b\u914d\u7f6e\u9009\u9879 days_in_year = config.get('days_in_year', 360) # 360/365/366","title":"2.2.1 \u5e94\u6536\u8d26\u6b3e\u5468\u8f6c\u5929\u6570"},{"location":"archived/mckinsey_financial_ratios_and_forecasting_analysis/#23","text":"","title":"2.3 \u8d44\u672c\u7ed3\u6784\u6bd4\u7387\u5408\u89c4\u6027"},{"location":"archived/mckinsey_financial_ratios_and_forecasting_analysis/#231","text":"NWC\u8ba1\u7b97\u5668\u5b9e\u73b0 \uff1a nwc_calculator.py:11-22 def calculate_nwc(self, df: pd.DataFrame) -> pd.Series: \"\"\" NWC = \u6d41\u52a8\u8d44\u4ea7\u5408\u8ba1 - \u8d27\u5e01\u8d44\u91d1 - (\u6d41\u52a8\u8d1f\u503a\u5408\u8ba1 - \u77ed\u671f\u501f\u6b3e - \u4e00\u5e74\u5185\u5230\u671f\u7684\u975e\u6d41\u52a8\u8d1f\u503a) \"\"\" required_cols = [ \"total_cur_assets\", \"money_cap\", \"total_cur_liab\", \"st_borr\", \"non_cur_liab_due_1y\", ] McKinsey \u6807\u51c6\u7b26\u5408\u5ea6 \uff1a\u2705 100% - \u5b9a\u4e49\u7cbe\u786e\uff0c\u7b26\u5408DCF\u4f30\u503c\u8981\u6c42 - \u6392\u9664\u975e\u7ecf\u8425\u6027\u73b0\u91d1\u548c\u6709\u606f\u8d1f\u503a - \u8ba1\u7b97\u903b\u8f91\u4e25\u8c28","title":"2.3.1 \u51c0\u8425\u8fd0\u8d44\u672c\u8ba1\u7b97"},{"location":"archived/mckinsey_financial_ratios_and_forecasting_analysis/#24","text":"","title":"2.4 \u6838\u5fc3\u8ba1\u7b97\u51fd\u6570\u5206\u6790"},{"location":"archived/mckinsey_financial_ratios_and_forecasting_analysis/#241-_calculate_median_ratio_or_days","text":"\u51fd\u6570\u4f4d\u7f6e \uff1a processor.py:401-487 \u6280\u672f\u4f18\u52bf \uff1a - \u6570\u636e\u7cbe\u5ea6 \uff1a\u4f7f\u7528Decimal\u786e\u4fdd\u9ad8\u7cbe\u5ea6\u8ba1\u7b97 - \u5f02\u5e38\u5904\u7406 \uff1a\u5b8c\u6574\u7684\u9664\u96f6\u68c0\u67e5\u548c\u65e0\u6548\u503c\u5904\u7406 - \u7edf\u8ba1\u65b9\u6cd5 \uff1a\u4f7f\u7528\u4e2d\u4f4d\u6570\u907f\u514d\u5f02\u5e38\u503c\u5f71\u54cd - \u7075\u6d3b\u6027 \uff1a\u652f\u6301\u6bd4\u7387\u548c\u5468\u8f6c\u5929\u6570\u53cc\u91cd\u8ba1\u7b97\u6a21\u5f0f McKinsey \u6807\u51c6\u7b26\u5408\u5ea6 \uff1a\u2705 95% - \u5b8c\u5168\u7b26\u5408\u8d22\u52a1\u6bd4\u7387\u8ba1\u7b97\u6807\u51c6 - \u5f02\u5e38\u503c\u5904\u7406\u7b26\u5408\u6700\u4f73\u5b9e\u8df5 - \u8ba1\u7b97\u7cbe\u5ea6\u8fbe\u5230\u4e13\u4e1a\u6c34\u51c6","title":"2.4.1 _calculate_median_ratio_or_days\u51fd\u6570"},{"location":"archived/mckinsey_financial_ratios_and_forecasting_analysis/#_4","text":"","title":"\ud83d\udcc8 \u8d22\u52a1\u9884\u6d4b\u7b97\u6cd5\u5408\u89c4\u6027\u5206\u6790"},{"location":"archived/mckinsey_financial_ratios_and_forecasting_analysis/#31","text":"","title":"3.1 \u6536\u5165\u9884\u6d4b\u7b97\u6cd5"},{"location":"archived/mckinsey_financial_ratios_and_forecasting_analysis/#311","text":"\u5b9e\u73b0\u4ee3\u7801 \uff1a forecaster.py:228-300 current_growth_rate = historical_cagr * ((Decimal(\"1\") - decay_rate) ** (year - 1)) current_revenue *= Decimal(\"1\") + current_growth_rate \u7b97\u6cd5\u5206\u6790 \uff1a - \u5386\u53f2CAGR \uff1a\u4ece historical_ratios \u83b7\u53d6 - \u8870\u51cf\u7387 \uff1a\u9ed8\u8ba40.1\uff0c\u8003\u8651\u589e\u957f\u7387\u81ea\u7136\u8870\u51cf - \u9884\u6d4b\u671f \uff1a\u9ed8\u8ba45\u5e74 - \u57fa\u671f\u53e3\u5f84 \uff1a\u9ed8\u8ba4\u4f7f\u7528\u6700\u65b0\u5e74\u62a5 revenue \uff1b\u82e5\u5f00\u542f ltm_baseline_enabled \uff0c\u5219\u4f7f\u7528 LTM = YTD_curr + (Annual_prev \u2212 YTD_prev) \uff08\u4f18\u5148 revenue \uff0c\u56de\u9000 total_revenue \uff09 McKinsey \u6807\u51c6\u7b26\u5408\u5ea6 \uff1a\u26a0\ufe0f 75% - \u4f18\u52bf \uff1a\u8003\u8651\u589e\u957f\u7387\u8870\u51cf\uff0c\u7b26\u5408\u5546\u4e1a\u89c4\u5f8b - \u4e0d\u8db3 \uff1a\u8870\u51cf\u6a21\u578b\u8fc7\u4e8e\u7b80\u5316\uff0c\u7f3a\u4e4f\u5b8f\u89c2\u7ecf\u6d4e\u56e0\u7d20 \u6539\u8fdb\u5efa\u8bae \uff1a def enhanced_revenue_forecast(self, historical_data, macro_factors): \"\"\" \u589e\u5f3a\u578b\u6536\u5165\u9884\u6d4b\uff0c\u7b26\u5408McKinsey\u6807\u51c6 \"\"\" # \u57fa\u7840\u589e\u957f\u7387 base_growth = self.calculate_historical_cagr(historical_data) # \u5b8f\u89c2\u7ecf\u6d4e\u8c03\u6574 gdp_adjustment = macro_factors.get('gdp_growth', 0.05) industry_adjustment = macro_factors.get('industry_growth', 0.0) # \u5b63\u8282\u6027\u8c03\u6574 seasonal_factor = self.calculate_seasonal_factor(historical_data) # \u7efc\u5408\u589e\u957f\u7387 adjusted_growth = base_growth * (1 + gdp_adjustment) * (1 + industry_adjustment) return adjusted_growth * seasonal_factor","title":"3.1.1 \u6838\u5fc3\u7b97\u6cd5\u5b9e\u73b0"},{"location":"archived/mckinsey_financial_ratios_and_forecasting_analysis/#32","text":"","title":"3.2 \u5229\u6da6\u8868\u9884\u6d4b\u7b97\u6cd5"},{"location":"archived/mckinsey_financial_ratios_and_forecasting_analysis/#321","text":"\u7cfb\u7edf\u652f\u6301\u4e24\u79cd\u9884\u6d4b\u6a21\u5f0f \uff1a forecaster.py:111-180 A. historical_median \u6a21\u5f0f - \u4f7f\u7528\u5386\u53f2\u4e2d\u4f4d\u6570\u4f5c\u4e3a\u9884\u6d4b\u503c - \u9002\u7528\u4e8e\u7a33\u5b9a\u7684\u6210\u719f\u4f01\u4e1a B. transition_to_target \u6a21\u5f0f - \u4ece\u5386\u53f2\u503c\u7ebf\u6027\u8fc7\u6e21\u5230\u76ee\u6807\u503c - \u9002\u7528\u4e8e\u4e1a\u52a1\u8f6c\u578b\u671f\u4f01\u4e1a McKinsey \u6807\u51c6\u7b26\u5408\u5ea6 \uff1a\u2705 85% - \u9884\u6d4b\u6a21\u5f0f\u8bbe\u8ba1\u5408\u7406\uff0c\u7b26\u5408\u4e1a\u52a1\u5b9e\u9645 - \u652f\u6301\u4f01\u4e1a\u4e0d\u540c\u53d1\u5c55\u9636\u6bb5\u7684\u9884\u6d4b\u9700\u6c42","title":"3.2.1 \u9884\u6d4b\u6a21\u5f0f\u8bbe\u8ba1"},{"location":"archived/mckinsey_financial_ratios_and_forecasting_analysis/#322-cogs","text":"\u5df2\u652f\u6301\u4e24\u79cd\u6a21\u5f0f \uff1a - \u53cd\u63a8\u6cd5\uff08\u9ed8\u8ba4\uff09\uff1a COGS = Revenue \u2212 EBIT \u2212 SGA \u2212 RD \uff0c\u4fdd\u6301\u635f\u76ca\u6052\u7b49\u5f0f\u3001\u4e0e\u76ee\u6807\u5229\u6da6\u7387/\u8d39\u7528\u7387\u4e00\u81f4 - \u76f4\u63a5\u6bd4\u7387\uff1a COGS = Revenue \u00d7 median(COGS/Revenue) \uff0c\u4fbf\u4e8e\u8ddf\u8e2a\u6bdb\u5229\u8def\u5f84\u4e0e\u8d8b\u52bf \u5b9e\u73b0\u7ec6\u8282 \uff1a - UI \u5f00\u5173\uff1a cogs_forecast_mode = residual|direct_ratio - \u4e0e\u5468\u8f6c\u8054\u52a8\uff1a\u7eaf\u201c\u5386\u53f2\u4e2d\u4f4d\u6570\u201d\u573a\u666f\u91c7\u7528\u6b8b\u5dee COGS\uff0c\u6df7\u5408\u573a\u666f\u91c7\u7528\u5386\u53f2 COGS \u6bd4\u7387\uff0c\u964d\u4f4e\u8fc7\u6e21/\u76ee\u6807\u5047\u8bbe\u5bf9\u5468\u8f6c\u89c4\u6a21\u7684\u626d\u66f2","title":"3.2.2 COGS \u53cd\u63a8\u4e0e\u76f4\u63a5\u6bd4\u7387\uff08\u5df2\u5b9e\u73b0\u53cc\u6a21\u5f0f\uff09"},{"location":"archived/mckinsey_financial_ratios_and_forecasting_analysis/#33","text":"","title":"3.3 \u8425\u8fd0\u8d44\u672c\u9884\u6d4b\u7b97\u6cd5"},{"location":"archived/mckinsey_financial_ratios_and_forecasting_analysis/#331","text":"\u6838\u5fc3\u516c\u5f0f \uff1a forecaster.py:455-691 # \u5e94\u6536\u8d26\u6b3e accounts_receivable = (revenue / Decimal(\"360\")) * days # \u5b58\u8d27 inventories = (cogs / Decimal(\"360\")) * days # \u5e94\u4ed8\u8d26\u6b3e accounts_payable = (cogs / Decimal(\"360\")) * days McKinsey \u6807\u51c6\u7b26\u5408\u5ea6 \uff1a\u2705 88% - \u4f7f\u7528\u5468\u8f6c\u5929\u6570\u6cd5\u7b26\u5408\u8d22\u52a1\u9884\u6d4b\u6700\u4f73\u5b9e\u8df5 - \u9884\u6d4b\u57fa\u671f\u6539\u4e3a\u201c\u5206\u9879\u53e3\u5f84 NWC\u201d\uff08 last_component_nwc \uff09\uff0c\u4e0e\u9884\u6d4b\u671f\u53e3\u5f84\u4e00\u81f4 - \u57fa\u671f\u6765\u6e90\u4e0e\u6eda\u52a8\uff1a last_component_nwc \u57fa\u4e8e\u201c\u4f30\u503c\u65e5\u524d\u6700\u65b0\u8d44\u4ea7\u8d1f\u503a\u8868\u201d\u91cd\u7b97\uff08\u5b63\u5ea6/\u4e2d\u62a5/\u5e74\u62a5\u5747\u53ef\uff09\uff0c\u4e0e\u80a1\u6743\u6865\u53e3\u5f84\u4e00\u81f4 - DSO/DIO/DPO \u652f\u6301\u201c\u4ece last_days \u5411\u5386\u53f2\u4e2d\u4f4d\u6570\u7ebf\u6027\u8fc7\u6e21\uff08nwc_days_transition_years\uff09\u201d\uff0c\u907f\u514d\u9996\u5e74 \u0394NWC \u8df3\u53d8 \u4ecd\u9700\u6539\u8fdb\uff1a - 360\u5929\u5047\u8bbe\u53ef\u6269\u5c55\u4e3a 360/365/366/\u6309\u4f1a\u8ba1\u5e74\u5ea6 - \u884c\u4e1a\u5178\u578b\u503c\u4e0e\u5b63\u8282\u6027\u5c1a\u672a\u7eb3\u5165","title":"3.3.1 \u5468\u8f6c\u5929\u6570\u6cd5\u5b9e\u73b0\uff08\u53e3\u5f84\u7edf\u4e00 + \u8fc7\u6e21\u5e73\u6ed1\uff09"},{"location":"archived/mckinsey_financial_ratios_and_forecasting_analysis/#34-mckinsey","text":"\u9884\u6d4b\u7ef4\u5ea6 McKinsey\u6807\u51c6 \u672c\u9879\u76ee\u5b9e\u73b0 \u7b26\u5408\u5ea6 \u5dee\u5f02\u5206\u6790 \u6536\u5165\u9884\u6d4b \u591a\u56e0\u7d20\u6a21\u578b+\u5b8f\u89c2\u8c03\u6574 CAGR\u8870\u51cf\u6a21\u578b \u26a0\ufe0f 70% \u7f3a\u4e4f\u5b8f\u89c2\u56e0\u7d20 \u6210\u672c\u9884\u6d4b \u76f4\u63a5\u6bd4\u7387\u9884\u6d4b \u53cd\u63a8\u6cd5+\u76f4\u63a5\u6bd4\u7387\u53cc\u6a21\u5f0f \u2705 85% \u5df2\u63d0\u4f9b\u6a21\u5f0f\u5f00\u5173 \u8425\u8fd0\u8d44\u672c \u5468\u8f6c\u5929\u6570+\u5b63\u8282\u6027 \u5468\u8f6c\u5929\u6570 + \u5206\u9879\u57fa\u51c6 + \u65e5\u6570\u5e73\u6ed1 \u2705 88% \u5b63\u8282\u6027/\u884c\u4e1a\u6807\u5c3a\u5f85\u8865 \u9884\u6d4b\u6a21\u5f0f \u591a\u60c5\u666f\u5206\u6790 \u53cc\u6a21\u5f0f\u9884\u6d4b \u26a0\ufe0f 80% \u7f3a\u4e4f\u60c5\u666f\u5206\u6790","title":"3.4 \u4e0eMcKinsey\u9884\u6d4b\u6807\u51c6\u5bf9\u6bd4"},{"location":"archived/mckinsey_financial_ratios_and_forecasting_analysis/#_5","text":"","title":"\ud83e\uddee \u6570\u636e\u8d28\u91cf\u5904\u7406\u6d41\u7a0b\u5408\u89c4\u6027"},{"location":"archived/mckinsey_financial_ratios_and_forecasting_analysis/#41","text":"","title":"4.1 \u5f02\u5e38\u503c\u68c0\u6d4b\u673a\u5236"},{"location":"archived/mckinsey_financial_ratios_and_forecasting_analysis/#411-iqr","text":"\u5b9e\u73b0\u4ee3\u7801 \uff1a processor.py:293-320 if df_to_clean[col].notna().sum() >= 4: q1 = df_to_clean[col].quantile(0.25) q3 = df_to_clean[col].quantile(0.75) iqr = q3 - q1 if iqr > 1e-9: lower_bound = q1 - 1.5 * iqr upper_bound = q3 + 1.5 * iqr outliers_mask = (df_to_clean[col] < lower_bound) | (df_to_clean[col] > upper_bound) \u79d1\u5b66\u6027\u8bc4\u4f30 \uff1a - \u2705 \u7edf\u8ba1\u57fa\u7840\u624e\u5b9e\uff1aIQR\u65b9\u6cd5\u5bf9\u5f02\u5e38\u503c\u68c0\u6d4b\u5177\u6709\u9c81\u68d2\u6027 - \u2705 \u6570\u636e\u91cf\u8981\u6c42\u5408\u7406\uff1a\u8981\u6c42\u81f3\u5c114\u4e2a\u6709\u6548\u6570\u636e\u70b9 - \u2705 \u8fb9\u754c\u6761\u4ef6\u5904\u7406\uff1a\u8003\u8651IQR\u63a5\u8fd1\u96f6\u7684\u60c5\u51b5 McKinsey \u6807\u51c6\u7b26\u5408\u5ea6 \uff1a\u2705 90%","title":"4.1.1 IQR\u65b9\u6cd5\u5b9e\u73b0"},{"location":"archived/mckinsey_financial_ratios_and_forecasting_analysis/#42","text":"","title":"4.2 \u6570\u636e\u6807\u51c6\u5316\u6d41\u7a0b"},{"location":"archived/mckinsey_financial_ratios_and_forecasting_analysis/#421","text":"\u5b9e\u73b0\u4ee3\u7801 \uff1a processor.py:408-413 s1_decimal = series1.apply(lambda x: Decimal(str(x)) if pd.notna(x) else None) s2_decimal = series2.apply(lambda x: Decimal(str(x)) if pd.notna(x) else None) McKinsey \u6807\u51c6\u7b26\u5408\u5ea6 \uff1a\u2705 100% - \u7edf\u4e00\u4f7f\u7528Decimal\u8fdb\u884c\u9ad8\u7cbe\u5ea6\u8ba1\u7b97 - \u5b8c\u6574\u7684\u7c7b\u578b\u8f6c\u6362\u548c\u5f02\u5e38\u5904\u7406","title":"4.2.1 \u6570\u636e\u7c7b\u578b\u6807\u51c6\u5316"},{"location":"archived/mckinsey_financial_ratios_and_forecasting_analysis/#43-mckinsey","text":"DQ\u7ef4\u5ea6 McKinsey\u6807\u51c6 \u672c\u9879\u76ee\u5b9e\u73b0 \u7b26\u5408\u5ea6 \u6539\u8fdb\u5efa\u8bae \u5b8c\u6574\u6027 \u6570\u636e\u8986\u76d6\u7387\u76d1\u63a7 \u826f\u597d\u7f3a\u5931\u503c\u5904\u7406 75% \u589e\u52a0\u8986\u76d6\u7387\u76d1\u63a7 \u51c6\u786e\u6027 \u4ea4\u53c9\u9a8c\u8bc1\u673a\u5236 \u826f\u597d\u5f02\u5e38\u503c\u68c0\u6d4b 70% \u589e\u52a0\u4ea4\u53c9\u9a8c\u8bc1 \u4e00\u81f4\u6027 \u8de8\u7cfb\u7edf\u4e00\u81f4\u6027 \u5185\u90e8\u4e00\u81f4\u6027\u826f\u597d 80% \u5b8c\u5584\u8de8\u6e90\u9a8c\u8bc1 \u53ca\u65f6\u6027 \u65f6\u6548\u6027\u76d1\u63a7 \u7f3a\u4e4f\u65f6\u6548\u6027\u9a8c\u8bc1 40% \u589e\u52a0\u65f6\u6548\u68c0\u67e5 \u6709\u6548\u6027 \u4e1a\u52a1\u89c4\u5219\u9a8c\u8bc1 \u5b8c\u5584\u7684\u7c7b\u578b\u9a8c\u8bc1 85% \u5b8c\u5584\u4e1a\u52a1\u89c4\u5219 \u552f\u4e00\u6027 \u5168\u5c40\u552f\u4e00\u6027 \u57fa\u7840\u53bb\u91cd\u673a\u5236 60% \u589e\u5f3a\u552f\u4e00\u6027\u9a8c\u8bc1","title":"4.3 McKinsey\u6570\u636e\u8d28\u91cf\u6846\u67b6\u7b26\u5408\u5ea6"},{"location":"archived/mckinsey_financial_ratios_and_forecasting_analysis/#_6","text":"","title":"\ud83d\udea8 \u5173\u952e\u95ee\u9898\u8bc6\u522b\u4e0e\u6539\u8fdb\u5efa\u8bae"},{"location":"archived/mckinsey_financial_ratios_and_forecasting_analysis/#51","text":"","title":"5.1 \u9ad8\u4f18\u5148\u7ea7\u95ee\u9898\uff08\u66f4\u65b0\uff09"},{"location":"archived/mckinsey_financial_ratios_and_forecasting_analysis/#511","text":"\u5df2\u5b9e\u73b0 COGS \u76f4\u63a5\u6bd4\u7387\u6a21\u5f0f\u4e0e UI \u5f00\u5173\uff0c\u517c\u5bb9\u53cd\u63a8\u6cd5\uff0c\u6ee1\u8db3 McKinsey \u5bf9\u6bdb\u5229\u8def\u5f84\u53ef\u8ffd\u8e2a\u6027\u7684\u8981\u6c42\u3002","title":"5.1.1 \u6210\u672c\u9884\u6d4b\u6a21\u5f0f\uff08\u5df2\u5b8c\u6210\uff09"},{"location":"archived/mckinsey_financial_ratios_and_forecasting_analysis/#512","text":"\u95ee\u9898 \uff1a\u7f3a\u4e4f\u884c\u4e1a\u5dee\u5f02\u5316\u53c2\u6570 \u5f71\u54cd \uff1a\u8de8\u884c\u4e1a\u4f30\u503c\u51c6\u786e\u6027\u4e0d\u8db3 \u4fee\u590d\u5efa\u8bae \uff1a class IndustryFinancialParameters: \"\"\"\u884c\u4e1a\u8d22\u52a1\u53c2\u6570\u6570\u636e\u5e93\"\"\" PARAMETERS = { 'Technology': { 'revenue_growth': 0.15, 'operating_margin': 0.25, 'inventory_days': 45, 'receivable_days': 60 }, 'Manufacturing': { 'revenue_growth': 0.08, 'operating_margin': 0.15, 'inventory_days': 60, 'receivable_days': 45 }, 'Retail': { 'revenue_growth': 0.05, 'operating_margin': 0.08, 'inventory_days': 30, 'receivable_days': 15 } }","title":"5.1.2 \u884c\u4e1a\u9002\u5e94\u6027\u4e0d\u8db3"},{"location":"archived/mckinsey_financial_ratios_and_forecasting_analysis/#513","text":"\u95ee\u9898 \uff1a\u7f3a\u4e4fMcKinsey\u6807\u51c6\u7684\u591a\u60c5\u666f\u5206\u6790 \u5f71\u54cd \uff1a\u98ce\u9669\u8bc4\u4f30\u4e0d\u5b8c\u6574 \u4fee\u590d\u5efa\u8bae \uff1a def scenario_analysis(self, base_forecast, scenarios): \"\"\" McKinsey\u6807\u51c6\u60c5\u666f\u5206\u6790 \"\"\" results = {} for scenario_name, adjustments in scenarios.items(): scenario_forecast = base_forecast.copy() # \u5e94\u7528\u60c5\u666f\u8c03\u6574 for metric, adjustment in adjustments.items(): if metric in scenario_forecast: scenario_forecast[metric] *= adjustment results[scenario_name] = scenario_forecast return results","title":"5.1.3 \u60c5\u666f\u5206\u6790\u7f3a\u5931"},{"location":"archived/mckinsey_financial_ratios_and_forecasting_analysis/#52","text":"","title":"5.2 \u4e2d\u4f18\u5148\u7ea7\u6539\u8fdb"},{"location":"archived/mckinsey_financial_ratios_and_forecasting_analysis/#521","text":"class DataQualityMonitor: \"\"\"\u6570\u636e\u8d28\u91cf\u76d1\u63a7\u7cfb\u7edf\"\"\" def __init__(self): self.metrics = { 'completeness': self._calculate_completeness, 'accuracy': self._calculate_accuracy, 'timeliness': self._calculate_timeliness } def generate_quality_report(self, data): \"\"\"\u751f\u6210\u6570\u636e\u8d28\u91cf\u62a5\u544a\"\"\" scores = {} for metric_name, calculator in self.metrics.items(): scores[metric_name] = calculator(data) return { 'overall_score': sum(scores.values()) / len(scores), 'detailed_scores': scores, 'recommendations': self._generate_recommendations(scores) }","title":"5.2.1 \u6570\u636e\u8d28\u91cf\u76d1\u63a7\u589e\u5f3a"},{"location":"archived/mckinsey_financial_ratios_and_forecasting_analysis/#522","text":"class AdvancedForecastEngine: \"\"\"\u9ad8\u7ea7\u9884\u6d4b\u5f15\u64ce\"\"\" def __init__(self): self.models = { 'arima': self._arima_forecast, 'exponential_smoothing': self._exponential_smoothing, 'machine_learning': self._ml_forecast } def ensemble_forecast(self, data, models_weights=None): \"\"\"\u96c6\u6210\u9884\u6d4b\"\"\" forecasts = {} for model_name, model_func in self.models.items(): forecasts[model_name] = model_func(data) # \u52a0\u6743\u96c6\u6210 if models_weights is None: models_weights = {name: 1/len(self.models) for name in self.models} ensemble_result = sum( forecasts[model] * weight for model, weight in models_weights.items() ) return ensemble_result","title":"5.2.2 \u9884\u6d4b\u7b97\u6cd5\u4f18\u5316"},{"location":"archived/mckinsey_financial_ratios_and_forecasting_analysis/#53","text":"","title":"5.3 \u4f4e\u4f18\u5148\u7ea7\u4f18\u5316"},{"location":"archived/mckinsey_financial_ratios_and_forecasting_analysis/#531","text":"def standardize_accounting_period(self, financial_data): \"\"\"\u4f1a\u8ba1\u671f\u95f4\u6807\u51c6\u5316\"\"\" # \u652f\u6301360\u5929\u3001365\u5929\u3001366\u5929 period_config = self.config.get('accounting_period', 360) if period_config == 'actual': # \u6839\u636e\u5b9e\u9645\u5e74\u5ea6\u5929\u6570 return self._calculate_actual_days(financial_data) else: return period_config","title":"5.3.1 \u4f1a\u8ba1\u671f\u95f4\u6807\u51c6\u5316"},{"location":"archived/mckinsey_financial_ratios_and_forecasting_analysis/#532","text":"def advanced_sensitivity_analysis(self, base_params, sensitivity_ranges): \"\"\"\u9ad8\u7ea7\u654f\u611f\u6027\u5206\u6790\"\"\" sensitivity_results = {} for param_name, range_values in sensitivity_ranges.items(): param_results = [] for value in range_values: modified_params = base_params.copy() modified_params[param_name] = value # \u8fd0\u884c\u4f30\u503c result = self.run_valuation(modified_params) param_results.append(result) sensitivity_results[param_name] = param_results return sensitivity_results","title":"5.3.2 \u589e\u5f3a\u7684\u654f\u611f\u6027\u5206\u6790"},{"location":"archived/mckinsey_financial_ratios_and_forecasting_analysis/#_7","text":"","title":"\ud83d\udcca \u603b\u4f53\u8bc4\u4ef7\u4e0e\u5efa\u8bae"},{"location":"archived/mckinsey_financial_ratios_and_forecasting_analysis/#61","text":"\u8bc4\u4f30\u7ef4\u5ea6 \u5f97\u5206 \u7b49\u7ea7 \u8bf4\u660e \u8d22\u52a1\u6bd4\u7387\u8ba1\u7b97 92/100 A- \u8ba1\u7b97\u51c6\u786e\uff0c\u7cbe\u5ea6\u63a7\u5236\u4f18\u79c0 \u8d22\u52a1\u9884\u6d4b\u7b97\u6cd5 84/100 B+ \u53cc\u6a21\u5f0f\u6210\u672c\u3001NWC \u53e3\u5f84\u4e0e\u8fc7\u6e21\u8865\u5f3a \u6570\u636e\u8d28\u91cf\u63a7\u5236 85/100 B+ \u6e05\u6d17\u903b\u8f91\u5b8c\u5584\uff0c\u76d1\u63a7\u4e0d\u8db3 McKinsey\u6807\u51c6\u7b26\u5408\u5ea6 85/100 A- \u5173\u952e\u73af\u8282\u589e\u5f3a\uff0c\u884c\u4e1a/\u60c5\u666f\u5f85\u8865 \u6280\u672f\u5b9e\u73b0\u8d28\u91cf 90/100 A- \u4ee3\u7801\u8d28\u91cf\u9ad8\uff0c\u67b6\u6784\u6e05\u6670 \u884c\u4e1a\u9002\u5e94\u6027 70/100 B- \u7f3a\u4e4f\u884c\u4e1a\u5dee\u5f02\u5316\u5904\u7406 \u7efc\u5408\u8bc4\u5206 82.5/100 B+ \u5177\u5907\u4e13\u4e1a\u6c34\u51c6\uff0c\u9700\u8981\u5173\u952e\u6539\u8fdb","title":"6.1 \u7efc\u5408\u8bc4\u5206"},{"location":"archived/mckinsey_financial_ratios_and_forecasting_analysis/#62","text":"\u6280\u672f\u67b6\u6784\u5353\u8d8a \uff1a\u6a21\u5757\u5316\u8bbe\u8ba1\uff0c\u804c\u8d23\u5206\u79bb\u6e05\u6670 \u8ba1\u7b97\u7cbe\u5ea6\u9ad8 \uff1a\u4f7f\u7528Decimal\u786e\u4fdd\u91d1\u878d\u8ba1\u7b97\u7cbe\u5ea6 \u5f02\u5e38\u5904\u7406\u5b8c\u5584 \uff1a\u5b8c\u6574\u7684\u8fb9\u754c\u6761\u4ef6\u68c0\u67e5\u548c\u9519\u8bef\u5904\u7406 \u57fa\u7840\u903b\u8f91\u6b63\u786e \uff1a\u8d22\u52a1\u6bd4\u7387\u8ba1\u7b97\u7b26\u5408\u57fa\u672c\u8d22\u52a1\u539f\u7406 \u4ee3\u7801\u8d28\u91cf\u4f18\u79c0 \uff1a\u7c7b\u578b\u6ce8\u89e3\u5b8c\u6574\uff0c\u6d4b\u8bd5\u8986\u76d6\u826f\u597d","title":"6.2 \u6838\u5fc3\u4f18\u52bf"},{"location":"archived/mckinsey_financial_ratios_and_forecasting_analysis/#63","text":"\u9884\u6d4b\u6a21\u578b\u7b80\u5316 \uff1a\u7f3a\u4e4f\u591a\u56e0\u7d20\u9884\u6d4b\u548c\u5b8f\u89c2\u7ecf\u6d4e\u8003\u8651 \u884c\u4e1a\u9002\u5e94\u6027\u4e0d\u8db3 \uff1a\u7f3a\u4e4f\u884c\u4e1a\u7279\u5b9a\u7684\u8d22\u52a1\u53c2\u6570 \u60c5\u666f\u5206\u6790\u7f3a\u5931 \uff1a\u4e0d\u7b26\u5408McKinsey\u591a\u60c5\u666f\u5206\u6790\u6807\u51c6 \u6570\u636e\u8d28\u91cf\u76d1\u63a7\u8584\u5f31 \uff1a\u7f3a\u4e4f\u6301\u7eed\u7684\u6570\u636e\u8d28\u91cf\u76d1\u63a7\u673a\u5236","title":"6.3 \u4e3b\u8981\u4e0d\u8db3"},{"location":"archived/mckinsey_financial_ratios_and_forecasting_analysis/#64","text":"\u901a\u8fc7\u5b9e\u65bd\u5efa\u8bae\u7684\u6539\u8fdb\u63aa\u65bd\uff0c\u9879\u76ee\u53ef\u4ee5\u4ece B+\u7ea7(82.5\u5206)\u63d0\u5347\u81f3A\u7ea7(90\u5206\u4ee5\u4e0a) \uff0c\u6210\u4e3a\u771f\u6b63\u610f\u4e49\u4e0a\u7684\u4f01\u4e1a\u7ea7\u8d22\u52a1\u5206\u6790\u5e73\u53f0\u3002","title":"6.4 \u6539\u8fdb\u4ef7\u503c\u8bc4\u4f30"},{"location":"archived/mckinsey_financial_ratios_and_forecasting_analysis/#65","text":"","title":"6.5 \u5b9e\u65bd\u8def\u7ebf\u56fe"},{"location":"archived/mckinsey_financial_ratios_and_forecasting_analysis/#1-2","text":"[ ] \u4fee\u590dCOGS\u9884\u6d4b\u903b\u8f91\uff0c\u6539\u4e3a\u76f4\u63a5\u6bd4\u7387\u9884\u6d4b [ ] \u5efa\u7acb\u884c\u4e1a\u8d22\u52a1\u53c2\u6570\u6570\u636e\u5e93 [ ] \u5b9e\u73b0\u57fa\u7840\u60c5\u666f\u5206\u6790\u529f\u80fd","title":"\u7b2c\u4e00\u9636\u6bb5\uff081-2\u4e2a\u6708\uff09\uff1a\u5173\u952e\u95ee\u9898\u4fee\u590d"},{"location":"archived/mckinsey_financial_ratios_and_forecasting_analysis/#2-3","text":"[ ] \u96c6\u6210\u5b8f\u89c2\u7ecf\u6d4e\u56e0\u7d20\u8c03\u6574 [ ] \u5b9e\u73b0\u5b63\u8282\u6027\u8c03\u6574\u7b97\u6cd5 [ ] \u589e\u5f3a\u6570\u636e\u8d28\u91cf\u76d1\u63a7\u673a\u5236","title":"\u7b2c\u4e8c\u9636\u6bb5\uff082-3\u4e2a\u6708\uff09\uff1a\u9884\u6d4b\u7b97\u6cd5\u589e\u5f3a"},{"location":"archived/mckinsey_financial_ratios_and_forecasting_analysis/#3-4mckinsey","text":"[ ] \u5b8c\u5584\u591a\u60c5\u666f\u5206\u6790\u6846\u67b6 [ ] \u5b9e\u73b0\u9ad8\u7ea7\u654f\u611f\u6027\u5206\u6790 [ ] \u5efa\u7acb\u5b8c\u6574\u7684\u6570\u636e\u8d28\u91cf\u6cbb\u7406\u4f53\u7cfb","title":"\u7b2c\u4e09\u9636\u6bb5\uff083-4\u4e2a\u6708\uff09\uff1aMcKinsey\u6807\u51c6\u5408\u89c4"},{"location":"archived/mckinsey_financial_ratios_and_forecasting_analysis/#_8","text":"stock_vale_valuation_3.0 \u9879\u76ee\u5728\u8d22\u52a1\u6bd4\u7387\u8ba1\u7b97\u548c\u9884\u6d4b\u903b\u8f91\u65b9\u9762\u5c55\u73b0\u4e86 \u8f83\u9ad8\u7684\u4e13\u4e1a\u6c34\u51c6 \uff0c\u6280\u672f\u67b6\u6784\u548c\u6838\u5fc3\u8ba1\u7b97\u903b\u8f91\u90fd\u8fbe\u5230\u4e86\u4e13\u4e1a\u6807\u51c6\u3002\u9879\u76ee\u5177\u5907\u6210\u4e3a \u4f01\u4e1a\u7ea7\u8d22\u52a1\u5206\u6790\u5e73\u53f0 \u7684\u6f5c\u529b\uff0c\u4f46\u9700\u8981\u5728\u4ee5\u4e0b\u5173\u952e\u65b9\u9762\u8fdb\u884c\u6539\u8fdb\uff1a \u9884\u6d4b\u6a21\u578b\u79d1\u5b66\u6027 \uff1a\u4fee\u590dCOGS\u5012\u63a8\u903b\u8f91\uff0c\u589e\u5f3a\u9884\u6d4b\u7b97\u6cd5 \u884c\u4e1a\u9002\u5e94\u6027 \uff1a\u5efa\u7acb\u884c\u4e1a\u5dee\u5f02\u5316\u53c2\u6570\u548c\u9884\u6d4b\u6a21\u578b McKinsey\u6807\u51c6\u5408\u89c4 \uff1a\u5b9e\u73b0\u591a\u60c5\u666f\u5206\u6790\u548c\u654f\u611f\u6027\u5206\u6790 \u6570\u636e\u8d28\u91cf\u6cbb\u7406 \uff1a\u5efa\u7acb\u5b8c\u5584\u7684\u6570\u636e\u8d28\u91cf\u76d1\u63a7\u4f53\u7cfb \u901a\u8fc7\u5b9e\u65bd\u4e0a\u8ff0\u6539\u8fdb\u5efa\u8bae\uff0c\u9879\u76ee\u53ef\u4ee5\u8fbe\u5230 A\u7ea7\u4e13\u4e1a\u6c34\u51c6 \uff0890\u5206\u4ee5\u4e0a\uff09\uff0c\u6210\u4e3a\u771f\u6b63\u610f\u4e49\u4e0a\u7684\u4f01\u4e1a\u7ea7\u8d22\u52a1\u5206\u6790\u5e73\u53f0\u3002\u9879\u76ee\u5df2\u7ecf\u5177\u5907\u4e86\u624e\u5b9e\u7684\u57fa\u7840\uff0c\u5f00\u53d1\u56e2\u961f\u5c55\u73b0\u4e86\u5728\u91d1\u878d\u5de5\u7a0b\u548c\u8f6f\u4ef6\u67b6\u6784\u65b9\u9762\u7684\u6df1\u539a\u529f\u5e95\uff0c\u662f\u4e00\u4e2a\u5177\u6709\u5f88\u9ad8\u4ef7\u503c\u7684\u91d1\u878d\u79d1\u6280\u57fa\u7840\u6846\u67b6\u3002 \u6700\u7ec8\u8bc4\u4ef7 \uff1a\u8fd9\u662f\u4e00\u4e2a \u4f18\u79c0\u7684\u8d22\u52a1\u8ba1\u7b97\u57fa\u7840\u6846\u67b6 \uff0c\u5728\u5173\u952e\u7ec6\u8282\u4e0a\u8fdb\u884c\u4f18\u5316\u540e\uff0c\u5b8c\u5168\u53ef\u4ee5\u8fbe\u5230\u56fd\u9645\u9876\u5c16\u6c34\u5e73\u3002","title":"\ud83c\udfaf \u7ed3\u8bba"},{"location":"archived/mckinsey_financial_ratios_and_forecasting_analysis/#_9","text":"\u6bd4\u7387\u4e0e\u5904\u7406\uff1a src/core/financial/processor.py \uff08\u5386\u53f2\u4e2d\u4f4d\u6570\u3001\u5468\u8f6c\u3001 last_component_nwc \u3001 last_*_days \uff09 \u9884\u6d4b\u5f15\u64ce\uff1a src/core/financial/forecaster.py \uff08\u6536\u5165\u8870\u51cf\u3001\u5229\u6da6\u4e24\u6a21\u5f0f\u3001 nwc_baseline_mode \u4e0e\u65e5\u6570\u5e73\u6ed1\u3001COGS \u53cc\u6a21\u5f0f\uff09 DCF \u6838\u5fc3\uff1a \u73b0\u503c\uff1a src/core/calculators/dcf/present_value_calculator.py \uff08\u5e74\u672b/\u5e74\u4e2d\u6298\u73b0\uff09 \u7ec8\u503c\uff1a src/core/calculators/dcf/terminal_value_calculator.py \uff08\u5f53\u524d PGR \u2264 Rf\uff09 WACC\uff1a src/core/calculators/dcf/wacc_calculator.py \uff08Ke = Rf + \u03b2\u00d7(MRP+CRP) + Size + IRP\uff09","title":"\ud83d\udd27 \u4ee3\u7801\u53c2\u8003\u4e0e\u5f53\u524d\u5b9e\u73b0\u6458\u8981\uff08\u66f4\u65b0\uff09"},{"location":"archived/mckinsey_financial_ratios_and_forecasting_analysis/#_10","text":"\u4f1a\u8ba1\u671f\u95f4\uff1a\u589e\u52a0 days_in_year \u5168\u5c40\u914d\u7f6e\uff08360/365/366/actual\uff09\u5e76\u5728\u5468\u8f6c\u8ba1\u7b97\u4e2d\u542f\u7528 \u6210\u672c\u9884\u6d4b\uff1a\u4fdd\u7559\u53cd\u63a8\u6cd5\uff0c\u540c\u65f6\u65b0\u589e\u201c\u76f4\u63a5\u6bd4\u7387\u9884\u6d4b\u201d\u5f00\u5173\uff1bUI \u589e\u52a0\u6a21\u5f0f\u9009\u62e9 \u5b8f\u89c2/\u884c\u4e1a\uff1a\u63a5\u5165\u884c\u4e1a\u53c2\u6570\u57fa\u51c6\u4e0e\u540d\u4e49 GDP \u57fa\u51c6\uff0c\u7528\u4e8e\u6536\u5165\u4e0e PGR \u6821\u9a8c \u0394NWC \u5ba1\u8ba1\uff1a\u7ed3\u679c\u9875\u56fa\u5b9a\u5c55\u793a\u9996\u5e74 \u0394NWC \u6784\u6210\uff08AR\u3001Inv\u3001AP\u3001OCA\u3001OCL\uff09\uff0c\u5bf9\u7167\u5386\u53f2\u4e2d\u4f4d\u6570 \u57fa\u671f\u6eda\u52a8\uff1a\u5728 UI \u66b4\u9732 ltm_baseline_enabled \u4e0e\u201c\u4f30\u503c\u57fa\u51c6\u65e5\u201d\uff0c\u8c03\u8bd5\u533a\u5c55\u793a baseline_debug \uff08YTD/LTM \u5206\u89e3\uff09\u4e0e\u6700\u65b0\u8d44\u4ea7\u8d1f\u503a\u8868\u65e5\u671f/\u53e3\u5f84","title":"\ud83e\udde9 \u914d\u7f6e\u4e0e\u4f18\u5316\u5efa\u8bae\uff08\u843d\u5730\u6307\u5f15\uff09"},{"location":"archived/mckinsey_financial_ratios_and_forecasting_analysis/#_11","text":"\u4e2d\u6587\u672f\u8bed \u82f1\u6587\u672f\u8bed McKinsey \u6807\u51c6\u5b9a\u4e49 \u8425\u4e1a\u5229\u6da6\u7387 Operating Margin EBIT / Total Revenue\uff0c\u8861\u91cf\u6838\u5fc3\u76c8\u5229\u80fd\u529b \u5e94\u6536\u8d26\u6b3e\u5468\u8f6c\u5929\u6570 Days Sales Outstanding (DSO) (Accounts Receivable / Revenue) \u00d7 365\uff0c\u8861\u91cf\u6536\u6b3e\u6548\u7387 \u5b58\u8d27\u5468\u8f6c\u5929\u6570 Days Inventory Outstanding (DIO) (Inventory / COGS) \u00d7 365\uff0c\u8861\u91cf\u5b58\u8d27\u7ba1\u7406\u6548\u7387 \u51c0\u8425\u8fd0\u8d44\u672c Net Working Capital (NWC) Current Assets - Current Liabilities\uff0c\u8861\u91cf\u77ed\u671f\u6d41\u52a8\u6027 \u60c5\u666f\u5206\u6790 Scenario Analysis \u4e50\u89c2\u3001\u57fa\u51c6\u3001\u60b2\u89c2\u591a\u79cd\u60c5\u666f\u4e0b\u7684\u9884\u6d4b\u5206\u6790 \u654f\u611f\u6027\u5206\u6790 Sensitivity Analysis \u5173\u952e\u53c2\u6570\u53d8\u5316\u5bf9\u7ed3\u679c\u5f71\u54cd\u7684\u5206\u6790 \u6570\u636e\u8d28\u91cf Data Quality \u6570\u636e\u7684\u5b8c\u6574\u6027\u3001\u51c6\u786e\u6027\u3001\u4e00\u81f4\u6027\u3001\u53ca\u65f6\u6027\u7b49\u7ef4\u5ea6 \u62a5\u544a\u751f\u6210\u65f6\u95f4 \uff1a2025\u5e749\u670810\u65e5 \u5206\u6790\u57fa\u51c6 \uff1aMcKinsey & Company \u8d22\u52a1\u5206\u6790\u6807\u51c6 (\u7b2c7\u7248) \u9879\u76ee\u7248\u672c \uff1astock_vale_valuation_3.0 \u5b9e\u73b0\u4eae\u70b9\uff082025-09-10\uff09 \uff1a - nwc_days_transition_years \u652f\u6301\u6309\u5e74\u5e73\u6ed1\u5411\u76ee\u6807/\u4e2d\u4f4d\u6570\u8fc7\u6e21\uff0c\u907f\u514d \u0394NWC \u9996\u5e74\u8df3\u53d8 - last_component_nwc \u57fa\u4e8e\u4f30\u503c\u65e5\u7684\u6700\u65b0\u8d44\u4ea7\u8d1f\u503a\u8868\u4e00\u884c\u91cd\u7b97\uff0c\u907f\u514d\u53e3\u5f84\u4e0d\u4e00\u81f4 - \u5355\u5143\u6d4b\u8bd5\u9a8c\u8bc1\uff1a - \u964d\u4f4e DSO \u6216\u63d0\u9ad8 DPO \u2192 \u0394NWC \u4e3a\u8d1f\uff08\u91ca\u653e\u73b0\u91d1\uff09 - \u63d0\u9ad8 DIO \u2192 \u0394NWC \u4e3a\u6b63\uff08\u5360\u7528\u73b0\u91d1\uff09 - \u5e45\u5ea6\u4e0e \u6536\u5165/COGS \u00d7 \u5929\u6570\u53d8\u5316/360 \u6210\u6bd4\u4f8b","title":"\ud83d\udccb \u4e13\u4e1a\u672f\u8bed\u5bf9\u7167\u8868"},{"location":"archived/mckinsey_financial_ratios_and_forecasting_analysis/#_12","text":"\u80a1\u606f TTM \u53e3\u5f84 \uff1a\u4f18\u5148\u91c7\u7528\u201c\u5b9e\u65bd/\u5b8c\u6210\u201d\uff1b\u65e0\u5219\u201cTTM\u00b7\u9884\u6848\u201d\uff1b\u4ecd\u65e0\u5219\u201c\u5e74\u5ea6\u6700\u8fd1\u4e00\u6b21\u201d as-of \u4e00\u81f4\u6027 \uff1a\u4ef7\u683c\u4f7f\u7528 trade_date \u2264 \u4f30\u503c\u65e5 \u7684\u6700\u8fd1\u8bb0\u5f55\uff1bEPS\uff08\u5e74\u62a5\uff09\u4f7f\u7528 end_date \u2264 \u4f30\u503c\u65e5 \u7684\u6700\u8fd1\u8bb0\u5f55\uff1bUI \u6807\u7b7e\u8bf4\u660e\u53e3\u5f84\u4e0e\u6765\u6e90 \u884c\u4e1a\u9884\u8bbe \uff1aGICS 11 + \u767d\u9152\u53d8\u4f53\u63d0\u4f9b \u03b2/\u9884\u6d4b\u671f/PGR cap/\u4e58\u6570/\u5468\u8f6c\u533a\u95f4\uff1bAPI debug \u8fd4\u56de applied_preset \u4e0e applied_preset_diff","title":"\ud83d\udcc9 \u6570\u636e\u8d28\u91cf\u4e0e\u53e3\u5f84\uff08\u65b0\u589e\uff09"},{"location":"archived/mckinsey_standards_compliance_report/","text":"Stock Vale Valuation 3.0 \u9879\u76ee McKinsey \u6807\u51c6\u5408\u89c4\u6027\u5206\u6790\u62a5\u544a \ud83d\udccb \u6267\u884c\u6458\u8981 \u672c\u62a5\u544a\u57fa\u4e8e\u5bf9 stock_vale_valuation_3.0 \u9879\u76ee\u7684\u5168\u9762\u6280\u672f\u5206\u6790\uff0c\u4ece McKinsey \u4f30\u503c\u6807\u51c6 \u7684\u89d2\u5ea6\u5bf9\u9879\u76ee\u7684\u4e1a\u52a1\u903b\u8f91\u3001\u6570\u636e\u6a21\u578b\u3001\u516c\u5f0f\u8ba1\u7b97\u3001\u7b97\u6cd5\u5b9e\u73b0\u8fdb\u884c\u6df1\u5ea6\u6821\u9a8c\u3002\u5206\u6790\u53d1\u73b0\u8be5\u9879\u76ee\u5728\u6280\u672f\u67b6\u6784\u548c\u6838\u5fc3\u903b\u8f91\u4e0a\u8fbe\u5230\u884c\u4e1a\u4e13\u4e1a\u6c34\u51c6\uff0c\u4f46\u5728\u5173\u952e\u53c2\u6570\u8bbe\u7f6e\u548c\u7b97\u6cd5\u7ec6\u8282\u4e0a\u5b58\u5728\u91cd\u8981\u6539\u8fdb\u7a7a\u95f4\u3002 \u6838\u5fc3\u53d1\u73b0\uff082025-09-10 \u66f4\u65b0\uff09 \uff1a - \u6a21\u5757\u5316\u4e0e\u5408\u89c4\uff1a\u6a21\u5757\u5316\u8bbe\u8ba1\u7b26\u5408 McKinsey \u6700\u4f73\u5b9e\u8df5\uff1b\u4e24\u9636\u6bb5 DCF \u6846\u67b6\u5b8c\u6574\uff0c\u53ef\u5ba1\u8ba1 - \u6838\u5fc3\u6cbb\u7406\u5df2\u843d\u5730\uff1a\u540d\u4e49 GDP \u4e0a\u9650\uff08PGR clamp\uff09\u3001\u9690\u542b PGR\uff08Exit Multiple\uff09\u63d0\u793a\u3001LTM/\u6eda\u52a8\u8d44\u4ea7\u8d1f\u503a\u8868\u3001NWC \u5929\u6570\u8fc7\u6e21\u3001\u884c\u4e1a\u9884\u8bbe\u6a21\u677f - \u6570\u636e\u4e0e\u53e3\u5f84\u4e00\u81f4\u6027\uff1a\u4ef7\u683c/EPS as-of \u4e00\u81f4\uff1b\u80a1\u606f TTM \u56de\u9000\u94fe\uff08\u5b9e\u65bd\u2192\u9884\u6848\u2192\u5e74\u5ea6\uff09\u907f\u514d\u7a7a\u767d\u5c55\u793a - \u5f85\u5b8c\u5584\uff1a\u8d44\u672c\u7ed3\u6784\u5b8c\u6574\u6027\uff08\u79df\u8d41/\u4f18\u5148\u80a1/\u53ef\u8f6c\u503a\uff09\u3001\u884c\u4e1a\u5e93\u6269\u5c55\u3001\u60c5\u666f/\u8499\u7279\u5361\u6d1b \ud83c\udfaf McKinsey \u6807\u51c6\u6982\u8ff0 McKinsey \u4f30\u503c\u65b9\u6cd5\u8bba\u6838\u5fc3\u539f\u5219 \u4e24\u9636\u6bb5 DCF \u6a21\u578b \uff1a\u663e\u6027\u9884\u6d4b\u671f + \u7ec8\u503c\u671f \u5e74\u4e2d\u6298\u73b0\u60ef\u4f8b \uff1a\u5047\u8bbe\u73b0\u91d1\u6d41\u5728\u5e74\u5185\u5747\u5300\u53d1\u751f \u6807\u51c6\u5316\u6570\u636e \uff1a\u4f7f\u7528 normalized data \u51cf\u5c11\u5468\u671f\u6027\u5f71\u54cd \u5b8c\u6574\u8d44\u672c\u7ed3\u6784 \uff1a\u5305\u542b\u6240\u6709\u878d\u8d44\u5de5\u5177\u7684\u5e02\u503c\u8ba1\u7b97 \u98ce\u9669\u8c03\u6574 \uff1a\u7cfb\u7edf\u6027\u98ce\u9669\u548c\u975e\u7cfb\u7edf\u6027\u98ce\u9669\u7684\u5b8c\u6574\u8003\u91cf McKinsey \u6807\u51c6\u516c\u5f0f\u4f53\u7cfb \u4f01\u4e1a\u4ef7\u503c (EV) = \u9884\u6d4b\u671f UFCF \u73b0\u503c\u5408\u8ba1 + \u7ec8\u503c\u73b0\u503c \u80a1\u6743\u4ef7\u503c (Equity) = EV \u2212 Net Debt \u2212 \u5c11\u6570\u80a1\u4e1c\u6743\u76ca \u2212 \u4f18\u5148\u80a1 \u6bcf\u80a1\u4ef7\u503c = \u80a1\u6743\u4ef7\u503c / \u5b8c\u5168\u7a00\u91ca\u540e\u80a1\u6570 \u6ce8\uff1aNet Debt \u5b9a\u4e49\u4e3a\u201c\u6709\u606f\u8d1f\u503a\u5408\u8ba1 \u2212 \u73b0\u91d1\u53ca\u73b0\u91d1\u7b49\u4ef7\u7269\u201d\u3002\u672c\u9879\u76ee\u51c0\u503a\u52a1\u6309\u201c\u4f30\u503c\u65e5\u524d\u6700\u65b0\u4e00\u5b63/\u4e2d\u671f/\u5e74\u5ea6\u8d44\u4ea7\u8d1f\u503a\u8868\u201d\u53e3\u5f84\u8ba1\u7b97\uff0c\u73b0\u91d1\u4e0d\u7eb3\u5165 NWC\uff08\u4e0e McKinsey \u53e3\u5f84\u4e00\u81f4\uff09\u3002 \ud83d\udcca \u8be6\u7ec6\u5408\u89c4\u6027\u5206\u6790 1. DCF \u4e1a\u52a1\u903b\u8f91\u5408\u89c4\u6027 1.1 \u6a21\u578b\u67b6\u6784\u5408\u89c4\u6027 \u8bc4\u4f30\u7ef4\u5ea6 McKinsey \u6807\u51c6 \u672c\u9879\u76ee\u5b9e\u73b0 \u7b26\u5408\u5ea6 \u5dee\u5f02\u5206\u6790 \u6a21\u578b\u7c7b\u578b \u4e24\u9636\u6bb5 DCF \u6a21\u578b \u4e24\u9636\u6bb5 DCF \u6a21\u578b \u2705 100% \u5b8c\u5168\u7b26\u5408 \u663e\u6027\u9884\u6d4b\u671f 5-10 \u5e74\uff0c\u6309\u884c\u4e1a\u8c03\u6574 \u9ed8\u8ba4 5 \u5e74\uff1bUI \u53ef\u914d 3\u201315 \u5e74\uff0cAPI \u53ef\u914d 1\u201320 \u5e74 \u2705 85% \u5df2\u652f\u6301\u914d\u7f6e\uff0c\u5efa\u8bae\u6309\u884c\u4e1a\u4e0e\u516c\u53f8\u5468\u671f\u8c03\u6574 \u7ec8\u503c\u8ba1\u7b97 \u6c38\u7eed\u589e\u957f\u6cd5 + \u9000\u51fa\u4e58\u6570\u6cd5\u53cc\u9a8c\u8bc1 \u6c38\u7eed\u589e\u957f\u6cd5 + \u9000\u51fa\u4e58\u6570\u6cd5 \u2705 98% PGR \u540d\u4e49 GDP \u4e0a\u9650\u4e0e\u9690\u542b PGR \u63d0\u793a\u5df2\u63a5\u5165 \u4f01\u4e1a\u4ef7\u503c\u6865\u63a5 \u6807\u51c6 EV \u5230 Equity \u6865\u63a5 \u6807\u51c6 EV \u5230 Equity \u6865\u63a5 \u2705 100% \u5b8c\u5168\u7b26\u5408 \u79d1\u5b66\u6027\u8bc4\u4ef7 \uff1aB+ - \u4f18\u52bf \uff1a\u4e25\u683c\u9075\u5faa\u4e24\u9636\u6bb5 DCF \u7406\u8bba\u6846\u67b6\uff0c\u6a21\u578b\u7ed3\u6784\u5b8c\u6574 - \u4e0d\u8db3 \uff1a\u9884\u6d4b\u671f\u8bbe\u5b9a\u7f3a\u4e4f\u884c\u4e1a\u5dee\u5f02\u5316\uff0c\u5f71\u54cd\u4f30\u503c\u7cbe\u5ea6 1.2 \u8ba1\u7b97\u5668\u6a21\u5757\u5316\u8bbe\u8ba1 McKinsey \u63a8\u8350\u5b9e\u8df5 \uff1a - \u6a21\u5757\u5316\u4f30\u503c\u7ec4\u4ef6 - \u8ba1\u7b97\u6b65\u9aa4\u72ec\u7acb\u6027\u548c\u53ef\u9a8c\u8bc1\u6027 - \u8ba1\u7b97\u8fc7\u7a0b\u900f\u660e\u5316 \u672c\u9879\u76ee\u5b9e\u73b0 \uff1a # 6\u4e2a\u4e13\u4e1a\u5316\u8ba1\u7b97\u5668\uff0c\u5b8c\u5168\u7b26\u5408\u6a21\u5757\u5316\u8981\u6c42 - NwcCalculator: \u51c0\u8425\u8fd0\u8d44\u672c\u8ba1\u7b97 - FcfCalculator: \u65e0\u6760\u6746\u81ea\u7531\u73b0\u91d1\u6d41\u8ba1\u7b97 - WaccCalculator: \u52a0\u6743\u5e73\u5747\u8d44\u672c\u6210\u672c\u8ba1\u7b97 - TerminalValueCalculator: \u7ec8\u503c\u8ba1\u7b97 - PresentValueCalculator: \u73b0\u503c\u8ba1\u7b97 - EquityBridgeCalculator: \u4f01\u4e1a\u4ef7\u503c\u5230\u80a1\u6743\u4ef7\u503c\u6865\u63a5 \u6743\u5a01\u6027\u8bc4\u4ef7 \uff1aA- - \u8d85\u8d8a\u540c\u884c \uff1a\u6a21\u5757\u5316\u7a0b\u5ea6\u8d85\u8fc7\u5927\u591a\u6570\u5f00\u6e90\u9879\u76ee - \u7b26\u5408\u6807\u51c6 \uff1a\u5b8c\u5168\u7b26\u5408 McKinsey \u7684\u6a21\u5757\u5316\u8981\u6c42 2. \u6838\u5fc3\u516c\u5f0f\u4e0e\u7b97\u6cd5\u5408\u89c4\u6027 2.1 CAPM \u6a21\u578b\u6df1\u5ea6\u5bf9\u6bd4 \u6743\u5a01\u673a\u6784 \u6807\u51c6\u516c\u5f0f \u672c\u9879\u76ee\u5b9e\u73b0 \u5dee\u5f02\u5206\u6790 \u6743\u5a01\u6027\u7b26\u5408\u5ea6 McKinsey Re = Rf + \u03b2\u00d7(Rm-Rf) + CRP + Size Re = Rf + \u03b2\u00d7(MRP+CRP) + Size + IRP \u2705 \u5df2\u6db5\u76d6 CRP/IRP 95% CFA Institute Re = Rf + \u03b2\u00d7(Rm-Rf) + CRP + SRP \u540c\u4e0a \u2705 95% Damodaran Re = Rf + \u03b2\u00d7(Rm-Rf) + CRP + IRP \u540c\u4e0a \u2705 95% \u5f53\u524d\u5b9e\u73b0\u4e0e\u5efa\u8bae \uff1a \u5df2\u5728 WaccCalculator.get_wacc_and_ke \u4e2d\u5b9e\u73b0\u589e\u5f3a\u578b CAPM\uff1a Ke = Rf + \u03b2\u00d7(MRP+CRP) + Size + IRP \uff0c\u524d\u7aef\u652f\u6301 CRP/IRP \u8f93\u5165\u4e14\u53ef\u7531 ENV \u63d0\u4f9b\u9ed8\u8ba4\u503c\uff0c\u7b26\u5408 McKinsey \u5b9e\u52a1\u53e3\u5f84\u3002\u5efa\u8bae\u540e\u7eed\u5f15\u5165\u884c\u4e1a/\u56fd\u5bb6\u57fa\u51c6\u5e93\u4ee5\u7ed9\u51fa\u9ed8\u8ba4\u5efa\u8bae\u503c\u4e0e\u6821\u51c6\u63d0\u793a\u3002 2.2 \u6c38\u7eed\u589e\u957f\u7387\u903b\u8f91\u5bf9\u6bd4\uff08\u540d\u4e49 GDP \u4e0a\u9650\uff09 \u6743\u5a01\u673a\u6784 \u6807\u51c6\u8bbe\u5b9a \u672c\u9879\u76ee\u5b9e\u73b0 \u79d1\u5b66\u6027\u8bc4\u4ef7 Damodaran \u540d\u4e49 GDP \u589e\u957f\u4e3a\u4e0a\u9650 min(pg_rate, GDP_cap) \u2705 \u5408\u89c4 McKinsey \u901a\u80c0\u7387 + \u5b9e\u9645\u589e\u957f\u7387\uff08\u540d\u4e49 GDP \u57fa\u51c6\uff09 min(pg_rate, GDP_cap) \u2705 \u5408\u89c4 CFA Institute \u4e0d\u8d85\u8fc7\u957f\u671f GDP \u589e\u957f\u7387\u7684\u5408\u7406\u4e0a\u9650 min(pg_rate, risk_free_rate) \u26a0\ufe0f \u53ef\u4f18\u5316 \u903b\u8f91\u4e25\u8c28\u6027\u5206\u6790 \uff1a # \u5f53\u524d\u903b\u8f91 (src/core/calculators/dcf/terminal_value_calculator.py) pg_rate_to_use = min(pg_rate_decimal, self.risk_free_rate) # \u95ee\u9898 1\uff1a\u65e0\u98ce\u9669\u5229\u7387\u901a\u5e38\u4e3a 3-4%\uff0c\u800c\u957f\u671f GDP \u589e\u957f\u7387\u4e3a 5-7% # \u95ee\u9898 2\uff1a\u4f18\u8d28\u516c\u53f8\u589e\u957f\u901f\u5ea6\u5e94\u53ef\u80fd\u8d85\u8fc7\u65e0\u98ce\u9669\u5229\u7387 # \u95ee\u9898 3\uff1a\u672a\u8003\u8651\u901a\u80c0\u56e0\u7d20 \u4e13\u4e1a\u5206\u6790 \uff1a \u4ece\u7ecf\u6d4e\u7406\u8bba\u89d2\u5ea6\u5206\u6790\uff0c\u6c38\u7eed\u589e\u957f\u7387\u5e94\u8be5\u53cd\u6620\u516c\u53f8\u957f\u671f\u7a33\u5b9a\u7684\u589e\u957f\u80fd\u529b\u3002\u5c06\u6c38\u7eed\u589e\u957f\u7387\u9650\u5236\u5728\u65e0\u98ce\u9669\u5229\u7387\u4ee5\u4e0b\u5b58\u5728\u903b\u8f91\u7f3a\u9677\uff0c\u56e0\u4e3a\uff1a 1. \u65e0\u98ce\u9669\u5229\u7387\u901a\u5e38\u4e3a 3-4%\uff0c\u800c\u957f\u671f\u540d\u4e49 GDP \u589e\u957f\u7387\u4e3a 6-8% 2. \u4f18\u8d28\u516c\u53f8\u5e94\u8be5\u80fd\u591f\u83b7\u5f97\u8d85\u8fc7\u5e73\u5747\u6c34\u5e73\u7684\u589e\u957f 3. \u8be5\u9650\u5236\u8fdd\u80cc\u4e86\u7ecf\u6d4e\u589e\u957f\u7684\u57fa\u672c\u539f\u7406\u548c\u4f01\u4e1a\u53d1\u5c55\u89c4\u5f8b \u5408\u7406\u6027\u8bc4\u4ef7 \uff1aA- - \u540d\u4e49 GDP \u4e0a\u9650\u4e0e\u9690\u542b PGR \u63d0\u793a\u5df2\u751f\u6548\uff1b\u5efa\u8bae\u5f15\u5165\u201c\u884c\u4e1a cap \u5efa\u8bae\u503c\u201d\u5e76\u5728\u7ed3\u679c\u4e2d\u5e38\u9a7b\u663e\u793a\u3002 2.3 UFCF \u8ba1\u7b97\u516c\u5f0f\u5bf9\u6bd4 McKinsey \u6807\u51c6\u516c\u5f0f \uff1a UFCF = EBIT \u00d7 (1-\u7a0e\u7387) + \u6298\u65e7\u644a\u9500 - \u8d44\u672c\u652f\u51fa - \u51c0\u8425\u8fd0\u8d44\u672c\u53d8\u52a8 \u672c\u9879\u76ee\u5b9e\u73b0 \uff1a # fcf_calculator.py \u4e2d\u5b8c\u5168\u7b26\u5408\u6807\u51c6\u516c\u5f0f ufcf = ebit * (1 - tax_rate) + depreciation_amortization - capital_expenditures - change_in_nwc \u4e25\u8c28\u6027\u8bc4\u4ef7 \uff1aA+ - \u5b8c\u5168\u7b26\u5408 \uff1a\u516c\u5f0f\u5b9e\u73b0\u7cbe\u786e\u65e0\u8bef - \u6280\u672f\u4f18\u52bf \uff1a\u4f7f\u7528 Decimal \u786e\u4fdd\u8ba1\u7b97\u7cbe\u5ea6 - \u9a8c\u8bc1\u5b8c\u5907 \uff1a\u5305\u542b\u5b8c\u6574\u7684\u8f93\u5165\u9a8c\u8bc1 3. \u6570\u636e\u6a21\u578b\u4e0e\u53c2\u6570\u8bbe\u8ba1\u5408\u89c4\u6027 3.1 \u6570\u636e\u6a21\u578b\u5b8c\u6574\u6027 \u8bc4\u4f30\u7ed3\u679c \uff1aA- - \u6a21\u578b\u8bbe\u8ba1\u4f18\u79c0 \uff1aPydantic \u6a21\u578b\u7ed3\u6784\u5b8c\u6574\uff0c\u53c2\u6570\u8986\u76d6\u5168\u9762 - \u9a8c\u8bc1\u673a\u5236\u5b8c\u5584 \uff1a\u5305\u542b\u5b8c\u6574\u7684\u7ea6\u675f\u6761\u4ef6\u548c\u9a8c\u8bc1\u903b\u8f91 - \u6269\u5c55\u6027\u826f\u597d \uff1a\u652f\u6301\u591a\u79cd\u4f30\u503c\u6a21\u5f0f\u548c\u53c2\u6570\u914d\u7f6e \u6838\u5fc3\u6a21\u578b\u5206\u6790 \uff1a StockValuationRequest \uff08\u7b2c 14-160 \u884c\uff09 \u57fa\u7840\u53c2\u6570\uff1a\u80a1\u7968\u4ee3\u7801\u3001\u5e02\u573a\u3001\u4f30\u503c\u65e5\u671f DCF \u6838\u5fc3\u5047\u8bbe\uff1a\u9884\u6d4b\u671f\u3001\u589e\u957f\u7387\u3001\u5229\u6da6\u7387\u9884\u6d4b WACC \u53c2\u6570\uff1a\u6743\u91cd\u6a21\u5f0f\u3001CAPM \u53c2\u6570 \u7ec8\u503c\u53c2\u6570\uff1a\u8ba1\u7b97\u65b9\u6cd5\u3001\u9000\u51fa\u4e58\u6570\u3001\u6c38\u7eed\u589e\u957f\u7387 DcfForecastDetails \uff08\u7b2c 216-241 \u884c\uff09 \u6838\u5fc3\u8f93\u51fa\uff1a\u4f01\u4e1a\u4ef7\u503c\u3001\u80a1\u6743\u4ef7\u503c\u3001\u6bcf\u80a1\u4ef7\u503c \u8ba1\u7b97\u7ec6\u8282\uff1aWACC\u3001\u7ec8\u503c\u65b9\u6cd5\u3001\u9690\u542b\u589e\u957f\u7387 \u5206\u6790\u6307\u6807\uff1aEV/EBITDA\u3001DCF \u9690\u542b PE 3.2 \u53c2\u6570\u8bbe\u7f6e\u5408\u7406\u6027 \u7b26\u5408 McKinsey \u6807\u51c6\u7684\u53c2\u6570 \uff1a # \u9884\u6d4b\u671f\u8bbe\u7f6e forecast_years: int = Field(default=5, ge=1, le=20) # \u2705 \u5408\u7406 # \u503a\u52a1\u6bd4\u4f8b\u7ea6\u675f target_debt_ratio: Optional[float] = Field(None, ge=0, le=1) # \u2705 \u5408\u7406 # WACC \u6743\u91cd\u6a21\u5f0f wacc_weight_mode: Optional[str] = Field(\"target\", pattern=\"^(target|market)$\") # \u2705 \u5b8c\u6574 \u8fd1\u671f\u8865\u5168\u8981\u70b9 \uff1a - \u6c38\u7eed\u589e\u957f\u7387\uff1a\u5df2\u7531\u670d\u52a1\u5c42\u4e0e\u8ba1\u7b97\u5668\u5171\u540c\u91c7\u7528\u540d\u4e49 GDP \u4e0a\u9650\uff08\u8bf7\u6c42/ENV\uff09\uff1bExit Multiple \u8def\u5f84\u63d0\u4f9b\u9690\u542b PGR \u6821\u9a8c - \u884c\u4e1a\u9884\u8bbe\uff1aGICS 11 + \u767d\u9152\u53d8\u4f53\u63d0\u4f9b \u03b2/\u9884\u6d4b\u671f/PGR cap/\u4e58\u6570/\u5468\u8f6c\u533a\u95f4\uff1bAPI debug \u8fd4\u56de applied_preset \u4e0e applied_preset_diff - as-of \u4e0e\u80a1\u606f\uff1a\u4ef7\u683c/EPS as-of \u4e00\u81f4\uff1b\u80a1\u606f\u652f\u6301 TTM\u2192TTM\u00b7\u9884\u6848\u2192\u5e74\u5ea6\u56de\u9000\u94fe\uff0cUI \u6807\u7b7e\u5c55\u793a\u6765\u6e90 4. \u7b97\u6cd5\u5b9e\u73b0\u4e0e\u6570\u503c\u7a33\u5b9a\u6027 4.1 \u7b97\u6cd5\u6548\u7387\u8bc4\u4f30 \u4f18\u52bf \uff1a - \u8ba1\u7b97\u590d\u6742\u5ea6\u5408\u7406 \uff1a\u5404\u8ba1\u7b97\u5668\u590d\u6742\u5ea6\u9002\u4e2d - \u5185\u5b58\u4f7f\u7528\u4f18\u5316 \uff1a\u4f7f\u7528 Decimal \u7c7b\u578b\u786e\u4fdd\u7cbe\u5ea6 - \u5f02\u5e38\u5904\u7406\u5b8c\u5584 \uff1a\u5bf9\u8fb9\u754c\u6761\u4ef6\u6709\u8f83\u597d\u5904\u7406 \u95ee\u9898\u53d1\u73b0 \uff1a # \u6570\u503c\u7cbe\u5ea6\u95ee\u9898 (Decimal(\"1\") / one_plus_wacc) ** int(year) # \u5e42\u8fd0\u7b97\u53ef\u80fd\u5bfc\u81f4\u7cbe\u5ea6\u635f\u5931 # \u7b97\u6cd5\u6548\u7387\u95ee\u9898 pd.to_numeric(forecast_df[\"nopat\"], errors=\"coerce\").fillna(0).apply(Decimal) # \u91cd\u590d\u7c7b\u578b\u8f6c\u6362 4.2 \u6570\u503c\u7a33\u5b9a\u6027\u5206\u6790 \u7a33\u5b9a\u6027\u8bc4\u4ef7 \uff1aB+ - \u7cbe\u5ea6\u63a7\u5236 \uff1a\u4f7f\u7528 Decimal \u786e\u4fdd\u9ad8\u7cbe\u5ea6\u8ba1\u7b97 - \u5f02\u5e38\u5904\u7406 \uff1a\u5bf9\u9664\u96f6\u3001\u6ea2\u51fa\u7b49\u5f02\u5e38\u60c5\u51b5\u6709\u5904\u7406 - \u8fb9\u754c\u6761\u4ef6 \uff1a\u5bf9\u8f93\u5165\u53c2\u6570\u8fdb\u884c\u8303\u56f4\u9a8c\u8bc1 \u6539\u8fdb\u5efa\u8bae \uff1a # \u5efa\u8bae\u7684\u5b89\u5168\u9664\u6cd5\u51fd\u6570 def safe_divide(numerator, denominator, default=Decimal(\"0\")): \"\"\"\u5b89\u5168\u9664\u6cd5\uff0c\u907f\u514d\u9664\u96f6\u548c\u6570\u503c\u6ea2\u51fa\"\"\" if abs(denominator) < Decimal(\"1e-10\"): return default try: result = numerator / denominator if result.is_nan() or result.is_infinite(): return default return result except: return default 5. \u884c\u4e1a\u6700\u4f73\u5b9e\u8df5\u7b26\u5408\u5ea6 5.1 \u6280\u672f\u67b6\u6784\u4f18\u52bf \u8d85\u8d8a\u884c\u4e1a\u6c34\u5e73\u7684\u5b9e\u73b0 \uff1a 1. \u6a21\u5757\u5316\u8bbe\u8ba1 \uff1a6 \u4e2a\u4e13\u4e1a\u5316\u8ba1\u7b97\u5668\uff0c\u804c\u8d23\u5206\u79bb\u6e05\u6670 2. \u7c7b\u578b\u5b89\u5168 \uff1a\u4f7f\u7528 Decimal \u7c7b\u578b\u786e\u4fdd\u91d1\u878d\u8ba1\u7b97\u7cbe\u5ea6 3. \u5f02\u6b65\u652f\u6301 \uff1aFastAPI + asyncpg \u5b9e\u73b0\u9ad8\u6027\u80fd API \u670d\u52a1 4. \u914d\u7f6e\u9a71\u52a8 \uff1a\u652f\u6301\u73af\u5883\u53d8\u91cf\u914d\u7f6e\uff0c\u7075\u6d3b\u8c03\u6574\u53c2\u6570 5.2 \u884c\u4e1a\u9002\u5e94\u6027\u4e0d\u8db3 \u5173\u952e\u95ee\u9898 \uff1a 1. \u7f3a\u4e4f\u884c\u4e1a\u5dee\u5f02\u5316\u53c2\u6570 - \u6240\u6709\u884c\u4e1a\u4f7f\u7528\u76f8\u540c\u53c2\u6570\u9ed8\u8ba4\u503c - \u7f3a\u4e4f\u884c\u4e1a\u57fa\u51c6\u6570\u636e\u5e93 \u9884\u6d4b\u671f\u7f3a\u4e4f\u7075\u6d3b\u6027 \u56fa\u5b9a 5 \u5e74\u9884\u6d4b\u671f \u672a\u8003\u8651\u884c\u4e1a\u7279\u6027 \u654f\u611f\u6027\u5206\u6790\u6df1\u5ea6\u4e0d\u8db3 \u4ec5\u652f\u6301\u57fa\u7840\u654f\u611f\u6027\u5206\u6790 \u7f3a\u4e4f\u8499\u7279\u5361\u6d1b\u6a21\u62df\u548c\u60c5\u666f\u5206\u6790 \ud83d\udea8 \u5173\u952e\u95ee\u9898\u8bc6\u522b \u9ad8\u4f18\u5148\u7ea7\u95ee\u9898\uff08\u5fc5\u987b\u4fee\u590d\uff09 1. CAPM \u6a21\u578b\u7f3a\u9677 \u4f4d\u7f6e \uff1a src/core/calculators/dcf/wacc_calculator.py \u5f71\u54cd \uff1a\u7cfb\u7edf\u6027\u4f4e\u4f30\u80a1\u6743\u6210\u672c\uff0c\u5f71\u54cd\u6240\u6709\u4f30\u503c\u7ed3\u679c \u4fee\u590d\u5efa\u8bae \uff1a def enhanced_capm_calculation(self, beta, market_risk_premium, country_risk_premium, industry_risk_premium): \"\"\" \u589e\u5f3a\u578b CAPM \u8ba1\u7b97\uff0c\u7b26\u5408 McKinsey \u6807\u51c6 \"\"\" # \u57fa\u7840 CAPM cost_of_equity = self.risk_free_rate + beta * market_risk_premium # \u56fd\u5bb6\u98ce\u9669\u8c03\u6574\uff08\u5bf9\u65b0\u5174\u5e02\u573a\u5173\u952e\uff09 if self.is_emerging_market: cost_of_equity += beta * country_risk_premium # \u884c\u4e1a\u98ce\u9669\u8c03\u6574 cost_of_equity += industry_risk_premium return cost_of_equity 2. \u6c38\u7eed\u589e\u957f\u7387\u903b\u8f91\u91cd\u6784 \u4f4d\u7f6e \uff1a src/core/calculators/dcf/terminal_value_calculator.py \u5f71\u54cd \uff1a\u7cfb\u7edf\u6027\u4f4e\u4f30\u516c\u53f8\u7ec8\u503c 20%-30% \u4fee\u590d\u5efa\u8bae \uff1a def validate_perpetual_growth_rate(self, pg_rate, country_gdp_growth, inflation_rate): \"\"\" \u57fa\u4e8e\u7ecf\u6d4e\u57fa\u672c\u9762\u7684\u6c38\u7eed\u589e\u957f\u7387\u9a8c\u8bc1 \u7b26\u5408 Damodaran \u548c McKinsey \u6807\u51c6 \"\"\" # \u957f\u671f\u540d\u4e49 GDP \u589e\u957f\u7387 nominal_gdp_growth = country_gdp_growth + inflation_rate # \u5408\u7406\u8303\u56f4\uff1aGDP \u589e\u957f\u7387\u81f3 GDP+2% reasonable_max = nominal_gdp_growth + 0.02 reasonable_min = nominal_gdp_growth - 0.01 # \u9a8c\u8bc1\u8303\u56f4 if pg_rate > reasonable_max: return reasonable_max elif pg_rate < reasonable_min: return reasonable_min return pg_rate 3. \u6298\u73b0\u65f6\u70b9\u4f18\u5316 \u4f4d\u7f6e \uff1a src/core/calculators/dcf/present_value_calculator.py \u5f71\u54cd \uff1a\u7cfb\u7edf\u6027\u4f4e\u4f30\u4f01\u4e1a\u4ef7\u503c\u7ea6 WACC/2 \u4fee\u590d\u5efa\u8bae \uff1a def calculate_discount_factors(self, wacc, years, mid_year_convention=True): \"\"\" \u652f\u6301 McKinsey \u63a8\u8350\u7684\u5e74\u4e2d\u6298\u73b0\u60ef\u4f8b \"\"\" wacc_decimal = Decimal(str(wacc)) one_plus_wacc = Decimal(\"1\") + wacc_decimal factors = [] for year in years: if mid_year_convention: # \u5e74\u4e2d\u6298\u73b0\uff1a\u5047\u8bbe\u73b0\u91d1\u6d41\u5728\u5e74\u4e2d\u53d1\u751f factor = (Decimal(\"1\") / one_plus_wacc) ** (year - 0.5) else: # \u5e74\u672b\u6298\u73b0 factor = (Decimal(\"1\") / one_plus_wacc) ** year factors.append(factor) return factors \u4e2d\u4f18\u5148\u7ea7\u95ee\u9898\uff08\u5efa\u8bae\u4fee\u590d\uff09 1. \u884c\u4e1a\u57fa\u51c6\u6570\u636e\u5e93\u5efa\u8bbe class IndustryBenchmarks: \"\"\"McKinsey \u6807\u51c6\u884c\u4e1a\u4f30\u503c\u57fa\u51c6\u6570\u636e\u5e93\"\"\" DATA = { 'Technology': { 'beta': 1.2, 'forecast_period': 10, 'perpetual_growth': 0.06, 'exit_multiple': 12.5, 'revenue_growth': 0.15, 'operating_margin': 0.25 }, 'Consumer': { 'beta': 0.9, 'forecast_period': 7, 'perpetual_growth': 0.04, 'exit_multiple': 9.8, 'revenue_growth': 0.08, 'operating_margin': 0.18 }, 'Healthcare': { 'beta': 0.8, 'forecast_period': 10, 'perpetual_growth': 0.05, 'exit_multiple': 11.2, 'revenue_growth': 0.12, 'operating_margin': 0.22 }, 'Financial': { 'beta': 1.1, 'forecast_period': 5, 'perpetual_growth': 0.03, 'exit_multiple': 8.5, 'revenue_growth': 0.06, 'operating_margin': 0.20 } } 2. \u8d44\u672c\u7ed3\u6784\u8ba1\u7b97\u5b8c\u5584 def calculate_comprehensive_debt_value(self): \"\"\" \u5b8c\u6574\u7684\u503a\u52a1\u4ef7\u503c\u8ba1\u7b97\uff0c\u7b26\u5408 IFRS 16 \u6807\u51c6 \"\"\" # \u4f20\u7edf\u6709\u606f\u8d1f\u503a traditional_debt = ( self.lt_borr + self.st_borr + self.bond_payable + self.non_cur_liab_due_1y ) # \u7ecf\u8425\u79df\u8d41\u8d44\u672c\u5316\uff08IFRS 16 \u8981\u6c42\uff09 operating_lease_value = self.capitalize_operating_leases() # \u5176\u4ed6\u503a\u52a1\u5de5\u5177 preferred_stock = self.get_preferred_stock_value() convertible_debt = self.get_convertible_debt_value() return traditional_debt + operating_lease_value + preferred_stock + convertible_debt \ud83d\udcc8 \u603b\u4f53\u8bc4\u4ef7\u4e0e\u5efa\u8bae \u9879\u76ee\u8bc4\u5206 \u8bc4\u4f30\u7ef4\u5ea6 \u5f97\u5206 \u7b49\u7ea7 \u8bf4\u660e \u4e1a\u52a1\u903b\u8f91\u5408\u89c4\u6027 85/100 A- \u6846\u67b6\u5b8c\u6574\uff0c\u5173\u952e\u53e3\u5f84\u4e0e\u6298\u73b0\u60ef\u4f8b\u5df2\u8865\u9f50 \u6570\u636e\u6a21\u578b\u8bbe\u8ba1 87/100 A- \u7ed3\u6784\u5b8c\u6574\uff0c\u53c2\u6570\u8986\u76d6\u5168\u9762\uff0c\u8c03\u8bd5\u53ef\u89c6\u5316\u589e\u5f3a \u516c\u5f0f\u8ba1\u7b97\u51c6\u786e\u6027 85/100 A- \u6838\u5fc3\u516c\u5f0f\u6b63\u786e\uff0cCAPM/\u6298\u73b0/\u0394NWC \u7ec6\u8282\u5df2\u4f18\u5316 \u7b97\u6cd5\u5b9e\u73b0\u8d28\u91cf 84/100 B+ \u4ee3\u7801\u8d28\u91cf\u9ad8\uff0c\u6570\u503c\u7a33\u5b9a\u6027\u826f\u597d McKinsey \u6807\u51c6\u7b26\u5408\u5ea6 90/100 A- \u4e3b\u8981\u7f3a\u53e3\uff1a\u8d44\u672c\u7ed3\u6784\u6269\u5c55\uff08\u79df\u8d41/\u4f18\u5148\u80a1/\u53ef\u8f6c\u503a\uff09\u3001\u884c\u4e1a\u5e93\u7ec6\u5316 \u7efc\u5408\u8bc4\u5206 85/100 A- \u5177\u5907\u4f01\u4e1a\u7ea7\u96cf\u5f62\uff0c\u90e8\u5206\u9ad8\u7ea7\u80fd\u529b\u5728\u8def\u4e0a \u6838\u5fc3\u4f18\u52bf \u6280\u672f\u67b6\u6784\u5353\u8d8a \uff1a\u6a21\u5757\u5316\u8bbe\u8ba1\u8d85\u8d8a\u5927\u591a\u6570\u5f00\u6e90\u9879\u76ee \u7406\u8bba\u57fa\u7840\u624e\u5b9e \uff1aDCF \u6838\u5fc3\u903b\u8f91\u7b26\u5408 McKinsey \u6807\u51c6 \u4ee3\u7801\u8d28\u91cf\u9ad8 \uff1a\u5b9e\u73b0\u4e25\u8c28\uff0c\u5f02\u5e38\u5904\u7406\u5b8c\u5584 \u6269\u5c55\u6027\u597d \uff1a\u63d2\u4ef6\u5f0f\u67b6\u6784\u4fbf\u4e8e\u529f\u80fd\u6269\u5c55 \u5173\u952e\u4e0d\u8db3\uff08\u66f4\u65b0\uff09 \u7ec8\u503c\u6cbb\u7406 \uff1aPGR \u5df2\u63a5\u5165\u540d\u4e49 GDP \u4e0a\u9650\u4e0e\u9690\u542b PGR \u63d0\u793a\uff1b\u5efa\u8bae\u5e38\u9a7b\u6307\u6807\u5361\u7247 \u884c\u4e1a\u9002\u5e94\u6027\u4e0d\u8db3 \uff1a\u7f3a\u4e4f\u884c\u4e1a\u5dee\u5f02\u5316\u53c2\u6570\u4e0e\u4e58\u6570\u533a\u95f4 \u60c5\u666f/\u5206\u5e03\u5206\u6790\u7f3a\u5931 \uff1a\u5c1a\u672a\u63d0\u4f9b\u8499\u7279\u5361\u6d1b\u4e0e\u4e09\u60c5\u666f\u8054\u52a8 \u7ed3\u679c\u6458\u8981\u4fe1\u606f\u5bc6\u5ea6 \uff1a\u5173\u952e\u5047\u8bbe\u6458\u8981\u5361\u7247\u4e0e\u0394NWC\u6784\u6210\u5f85\u5e38\u9a7b\u5316 \u6539\u8fdb\u8def\u7ebf\u56fe \u7b2c\u4e00\u9636\u6bb5\uff081-2 \u4e2a\u6708\uff09\uff1a\u5173\u952e\u95ee\u9898\u4fee\u590d [x] \u589e\u5f3a\u578b CAPM\uff08CRP/IRP\uff09 [x] \u5e74\u4e2d\u6298\u73b0\u60ef\u4f8b\uff08Mid-Year\uff09 [x] NWC \u57fa\u51c6\u53e3\u5f84 component + \u65e5\u6570\u8fc7\u6e21\uff0c\u6d88\u9664\u9996\u5e74\u8df3\u53d8 [x] COGS \u53cc\u6a21\u5f0f\u5f00\u5173 [ ] \u5efa\u7acb\u57fa\u7840\u884c\u4e1a\u57fa\u51c6\u6570\u636e\u5e93 \u7b2c\u4e8c\u9636\u6bb5\uff082-3 \u4e2a\u6708\uff09\uff1a\u884c\u4e1a\u9002\u5e94\u6027\u589e\u5f3a [ ] \u5b8c\u5584\u8d44\u672c\u7ed3\u6784\u8ba1\u7b97\uff0c\u7b26\u5408 IFRS 16 \u6807\u51c6 [ ] \u5b9e\u73b0\u9884\u6d4b\u671f\u884c\u4e1a\u5dee\u5f02\u5316\u914d\u7f6e [ ] \u589e\u52a0\u884c\u4e1a\u751f\u547d\u5468\u671f\u8003\u91cf [ ] \u4f18\u5316\u7b97\u6cd5\u6548\u7387\u548c\u6570\u503c\u7a33\u5b9a\u6027 \u7b2c\u4e09\u9636\u6bb5\uff083-4 \u4e2a\u6708\uff09\uff1a\u6743\u5a01\u6027\u63d0\u5347 [ ] \u6574\u5408\u6743\u5a01\u6570\u636e\u6e90\u548c\u57fa\u51c6\u6570\u636e [ ] \u589e\u52a0\u8499\u7279\u5361\u6d1b\u6a21\u62df\u548c\u60c5\u666f\u5206\u6790 [ ] \u5b8c\u5584\u6587\u6863\u548c\u8ba4\u8bc1\u6750\u6599 [ ] \u6027\u80fd\u4f18\u5316\u548c\u5927\u89c4\u6a21\u6d4b\u8bd5 \ud83c\udfaf \u7ed3\u8bba stock_vale_valuation_3.0 \u9879\u76ee\u5728 DCF \u4f30\u503c\u5b9e\u73b0\u4e0a\u5c55\u73b0\u4e86 \u8f83\u9ad8\u7684\u4e13\u4e1a\u6c34\u51c6 \uff0c\u6280\u672f\u67b6\u6784\u548c\u6838\u5fc3\u8ba1\u7b97\u903b\u8f91\u90fd\u8fbe\u5230\u4e86 McKinsey \u6807\u51c6\u7684\u57fa\u672c\u8981\u6c42\u3002\u9879\u76ee\u5177\u5907\u6210\u4e3a \u4f01\u4e1a\u7ea7\u4f30\u503c\u5e73\u53f0 \u7684\u6f5c\u529b\uff0c\u4f46\u9700\u8981\u5728\u4ee5\u4e0b\u5173\u952e\u65b9\u9762\u8fdb\u884c\u6539\u8fdb\uff1a \u79d1\u5b66\u6027\u63d0\u5347 \uff1a\u4fee\u590d CAPM \u548c\u6c38\u7eed\u589e\u957f\u7387\u7684\u5173\u952e\u7f3a\u9677 \u884c\u4e1a\u9002\u5e94\u6027 \uff1a\u589e\u52a0\u884c\u4e1a\u5dee\u5f02\u5316\u5904\u7406\u548c\u57fa\u51c6\u6570\u636e \u6743\u5a01\u6027\u5efa\u8bbe \uff1a\u6574\u5408\u6743\u5a01\u6570\u636e\u6e90\u548c\u6700\u4f73\u5b9e\u8df5 \u901a\u8fc7\u5b9e\u65bd\u4e0a\u8ff0\u6539\u8fdb\u5efa\u8bae\uff0c\u9879\u76ee\u53ef\u4ee5\u8fbe\u5230 A\u7ea7\u4e13\u4e1a\u6c34\u51c6 \uff0885\u5206\u4ee5\u4e0a\uff09\uff0c\u6210\u4e3a\u771f\u6b63\u610f\u4e49\u4e0a\u7684\u4f01\u4e1a\u7ea7\u4f30\u503c\u5e73\u53f0\u3002\u9879\u76ee\u5df2\u7ecf\u5177\u5907\u4e86\u624e\u5b9e\u7684\u57fa\u7840\uff0c\u5f00\u53d1\u56e2\u961f\u5c55\u73b0\u4e86\u5728\u91d1\u878d\u5de5\u7a0b\u548c\u8f6f\u4ef6\u67b6\u6784\u65b9\u9762\u7684\u6df1\u539a\u529f\u5e95\uff0c\u662f\u4e00\u4e2a\u5177\u6709\u5f88\u9ad8\u4ef7\u503c\u7684\u91d1\u878d\u79d1\u6280\u57fa\u7840\u6846\u67b6\u3002 \u6700\u7ec8\u8bc4\u4ef7 \uff1a\u8fd9\u662f\u4e00\u4e2a \u4f18\u79c0\u7684\u91d1\u878d\u79d1\u6280\u57fa\u7840\u6846\u67b6 \uff0c\u5728\u5173\u952e\u7ec6\u8282\u4e0a\u8fdb\u884c\u4f18\u5316\u540e\uff0c\u5b8c\u5168\u53ef\u4ee5\u8fbe\u5230\u56fd\u9645\u9876\u5c16\u6c34\u5e73\u3002 \ud83d\udd27 \u4ee3\u7801\u53c2\u8003\u4e0e\u5f53\u524d\u5b9e\u73b0\u6458\u8981\uff08\u4e0e\u5408\u89c4\u6027\u6620\u5c04\uff09 -- \u9884\u6d4b\u5f15\u64ce\uff1a src/core/financial/forecaster.py - \u6536\u5165\uff1a\u5386\u53f2 CAGR + \u5e74\u5ea6\u8870\u51cf - \u5229\u6da6\uff1a historical_median \u4e0e transition_to_target \u53cc\u6a21\u5f0f - NWC\uff1a\u652f\u6301 nwc_baseline_mode \uff08component \u9ed8\u8ba4\uff09\uff1bDSO/DIO/DPO \u4ece last_days \u2192 median \u7ebf\u6027\u8fc7\u6e21\uff1b\u907f\u514d\u9996\u5e74\u8df3\u53d8 - DCF\uff1a - \u73b0\u503c\uff1a src/core/calculators/dcf/present_value_calculator.py \uff08\u5e74\u672b/\u5e74\u4e2d\u6298\u73b0\u5f00\u5173\uff09 - \u7ec8\u503c\uff1a src/core/calculators/dcf/terminal_value_calculator.py \uff08\u9000\u51fa\u4e58\u6570/\u6c38\u7eed\u589e\u957f\uff1bPGR \u2264 GDP_cap\uff09 - WACC\uff1a src/core/calculators/dcf/wacc_calculator.py \uff08Ke = Rf + \u03b2\u00d7(MRP+CRP) + Size + IRP\uff1b\u76ee\u6807/\u5e02\u573a\u6743\u91cd\uff09 - \u80a1\u6743\u6865\uff1a src/core/calculators/equity_bridge_calculator.py \uff08EV\u2212Net Debt\u2212\u5c11\u6570\u80a1\u4e1c\u6743\u76ca\u2212\u4f18\u5148\u80a1 \u2192 Equity \u2192 \u6bcf\u80a1\uff09 - COGS \u6a21\u5f0f\uff1a cogs_forecast_mode= residual|direct_ratio \uff08\u524d\u7aef\u53ef\u9009\uff09 - \u57fa\u671f\u4e0e\u6eda\u52a8\uff1aAPI ltm_baseline_enabled \uff08\u9ed8\u8ba4\u5173\u95ed\uff09\u652f\u6301 LTM/Interim \u57fa\u671f\uff1bFetcher \u6309\u4f30\u503c\u65e5\u6eda\u52a8\u83b7\u53d6\u6700\u65b0\u8d44\u4ea7\u8d1f\u503a\u8868\uff1bProcessor \u57fa\u4e8e\u8be5\u884c\u91cd\u7b97 last_component_nwc \u3002 \ud83e\udde9 \u914d\u7f6e\u4e0e\u4f18\u5316\u5efa\u8bae\uff08\u9488\u5bf9\u672c\u9879\u76ee\u843d\u5730\uff09 WACC/Ke\uff1a\u5df2\u652f\u6301 CRP/IRP\uff08ENV+UI+API\uff09 \u6c38\u7eed\u589e\u957f\uff1a\u5df2\u63a5\u5165\u540d\u4e49 GDP \u4e0a\u9650\uff1b\u9690\u542b PGR \u63d0\u793a\u5df2\u52a0\u5165\uff08\u5efa\u8bae\u5728 UI \u5e38\u9a7b\uff09 \u6298\u73b0\u65f6\u70b9\uff1a\u5df2\u652f\u6301\u5e74\u4e2d\u6298\u73b0\u5f00\u5173\uff08UI \u53ef\u63a7\uff09 \u9884\u6d4b\u671f\uff1aUI \u9ed8\u8ba4 5 \u5e74\uff1b\u540e\u7eed\u589e\u52a0\u884c\u4e1a\u9884\u8bbe\uff08\u5f85\u505a\uff09 NWC\uff1a\u65b0\u589e nwc_baseline_mode \u4e0e\u65e5\u6570\u5e73\u6ed1\uff1b\u8c03\u8bd5\u9762\u677f\u5c55\u793a\u9996\u5e74 \u0394NWC \u6784\u6210\u4e0e\u57fa\u671f\uff08\u8ba1\u5212\u5728\u7ed3\u679c\u6458\u8981\u5e38\u9a7b\uff09 \ud83d\udccb \u4e13\u4e1a\u672f\u8bed\u5bf9\u7167\u8868 \u4e2d\u6587\u672f\u8bed \u82f1\u6587\u672f\u8bed McKinsey \u6807\u51c6\u5b9a\u4e49 \u6298\u73b0\u73b0\u91d1\u6d41\u4f30\u503c Discounted Cash Flow (DCF) \u901a\u8fc7\u9884\u6d4b\u516c\u53f8\u672a\u6765\u81ea\u7531\u73b0\u91d1\u6d41\u5e76\u6298\u73b0\u5230\u5f53\u524d\u65f6\u70b9\u786e\u5b9a\u516c\u53f8\u5185\u5728\u4ef7\u503c\u7684\u7edd\u5bf9\u4f30\u503c\u65b9\u6cd5 \u4f01\u4e1a\u4ef7\u503c Enterprise Value (EV) \u516c\u53f8\u6574\u4f53\u4ef7\u503c\uff0c\u5305\u62ec\u80a1\u6743\u4ef7\u503c\u548c\u503a\u52a1\u4ef7\u503c\uff0c\u51cf\u53bb\u73b0\u91d1\u53ca\u73b0\u91d1\u7b49\u4ef7\u7269 \u80a1\u6743\u4ef7\u503c Equity Value \u4f01\u4e1a\u4ef7\u503c\u51cf\u53bb\u51c0\u503a\u52a1\u540e\u7684\u4ef7\u503c\uff0c\u4ee3\u8868\u80a1\u4e1c\u6743\u76ca\u7684\u4ef7\u503c \u52a0\u6743\u5e73\u5747\u8d44\u672c\u6210\u672c Weighted Average Cost of Capital (WACC) \u516c\u53f8\u5404\u79cd\u878d\u8d44\u6210\u672c\u7684\u52a0\u6743\u5e73\u5747\u503c \u65e0\u6760\u6746\u81ea\u7531\u73b0\u91d1\u6d41 Unlevered Free Cash Flow (UFCF) \u516c\u53f8\u5728\u652f\u4ed8\u503a\u52a1\u5229\u606f\u524d\u7684\u81ea\u7531\u73b0\u91d1\u6d41\uff0c\u53cd\u6620\u516c\u53f8\u6838\u5fc3\u7ecf\u8425\u6d3b\u52a8\u4ea7\u751f\u7684\u73b0\u91d1\u80fd\u529b \u6c38\u7eed\u589e\u957f\u7387 Perpetual Growth Rate \u516c\u53f8\u5728\u7ec8\u503c\u9636\u6bb5\u7684\u957f\u671f\u7a33\u5b9a\u589e\u957f\u7387\uff0c\u7406\u8bba\u4e0a\u4e0d\u5e94\u8d85\u8fc7\u957f\u671f GDP \u589e\u957f\u7387 \u8d44\u672c\u8d44\u4ea7\u5b9a\u4ef7\u6a21\u578b Capital Asset Pricing Model (CAPM) \u8ba1\u7b97\u80a1\u6743\u6210\u672c\u7684\u6807\u51c6\u6a21\u578b\uff0c\u8003\u8651\u7cfb\u7edf\u6027\u98ce\u9669\u8865\u507f \u56fd\u5bb6\u98ce\u9669\u6ea2\u4ef7 Country Risk Premium (CRP) \u6295\u8d44\u7279\u5b9a\u56fd\u5bb6\u76f8\u6bd4\u53d1\u8fbe\u56fd\u5bb6\u6240\u8981\u6c42\u7684\u989d\u5916\u98ce\u9669\u8865\u507f \u5e74\u4e2d\u6298\u73b0\u60ef\u4f8b Mid-Year Discounting Convention \u5047\u8bbe\u73b0\u91d1\u6d41\u5728\u5e74\u5185\u5747\u5300\u53d1\u751f\u7684\u6298\u73b0\u65b9\u6cd5\uff0c\u6bd4\u5e74\u672b\u6298\u73b0\u66f4\u51c6\u786e \u62a5\u544a\u751f\u6210\u65f6\u95f4 \uff1a2025\u5e749\u670810\u65e5 \u5206\u6790\u57fa\u51c6 \uff1aMcKinsey & Company \u4f30\u503c\u65b9\u6cd5\u8bba\uff08\u7b2c6\u7248\uff09 \u9879\u76ee\u7248\u672c \uff1astock_vale_valuation_3.0","title":"Stock Vale Valuation 3.0 \u9879\u76ee McKinsey \u6807\u51c6\u5408\u89c4\u6027\u5206\u6790\u62a5\u544a"},{"location":"archived/mckinsey_standards_compliance_report/#stock-vale-valuation-30-mckinsey","text":"","title":"Stock Vale Valuation 3.0 \u9879\u76ee McKinsey \u6807\u51c6\u5408\u89c4\u6027\u5206\u6790\u62a5\u544a"},{"location":"archived/mckinsey_standards_compliance_report/#_1","text":"\u672c\u62a5\u544a\u57fa\u4e8e\u5bf9 stock_vale_valuation_3.0 \u9879\u76ee\u7684\u5168\u9762\u6280\u672f\u5206\u6790\uff0c\u4ece McKinsey \u4f30\u503c\u6807\u51c6 \u7684\u89d2\u5ea6\u5bf9\u9879\u76ee\u7684\u4e1a\u52a1\u903b\u8f91\u3001\u6570\u636e\u6a21\u578b\u3001\u516c\u5f0f\u8ba1\u7b97\u3001\u7b97\u6cd5\u5b9e\u73b0\u8fdb\u884c\u6df1\u5ea6\u6821\u9a8c\u3002\u5206\u6790\u53d1\u73b0\u8be5\u9879\u76ee\u5728\u6280\u672f\u67b6\u6784\u548c\u6838\u5fc3\u903b\u8f91\u4e0a\u8fbe\u5230\u884c\u4e1a\u4e13\u4e1a\u6c34\u51c6\uff0c\u4f46\u5728\u5173\u952e\u53c2\u6570\u8bbe\u7f6e\u548c\u7b97\u6cd5\u7ec6\u8282\u4e0a\u5b58\u5728\u91cd\u8981\u6539\u8fdb\u7a7a\u95f4\u3002 \u6838\u5fc3\u53d1\u73b0\uff082025-09-10 \u66f4\u65b0\uff09 \uff1a - \u6a21\u5757\u5316\u4e0e\u5408\u89c4\uff1a\u6a21\u5757\u5316\u8bbe\u8ba1\u7b26\u5408 McKinsey \u6700\u4f73\u5b9e\u8df5\uff1b\u4e24\u9636\u6bb5 DCF \u6846\u67b6\u5b8c\u6574\uff0c\u53ef\u5ba1\u8ba1 - \u6838\u5fc3\u6cbb\u7406\u5df2\u843d\u5730\uff1a\u540d\u4e49 GDP \u4e0a\u9650\uff08PGR clamp\uff09\u3001\u9690\u542b PGR\uff08Exit Multiple\uff09\u63d0\u793a\u3001LTM/\u6eda\u52a8\u8d44\u4ea7\u8d1f\u503a\u8868\u3001NWC \u5929\u6570\u8fc7\u6e21\u3001\u884c\u4e1a\u9884\u8bbe\u6a21\u677f - \u6570\u636e\u4e0e\u53e3\u5f84\u4e00\u81f4\u6027\uff1a\u4ef7\u683c/EPS as-of \u4e00\u81f4\uff1b\u80a1\u606f TTM \u56de\u9000\u94fe\uff08\u5b9e\u65bd\u2192\u9884\u6848\u2192\u5e74\u5ea6\uff09\u907f\u514d\u7a7a\u767d\u5c55\u793a - \u5f85\u5b8c\u5584\uff1a\u8d44\u672c\u7ed3\u6784\u5b8c\u6574\u6027\uff08\u79df\u8d41/\u4f18\u5148\u80a1/\u53ef\u8f6c\u503a\uff09\u3001\u884c\u4e1a\u5e93\u6269\u5c55\u3001\u60c5\u666f/\u8499\u7279\u5361\u6d1b","title":"\ud83d\udccb \u6267\u884c\u6458\u8981"},{"location":"archived/mckinsey_standards_compliance_report/#mckinsey","text":"","title":"\ud83c\udfaf McKinsey \u6807\u51c6\u6982\u8ff0"},{"location":"archived/mckinsey_standards_compliance_report/#mckinsey_1","text":"\u4e24\u9636\u6bb5 DCF \u6a21\u578b \uff1a\u663e\u6027\u9884\u6d4b\u671f + \u7ec8\u503c\u671f \u5e74\u4e2d\u6298\u73b0\u60ef\u4f8b \uff1a\u5047\u8bbe\u73b0\u91d1\u6d41\u5728\u5e74\u5185\u5747\u5300\u53d1\u751f \u6807\u51c6\u5316\u6570\u636e \uff1a\u4f7f\u7528 normalized data \u51cf\u5c11\u5468\u671f\u6027\u5f71\u54cd \u5b8c\u6574\u8d44\u672c\u7ed3\u6784 \uff1a\u5305\u542b\u6240\u6709\u878d\u8d44\u5de5\u5177\u7684\u5e02\u503c\u8ba1\u7b97 \u98ce\u9669\u8c03\u6574 \uff1a\u7cfb\u7edf\u6027\u98ce\u9669\u548c\u975e\u7cfb\u7edf\u6027\u98ce\u9669\u7684\u5b8c\u6574\u8003\u91cf","title":"McKinsey \u4f30\u503c\u65b9\u6cd5\u8bba\u6838\u5fc3\u539f\u5219"},{"location":"archived/mckinsey_standards_compliance_report/#mckinsey_2","text":"\u4f01\u4e1a\u4ef7\u503c (EV) = \u9884\u6d4b\u671f UFCF \u73b0\u503c\u5408\u8ba1 + \u7ec8\u503c\u73b0\u503c \u80a1\u6743\u4ef7\u503c (Equity) = EV \u2212 Net Debt \u2212 \u5c11\u6570\u80a1\u4e1c\u6743\u76ca \u2212 \u4f18\u5148\u80a1 \u6bcf\u80a1\u4ef7\u503c = \u80a1\u6743\u4ef7\u503c / \u5b8c\u5168\u7a00\u91ca\u540e\u80a1\u6570 \u6ce8\uff1aNet Debt \u5b9a\u4e49\u4e3a\u201c\u6709\u606f\u8d1f\u503a\u5408\u8ba1 \u2212 \u73b0\u91d1\u53ca\u73b0\u91d1\u7b49\u4ef7\u7269\u201d\u3002\u672c\u9879\u76ee\u51c0\u503a\u52a1\u6309\u201c\u4f30\u503c\u65e5\u524d\u6700\u65b0\u4e00\u5b63/\u4e2d\u671f/\u5e74\u5ea6\u8d44\u4ea7\u8d1f\u503a\u8868\u201d\u53e3\u5f84\u8ba1\u7b97\uff0c\u73b0\u91d1\u4e0d\u7eb3\u5165 NWC\uff08\u4e0e McKinsey \u53e3\u5f84\u4e00\u81f4\uff09\u3002","title":"McKinsey \u6807\u51c6\u516c\u5f0f\u4f53\u7cfb"},{"location":"archived/mckinsey_standards_compliance_report/#_2","text":"","title":"\ud83d\udcca \u8be6\u7ec6\u5408\u89c4\u6027\u5206\u6790"},{"location":"archived/mckinsey_standards_compliance_report/#1-dcf","text":"","title":"1. DCF \u4e1a\u52a1\u903b\u8f91\u5408\u89c4\u6027"},{"location":"archived/mckinsey_standards_compliance_report/#11","text":"\u8bc4\u4f30\u7ef4\u5ea6 McKinsey \u6807\u51c6 \u672c\u9879\u76ee\u5b9e\u73b0 \u7b26\u5408\u5ea6 \u5dee\u5f02\u5206\u6790 \u6a21\u578b\u7c7b\u578b \u4e24\u9636\u6bb5 DCF \u6a21\u578b \u4e24\u9636\u6bb5 DCF \u6a21\u578b \u2705 100% \u5b8c\u5168\u7b26\u5408 \u663e\u6027\u9884\u6d4b\u671f 5-10 \u5e74\uff0c\u6309\u884c\u4e1a\u8c03\u6574 \u9ed8\u8ba4 5 \u5e74\uff1bUI \u53ef\u914d 3\u201315 \u5e74\uff0cAPI \u53ef\u914d 1\u201320 \u5e74 \u2705 85% \u5df2\u652f\u6301\u914d\u7f6e\uff0c\u5efa\u8bae\u6309\u884c\u4e1a\u4e0e\u516c\u53f8\u5468\u671f\u8c03\u6574 \u7ec8\u503c\u8ba1\u7b97 \u6c38\u7eed\u589e\u957f\u6cd5 + \u9000\u51fa\u4e58\u6570\u6cd5\u53cc\u9a8c\u8bc1 \u6c38\u7eed\u589e\u957f\u6cd5 + \u9000\u51fa\u4e58\u6570\u6cd5 \u2705 98% PGR \u540d\u4e49 GDP \u4e0a\u9650\u4e0e\u9690\u542b PGR \u63d0\u793a\u5df2\u63a5\u5165 \u4f01\u4e1a\u4ef7\u503c\u6865\u63a5 \u6807\u51c6 EV \u5230 Equity \u6865\u63a5 \u6807\u51c6 EV \u5230 Equity \u6865\u63a5 \u2705 100% \u5b8c\u5168\u7b26\u5408 \u79d1\u5b66\u6027\u8bc4\u4ef7 \uff1aB+ - \u4f18\u52bf \uff1a\u4e25\u683c\u9075\u5faa\u4e24\u9636\u6bb5 DCF \u7406\u8bba\u6846\u67b6\uff0c\u6a21\u578b\u7ed3\u6784\u5b8c\u6574 - \u4e0d\u8db3 \uff1a\u9884\u6d4b\u671f\u8bbe\u5b9a\u7f3a\u4e4f\u884c\u4e1a\u5dee\u5f02\u5316\uff0c\u5f71\u54cd\u4f30\u503c\u7cbe\u5ea6","title":"1.1 \u6a21\u578b\u67b6\u6784\u5408\u89c4\u6027"},{"location":"archived/mckinsey_standards_compliance_report/#12","text":"McKinsey \u63a8\u8350\u5b9e\u8df5 \uff1a - \u6a21\u5757\u5316\u4f30\u503c\u7ec4\u4ef6 - \u8ba1\u7b97\u6b65\u9aa4\u72ec\u7acb\u6027\u548c\u53ef\u9a8c\u8bc1\u6027 - \u8ba1\u7b97\u8fc7\u7a0b\u900f\u660e\u5316 \u672c\u9879\u76ee\u5b9e\u73b0 \uff1a # 6\u4e2a\u4e13\u4e1a\u5316\u8ba1\u7b97\u5668\uff0c\u5b8c\u5168\u7b26\u5408\u6a21\u5757\u5316\u8981\u6c42 - NwcCalculator: \u51c0\u8425\u8fd0\u8d44\u672c\u8ba1\u7b97 - FcfCalculator: \u65e0\u6760\u6746\u81ea\u7531\u73b0\u91d1\u6d41\u8ba1\u7b97 - WaccCalculator: \u52a0\u6743\u5e73\u5747\u8d44\u672c\u6210\u672c\u8ba1\u7b97 - TerminalValueCalculator: \u7ec8\u503c\u8ba1\u7b97 - PresentValueCalculator: \u73b0\u503c\u8ba1\u7b97 - EquityBridgeCalculator: \u4f01\u4e1a\u4ef7\u503c\u5230\u80a1\u6743\u4ef7\u503c\u6865\u63a5 \u6743\u5a01\u6027\u8bc4\u4ef7 \uff1aA- - \u8d85\u8d8a\u540c\u884c \uff1a\u6a21\u5757\u5316\u7a0b\u5ea6\u8d85\u8fc7\u5927\u591a\u6570\u5f00\u6e90\u9879\u76ee - \u7b26\u5408\u6807\u51c6 \uff1a\u5b8c\u5168\u7b26\u5408 McKinsey \u7684\u6a21\u5757\u5316\u8981\u6c42","title":"1.2 \u8ba1\u7b97\u5668\u6a21\u5757\u5316\u8bbe\u8ba1"},{"location":"archived/mckinsey_standards_compliance_report/#2","text":"","title":"2. \u6838\u5fc3\u516c\u5f0f\u4e0e\u7b97\u6cd5\u5408\u89c4\u6027"},{"location":"archived/mckinsey_standards_compliance_report/#21-capm","text":"\u6743\u5a01\u673a\u6784 \u6807\u51c6\u516c\u5f0f \u672c\u9879\u76ee\u5b9e\u73b0 \u5dee\u5f02\u5206\u6790 \u6743\u5a01\u6027\u7b26\u5408\u5ea6 McKinsey Re = Rf + \u03b2\u00d7(Rm-Rf) + CRP + Size Re = Rf + \u03b2\u00d7(MRP+CRP) + Size + IRP \u2705 \u5df2\u6db5\u76d6 CRP/IRP 95% CFA Institute Re = Rf + \u03b2\u00d7(Rm-Rf) + CRP + SRP \u540c\u4e0a \u2705 95% Damodaran Re = Rf + \u03b2\u00d7(Rm-Rf) + CRP + IRP \u540c\u4e0a \u2705 95% \u5f53\u524d\u5b9e\u73b0\u4e0e\u5efa\u8bae \uff1a \u5df2\u5728 WaccCalculator.get_wacc_and_ke \u4e2d\u5b9e\u73b0\u589e\u5f3a\u578b CAPM\uff1a Ke = Rf + \u03b2\u00d7(MRP+CRP) + Size + IRP \uff0c\u524d\u7aef\u652f\u6301 CRP/IRP \u8f93\u5165\u4e14\u53ef\u7531 ENV \u63d0\u4f9b\u9ed8\u8ba4\u503c\uff0c\u7b26\u5408 McKinsey \u5b9e\u52a1\u53e3\u5f84\u3002\u5efa\u8bae\u540e\u7eed\u5f15\u5165\u884c\u4e1a/\u56fd\u5bb6\u57fa\u51c6\u5e93\u4ee5\u7ed9\u51fa\u9ed8\u8ba4\u5efa\u8bae\u503c\u4e0e\u6821\u51c6\u63d0\u793a\u3002","title":"2.1 CAPM \u6a21\u578b\u6df1\u5ea6\u5bf9\u6bd4"},{"location":"archived/mckinsey_standards_compliance_report/#22-gdp","text":"\u6743\u5a01\u673a\u6784 \u6807\u51c6\u8bbe\u5b9a \u672c\u9879\u76ee\u5b9e\u73b0 \u79d1\u5b66\u6027\u8bc4\u4ef7 Damodaran \u540d\u4e49 GDP \u589e\u957f\u4e3a\u4e0a\u9650 min(pg_rate, GDP_cap) \u2705 \u5408\u89c4 McKinsey \u901a\u80c0\u7387 + \u5b9e\u9645\u589e\u957f\u7387\uff08\u540d\u4e49 GDP \u57fa\u51c6\uff09 min(pg_rate, GDP_cap) \u2705 \u5408\u89c4 CFA Institute \u4e0d\u8d85\u8fc7\u957f\u671f GDP \u589e\u957f\u7387\u7684\u5408\u7406\u4e0a\u9650 min(pg_rate, risk_free_rate) \u26a0\ufe0f \u53ef\u4f18\u5316 \u903b\u8f91\u4e25\u8c28\u6027\u5206\u6790 \uff1a # \u5f53\u524d\u903b\u8f91 (src/core/calculators/dcf/terminal_value_calculator.py) pg_rate_to_use = min(pg_rate_decimal, self.risk_free_rate) # \u95ee\u9898 1\uff1a\u65e0\u98ce\u9669\u5229\u7387\u901a\u5e38\u4e3a 3-4%\uff0c\u800c\u957f\u671f GDP \u589e\u957f\u7387\u4e3a 5-7% # \u95ee\u9898 2\uff1a\u4f18\u8d28\u516c\u53f8\u589e\u957f\u901f\u5ea6\u5e94\u53ef\u80fd\u8d85\u8fc7\u65e0\u98ce\u9669\u5229\u7387 # \u95ee\u9898 3\uff1a\u672a\u8003\u8651\u901a\u80c0\u56e0\u7d20 \u4e13\u4e1a\u5206\u6790 \uff1a \u4ece\u7ecf\u6d4e\u7406\u8bba\u89d2\u5ea6\u5206\u6790\uff0c\u6c38\u7eed\u589e\u957f\u7387\u5e94\u8be5\u53cd\u6620\u516c\u53f8\u957f\u671f\u7a33\u5b9a\u7684\u589e\u957f\u80fd\u529b\u3002\u5c06\u6c38\u7eed\u589e\u957f\u7387\u9650\u5236\u5728\u65e0\u98ce\u9669\u5229\u7387\u4ee5\u4e0b\u5b58\u5728\u903b\u8f91\u7f3a\u9677\uff0c\u56e0\u4e3a\uff1a 1. \u65e0\u98ce\u9669\u5229\u7387\u901a\u5e38\u4e3a 3-4%\uff0c\u800c\u957f\u671f\u540d\u4e49 GDP \u589e\u957f\u7387\u4e3a 6-8% 2. \u4f18\u8d28\u516c\u53f8\u5e94\u8be5\u80fd\u591f\u83b7\u5f97\u8d85\u8fc7\u5e73\u5747\u6c34\u5e73\u7684\u589e\u957f 3. \u8be5\u9650\u5236\u8fdd\u80cc\u4e86\u7ecf\u6d4e\u589e\u957f\u7684\u57fa\u672c\u539f\u7406\u548c\u4f01\u4e1a\u53d1\u5c55\u89c4\u5f8b \u5408\u7406\u6027\u8bc4\u4ef7 \uff1aA- - \u540d\u4e49 GDP \u4e0a\u9650\u4e0e\u9690\u542b PGR \u63d0\u793a\u5df2\u751f\u6548\uff1b\u5efa\u8bae\u5f15\u5165\u201c\u884c\u4e1a cap \u5efa\u8bae\u503c\u201d\u5e76\u5728\u7ed3\u679c\u4e2d\u5e38\u9a7b\u663e\u793a\u3002","title":"2.2 \u6c38\u7eed\u589e\u957f\u7387\u903b\u8f91\u5bf9\u6bd4\uff08\u540d\u4e49 GDP \u4e0a\u9650\uff09"},{"location":"archived/mckinsey_standards_compliance_report/#23-ufcf","text":"McKinsey \u6807\u51c6\u516c\u5f0f \uff1a UFCF = EBIT \u00d7 (1-\u7a0e\u7387) + \u6298\u65e7\u644a\u9500 - \u8d44\u672c\u652f\u51fa - \u51c0\u8425\u8fd0\u8d44\u672c\u53d8\u52a8 \u672c\u9879\u76ee\u5b9e\u73b0 \uff1a # fcf_calculator.py \u4e2d\u5b8c\u5168\u7b26\u5408\u6807\u51c6\u516c\u5f0f ufcf = ebit * (1 - tax_rate) + depreciation_amortization - capital_expenditures - change_in_nwc \u4e25\u8c28\u6027\u8bc4\u4ef7 \uff1aA+ - \u5b8c\u5168\u7b26\u5408 \uff1a\u516c\u5f0f\u5b9e\u73b0\u7cbe\u786e\u65e0\u8bef - \u6280\u672f\u4f18\u52bf \uff1a\u4f7f\u7528 Decimal \u786e\u4fdd\u8ba1\u7b97\u7cbe\u5ea6 - \u9a8c\u8bc1\u5b8c\u5907 \uff1a\u5305\u542b\u5b8c\u6574\u7684\u8f93\u5165\u9a8c\u8bc1","title":"2.3 UFCF \u8ba1\u7b97\u516c\u5f0f\u5bf9\u6bd4"},{"location":"archived/mckinsey_standards_compliance_report/#3","text":"","title":"3. \u6570\u636e\u6a21\u578b\u4e0e\u53c2\u6570\u8bbe\u8ba1\u5408\u89c4\u6027"},{"location":"archived/mckinsey_standards_compliance_report/#31","text":"\u8bc4\u4f30\u7ed3\u679c \uff1aA- - \u6a21\u578b\u8bbe\u8ba1\u4f18\u79c0 \uff1aPydantic \u6a21\u578b\u7ed3\u6784\u5b8c\u6574\uff0c\u53c2\u6570\u8986\u76d6\u5168\u9762 - \u9a8c\u8bc1\u673a\u5236\u5b8c\u5584 \uff1a\u5305\u542b\u5b8c\u6574\u7684\u7ea6\u675f\u6761\u4ef6\u548c\u9a8c\u8bc1\u903b\u8f91 - \u6269\u5c55\u6027\u826f\u597d \uff1a\u652f\u6301\u591a\u79cd\u4f30\u503c\u6a21\u5f0f\u548c\u53c2\u6570\u914d\u7f6e \u6838\u5fc3\u6a21\u578b\u5206\u6790 \uff1a StockValuationRequest \uff08\u7b2c 14-160 \u884c\uff09 \u57fa\u7840\u53c2\u6570\uff1a\u80a1\u7968\u4ee3\u7801\u3001\u5e02\u573a\u3001\u4f30\u503c\u65e5\u671f DCF \u6838\u5fc3\u5047\u8bbe\uff1a\u9884\u6d4b\u671f\u3001\u589e\u957f\u7387\u3001\u5229\u6da6\u7387\u9884\u6d4b WACC \u53c2\u6570\uff1a\u6743\u91cd\u6a21\u5f0f\u3001CAPM \u53c2\u6570 \u7ec8\u503c\u53c2\u6570\uff1a\u8ba1\u7b97\u65b9\u6cd5\u3001\u9000\u51fa\u4e58\u6570\u3001\u6c38\u7eed\u589e\u957f\u7387 DcfForecastDetails \uff08\u7b2c 216-241 \u884c\uff09 \u6838\u5fc3\u8f93\u51fa\uff1a\u4f01\u4e1a\u4ef7\u503c\u3001\u80a1\u6743\u4ef7\u503c\u3001\u6bcf\u80a1\u4ef7\u503c \u8ba1\u7b97\u7ec6\u8282\uff1aWACC\u3001\u7ec8\u503c\u65b9\u6cd5\u3001\u9690\u542b\u589e\u957f\u7387 \u5206\u6790\u6307\u6807\uff1aEV/EBITDA\u3001DCF \u9690\u542b PE","title":"3.1 \u6570\u636e\u6a21\u578b\u5b8c\u6574\u6027"},{"location":"archived/mckinsey_standards_compliance_report/#32","text":"\u7b26\u5408 McKinsey \u6807\u51c6\u7684\u53c2\u6570 \uff1a # \u9884\u6d4b\u671f\u8bbe\u7f6e forecast_years: int = Field(default=5, ge=1, le=20) # \u2705 \u5408\u7406 # \u503a\u52a1\u6bd4\u4f8b\u7ea6\u675f target_debt_ratio: Optional[float] = Field(None, ge=0, le=1) # \u2705 \u5408\u7406 # WACC \u6743\u91cd\u6a21\u5f0f wacc_weight_mode: Optional[str] = Field(\"target\", pattern=\"^(target|market)$\") # \u2705 \u5b8c\u6574 \u8fd1\u671f\u8865\u5168\u8981\u70b9 \uff1a - \u6c38\u7eed\u589e\u957f\u7387\uff1a\u5df2\u7531\u670d\u52a1\u5c42\u4e0e\u8ba1\u7b97\u5668\u5171\u540c\u91c7\u7528\u540d\u4e49 GDP \u4e0a\u9650\uff08\u8bf7\u6c42/ENV\uff09\uff1bExit Multiple \u8def\u5f84\u63d0\u4f9b\u9690\u542b PGR \u6821\u9a8c - \u884c\u4e1a\u9884\u8bbe\uff1aGICS 11 + \u767d\u9152\u53d8\u4f53\u63d0\u4f9b \u03b2/\u9884\u6d4b\u671f/PGR cap/\u4e58\u6570/\u5468\u8f6c\u533a\u95f4\uff1bAPI debug \u8fd4\u56de applied_preset \u4e0e applied_preset_diff - as-of \u4e0e\u80a1\u606f\uff1a\u4ef7\u683c/EPS as-of \u4e00\u81f4\uff1b\u80a1\u606f\u652f\u6301 TTM\u2192TTM\u00b7\u9884\u6848\u2192\u5e74\u5ea6\u56de\u9000\u94fe\uff0cUI \u6807\u7b7e\u5c55\u793a\u6765\u6e90","title":"3.2 \u53c2\u6570\u8bbe\u7f6e\u5408\u7406\u6027"},{"location":"archived/mckinsey_standards_compliance_report/#4","text":"","title":"4. \u7b97\u6cd5\u5b9e\u73b0\u4e0e\u6570\u503c\u7a33\u5b9a\u6027"},{"location":"archived/mckinsey_standards_compliance_report/#41","text":"\u4f18\u52bf \uff1a - \u8ba1\u7b97\u590d\u6742\u5ea6\u5408\u7406 \uff1a\u5404\u8ba1\u7b97\u5668\u590d\u6742\u5ea6\u9002\u4e2d - \u5185\u5b58\u4f7f\u7528\u4f18\u5316 \uff1a\u4f7f\u7528 Decimal \u7c7b\u578b\u786e\u4fdd\u7cbe\u5ea6 - \u5f02\u5e38\u5904\u7406\u5b8c\u5584 \uff1a\u5bf9\u8fb9\u754c\u6761\u4ef6\u6709\u8f83\u597d\u5904\u7406 \u95ee\u9898\u53d1\u73b0 \uff1a # \u6570\u503c\u7cbe\u5ea6\u95ee\u9898 (Decimal(\"1\") / one_plus_wacc) ** int(year) # \u5e42\u8fd0\u7b97\u53ef\u80fd\u5bfc\u81f4\u7cbe\u5ea6\u635f\u5931 # \u7b97\u6cd5\u6548\u7387\u95ee\u9898 pd.to_numeric(forecast_df[\"nopat\"], errors=\"coerce\").fillna(0).apply(Decimal) # \u91cd\u590d\u7c7b\u578b\u8f6c\u6362","title":"4.1 \u7b97\u6cd5\u6548\u7387\u8bc4\u4f30"},{"location":"archived/mckinsey_standards_compliance_report/#42","text":"\u7a33\u5b9a\u6027\u8bc4\u4ef7 \uff1aB+ - \u7cbe\u5ea6\u63a7\u5236 \uff1a\u4f7f\u7528 Decimal \u786e\u4fdd\u9ad8\u7cbe\u5ea6\u8ba1\u7b97 - \u5f02\u5e38\u5904\u7406 \uff1a\u5bf9\u9664\u96f6\u3001\u6ea2\u51fa\u7b49\u5f02\u5e38\u60c5\u51b5\u6709\u5904\u7406 - \u8fb9\u754c\u6761\u4ef6 \uff1a\u5bf9\u8f93\u5165\u53c2\u6570\u8fdb\u884c\u8303\u56f4\u9a8c\u8bc1 \u6539\u8fdb\u5efa\u8bae \uff1a # \u5efa\u8bae\u7684\u5b89\u5168\u9664\u6cd5\u51fd\u6570 def safe_divide(numerator, denominator, default=Decimal(\"0\")): \"\"\"\u5b89\u5168\u9664\u6cd5\uff0c\u907f\u514d\u9664\u96f6\u548c\u6570\u503c\u6ea2\u51fa\"\"\" if abs(denominator) < Decimal(\"1e-10\"): return default try: result = numerator / denominator if result.is_nan() or result.is_infinite(): return default return result except: return default","title":"4.2 \u6570\u503c\u7a33\u5b9a\u6027\u5206\u6790"},{"location":"archived/mckinsey_standards_compliance_report/#5","text":"","title":"5. \u884c\u4e1a\u6700\u4f73\u5b9e\u8df5\u7b26\u5408\u5ea6"},{"location":"archived/mckinsey_standards_compliance_report/#51","text":"\u8d85\u8d8a\u884c\u4e1a\u6c34\u5e73\u7684\u5b9e\u73b0 \uff1a 1. \u6a21\u5757\u5316\u8bbe\u8ba1 \uff1a6 \u4e2a\u4e13\u4e1a\u5316\u8ba1\u7b97\u5668\uff0c\u804c\u8d23\u5206\u79bb\u6e05\u6670 2. \u7c7b\u578b\u5b89\u5168 \uff1a\u4f7f\u7528 Decimal \u7c7b\u578b\u786e\u4fdd\u91d1\u878d\u8ba1\u7b97\u7cbe\u5ea6 3. \u5f02\u6b65\u652f\u6301 \uff1aFastAPI + asyncpg \u5b9e\u73b0\u9ad8\u6027\u80fd API \u670d\u52a1 4. \u914d\u7f6e\u9a71\u52a8 \uff1a\u652f\u6301\u73af\u5883\u53d8\u91cf\u914d\u7f6e\uff0c\u7075\u6d3b\u8c03\u6574\u53c2\u6570","title":"5.1 \u6280\u672f\u67b6\u6784\u4f18\u52bf"},{"location":"archived/mckinsey_standards_compliance_report/#52","text":"\u5173\u952e\u95ee\u9898 \uff1a 1. \u7f3a\u4e4f\u884c\u4e1a\u5dee\u5f02\u5316\u53c2\u6570 - \u6240\u6709\u884c\u4e1a\u4f7f\u7528\u76f8\u540c\u53c2\u6570\u9ed8\u8ba4\u503c - \u7f3a\u4e4f\u884c\u4e1a\u57fa\u51c6\u6570\u636e\u5e93 \u9884\u6d4b\u671f\u7f3a\u4e4f\u7075\u6d3b\u6027 \u56fa\u5b9a 5 \u5e74\u9884\u6d4b\u671f \u672a\u8003\u8651\u884c\u4e1a\u7279\u6027 \u654f\u611f\u6027\u5206\u6790\u6df1\u5ea6\u4e0d\u8db3 \u4ec5\u652f\u6301\u57fa\u7840\u654f\u611f\u6027\u5206\u6790 \u7f3a\u4e4f\u8499\u7279\u5361\u6d1b\u6a21\u62df\u548c\u60c5\u666f\u5206\u6790","title":"5.2 \u884c\u4e1a\u9002\u5e94\u6027\u4e0d\u8db3"},{"location":"archived/mckinsey_standards_compliance_report/#_3","text":"","title":"\ud83d\udea8 \u5173\u952e\u95ee\u9898\u8bc6\u522b"},{"location":"archived/mckinsey_standards_compliance_report/#_4","text":"","title":"\u9ad8\u4f18\u5148\u7ea7\u95ee\u9898\uff08\u5fc5\u987b\u4fee\u590d\uff09"},{"location":"archived/mckinsey_standards_compliance_report/#1-capm","text":"\u4f4d\u7f6e \uff1a src/core/calculators/dcf/wacc_calculator.py \u5f71\u54cd \uff1a\u7cfb\u7edf\u6027\u4f4e\u4f30\u80a1\u6743\u6210\u672c\uff0c\u5f71\u54cd\u6240\u6709\u4f30\u503c\u7ed3\u679c \u4fee\u590d\u5efa\u8bae \uff1a def enhanced_capm_calculation(self, beta, market_risk_premium, country_risk_premium, industry_risk_premium): \"\"\" \u589e\u5f3a\u578b CAPM \u8ba1\u7b97\uff0c\u7b26\u5408 McKinsey \u6807\u51c6 \"\"\" # \u57fa\u7840 CAPM cost_of_equity = self.risk_free_rate + beta * market_risk_premium # \u56fd\u5bb6\u98ce\u9669\u8c03\u6574\uff08\u5bf9\u65b0\u5174\u5e02\u573a\u5173\u952e\uff09 if self.is_emerging_market: cost_of_equity += beta * country_risk_premium # \u884c\u4e1a\u98ce\u9669\u8c03\u6574 cost_of_equity += industry_risk_premium return cost_of_equity","title":"1. CAPM \u6a21\u578b\u7f3a\u9677"},{"location":"archived/mckinsey_standards_compliance_report/#2_1","text":"\u4f4d\u7f6e \uff1a src/core/calculators/dcf/terminal_value_calculator.py \u5f71\u54cd \uff1a\u7cfb\u7edf\u6027\u4f4e\u4f30\u516c\u53f8\u7ec8\u503c 20%-30% \u4fee\u590d\u5efa\u8bae \uff1a def validate_perpetual_growth_rate(self, pg_rate, country_gdp_growth, inflation_rate): \"\"\" \u57fa\u4e8e\u7ecf\u6d4e\u57fa\u672c\u9762\u7684\u6c38\u7eed\u589e\u957f\u7387\u9a8c\u8bc1 \u7b26\u5408 Damodaran \u548c McKinsey \u6807\u51c6 \"\"\" # \u957f\u671f\u540d\u4e49 GDP \u589e\u957f\u7387 nominal_gdp_growth = country_gdp_growth + inflation_rate # \u5408\u7406\u8303\u56f4\uff1aGDP \u589e\u957f\u7387\u81f3 GDP+2% reasonable_max = nominal_gdp_growth + 0.02 reasonable_min = nominal_gdp_growth - 0.01 # \u9a8c\u8bc1\u8303\u56f4 if pg_rate > reasonable_max: return reasonable_max elif pg_rate < reasonable_min: return reasonable_min return pg_rate","title":"2. \u6c38\u7eed\u589e\u957f\u7387\u903b\u8f91\u91cd\u6784"},{"location":"archived/mckinsey_standards_compliance_report/#3_1","text":"\u4f4d\u7f6e \uff1a src/core/calculators/dcf/present_value_calculator.py \u5f71\u54cd \uff1a\u7cfb\u7edf\u6027\u4f4e\u4f30\u4f01\u4e1a\u4ef7\u503c\u7ea6 WACC/2 \u4fee\u590d\u5efa\u8bae \uff1a def calculate_discount_factors(self, wacc, years, mid_year_convention=True): \"\"\" \u652f\u6301 McKinsey \u63a8\u8350\u7684\u5e74\u4e2d\u6298\u73b0\u60ef\u4f8b \"\"\" wacc_decimal = Decimal(str(wacc)) one_plus_wacc = Decimal(\"1\") + wacc_decimal factors = [] for year in years: if mid_year_convention: # \u5e74\u4e2d\u6298\u73b0\uff1a\u5047\u8bbe\u73b0\u91d1\u6d41\u5728\u5e74\u4e2d\u53d1\u751f factor = (Decimal(\"1\") / one_plus_wacc) ** (year - 0.5) else: # \u5e74\u672b\u6298\u73b0 factor = (Decimal(\"1\") / one_plus_wacc) ** year factors.append(factor) return factors","title":"3. \u6298\u73b0\u65f6\u70b9\u4f18\u5316"},{"location":"archived/mckinsey_standards_compliance_report/#_5","text":"","title":"\u4e2d\u4f18\u5148\u7ea7\u95ee\u9898\uff08\u5efa\u8bae\u4fee\u590d\uff09"},{"location":"archived/mckinsey_standards_compliance_report/#1","text":"class IndustryBenchmarks: \"\"\"McKinsey \u6807\u51c6\u884c\u4e1a\u4f30\u503c\u57fa\u51c6\u6570\u636e\u5e93\"\"\" DATA = { 'Technology': { 'beta': 1.2, 'forecast_period': 10, 'perpetual_growth': 0.06, 'exit_multiple': 12.5, 'revenue_growth': 0.15, 'operating_margin': 0.25 }, 'Consumer': { 'beta': 0.9, 'forecast_period': 7, 'perpetual_growth': 0.04, 'exit_multiple': 9.8, 'revenue_growth': 0.08, 'operating_margin': 0.18 }, 'Healthcare': { 'beta': 0.8, 'forecast_period': 10, 'perpetual_growth': 0.05, 'exit_multiple': 11.2, 'revenue_growth': 0.12, 'operating_margin': 0.22 }, 'Financial': { 'beta': 1.1, 'forecast_period': 5, 'perpetual_growth': 0.03, 'exit_multiple': 8.5, 'revenue_growth': 0.06, 'operating_margin': 0.20 } }","title":"1. \u884c\u4e1a\u57fa\u51c6\u6570\u636e\u5e93\u5efa\u8bbe"},{"location":"archived/mckinsey_standards_compliance_report/#2_2","text":"def calculate_comprehensive_debt_value(self): \"\"\" \u5b8c\u6574\u7684\u503a\u52a1\u4ef7\u503c\u8ba1\u7b97\uff0c\u7b26\u5408 IFRS 16 \u6807\u51c6 \"\"\" # \u4f20\u7edf\u6709\u606f\u8d1f\u503a traditional_debt = ( self.lt_borr + self.st_borr + self.bond_payable + self.non_cur_liab_due_1y ) # \u7ecf\u8425\u79df\u8d41\u8d44\u672c\u5316\uff08IFRS 16 \u8981\u6c42\uff09 operating_lease_value = self.capitalize_operating_leases() # \u5176\u4ed6\u503a\u52a1\u5de5\u5177 preferred_stock = self.get_preferred_stock_value() convertible_debt = self.get_convertible_debt_value() return traditional_debt + operating_lease_value + preferred_stock + convertible_debt","title":"2. \u8d44\u672c\u7ed3\u6784\u8ba1\u7b97\u5b8c\u5584"},{"location":"archived/mckinsey_standards_compliance_report/#_6","text":"","title":"\ud83d\udcc8 \u603b\u4f53\u8bc4\u4ef7\u4e0e\u5efa\u8bae"},{"location":"archived/mckinsey_standards_compliance_report/#_7","text":"\u8bc4\u4f30\u7ef4\u5ea6 \u5f97\u5206 \u7b49\u7ea7 \u8bf4\u660e \u4e1a\u52a1\u903b\u8f91\u5408\u89c4\u6027 85/100 A- \u6846\u67b6\u5b8c\u6574\uff0c\u5173\u952e\u53e3\u5f84\u4e0e\u6298\u73b0\u60ef\u4f8b\u5df2\u8865\u9f50 \u6570\u636e\u6a21\u578b\u8bbe\u8ba1 87/100 A- \u7ed3\u6784\u5b8c\u6574\uff0c\u53c2\u6570\u8986\u76d6\u5168\u9762\uff0c\u8c03\u8bd5\u53ef\u89c6\u5316\u589e\u5f3a \u516c\u5f0f\u8ba1\u7b97\u51c6\u786e\u6027 85/100 A- \u6838\u5fc3\u516c\u5f0f\u6b63\u786e\uff0cCAPM/\u6298\u73b0/\u0394NWC \u7ec6\u8282\u5df2\u4f18\u5316 \u7b97\u6cd5\u5b9e\u73b0\u8d28\u91cf 84/100 B+ \u4ee3\u7801\u8d28\u91cf\u9ad8\uff0c\u6570\u503c\u7a33\u5b9a\u6027\u826f\u597d McKinsey \u6807\u51c6\u7b26\u5408\u5ea6 90/100 A- \u4e3b\u8981\u7f3a\u53e3\uff1a\u8d44\u672c\u7ed3\u6784\u6269\u5c55\uff08\u79df\u8d41/\u4f18\u5148\u80a1/\u53ef\u8f6c\u503a\uff09\u3001\u884c\u4e1a\u5e93\u7ec6\u5316 \u7efc\u5408\u8bc4\u5206 85/100 A- \u5177\u5907\u4f01\u4e1a\u7ea7\u96cf\u5f62\uff0c\u90e8\u5206\u9ad8\u7ea7\u80fd\u529b\u5728\u8def\u4e0a","title":"\u9879\u76ee\u8bc4\u5206"},{"location":"archived/mckinsey_standards_compliance_report/#_8","text":"\u6280\u672f\u67b6\u6784\u5353\u8d8a \uff1a\u6a21\u5757\u5316\u8bbe\u8ba1\u8d85\u8d8a\u5927\u591a\u6570\u5f00\u6e90\u9879\u76ee \u7406\u8bba\u57fa\u7840\u624e\u5b9e \uff1aDCF \u6838\u5fc3\u903b\u8f91\u7b26\u5408 McKinsey \u6807\u51c6 \u4ee3\u7801\u8d28\u91cf\u9ad8 \uff1a\u5b9e\u73b0\u4e25\u8c28\uff0c\u5f02\u5e38\u5904\u7406\u5b8c\u5584 \u6269\u5c55\u6027\u597d \uff1a\u63d2\u4ef6\u5f0f\u67b6\u6784\u4fbf\u4e8e\u529f\u80fd\u6269\u5c55","title":"\u6838\u5fc3\u4f18\u52bf"},{"location":"archived/mckinsey_standards_compliance_report/#_9","text":"\u7ec8\u503c\u6cbb\u7406 \uff1aPGR \u5df2\u63a5\u5165\u540d\u4e49 GDP \u4e0a\u9650\u4e0e\u9690\u542b PGR \u63d0\u793a\uff1b\u5efa\u8bae\u5e38\u9a7b\u6307\u6807\u5361\u7247 \u884c\u4e1a\u9002\u5e94\u6027\u4e0d\u8db3 \uff1a\u7f3a\u4e4f\u884c\u4e1a\u5dee\u5f02\u5316\u53c2\u6570\u4e0e\u4e58\u6570\u533a\u95f4 \u60c5\u666f/\u5206\u5e03\u5206\u6790\u7f3a\u5931 \uff1a\u5c1a\u672a\u63d0\u4f9b\u8499\u7279\u5361\u6d1b\u4e0e\u4e09\u60c5\u666f\u8054\u52a8 \u7ed3\u679c\u6458\u8981\u4fe1\u606f\u5bc6\u5ea6 \uff1a\u5173\u952e\u5047\u8bbe\u6458\u8981\u5361\u7247\u4e0e\u0394NWC\u6784\u6210\u5f85\u5e38\u9a7b\u5316","title":"\u5173\u952e\u4e0d\u8db3\uff08\u66f4\u65b0\uff09"},{"location":"archived/mckinsey_standards_compliance_report/#_10","text":"","title":"\u6539\u8fdb\u8def\u7ebf\u56fe"},{"location":"archived/mckinsey_standards_compliance_report/#1-2","text":"[x] \u589e\u5f3a\u578b CAPM\uff08CRP/IRP\uff09 [x] \u5e74\u4e2d\u6298\u73b0\u60ef\u4f8b\uff08Mid-Year\uff09 [x] NWC \u57fa\u51c6\u53e3\u5f84 component + \u65e5\u6570\u8fc7\u6e21\uff0c\u6d88\u9664\u9996\u5e74\u8df3\u53d8 [x] COGS \u53cc\u6a21\u5f0f\u5f00\u5173 [ ] \u5efa\u7acb\u57fa\u7840\u884c\u4e1a\u57fa\u51c6\u6570\u636e\u5e93","title":"\u7b2c\u4e00\u9636\u6bb5\uff081-2 \u4e2a\u6708\uff09\uff1a\u5173\u952e\u95ee\u9898\u4fee\u590d"},{"location":"archived/mckinsey_standards_compliance_report/#2-3","text":"[ ] \u5b8c\u5584\u8d44\u672c\u7ed3\u6784\u8ba1\u7b97\uff0c\u7b26\u5408 IFRS 16 \u6807\u51c6 [ ] \u5b9e\u73b0\u9884\u6d4b\u671f\u884c\u4e1a\u5dee\u5f02\u5316\u914d\u7f6e [ ] \u589e\u52a0\u884c\u4e1a\u751f\u547d\u5468\u671f\u8003\u91cf [ ] \u4f18\u5316\u7b97\u6cd5\u6548\u7387\u548c\u6570\u503c\u7a33\u5b9a\u6027","title":"\u7b2c\u4e8c\u9636\u6bb5\uff082-3 \u4e2a\u6708\uff09\uff1a\u884c\u4e1a\u9002\u5e94\u6027\u589e\u5f3a"},{"location":"archived/mckinsey_standards_compliance_report/#3-4","text":"[ ] \u6574\u5408\u6743\u5a01\u6570\u636e\u6e90\u548c\u57fa\u51c6\u6570\u636e [ ] \u589e\u52a0\u8499\u7279\u5361\u6d1b\u6a21\u62df\u548c\u60c5\u666f\u5206\u6790 [ ] \u5b8c\u5584\u6587\u6863\u548c\u8ba4\u8bc1\u6750\u6599 [ ] \u6027\u80fd\u4f18\u5316\u548c\u5927\u89c4\u6a21\u6d4b\u8bd5","title":"\u7b2c\u4e09\u9636\u6bb5\uff083-4 \u4e2a\u6708\uff09\uff1a\u6743\u5a01\u6027\u63d0\u5347"},{"location":"archived/mckinsey_standards_compliance_report/#_11","text":"stock_vale_valuation_3.0 \u9879\u76ee\u5728 DCF \u4f30\u503c\u5b9e\u73b0\u4e0a\u5c55\u73b0\u4e86 \u8f83\u9ad8\u7684\u4e13\u4e1a\u6c34\u51c6 \uff0c\u6280\u672f\u67b6\u6784\u548c\u6838\u5fc3\u8ba1\u7b97\u903b\u8f91\u90fd\u8fbe\u5230\u4e86 McKinsey \u6807\u51c6\u7684\u57fa\u672c\u8981\u6c42\u3002\u9879\u76ee\u5177\u5907\u6210\u4e3a \u4f01\u4e1a\u7ea7\u4f30\u503c\u5e73\u53f0 \u7684\u6f5c\u529b\uff0c\u4f46\u9700\u8981\u5728\u4ee5\u4e0b\u5173\u952e\u65b9\u9762\u8fdb\u884c\u6539\u8fdb\uff1a \u79d1\u5b66\u6027\u63d0\u5347 \uff1a\u4fee\u590d CAPM \u548c\u6c38\u7eed\u589e\u957f\u7387\u7684\u5173\u952e\u7f3a\u9677 \u884c\u4e1a\u9002\u5e94\u6027 \uff1a\u589e\u52a0\u884c\u4e1a\u5dee\u5f02\u5316\u5904\u7406\u548c\u57fa\u51c6\u6570\u636e \u6743\u5a01\u6027\u5efa\u8bbe \uff1a\u6574\u5408\u6743\u5a01\u6570\u636e\u6e90\u548c\u6700\u4f73\u5b9e\u8df5 \u901a\u8fc7\u5b9e\u65bd\u4e0a\u8ff0\u6539\u8fdb\u5efa\u8bae\uff0c\u9879\u76ee\u53ef\u4ee5\u8fbe\u5230 A\u7ea7\u4e13\u4e1a\u6c34\u51c6 \uff0885\u5206\u4ee5\u4e0a\uff09\uff0c\u6210\u4e3a\u771f\u6b63\u610f\u4e49\u4e0a\u7684\u4f01\u4e1a\u7ea7\u4f30\u503c\u5e73\u53f0\u3002\u9879\u76ee\u5df2\u7ecf\u5177\u5907\u4e86\u624e\u5b9e\u7684\u57fa\u7840\uff0c\u5f00\u53d1\u56e2\u961f\u5c55\u73b0\u4e86\u5728\u91d1\u878d\u5de5\u7a0b\u548c\u8f6f\u4ef6\u67b6\u6784\u65b9\u9762\u7684\u6df1\u539a\u529f\u5e95\uff0c\u662f\u4e00\u4e2a\u5177\u6709\u5f88\u9ad8\u4ef7\u503c\u7684\u91d1\u878d\u79d1\u6280\u57fa\u7840\u6846\u67b6\u3002 \u6700\u7ec8\u8bc4\u4ef7 \uff1a\u8fd9\u662f\u4e00\u4e2a \u4f18\u79c0\u7684\u91d1\u878d\u79d1\u6280\u57fa\u7840\u6846\u67b6 \uff0c\u5728\u5173\u952e\u7ec6\u8282\u4e0a\u8fdb\u884c\u4f18\u5316\u540e\uff0c\u5b8c\u5168\u53ef\u4ee5\u8fbe\u5230\u56fd\u9645\u9876\u5c16\u6c34\u5e73\u3002","title":"\ud83c\udfaf \u7ed3\u8bba"},{"location":"archived/mckinsey_standards_compliance_report/#_12","text":"-- \u9884\u6d4b\u5f15\u64ce\uff1a src/core/financial/forecaster.py - \u6536\u5165\uff1a\u5386\u53f2 CAGR + \u5e74\u5ea6\u8870\u51cf - \u5229\u6da6\uff1a historical_median \u4e0e transition_to_target \u53cc\u6a21\u5f0f - NWC\uff1a\u652f\u6301 nwc_baseline_mode \uff08component \u9ed8\u8ba4\uff09\uff1bDSO/DIO/DPO \u4ece last_days \u2192 median \u7ebf\u6027\u8fc7\u6e21\uff1b\u907f\u514d\u9996\u5e74\u8df3\u53d8 - DCF\uff1a - \u73b0\u503c\uff1a src/core/calculators/dcf/present_value_calculator.py \uff08\u5e74\u672b/\u5e74\u4e2d\u6298\u73b0\u5f00\u5173\uff09 - \u7ec8\u503c\uff1a src/core/calculators/dcf/terminal_value_calculator.py \uff08\u9000\u51fa\u4e58\u6570/\u6c38\u7eed\u589e\u957f\uff1bPGR \u2264 GDP_cap\uff09 - WACC\uff1a src/core/calculators/dcf/wacc_calculator.py \uff08Ke = Rf + \u03b2\u00d7(MRP+CRP) + Size + IRP\uff1b\u76ee\u6807/\u5e02\u573a\u6743\u91cd\uff09 - \u80a1\u6743\u6865\uff1a src/core/calculators/equity_bridge_calculator.py \uff08EV\u2212Net Debt\u2212\u5c11\u6570\u80a1\u4e1c\u6743\u76ca\u2212\u4f18\u5148\u80a1 \u2192 Equity \u2192 \u6bcf\u80a1\uff09 - COGS \u6a21\u5f0f\uff1a cogs_forecast_mode= residual|direct_ratio \uff08\u524d\u7aef\u53ef\u9009\uff09 - \u57fa\u671f\u4e0e\u6eda\u52a8\uff1aAPI ltm_baseline_enabled \uff08\u9ed8\u8ba4\u5173\u95ed\uff09\u652f\u6301 LTM/Interim \u57fa\u671f\uff1bFetcher \u6309\u4f30\u503c\u65e5\u6eda\u52a8\u83b7\u53d6\u6700\u65b0\u8d44\u4ea7\u8d1f\u503a\u8868\uff1bProcessor \u57fa\u4e8e\u8be5\u884c\u91cd\u7b97 last_component_nwc \u3002","title":"\ud83d\udd27 \u4ee3\u7801\u53c2\u8003\u4e0e\u5f53\u524d\u5b9e\u73b0\u6458\u8981\uff08\u4e0e\u5408\u89c4\u6027\u6620\u5c04\uff09"},{"location":"archived/mckinsey_standards_compliance_report/#_13","text":"WACC/Ke\uff1a\u5df2\u652f\u6301 CRP/IRP\uff08ENV+UI+API\uff09 \u6c38\u7eed\u589e\u957f\uff1a\u5df2\u63a5\u5165\u540d\u4e49 GDP \u4e0a\u9650\uff1b\u9690\u542b PGR \u63d0\u793a\u5df2\u52a0\u5165\uff08\u5efa\u8bae\u5728 UI \u5e38\u9a7b\uff09 \u6298\u73b0\u65f6\u70b9\uff1a\u5df2\u652f\u6301\u5e74\u4e2d\u6298\u73b0\u5f00\u5173\uff08UI \u53ef\u63a7\uff09 \u9884\u6d4b\u671f\uff1aUI \u9ed8\u8ba4 5 \u5e74\uff1b\u540e\u7eed\u589e\u52a0\u884c\u4e1a\u9884\u8bbe\uff08\u5f85\u505a\uff09 NWC\uff1a\u65b0\u589e nwc_baseline_mode \u4e0e\u65e5\u6570\u5e73\u6ed1\uff1b\u8c03\u8bd5\u9762\u677f\u5c55\u793a\u9996\u5e74 \u0394NWC \u6784\u6210\u4e0e\u57fa\u671f\uff08\u8ba1\u5212\u5728\u7ed3\u679c\u6458\u8981\u5e38\u9a7b\uff09","title":"\ud83e\udde9 \u914d\u7f6e\u4e0e\u4f18\u5316\u5efa\u8bae\uff08\u9488\u5bf9\u672c\u9879\u76ee\u843d\u5730\uff09"},{"location":"archived/mckinsey_standards_compliance_report/#_14","text":"\u4e2d\u6587\u672f\u8bed \u82f1\u6587\u672f\u8bed McKinsey \u6807\u51c6\u5b9a\u4e49 \u6298\u73b0\u73b0\u91d1\u6d41\u4f30\u503c Discounted Cash Flow (DCF) \u901a\u8fc7\u9884\u6d4b\u516c\u53f8\u672a\u6765\u81ea\u7531\u73b0\u91d1\u6d41\u5e76\u6298\u73b0\u5230\u5f53\u524d\u65f6\u70b9\u786e\u5b9a\u516c\u53f8\u5185\u5728\u4ef7\u503c\u7684\u7edd\u5bf9\u4f30\u503c\u65b9\u6cd5 \u4f01\u4e1a\u4ef7\u503c Enterprise Value (EV) \u516c\u53f8\u6574\u4f53\u4ef7\u503c\uff0c\u5305\u62ec\u80a1\u6743\u4ef7\u503c\u548c\u503a\u52a1\u4ef7\u503c\uff0c\u51cf\u53bb\u73b0\u91d1\u53ca\u73b0\u91d1\u7b49\u4ef7\u7269 \u80a1\u6743\u4ef7\u503c Equity Value \u4f01\u4e1a\u4ef7\u503c\u51cf\u53bb\u51c0\u503a\u52a1\u540e\u7684\u4ef7\u503c\uff0c\u4ee3\u8868\u80a1\u4e1c\u6743\u76ca\u7684\u4ef7\u503c \u52a0\u6743\u5e73\u5747\u8d44\u672c\u6210\u672c Weighted Average Cost of Capital (WACC) \u516c\u53f8\u5404\u79cd\u878d\u8d44\u6210\u672c\u7684\u52a0\u6743\u5e73\u5747\u503c \u65e0\u6760\u6746\u81ea\u7531\u73b0\u91d1\u6d41 Unlevered Free Cash Flow (UFCF) \u516c\u53f8\u5728\u652f\u4ed8\u503a\u52a1\u5229\u606f\u524d\u7684\u81ea\u7531\u73b0\u91d1\u6d41\uff0c\u53cd\u6620\u516c\u53f8\u6838\u5fc3\u7ecf\u8425\u6d3b\u52a8\u4ea7\u751f\u7684\u73b0\u91d1\u80fd\u529b \u6c38\u7eed\u589e\u957f\u7387 Perpetual Growth Rate \u516c\u53f8\u5728\u7ec8\u503c\u9636\u6bb5\u7684\u957f\u671f\u7a33\u5b9a\u589e\u957f\u7387\uff0c\u7406\u8bba\u4e0a\u4e0d\u5e94\u8d85\u8fc7\u957f\u671f GDP \u589e\u957f\u7387 \u8d44\u672c\u8d44\u4ea7\u5b9a\u4ef7\u6a21\u578b Capital Asset Pricing Model (CAPM) \u8ba1\u7b97\u80a1\u6743\u6210\u672c\u7684\u6807\u51c6\u6a21\u578b\uff0c\u8003\u8651\u7cfb\u7edf\u6027\u98ce\u9669\u8865\u507f \u56fd\u5bb6\u98ce\u9669\u6ea2\u4ef7 Country Risk Premium (CRP) \u6295\u8d44\u7279\u5b9a\u56fd\u5bb6\u76f8\u6bd4\u53d1\u8fbe\u56fd\u5bb6\u6240\u8981\u6c42\u7684\u989d\u5916\u98ce\u9669\u8865\u507f \u5e74\u4e2d\u6298\u73b0\u60ef\u4f8b Mid-Year Discounting Convention \u5047\u8bbe\u73b0\u91d1\u6d41\u5728\u5e74\u5185\u5747\u5300\u53d1\u751f\u7684\u6298\u73b0\u65b9\u6cd5\uff0c\u6bd4\u5e74\u672b\u6298\u73b0\u66f4\u51c6\u786e \u62a5\u544a\u751f\u6210\u65f6\u95f4 \uff1a2025\u5e749\u670810\u65e5 \u5206\u6790\u57fa\u51c6 \uff1aMcKinsey & Company \u4f30\u503c\u65b9\u6cd5\u8bba\uff08\u7b2c6\u7248\uff09 \u9879\u76ee\u7248\u672c \uff1astock_vale_valuation_3.0","title":"\ud83d\udccb \u4e13\u4e1a\u672f\u8bed\u5bf9\u7167\u8868"}]}