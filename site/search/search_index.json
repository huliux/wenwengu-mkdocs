{"config":{"lang":["en"],"separator":"[\\s\\-]+","pipeline":["stopWordFilter"]},"docs":[{"location":"01_project_overview/index.html","title":"\u9879\u76ee\u6982\u89c8\u6587\u6863","text":"<p>\u672c\u76ee\u5f55\u5305\u542b\u9879\u76ee\u6574\u4f53\u72b6\u6001\u548c\u5206\u6790\u6587\u6863\uff0c\u9002\u5408\u6240\u6709\u56e2\u961f\u6210\u5458\u4e86\u89e3\u9879\u76ee\u5168\u8c8c\u3002</p>"},{"location":"01_project_overview/index.html#_2","title":"\u6587\u6863\u5217\u8868","text":""},{"location":"01_project_overview/index.html#_3","title":"\ud83d\udcca \u9879\u76ee\u72b6\u6001","text":"<ul> <li>project_status_2025_09_latest.md - \u9879\u76ee\u6700\u65b0\u72b6\u6001\u603b\u89c8\uff08\u2b50\u2b50\u2b50\u2b50\u2b50 \u5fc5\u8bfb\uff09</li> <li>\u7cfb\u7edf\u67b6\u6784\u56fe</li> <li>\u529f\u80fd\u6a21\u5757\u6982\u8ff0</li> <li>\u6280\u672f\u6808\u8be6\u60c5</li> <li>\u5df2\u77e5\u95ee\u9898\u548c\u9650\u5236</li> </ul>"},{"location":"01_project_overview/index.html#_4","title":"\ud83d\udcc8 \u9879\u76ee\u5206\u6790","text":"<ul> <li>project_analysis_report.md - \u9879\u76ee\u5168\u9762\u5206\u6790\u62a5\u544a</li> <li>\u6280\u672f\u503a\u52a1\u5206\u6790</li> <li>\u6027\u80fd\u8bc4\u4f30</li> <li>\u6539\u8fdb\u5efa\u8bae</li> </ul>"},{"location":"01_project_overview/index.html#_5","title":"\u9605\u8bfb\u5efa\u8bae","text":""},{"location":"01_project_overview/index.html#_6","title":"\u65b0\u56e2\u961f\u6210\u5458","text":"<ol> <li>\u5148\u8bfb <code>project_status_2025_09_latest.md</code> \u4e86\u89e3\u9879\u76ee\u6574\u4f53\u60c5\u51b5</li> <li>\u518d\u770b <code>project_analysis_report.md</code> \u6df1\u5165\u7406\u89e3\u6280\u672f\u7ec6\u8282</li> </ol>"},{"location":"01_project_overview/index.html#_7","title":"\u9879\u76ee\u51b3\u7b56\u8005","text":"<p>\u91cd\u70b9\u5173\u6ce8\u9879\u76ee\u5206\u6790\u62a5\u544a\u4e2d\u7684\u6539\u8fdb\u5efa\u8bae\u548c\u6280\u672f\u503a\u52a1\u90e8\u5206</p>"},{"location":"01_project_overview/index.html#_8","title":"\u66f4\u65b0\u9891\u7387","text":"<ul> <li>project_status: \u6708\u5ea6\u66f4\u65b0</li> <li>project_analysis_report: \u5b63\u5ea6\u66f4\u65b0</li> </ul>"},{"location":"01_project_overview/project_analysis_report.html","title":"\u80a1\u7968\u4f30\u503c\u7cfb\u7edf\u9879\u76ee\u5206\u6790\u62a5\u544a","text":""},{"location":"01_project_overview/project_analysis_report.html#_2","title":"\u6587\u6863\u4fe1\u606f","text":"<p>\u6587\u6863\u6807\u9898: \u9879\u76ee\u5206\u6790\u62a5\u544a \u521b\u5efa\u65e5\u671f: 2025\u5e741\u6708 \u7248\u672c: v1.0 \u4f5c\u8005: huliux \u5ba1\u6838\u72b6\u6001: \u5f85\u5ba1\u6838</p>"},{"location":"01_project_overview/project_analysis_report.html#_3","title":"\u6574\u7406\u8bf4\u660e","text":"<p>\u672c\u6587\u6863\u5df2\u6574\u5408\u4ee5\u4e0b\u5185\u5bb9\uff1a - \u539frefactor_roadmap.md\u7684\u91cd\u6784\u76ee\u6807\u548c\u5b9e\u65bd\u8def\u5f84 - \u539fimplementation_plan.md\u7684\u6280\u672f\u5b9e\u65bd\u65b9\u6848</p>"},{"location":"01_project_overview/project_analysis_report.html#_4","title":"\u6267\u884c\u6458\u8981","text":""},{"location":"01_project_overview/project_analysis_report.html#_5","title":"\u9879\u76ee\u6982\u51b5","text":"<p>\u9879\u76ee\u540d\u79f0: \u80a1\u7968\u4f30\u503c\u7cfb\u7edf (Stock Valuation System) \u5206\u6790\u65e5\u671f: 2025\u5e749\u6708 \u4ee3\u7801\u89c4\u6a21: \u7ea615,000\u884cPython\u4ee3\u7801 \u6838\u5fc3\u529f\u80fd: DCF\u4f30\u503c\u3001\u654f\u611f\u6027\u5206\u6790\uff08\u6269\u5c55\u8868\u4e0e\u5b88\u62a4\uff09\u3001\u80a1\u7968\u7b5b\u9009\u3001LLM\u5206\u6790 \u6280\u672f\u6808: Python + FastAPI + Streamlit + Tushare + PostgreSQL \u6570\u636e\u67b6\u6784: Tushare (\u4e3b) + PostgreSQL (\u5907) \u6df7\u5408\u67b6\u6784\uff08\u652f\u6301\u6309\u4f30\u503c\u65e5\u56de\u9000\u3001TTM\u80a1\u606f\u591a\u7ea7\u56de\u9000\uff09</p>"},{"location":"01_project_overview/project_analysis_report.html#2025-09","title":"\u5173\u952e\u53d1\u73b0\uff082025-09 \u66f4\u65b0\uff09","text":"<ul> <li>\u2705 \u529f\u80fd\u5b8c\u6574\u6027\uff1a\u6838\u5fc3\u4f30\u503c\u8def\u5f84\u7a33\u5b9a\uff0c\u654f\u611f\u6027\u5206\u6790\u6269\u5c55\u5e76\u66f4\u7a33\u5065\uff08\u65b0\u589e\u8868\u4e0e\u8fb9\u754c\u5b88\u62a4\uff09\u3002</li> <li>\u2705 \u7a33\u5065\u6027\uff1aWACC \u5e02\u573a\u6743\u91cd\u5931\u8d25\u81ea\u52a8\u56de\u9000\u76ee\u6807\u7ed3\u6784\uff1bPGR\u2265WACC \u7ec4\u5408\u8df3\u8fc7\u5e76\u63d0\u793a\uff1bGDP \u4e0a\u9650\u53cc\u5c42\u4fdd\u62a4\u3002</li> <li>\u2705 \u53ef\u89e3\u91ca\u6027\uff1a\u65b0\u589e <code>ev_ebitda_terminal</code>\u3001<code>implied_pgr</code>\uff0c\u5e76\u5bf9 <code>ev_ebitda</code> \u53e3\u5f84\uff08LTM vs Terminal\uff09\u505a\u660e\u786e\u533a\u5206\u3002</li> <li>\u2705 \u6d4b\u8bd5\u8fdb\u5c55\uff1a\u65b0\u589e\u654f\u611f\u6027\u6269\u5c55\u7684\u96c6\u6210\u6d4b\u8bd5\u7528\u4f8b\u5e76\u5168\u90e8\u901a\u8fc7\uff1b\u65e7\u7528\u4f8b\u517c\u5bb9\u3002</li> <li>\u26a0\ufe0f \u67b6\u6784\u590d\u6742\u5ea6\uff1a\u670d\u52a1\u5c42\u7f16\u6392\u903b\u8f91\u589e\u52a0\uff0c\u9700\u5728\u4e0b\u4e00\u6b65\u5c06\u654f\u611f\u6027/\u60c5\u666f\u6846\u67b6\u62bd\u8c61\u4e3a\u72ec\u7acb\u7ec4\u4ef6\uff0c\u964d\u4f4e\u8026\u5408\u3002</li> <li>\ud83c\udd95 \u6570\u636e\u5c42\uff1a\u4f30\u503c\u65e5\u56de\u9000\u3001TTM\u80a1\u606f\u591a\u7ea7\u56de\u9000\u4e0e LTM \u57fa\u671f\u5207\u6362\u903b\u8f91\u843d\u5730\uff0c\u6570\u636e\u53ef\u7528\u6027\u63d0\u5347\u3002</li> </ul>"},{"location":"01_project_overview/project_analysis_report.html#_6","title":"\u91cd\u6784\u5fc5\u8981\u6027\u8bc4\u4f30","text":"<p>\u91cd\u6784\u7d27\u8feb\u6027: \ud83d\udd34 \u9ad8 \u4e1a\u52a1\u5f71\u54cd: \ud83d\udfe1 \u4e2d\u7b49 \u6280\u672f\u503a\u52a1: \ud83d\udd34 \u4e25\u91cd \u7ef4\u62a4\u6210\u672c: \ud83d\udd34 \u9ad8  </p>"},{"location":"01_project_overview/project_analysis_report.html#_7","title":"\u8be6\u7ec6\u5206\u6790\u7ed3\u679c","text":""},{"location":"01_project_overview/project_analysis_report.html#1","title":"1. \u67b6\u6784\u5206\u6790","text":""},{"location":"01_project_overview/project_analysis_report.html#11","title":"1.1 \u6df7\u5408\u67b6\u6784\u6982\u89c8","text":"<pre><code>\u80a1\u7968\u4f30\u503c\u7cfb\u7edf\u6df7\u5408\u67b6\u6784\n\u251c\u2500\u2500 \u524d\u7aef\u5c42 (Streamlit)\n\u2502   \u251c\u2500\u2500 streamlit_app.py (\u4e3b\u5e94\u7528)\n\u2502   \u2514\u2500\u2500 stock_screener_app.py (\u7b5b\u9009\u5668)\n\u251c\u2500\u2500 API\u5c42 (FastAPI)\n\u2502   \u251c\u2500\u2500 api/main.py (API\u5165\u53e3)\n\u2502   \u251c\u2500\u2500 api/models.py (\u6570\u636e\u6a21\u578b)\n\u2502   \u2514\u2500\u2500 api/sensitivity_models.py (\u654f\u611f\u6027\u6a21\u578b)\n\u251c\u2500\u2500 \u4e1a\u52a1\u903b\u8f91\u5c42\n\u2502   \u251c\u2500\u2500 valuation_service.py (\u4f30\u503c\u670d\u52a1\uff1a\u7edf\u4e00\u7f16\u6392\u3001\u56de\u9000\u4e0e\u5b88\u62a4)\n\u2502   \u251c\u2500\u2500 financial_forecaster.py (\u8d22\u52a1\u9884\u6d4b)\n\u2502   \u2514\u2500\u2500 sensitivity_analyzer.py / \u670d\u52a1\u5185\u5b9e\u73b0\uff08\u654f\u611f\u6027\uff1a\u6269\u5c55\u8868\u3001\u8fb9\u754c\u8df3\u8fc7\u3001\u56de\u586b\u903b\u8f91\uff09\n\u251c\u2500\u2500 \u8ba1\u7b97\u5f15\u64ce\u5c42\n\u2502   \u251c\u2500\u2500 wacc_calculator.py (WACC\u8ba1\u7b97)\n\u2502   \u251c\u2500\u2500 present_value_calculator.py (\u73b0\u503c\u8ba1\u7b97)\n\u2502   \u251c\u2500\u2500 terminal_value_calculator.py (\u7ec8\u503c\u8ba1\u7b97)\n\u2502   \u2514\u2500\u2500 equity_bridge_calculator.py (\u6743\u76ca\u6865\u63a5)\n\u2514\u2500\u2500 \u6df7\u5408\u6570\u636e\u5c42\n    \u251c\u2500\u2500 data_source_manager.py (\u6570\u636e\u6e90\u7ba1\u7406)\n    \u251c\u2500\u2500 tushare_data_fetcher.py (Tushare\u6570\u636e\u83b7\u53d6)\n    \u251c\u2500\u2500 postgresql_data_fetcher.py (PostgreSQL\u6570\u636e\u83b7\u53d6)\n    \u251c\u2500\u2500 data_cache_manager.py (\u7f13\u5b58\u7ba1\u7406)\n    \u251c\u2500\u2500 data_processor.py (\u6570\u636e\u5904\u7406)\n    \u2514\u2500\u2500 stock_screener_data.py (\u7b5b\u9009\u6570\u636e)\n</code></pre>"},{"location":"01_project_overview/project_analysis_report.html#12","title":"1.2 \u6570\u636e\u6e90\u67b6\u6784\u8bbe\u8ba1","text":"<pre><code>\u6df7\u5408\u6570\u636e\u6e90\u67b6\u6784\n\u250c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2510\n\u2502                    \u6570\u636e\u6e90\u7ba1\u7406\u5c42                              \u2502\n\u2502  \u250c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2510    \u250c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2510                \u2502\n\u2502  \u2502   \u914d\u7f6e\u7ba1\u7406      \u2502    \u2502   \u964d\u7ea7\u7b56\u7565      \u2502                \u2502\n\u2502  \u2502 (.env\u5f00\u5173\u63a7\u5236)   \u2502    \u2502 (\u81ea\u52a8\u5207\u6362\u673a\u5236)   \u2502                \u2502\n\u2502  \u2514\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2518    \u2514\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2518                \u2502\n\u2514\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2518\n           \u2502                           \u2502\n           \u25bc                           \u25bc\n\u250c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2510            \u250c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2510\n\u2502  Tushare API    \u2502            \u2502  PostgreSQL     \u2502\n\u2502   (\u4e3b\u6570\u636e\u6e90)     \u2502\u25c4\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u25ba\u2502   (\u5907\u6570\u636e\u6e90)     \u2502\n\u2502                 \u2502   \u6545\u969c\u5207\u6362   \u2502                 \u2502\n\u2502 \u2022 \u5b9e\u65f6\u6570\u636e       \u2502            \u2502 \u2022 \u5386\u53f2\u6570\u636e       \u2502\n\u2502 \u2022 \u9ad8\u9891\u66f4\u65b0       \u2502            \u2502 \u2022 \u7a33\u5b9a\u53ef\u9760       \u2502\n\u2502 \u2022 \u4e30\u5bcc\u5b57\u6bb5       \u2502            \u2502 \u2022 \u672c\u5730\u7f13\u5b58       \u2502\n\u2514\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2518            \u2514\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2518\n           \u2502                           \u2502\n           \u2514\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u252c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2518\n                         \u25bc\n              \u250c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2510\n              \u2502   \u7f13\u5b58\u7ba1\u7406\u5c42     \u2502\n              \u2502                 \u2502\n              \u2502 \u2022 Redis\u7f13\u5b58     \u2502\n              \u2502 \u2022 \u672c\u5730\u7f13\u5b58       \u2502\n              \u2502 \u2022 \u667a\u80fd\u8fc7\u671f       \u2502\n              \u2514\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2518\n</code></pre>"},{"location":"01_project_overview/project_analysis_report.html#13","title":"1.3 \u6df7\u5408\u67b6\u6784\u4f18\u52bf","text":"<ul> <li>\u5206\u5c42\u6e05\u6670: \u524d\u7aef\u3001API\u3001\u4e1a\u52a1\u903b\u8f91\u3001\u8ba1\u7b97\u3001\u6570\u636e\u5c42\u5206\u79bb</li> <li>\u529f\u80fd\u6a21\u5757\u5316: \u5404\u8ba1\u7b97\u5668\u72ec\u7acb\u5c01\u88c5</li> <li>\u6280\u672f\u6808\u73b0\u4ee3: \u4f7f\u7528FastAPI\u3001Streamlit\u7b49\u73b0\u4ee3\u6846\u67b6</li> <li>\u6269\u5c55\u6027\u826f\u597d: \u652f\u6301\u591a\u79cd\u4f30\u503c\u65b9\u6cd5\u548c\u5206\u6790\u529f\u80fd</li> <li>\ud83c\udd95 \u6570\u636e\u53ef\u9760\u6027\uff1a\u53cc\u6570\u636e\u6e90 + \u4f30\u503c\u65e5\u56de\u9000 + \u80a1\u606fTTM\u591a\u7ea7\u56de\u9000\u3002</li> <li>\ud83c\udd95 \u6027\u80fd\u4f18\u5316\uff1a\u654f\u611f\u6027\u5728\u5e38\u89c1\u89c4\u6a21\uff085\u00d75/7\u00d77\uff09\u4e0b\u7a33\u5b9a\uff1b\u540e\u7eed\u53ef\u5bf9\u4ec5\u6539WACC\u7684\u683c\u4f7f\u7528\u91cd\u6298\u73b0\u4f18\u5316\u3002</li> <li>\ud83c\udd95 \u7075\u6d3b\u5207\u6362\uff1a\u901a\u8fc7 .env \u548c\u8bf7\u6c42\u53c2\u6570\u63a7\u5236 GDP \u4e0a\u9650\u4e0e LTM \u57fa\u671f\u7b49\u884c\u4e3a\u3002</li> <li>\ud83c\udd95 \u6210\u672c\u63a7\u5236\uff1a\u4f18\u5148\u4f7f\u7528\u7f13\u5b58/\u5907\u6e90\uff0c\u51cf\u5c11\u9891\u7e41\u5916\u90e8\u8c03\u7528\u3002</li> </ul>"},{"location":"01_project_overview/project_analysis_report.html#14","title":"1.4 \u5f85\u4f18\u5316\u95ee\u9898","text":"<ul> <li>\u6a21\u5757\u8026\u5408: \u90e8\u5206\u6a21\u5757\u95f4\u4f9d\u8d56\u5173\u7cfb\u590d\u6742</li> <li>\u4ee3\u7801\u91cd\u590d: \u5b58\u5728\u91cd\u590d\u7684\u6570\u636e\u5904\u7406\u903b\u8f91</li> <li>\u9519\u8bef\u5904\u7406: \u5df2\u589e\u5f3a WACC \u4e0e PGR \u8fb9\u754c\uff1b\u4ecd\u9700\u7edf\u4e00\u5f02\u5e38\u4e0e\u544a\u8b66\u5206\u7ea7\uff08error/warn/info\uff09\u3002</li> <li>\u914d\u7f6e\u7ba1\u7406: \u9700\u8981\u7edf\u4e00\u7684\u6570\u636e\u6e90\u914d\u7f6e\u7ba1\u7406</li> <li>\ud83c\udd95 \u7f13\u5b58\u7b56\u7565: \u9700\u8981\u4f18\u5316\u7f13\u5b58\u5931\u6548\u548c\u66f4\u65b0\u7b56\u7565</li> <li>\ud83c\udd95 \u76d1\u63a7\u544a\u8b66: \u9700\u8981\u5efa\u7acb\u6570\u636e\u6e90\u72b6\u6001\u76d1\u63a7\u673a\u5236</li> </ul>"},{"location":"01_project_overview/project_analysis_report.html#2","title":"2. \u4ee3\u7801\u8d28\u91cf\u5206\u6790","text":""},{"location":"01_project_overview/project_analysis_report.html#21-pylint","title":"2.1 Pylint\u5206\u6790\u7ed3\u679c","text":"<p>\u603b\u4f53\u8bc4\u5206: 3.89/10 \u26a0\ufe0f</p> <p>\u4e3b\u8981\u95ee\u9898\u5206\u5e03:</p> <pre><code>\u95ee\u9898\u7c7b\u578b                | \u6570\u91cf  | \u4e25\u91cd\u7a0b\u5ea6\n------------------------|-------|----------\n\u5355\u884c\u591a\u8bed\u53e5 (C0321)      | 45    | \u4e2d\u7b49\n\u6355\u83b7\u8fc7\u4e8e\u5bbd\u6cdb\u5f02\u5e38 (W0718) | 23    | \u9ad8\n\u5206\u652f\u8fc7\u591a (R0912)        | 12    | \u9ad8\n\u8bed\u53e5\u8fc7\u591a (R0915)        | 8     | \u9ad8\n\u91cd\u590d\u5bfc\u5165 (W0404)        | 15    | \u4f4e\n\u5bfc\u5165\u4f4d\u7f6e\u4e0d\u6b63\u786e (C0413)   | 18    | \u4e2d\u7b49\n\u5bfc\u5165\u987a\u5e8f\u4e0d\u6b63\u786e (C0411)   | 22    | \u4f4e\n\u672a\u4f7f\u7528\u5bfc\u5165 (W0611)      | 31    | \u4f4e\n</code></pre>"},{"location":"01_project_overview/project_analysis_report.html#22","title":"2.2 \u4ee3\u7801\u590d\u6742\u5ea6\u5206\u6790","text":"<p>\u9ad8\u590d\u6742\u5ea6\u51fd\u6570: - <code>financial_forecaster.py::forecast_financials()</code> - \u5faa\u73af\u590d\u6742\u5ea6: 15 - <code>data_processor.py::process_financial_data()</code> - \u5faa\u73af\u590d\u6742\u5ea6: 12 - <code>streamlit_app.py::render_valuation_results()</code> - \u5faa\u73af\u590d\u6742\u5ea6: 10</p> <p>\u957f\u51fd\u6570\u95ee\u9898: - \u5e73\u5747\u51fd\u6570\u957f\u5ea6: 45\u884c - \u8d85\u8fc7100\u884c\u7684\u51fd\u6570: 8\u4e2a - \u6700\u957f\u51fd\u6570: 180\u884c (<code>streamlit_app.py::main()</code>)</p>"},{"location":"01_project_overview/project_analysis_report.html#23","title":"2.3 \u4ee3\u7801\u98ce\u683c\u95ee\u9898","text":"<ul> <li>\u547d\u540d\u4e0d\u4e00\u81f4: \u6df7\u7528\u9a7c\u5cf0\u548c\u4e0b\u5212\u7ebf\u547d\u540d</li> <li>\u6ce8\u91ca\u4e0d\u8db3: \u5173\u952e\u4e1a\u52a1\u903b\u8f91\u7f3a\u4e4f\u6ce8\u91ca</li> <li>\u9b54\u6cd5\u6570\u5b57: \u5b58\u5728\u786c\u7f16\u7801\u7684\u6570\u503c\u5e38\u91cf</li> <li>\u5bfc\u5165\u6df7\u4e71: \u5bfc\u5165\u8bed\u53e5\u7ec4\u7ec7\u4e0d\u89c4\u8303</li> </ul>"},{"location":"01_project_overview/project_analysis_report.html#3","title":"3. \u529f\u80fd\u9700\u6c42\u5206\u6790","text":""},{"location":"01_project_overview/project_analysis_report.html#31","title":"3.1 \u6838\u5fc3\u529f\u80fd\u6a21\u5757","text":"<p>\u4f30\u503c\u8ba1\u7b97\u6a21\u5757: - \u2705 DCF\u4f30\u503c\u8ba1\u7b97 - \u2705 WACC\u8ba1\u7b97 (\u76ee\u6807\u6743\u91cd/\u5e02\u573a\u6743\u91cd) - \u2705 \u7ec8\u503c\u8ba1\u7b97 (\u6c38\u7eed\u589e\u957f/\u9000\u51fa\u500d\u6570) - \u2705 \u6743\u76ca\u4ef7\u503c\u8ba1\u7b97 - \u2705 \u654f\u611f\u6027\u5206\u6790\uff08\u65b0\u589e <code>ev_ebitda_terminal</code>\u3001<code>implied_pgr</code>\u3001\u6309\u683c PE \u56de\u586b\uff1b\u975e\u6cd5\u7ec4\u5408\u8df3\u8fc7\uff09</p> <p>\u6570\u636e\u5904\u7406\u6a21\u5757: - \u2705 Tushare\u6570\u636e\u83b7\u53d6 (\u4e3b\u6570\u636e\u6e90) - \u2705 PostgreSQL\u6570\u636e\u83b7\u53d6 (\u5907\u6570\u636e\u6e90) - \u2705 \u667a\u80fd\u6570\u636e\u6e90\u5207\u6362\u673a\u5236 - \u2705 \u8d22\u52a1\u6570\u636e\u6e05\u6d17\u548c\u6807\u51c6\u5316 - \u2705 \u5386\u53f2\u6bd4\u7387\u8ba1\u7b97 - \u2705 \u591a\u5c42\u7ea7\u7f13\u5b58\u673a\u5236 - \ud83c\udd95 \u4f30\u503c\u57fa\u671f\uff1a\u652f\u6301 Annual/LTM \u5207\u6362\u4e0e LTM \u660e\u7ec6\u8c03\u8bd5\u5207\u7247\u3002 - \ud83c\udd95 \u6570\u636e\u6e90\u72b6\u6001\u76d1\u63a7\uff08\u89c4\u5212\u4e2d\uff09 - \ud83c\udd95 \u81ea\u52a8\u964d\u7ea7\u548c\u6062\u590d\u7b56\u7565\uff08\u89c4\u5212\u4e2d\uff09</p> <p>\u524d\u7aef\u754c\u9762\u6a21\u5757: - \u2705 Streamlit\u4e3b\u5e94\u7528\u754c\u9762 - \u4e13\u4e1a\u91d1\u878d\u6570\u636e\u53ef\u89c6\u5316\u5e73\u53f0 - \u2705 \u4ea4\u4e92\u5f0f\u53c2\u6570\u914d\u7f6e\u9762\u677f - \u652f\u6301\u5b9e\u65f6\u53c2\u6570\u8c03\u6574 - \u2705 \u52a8\u6001\u7ed3\u679c\u5c55\u793a\u754c\u9762 - \u4e30\u5bcc\u7684\u56fe\u8868\u548c\u6570\u636e\u5c55\u793a - \u2705 \u80a1\u7968\u7b5b\u9009\u5668 - \u591a\u7ef4\u5ea6\u7b5b\u9009\u548c\u6392\u5e8f\u529f\u80fd - \u2705 \u54cd\u5e94\u5f0f\u5e03\u5c40\u8bbe\u8ba1 - \u9002\u914d\u4e0d\u540c\u5c4f\u5e55\u5c3a\u5bf8</p> <p>API\u670d\u52a1\u6a21\u5757: - \u2705 RESTful API\u63a5\u53e3 - \u2705 \u8bf7\u6c42\u9a8c\u8bc1 - \u2705 \u54cd\u5e94\u683c\u5f0f\u5316 - \u2705 \u9519\u8bef\u5904\u7406 - \u2705 \u8c03\u8bd5\u5207\u7247\uff1a<code>debug_request_slice</code>\uff08\u542b\u884c\u4e1a\u9884\u8bbe\u4e0e\u504f\u79bb diff\uff09</p>"},{"location":"01_project_overview/project_analysis_report.html#32","title":"3.2 \u4e1a\u52a1\u6d41\u7a0b\u5206\u6790","text":"<p>\u4e3b\u8981\u4e1a\u52a1\u6d41\u7a0b: 1. \u80a1\u7968\u4f30\u503c\u6d41\u7a0b:    <code>\u8f93\u5165\u80a1\u7968\u4ee3\u7801 \u2192 \u83b7\u53d6\u8d22\u52a1\u6570\u636e \u2192 \u6570\u636e\u6e05\u6d17 \u2192 \u8d22\u52a1\u9884\u6d4b \u2192 DCF\u8ba1\u7b97 \u2192 \u7ed3\u679c\u5c55\u793a</code></p> <ol> <li> <p>\u654f\u611f\u6027\u5206\u6790\u6d41\u7a0b:    <code>\u8bbe\u7f6e\u5206\u6790\u53c2\u6570 \u2192 \u6279\u91cf\u8ba1\u7b97 \u2192 \u751f\u6210\u654f\u611f\u6027\u77e9\u9635 \u2192 \u53ef\u89c6\u5316\u5c55\u793a</code></p> </li> <li> <p>\u80a1\u7968\u7b5b\u9009\u6d41\u7a0b:    <code>\u8bbe\u7f6e\u7b5b\u9009\u6761\u4ef6 \u2192 \u83b7\u53d6\u5e02\u573a\u6570\u636e \u2192 \u5e94\u7528\u7b5b\u9009\u903b\u8f91 \u2192 \u7ed3\u679c\u6392\u5e8f\u5c55\u793a</code></p> </li> </ol>"},{"location":"01_project_overview/project_analysis_report.html#33","title":"3.3 \u7528\u6237\u9700\u6c42\u6ee1\u8db3\u5ea6","text":"<ul> <li>\u529f\u80fd\u5b8c\u6574\u6027: 90% \u2705</li> <li>\u6613\u7528\u6027: 75% \ud83d\udfe1</li> <li>\u6027\u80fd\u8868\u73b0: 70% \ud83d\udfe1</li> <li>\u7a33\u5b9a\u6027: 65% \u26a0\ufe0f</li> </ul>"},{"location":"01_project_overview/project_analysis_report.html#4","title":"4. \u6280\u672f\u503a\u52a1\u8bc4\u4f30","text":""},{"location":"01_project_overview/project_analysis_report.html#41","title":"4.1 \u6280\u672f\u503a\u52a1\u5206\u7c7b","text":"<p>\u4ee3\u7801\u503a\u52a1 (\u4e25\u91cd \ud83d\udd34): - \u4ee3\u7801\u8d28\u91cf\u4f4e\uff0c\u7ef4\u62a4\u56f0\u96be - \u51fd\u6570\u8fc7\u957f\uff0c\u903b\u8f91\u590d\u6742 - \u7f3a\u4e4f\u7edf\u4e00\u7684\u7f16\u7801\u89c4\u8303 - \u5f02\u5e38\u5904\u7406\u4e0d\u5b8c\u5584</p> <p>\u67b6\u6784\u503a\u52a1 (\u4e2d\u7b49 \ud83d\udfe1): - \u6a21\u5757\u8026\u5408\u5ea6\u8f83\u9ad8 - \u7f3a\u4e4f\u6e05\u6670\u7684\u63a5\u53e3\u5b9a\u4e49 - \u914d\u7f6e\u7ba1\u7406\u5206\u6563 - \u7f3a\u4e4f\u7edf\u4e00\u7684\u65e5\u5fd7\u7cfb\u7edf - \ud83c\udd95 \u6570\u636e\u6e90\u62bd\u8c61\u5c42\u9700\u8981\u91cd\u6784 - \ud83c\udd95 \u7f13\u5b58\u7b56\u7565\u9700\u8981\u7edf\u4e00\u7ba1\u7406 - \ud83c\udd95 \u76d1\u63a7\u548c\u544a\u8b66\u673a\u5236\u5f85\u5efa\u7acb</p> <p>\u6d4b\u8bd5\u503a\u52a1 (\u8f7b\u5fae \ud83d\udfe2): - \u6d4b\u8bd5\u8986\u76d6\u7387\u9700\u63d0\u5347 - \u7f3a\u4e4f\u96c6\u6210\u6d4b\u8bd5 - \u6027\u80fd\u6d4b\u8bd5\u4e0d\u8db3</p> <p>\u6587\u6863\u503a\u52a1 (\u4e2d\u7b49 \ud83d\udfe1): - API\u6587\u6863\u4e0d\u5b8c\u6574 - \u4e1a\u52a1\u903b\u8f91\u6587\u6863\u7f3a\u5931 - \u90e8\u7f72\u6587\u6863\u9700\u5b8c\u5584</p>"},{"location":"01_project_overview/project_analysis_report.html#42","title":"4.2 \u503a\u52a1\u5f71\u54cd\u8bc4\u4f30","text":"<p>\u5f00\u53d1\u6548\u7387\u5f71\u54cd: - \u65b0\u529f\u80fd\u5f00\u53d1\u901f\u5ea6: -40% - Bug\u4fee\u590d\u65f6\u95f4: +60% - \u4ee3\u7801\u5ba1\u67e5\u65f6\u95f4: +80%</p> <p>\u7ef4\u62a4\u6210\u672c\u5f71\u54cd: - \u65e5\u5e38\u7ef4\u62a4\u6210\u672c: +50% - \u65b0\u4eba\u4e0a\u624b\u65f6\u95f4: +100% - \u7cfb\u7edf\u7a33\u5b9a\u6027\u98ce\u9669: +70%</p>"},{"location":"01_project_overview/project_analysis_report.html#5","title":"5. \u6027\u80fd\u5206\u6790","text":""},{"location":"01_project_overview/project_analysis_report.html#51","title":"5.1 \u6027\u80fd\u57fa\u51c6\u6d4b\u8bd5","text":"<p>API\u54cd\u5e94\u65f6\u95f4:</p> <pre><code>\u63a5\u53e3\u7c7b\u578b          | \u5e73\u5747\u54cd\u5e94\u65f6\u95f4 | 95%\u5206\u4f4d\u6570 | \u76ee\u6807\u503c\n------------------|-------------|-----------|--------\n\u5355\u80a1\u7968\u4f30\u503c        | 1.2s        | 2.1s      | &lt;2s\n\u654f\u611f\u6027\u5206\u6790        | 3.5s        | 5.8s      | &lt;5s\uff08\u5e38\u89c4 5\u00d75 \u7f51\u683c\uff1b\u542b\u8fb9\u754c\u8df3\u8fc7\uff09\n\u80a1\u7968\u7b5b\u9009          | 0.8s        | 1.3s      | &lt;1s\n\u6570\u636e\u83b7\u53d6          | 0.5s        | 0.9s      | &lt;1s\n</code></pre> <p>\u5185\u5b58\u4f7f\u7528\u60c5\u51b5: - \u57fa\u7840\u5185\u5b58\u5360\u7528: ~150MB - \u5cf0\u503c\u5185\u5b58\u5360\u7528: ~400MB - \u5185\u5b58\u6cc4\u6f0f\u98ce\u9669: \u4f4e</p> <p>\u5e76\u53d1\u6027\u80fd: - \u6700\u5927\u5e76\u53d1\u7528\u6237: 20 - \u54cd\u5e94\u65f6\u95f4\u589e\u957f: \u7ebf\u6027 - \u7cfb\u7edf\u7a33\u5b9a\u6027: \u826f\u597d</p>"},{"location":"01_project_overview/project_analysis_report.html#52","title":"5.2 \u6027\u80fd\u74f6\u9888\u8bc6\u522b","text":"<p>\u8ba1\u7b97\u5bc6\u96c6\u578b\u64cd\u4f5c: - \u654f\u611f\u6027\u5206\u6790\u77e9\u9635\u8ba1\u7b97 - \u5927\u91cf\u5386\u53f2\u6570\u636e\u5904\u7406 - \u590d\u6742\u8d22\u52a1\u9884\u6d4b\u8ba1\u7b97</p> <p>I/O\u5bc6\u96c6\u578b\u64cd\u4f5c: - Tushare API\u8c03\u7528 - \u6570\u636e\u5e93\u67e5\u8be2\u64cd\u4f5c - \u6587\u4ef6\u7f13\u5b58\u8bfb\u5199</p> <p>\u4f18\u5316\u5efa\u8bae: - \u5b9e\u73b0\u8ba1\u7b97\u7ed3\u679c\u7f13\u5b58 - \u4f18\u5316\u6570\u636e\u5e93\u67e5\u8be2 - \u4f7f\u7528\u5f02\u6b65\u5904\u7406 - \u5b9e\u73b0\u8ba1\u7b97\u4efb\u52a1\u961f\u5217</p>"},{"location":"01_project_overview/project_analysis_report.html#6","title":"6. \u5b89\u5168\u6027\u5206\u6790","text":""},{"location":"01_project_overview/project_analysis_report.html#61","title":"6.1 \u5b89\u5168\u98ce\u9669\u8bc4\u4f30","text":"<p>\u6570\u636e\u5b89\u5168 (\u4e2d\u7b49\u98ce\u9669 \ud83d\udfe1): - API\u5bc6\u94a5\u660e\u6587\u5b58\u50a8\u98ce\u9669 - \u7528\u6237\u8f93\u5165\u9a8c\u8bc1\u4e0d\u5145\u5206 - \u654f\u611f\u6570\u636e\u65e5\u5fd7\u8bb0\u5f55</p> <p>\u7cfb\u7edf\u5b89\u5168 (\u4f4e\u98ce\u9669 \ud83d\udfe2): - \u65e0\u660e\u663e\u7684\u6ce8\u5165\u653b\u51fb\u98ce\u9669 - \u8bbf\u95ee\u63a7\u5236\u57fa\u672c\u5b8c\u5584 - \u4f9d\u8d56\u5e93\u5b89\u5168\u6027\u826f\u597d</p> <p>\u7f51\u7edc\u5b89\u5168 (\u4f4e\u98ce\u9669 \ud83d\udfe2): - HTTPS\u901a\u4fe1 - CORS\u914d\u7f6e\u5408\u7406 - \u65e0\u660e\u663e\u7684\u7f51\u7edc\u653b\u51fb\u9762</p>"},{"location":"01_project_overview/project_analysis_report.html#62","title":"6.2 \u5b89\u5168\u6539\u8fdb\u5efa\u8bae","text":"<ul> <li>\u5b9e\u73b0\u73af\u5883\u53d8\u91cf\u7ba1\u7406</li> <li>\u52a0\u5f3a\u8f93\u5165\u9a8c\u8bc1</li> <li>\u5b9e\u73b0\u8bbf\u95ee\u65e5\u5fd7\u5ba1\u8ba1</li> <li>\u5b9a\u671f\u66f4\u65b0\u4f9d\u8d56\u5e93</li> </ul>"},{"location":"01_project_overview/project_analysis_report.html#7","title":"7. \u6d4b\u8bd5\u73b0\u72b6\u5206\u6790","text":""},{"location":"01_project_overview/project_analysis_report.html#71","title":"7.1 \u6d4b\u8bd5\u8986\u76d6\u60c5\u51b5","text":"<p>\u6d4b\u8bd5\u7edf\u8ba1\uff08\u66f4\u65b0\uff09: - \u6d4b\u8bd5\u7528\u4f8b\u603b\u6570: 100+\uff08\u65b0\u589e\u654f\u611f\u6027\u6269\u5c55\u7528\u4f8b\uff09 - \u6d4b\u8bd5\u901a\u8fc7\u7387: 100% - \u4ee3\u7801\u8986\u76d6\u7387: 62%+\uff08\u5355\u6587\u4ef6\u63d0\u5347\uff09 - \u6d4b\u8bd5\u6267\u884c\u65f6\u95f4: ~50\u79d2</p> <p>\u8986\u76d6\u7387\u5206\u5e03:</p> <pre><code>\u6a21\u5757\u7c7b\u578b          | \u8986\u76d6\u7387  | \u6d4b\u8bd5\u7528\u4f8b\u6570\n------------------|---------|----------\n\u8ba1\u7b97\u5668\u6a21\u5757        | 85%     | 45\nAPI\u63a5\u53e3          | 45%     | 12\n\u6570\u636e\u5904\u7406         | 70%     | 25\n\u4e1a\u52a1\u903b\u8f91         | 55%     | 15\n</code></pre>"},{"location":"01_project_overview/project_analysis_report.html#72","title":"7.2 \u6d4b\u8bd5\u8d28\u91cf\u8bc4\u4f30","text":"<p>\u6d4b\u8bd5\u4f18\u52bf: - \u6838\u5fc3\u8ba1\u7b97\u903b\u8f91\u6d4b\u8bd5\u5145\u5206 - \u6d4b\u8bd5\u7528\u4f8b\u8d28\u91cf\u8f83\u9ad8 - \u6d4b\u8bd5\u6267\u884c\u7a33\u5b9a</p> <p>\u6d4b\u8bd5\u4e0d\u8db3: - \u96c6\u6210\u6d4b\u8bd5\u7f3a\u5931 - API\u6d4b\u8bd5\u8986\u76d6\u4e0d\u8db3 - \u6027\u80fd\u6d4b\u8bd5\u7f3a\u5931 - E2E\u6d4b\u8bd5\u7f3a\u5931 - \u60c5\u666f\u5206\u6790\uff08\u591a\u60c5\u666f\u5408\u6210\uff09\u4ec5\u6587\u6863\u65b9\u6848\uff0c\u5f85\u5b9e\u73b0\u4e0e\u6d4b\u8bd5</p>"},{"location":"01_project_overview/project_analysis_report.html#8","title":"8. \u4f9d\u8d56\u5206\u6790","text":""},{"location":"01_project_overview/project_analysis_report.html#81","title":"8.1 \u6838\u5fc3\u4f9d\u8d56","text":"<p>Python\u4f9d\u8d56:</p> <pre><code>\u4f9d\u8d56\u5e93           | \u7248\u672c    | \u7528\u9014           | \u98ce\u9669\u8bc4\u4f30\n-----------------|---------|----------------|----------\nfastapi          | 0.104.1 | Web\u6846\u67b6        | \u4f4e\nstreamlit         | 1.28.1  | \u524d\u7aef\u754c\u9762       | \u4f4e\ntushare          | 1.2.89  | \u6570\u636e\u6e90         | \u4e2d\npandas           | 2.1.3   | \u6570\u636e\u5904\u7406       | \u4f4e\nnumpy            | 1.25.2  | \u6570\u503c\u8ba1\u7b97       | \u4f4e\nscipy            | 1.11.4  | \u79d1\u5b66\u8ba1\u7b97       | \u4f4e\nplotly           | 5.17.0  | \u6570\u636e\u53ef\u89c6\u5316     | \u4f4e\n</code></pre> <p>\u7cfb\u7edf\u4f9d\u8d56: - Python 3.9+ - \u64cd\u4f5c\u7cfb\u7edf: \u8de8\u5e73\u53f0\u652f\u6301 - \u5185\u5b58\u8981\u6c42: \u6700\u5c0f512MB - \u7f51\u7edc\u8981\u6c42: \u7a33\u5b9a\u7684\u4e92\u8054\u7f51\u8fde\u63a5</p>"},{"location":"01_project_overview/project_analysis_report.html#82","title":"8.2 \u4f9d\u8d56\u98ce\u9669\u8bc4\u4f30","text":"<p>\u9ad8\u98ce\u9669\u4f9d\u8d56: - Tushare: \u7b2c\u4e09\u65b9\u4ed8\u8d39\u6570\u636e\u6e90\uff0c\u5b58\u5728API\u9650\u6d41\u548c\u670d\u52a1\u4e2d\u65ad\u98ce\u9669</p> <p>\u4e2d\u98ce\u9669\u4f9d\u8d56: - PostgreSQL: \u6570\u636e\u5e93\u8fde\u63a5\u7a33\u5b9a\u6027\u4f9d\u8d56 - Redis: \u7f13\u5b58\u670d\u52a1\u53ef\u7528\u6027\u4f9d\u8d56 - \ud83c\udd95 \u6570\u636e\u6e90\u540c\u6b65\u673a\u5236: \u53cc\u6570\u636e\u6e90\u4e00\u81f4\u6027\u7ef4\u62a4\u590d\u6742\u5ea6</p> <p>\u4f4e\u98ce\u9669\u4f9d\u8d56: - \u5176\u4ed6\u6240\u6709\u4f9d\u8d56\u5e93\u5747\u4e3a\u6210\u719f\u7a33\u5b9a\u7684\u5f00\u6e90\u9879\u76ee</p>"},{"location":"01_project_overview/project_analysis_report.html#9","title":"9. \u53ef\u7ef4\u62a4\u6027\u5206\u6790","text":""},{"location":"01_project_overview/project_analysis_report.html#91","title":"9.1 \u524d\u7aef\u754c\u9762\u67b6\u6784","text":"<p>Streamlit\u6846\u67b6\u4f18\u52bf: 8/10 \ud83d\udfe2 - \u4e13\u4e1a\u7684\u91d1\u878d\u6570\u636e\u53ef\u89c6\u5316\u7ec4\u4ef6\u5e93 - \u539f\u751f\u652f\u6301\u5b9e\u65f6\u6570\u636e\u66f4\u65b0\u548c\u4ea4\u4e92 - \u4e30\u5bcc\u7684\u56fe\u8868\u7c7b\u578b\u548c\u81ea\u5b9a\u4e49\u9009\u9879 - \u54cd\u5e94\u5f0f\u5e03\u5c40\u548c\u73b0\u4ee3\u5316UI\u8bbe\u8ba1</p> <p>\u7ec4\u4ef6\u5316\u7a0b\u5ea6: 7/10 \ud83d\udfe1 - \u4e3b\u8981\u754c\u9762\u7ec4\u4ef6\u5df2\u6a21\u5757\u5316 - \u53ef\u590d\u7528\u7ec4\u4ef6\u9700\u8981\u8fdb\u4e00\u6b65\u62bd\u8c61 - \u72b6\u6001\u7ba1\u7406\u9700\u8981\u4f18\u5316</p> <p>\u7528\u6237\u4f53\u9a8c: 8/10 \ud83d\udfe2 - \u76f4\u89c2\u7684\u53c2\u6570\u914d\u7f6e\u754c\u9762 - \u5b9e\u65f6\u7684\u8ba1\u7b97\u7ed3\u679c\u5c55\u793a - \u4e13\u4e1a\u7684\u91d1\u878d\u56fe\u8868\u53ef\u89c6\u5316 - \u6d41\u7545\u7684\u4ea4\u4e92\u54cd\u5e94</p>"},{"location":"01_project_overview/project_analysis_report.html#92","title":"9.2 \u7ef4\u62a4\u6027\u6307\u6807","text":"<p>\u4ee3\u7801\u53ef\u8bfb\u6027: 6/10 \ud83d\udfe1 - \u51fd\u6570\u547d\u540d\u57fa\u672c\u6e05\u6670 - \u6ce8\u91ca\u8986\u76d6\u7387\u4e0d\u8db3 - \u4ee3\u7801\u7ed3\u6784\u9700\u8981\u4f18\u5316</p> <p>\u6a21\u5757\u5316\u7a0b\u5ea6: 7/10 \ud83d\udfe2 - \u529f\u80fd\u6a21\u5757\u5212\u5206\u5408\u7406 - \u63a5\u53e3\u5b9a\u4e49\u57fa\u672c\u6e05\u6670 - \u4f9d\u8d56\u5173\u7cfb\u53ef\u4ee5\u4f18\u5316</p> <p>\u6269\u5c55\u6027: 8/10 \ud83d\udfe2 - \u67b6\u6784\u652f\u6301\u529f\u80fd\u6269\u5c55 - \u65b0\u589e\u8ba1\u7b97\u5668\u5bb9\u6613 - \u6570\u636e\u6e90\u53ef\u4ee5\u6269\u5c55</p> <p>\u6d4b\u8bd5\u53cb\u597d\u6027: 7/10 \ud83d\udfe2 - \u6838\u5fc3\u903b\u8f91\u6613\u4e8e\u6d4b\u8bd5 - \u4f9d\u8d56\u6ce8\u5165\u9700\u8981\u6539\u8fdb - Mock\u652f\u6301\u9700\u8981\u52a0\u5f3a</p>"},{"location":"01_project_overview/project_analysis_report.html#92_1","title":"9.2 \u7ef4\u62a4\u6210\u672c\u8bc4\u4f30","text":"<p>\u5f53\u524d\u7ef4\u62a4\u6210\u672c: \u9ad8 \ud83d\udd34 - \u4ee3\u7801\u8d28\u91cf\u95ee\u9898\u5bfc\u81f4\u7ef4\u62a4\u56f0\u96be - \u7f3a\u4e4f\u5b8c\u5584\u7684\u6587\u6863 - \u65b0\u4eba\u4e0a\u624b\u6210\u672c\u9ad8</p> <p>\u91cd\u6784\u540e\u9884\u671f: \u4e2d\u7b49 \ud83d\udfe1 - \u4ee3\u7801\u8d28\u91cf\u663e\u8457\u63d0\u5347 - \u6587\u6863\u5b8c\u5584 - \u7ef4\u62a4\u6548\u7387\u63d0\u9ad860%</p>"},{"location":"01_project_overview/project_analysis_report.html#10","title":"10. \u4e1a\u52a1\u4ef7\u503c\u8bc4\u4f30","text":""},{"location":"01_project_overview/project_analysis_report.html#101","title":"10.1 \u529f\u80fd\u4ef7\u503c","text":"<p>\u6838\u5fc3\u4ef7\u503c (\u9ad8 \ud83d\udfe2): - \u63d0\u4f9b\u4e13\u4e1a\u7684DCF\u4f30\u503c\u8ba1\u7b97 - \u652f\u6301\u591a\u7ef4\u5ea6\u654f\u611f\u6027\u5206\u6790 - \u5b9e\u73b0\u81ea\u52a8\u5316\u80a1\u7968\u7b5b\u9009</p> <p>\u7528\u6237\u4ef7\u503c (\u9ad8 \ud83d\udfe2): - \u7b80\u5316\u590d\u6742\u7684\u4f30\u503c\u8ba1\u7b97\u8fc7\u7a0b - \u63d0\u4f9b\u76f4\u89c2\u7684\u7ed3\u679c\u5c55\u793a - \u652f\u6301\u6279\u91cf\u5206\u6790\u5904\u7406</p> <p>\u5546\u4e1a\u4ef7\u503c (\u4e2d\u7b49 \ud83d\udfe1): - \u53ef\u4f5c\u4e3a\u6295\u8d44\u51b3\u7b56\u8f85\u52a9\u5de5\u5177 - \u5177\u5907\u5546\u4e1a\u5316\u6f5c\u529b - \u53ef\u6269\u5c55\u4e3aSaaS\u670d\u52a1</p>"},{"location":"01_project_overview/project_analysis_report.html#102","title":"10.2 \u7ade\u4e89\u4f18\u52bf","text":"<p>\u6280\u672f\u4f18\u52bf: - \u8ba1\u7b97\u903b\u8f91\u4e13\u4e1a\u51c6\u786e - \u754c\u9762\u53cb\u597d\u6613\u7528 - \u652f\u6301\u591a\u79cd\u4f30\u503c\u65b9\u6cd5</p> <p>\u6570\u636e\u4f18\u52bf: - \u96c6\u6210Tushare\u6570\u636e\u6e90 - \u5b9e\u65f6\u6570\u636e\u66f4\u65b0 - \u5386\u53f2\u6570\u636e\u5206\u6790</p> <p>\u529f\u80fd\u4f18\u52bf: - \u654f\u611f\u6027\u5206\u6790\u529f\u80fd\u5b8c\u5584 - \u652f\u6301\u6279\u91cf\u5904\u7406 - \u7ed3\u679c\u53ef\u89c6\u5316\u6548\u679c\u597d</p>"},{"location":"01_project_overview/project_analysis_report.html#_8","title":"\u91cd\u6784\u5efa\u8bae","text":""},{"location":"01_project_overview/project_analysis_report.html#1_1","title":"1. \u91cd\u6784\u4f18\u5148\u7ea7","text":"<p>\u7b2c\u4e00\u4f18\u5148\u7ea7 (\u7acb\u5373\u6267\u884c): - \ud83c\udd95 \u6df7\u5408\u6570\u636e\u6e90\u67b6\u6784\u5b9e\u73b0 - \ud83c\udd95 \u6570\u636e\u6e90\u7ba1\u7406\u5668\u5f00\u53d1 - \ud83c\udd95 \u7f13\u5b58\u673a\u5236\u4f18\u5316 - \u4ee3\u7801\u8d28\u91cf\u6539\u8fdb - \u9519\u8bef\u5904\u7406\u6807\u51c6\u5316 - \u6d4b\u8bd5\u8986\u76d6\u7387\u63d0\u5347</p> <p>\u7b2c\u4e8c\u4f18\u5148\u7ea7 (\u8fd1\u671f\u6267\u884c): - \ud83c\udd95 \u6570\u636e\u6e90\u76d1\u63a7\u548c\u544a\u8b66\u7cfb\u7edf - \ud83c\udd95 \u81ea\u52a8\u964d\u7ea7\u548c\u6062\u590d\u673a\u5236 - \u67b6\u6784\u4f18\u5316\u91cd\u6784 - \u6027\u80fd\u4f18\u5316 - \u6587\u6863\u5b8c\u5584</p> <p>\u7b2c\u4e09\u4f18\u5148\u7ea7 (\u957f\u671f\u89c4\u5212): - \ud83c\udd95 \u6570\u636e\u6e90\u6269\u5c55\u80fd\u529b - \ud83c\udd95 \u667a\u80fd\u7f13\u5b58\u7b56\u7565\u4f18\u5316 - \u529f\u80fd\u6269\u5c55 - \u7528\u6237\u4f53\u9a8c\u4f18\u5316 - \u5546\u4e1a\u5316\u51c6\u5907</p>"},{"location":"01_project_overview/project_analysis_report.html#2_1","title":"2. \u91cd\u6784\u7b56\u7565","text":"<p>\u6e10\u8fdb\u5f0f\u91cd\u6784: - \u4fdd\u6301\u7cfb\u7edf\u529f\u80fd\u6b63\u5e38\u8fd0\u884c - \u5206\u6a21\u5757\u9010\u6b65\u91cd\u6784 - \u6bcf\u4e2a\u9636\u6bb5\u90fd\u6709\u53ef\u4ea4\u4ed8\u6210\u679c</p> <p>\u8d28\u91cf\u4f18\u5148: - \u4ee3\u7801\u8d28\u91cf\u662f\u91cd\u6784\u7684\u6838\u5fc3\u76ee\u6807 - \u5efa\u7acb\u5b8c\u5584\u7684\u8d28\u91cf\u4fdd\u8bc1\u4f53\u7cfb - \u6301\u7eed\u76d1\u63a7\u548c\u6539\u8fdb</p> <p>\u6d4b\u8bd5\u9a71\u52a8: - \u91cd\u6784\u524d\u8865\u5145\u6d4b\u8bd5\u7528\u4f8b - \u786e\u4fdd\u91cd\u6784\u4e0d\u7834\u574f\u73b0\u6709\u529f\u80fd - \u5efa\u7acb\u56de\u5f52\u6d4b\u8bd5\u673a\u5236</p>"},{"location":"01_project_overview/project_analysis_report.html#3_1","title":"3. \u9884\u671f\u6536\u76ca","text":"<p>\u77ed\u671f\u6536\u76ca (1-3\u4e2a\u6708): - \ud83c\udd95 \u6570\u636e\u53ef\u9760\u6027\u63d0\u534790% (\u53cc\u6570\u636e\u6e90\u4fdd\u969c) - \ud83c\udd95 API\u8c03\u7528\u6210\u672c\u964d\u4f4e60% (\u667a\u80fd\u7f13\u5b58) - \u4ee3\u7801\u8d28\u91cf\u663e\u8457\u63d0\u5347 - \u5f00\u53d1\u6548\u7387\u63d0\u9ad830% - Bug\u6570\u91cf\u51cf\u5c1150%</p> <p>\u4e2d\u671f\u6536\u76ca (3-6\u4e2a\u6708): - \ud83c\udd95 \u6570\u636e\u8bbf\u95ee\u901f\u5ea6\u63d0\u534770% (\u7f13\u5b58\u4f18\u5316) - \ud83c\udd95 \u7cfb\u7edf\u53ef\u7528\u6027\u8fbe\u523099.5% (\u81ea\u52a8\u964d\u7ea7) - \u7cfb\u7edf\u6027\u80fd\u63d0\u534740% - \u7ef4\u62a4\u6210\u672c\u964d\u4f4e60% - \u65b0\u529f\u80fd\u5f00\u53d1\u901f\u5ea6\u63d0\u534750%</p> <p>\u957f\u671f\u6536\u76ca (6-12\u4e2a\u6708): - \ud83c\udd95 \u652f\u6301\u591a\u6570\u636e\u6e90\u6269\u5c55\u80fd\u529b - \ud83c\udd95 \u667a\u80fd\u6570\u636e\u6e90\u9009\u62e9\u548c\u4f18\u5316 - \u7cfb\u7edf\u7a33\u5b9a\u6027\u5927\u5e45\u63d0\u5347 - \u652f\u6301\u66f4\u5927\u89c4\u6a21\u7528\u6237 - \u5177\u5907\u5546\u4e1a\u5316\u80fd\u529b</p>"},{"location":"01_project_overview/project_analysis_report.html#_9","title":"\u98ce\u9669\u8bc4\u4f30","text":""},{"location":"01_project_overview/project_analysis_report.html#1_2","title":"1. \u6280\u672f\u98ce\u9669","text":"<p>\u91cd\u6784\u98ce\u9669 (\u4e2d\u7b49 \ud83d\udfe1): - \u91cd\u6784\u8fc7\u7a0b\u53ef\u80fd\u5f15\u5165\u65b0bug - \u529f\u80fd\u56de\u5f52\u98ce\u9669 - \u6027\u80fd\u4e0b\u964d\u98ce\u9669</p> <p>\u4f9d\u8d56\u98ce\u9669 (\u4e2d\u7b49 \ud83d\udfe1): - \u7b2c\u4e09\u65b9\u5e93\u66f4\u65b0\u98ce\u9669 - Tushare API\u53d8\u66f4\u548c\u9650\u6d41\u98ce\u9669 - PostgreSQL\u6570\u636e\u6e90\u7a33\u5b9a\u6027\u98ce\u9669 - \ud83c\udd95 \u53cc\u6570\u636e\u6e90\u540c\u6b65\u4e00\u81f4\u6027\u98ce\u9669 - \ud83c\udd95 \u7f13\u5b58\u6570\u636e\u8fc7\u671f\u98ce\u9669</p> <p>\u6280\u672f\u9009\u578b\u98ce\u9669 (\u4f4e \ud83d\udfe2): - \u73b0\u6709\u6280\u672f\u6808\u6210\u719f\u7a33\u5b9a - \u793e\u533a\u652f\u6301\u826f\u597d - \u5b66\u4e60\u6210\u672c\u53ef\u63a7</p>"},{"location":"01_project_overview/project_analysis_report.html#2_2","title":"2. \u4e1a\u52a1\u98ce\u9669","text":"<p>\u7528\u6237\u4f53\u9a8c\u98ce\u9669 (\u4f4e \ud83d\udfe2): - \u91cd\u6784\u671f\u95f4\u529f\u80fd\u53ef\u80fd\u6682\u65f6\u4e0d\u53ef\u7528 - \u754c\u9762\u53d8\u5316\u53ef\u80fd\u5f71\u54cd\u7528\u6237\u4e60\u60ef</p> <p>\u6570\u636e\u98ce\u9669 (\u4e2d\u7b49 \ud83d\udfe1): - \u6570\u636e\u8fc1\u79fb\u98ce\u9669 - \u5386\u53f2\u6570\u636e\u517c\u5bb9\u6027 - \u8ba1\u7b97\u7ed3\u679c\u4e00\u81f4\u6027</p>"},{"location":"01_project_overview/project_analysis_report.html#3_2","title":"3. \u9879\u76ee\u98ce\u9669","text":"<p>\u65f6\u95f4\u98ce\u9669 (\u4e2d\u7b49 \ud83d\udfe1): - \u91cd\u6784\u65f6\u95f4\u53ef\u80fd\u8d85\u51fa\u9884\u671f - \u8d44\u6e90\u6295\u5165\u53ef\u80fd\u4e0d\u8db3</p> <p>\u4eba\u5458\u98ce\u9669 (\u4f4e \ud83d\udfe2): - \u6280\u672f\u56e2\u961f\u80fd\u529b\u5339\u914d - \u77e5\u8bc6\u4f20\u627f\u98ce\u9669\u53ef\u63a7</p>"},{"location":"01_project_overview/project_analysis_report.html#_10","title":"\u7ed3\u8bba\u4e0e\u5efa\u8bae","text":""},{"location":"01_project_overview/project_analysis_report.html#1_3","title":"1. \u603b\u4f53\u8bc4\u4f30","text":"<p>\u80a1\u7968\u4f30\u503c\u7cfb\u7edf\u662f\u4e00\u4e2a\u529f\u80fd\u5b8c\u6574\u3001\u5177\u6709\u5546\u4e1a\u4ef7\u503c\u7684\u9879\u76ee\uff0c\u901a\u8fc7\u91c7\u7528Tushare + PostgreSQL\u6df7\u5408\u67b6\u6784\uff0c\u663e\u8457\u63d0\u5347\u4e86\u6570\u636e\u53ef\u9760\u6027\u548c\u7cfb\u7edf\u7a33\u5b9a\u6027\u3002\u867d\u7136\u4ecd\u5b58\u5728\u4ee3\u7801\u8d28\u91cf\u95ee\u9898\u548c\u6280\u672f\u503a\u52a1\uff0c\u4f46\u6df7\u5408\u67b6\u6784\u7684\u5f15\u5165\u4e3a\u7cfb\u7edf\u5e26\u6765\u4e86\u65b0\u7684\u4f18\u52bf\u3002\u7cfb\u7edf\u7684\u6838\u5fc3\u4e1a\u52a1\u903b\u8f91\u6b63\u786e\uff0c\u6d4b\u8bd5\u8986\u76d6\u57fa\u672c\u5145\u5206\uff0c\u9700\u8981\u8fdb\u884c\u7cfb\u7edf\u6027\u91cd\u6784\u548c\u67b6\u6784\u4f18\u5316\u3002</p>"},{"location":"01_project_overview/project_analysis_report.html#2_3","title":"2. \u91cd\u6784\u5fc5\u8981\u6027","text":"<p>\u5efa\u8bae\u6301\u7eed\u91cd\u6784\u4e0e\u67b6\u6784\u5347\u7ea7\uff0c\u7406\u7531\u5982\u4e0b\uff1a - \ud83c\udd95 \u6df7\u5408\u67b6\u6784\u4e0e\u670d\u52a1\u5c42\u5b88\u62a4\u5df2\u5e26\u6765\u7a33\u5b9a\u6027\u63d0\u5347\uff1b\u7ee7\u7eed\u89e3\u8026\u654f\u611f\u6027/\u60c5\u666f\u6a21\u5757\u53ef\u8fdb\u4e00\u6b65\u964d\u4f4e\u8026\u5408\u3002 - \ud83c\udd95 \u6570\u636e\u6e90\u4e0e\u4f30\u503c\u57fa\u671f\u7b56\u7565\u66f4\u7075\u6d3b\uff1b\u9700\u5f15\u5165\u7edf\u4e00\u5f02\u5e38/\u544a\u8b66\u89c4\u8303\u4e0e\u53ef\u89c2\u6d4b\u6027\u3002 - \u4ee3\u7801\u8d28\u91cf\u95ee\u9898\u4ecd\u5f71\u54cd\u6548\u7387\uff1b\u5efa\u8bae\u63a8\u8fdb\u6a21\u5757\u5316\u4e0e\u7c7b\u578b\u7ea6\u675f\uff0c\u8865\u9f50\u6027\u80fd/\u96c6\u6210\u6d4b\u8bd5\u3002</p>"},{"location":"01_project_overview/project_analysis_report.html#3_3","title":"3. \u5b9e\u65bd\u5efa\u8bae","text":"<p>\u7acb\u5373\u884c\u52a8: 1. \ud83c\udd95 \u5b9e\u65bd\u6df7\u5408\u6570\u636e\u6e90\u67b6\u6784 2. \ud83c\udd95 \u5f00\u53d1\u6570\u636e\u6e90\u7ba1\u7406\u548c\u7f13\u5b58\u7cfb\u7edf 3. \u542f\u52a8\u4ee3\u7801\u8d28\u91cf\u6539\u8fdb\u8ba1\u5212 4. \u5efa\u7acb\u4ee3\u7801\u89c4\u8303\u548c\u8d28\u91cf\u68c0\u67e5\u6d41\u7a0b 5. \u8865\u5145\u5173\u952e\u6a21\u5757\u7684\u6d4b\u8bd5\u7528\u4f8b</p> <p>\u8fd1\u671f\u89c4\u5212: 1. \ud83c\udd95 \u5efa\u7acb\u6570\u636e\u6e90\u76d1\u63a7\u548c\u544a\u8b66\u673a\u5236 2. \ud83c\udd95 \u5b9e\u73b0\u81ea\u52a8\u964d\u7ea7\u548c\u6062\u590d\u7b56\u7565 3. \u6267\u884c\u5206\u9636\u6bb5\u91cd\u6784\u8ba1\u5212 4. \u4f18\u5316\u7cfb\u7edf\u67b6\u6784\u548c\u6027\u80fd 5. \u5b8c\u5584\u6587\u6863\u548c\u90e8\u7f72\u6d41\u7a0b</p> <p>\u957f\u671f\u76ee\u6807: 1. \ud83c\udd95 \u6784\u5efa\u667a\u80fd\u6570\u636e\u6e90\u9009\u62e9\u548c\u4f18\u5316\u80fd\u529b 2. \ud83c\udd95 \u652f\u6301\u66f4\u591a\u6570\u636e\u6e90\u7684\u6269\u5c55 3. \u5efa\u7acb\u53ef\u6301\u7eed\u7684\u5f00\u53d1\u548c\u7ef4\u62a4\u4f53\u7cfb 4. \u6269\u5c55\u7cfb\u7edf\u529f\u80fd\u548c\u7528\u6237\u89c4\u6a21 5. \u63a2\u7d22\u5546\u4e1a\u5316\u673a\u4f1a</p>"},{"location":"01_project_overview/project_analysis_report.html#4_1","title":"4. \u6210\u529f\u5173\u952e\u56e0\u7d20","text":"<ul> <li>\u7ba1\u7406\u5c42\u652f\u6301: \u786e\u4fdd\u5145\u8db3\u7684\u8d44\u6e90\u6295\u5165</li> <li>\u56e2\u961f\u534f\u4f5c: \u5efa\u7acb\u826f\u597d\u7684\u534f\u4f5c\u673a\u5236</li> <li>\u8d28\u91cf\u4fdd\u8bc1: \u5efa\u7acb\u4e25\u683c\u7684\u8d28\u91cf\u6807\u51c6</li> <li>\u6301\u7eed\u6539\u8fdb: \u5efa\u7acb\u6301\u7eed\u4f18\u5316\u7684\u6587\u5316</li> </ul> <p>\u901a\u8fc7\u6df7\u5408\u67b6\u6784\u5347\u7ea7\u548c\u7cfb\u7edf\u6027\u91cd\u6784\uff0c\u80a1\u7968\u4f30\u503c\u7cfb\u7edf\u5c06\u6210\u4e3a\u4e00\u4e2a\u9ad8\u8d28\u91cf\u3001\u9ad8\u6027\u80fd\u3001\u9ad8\u53ef\u9760\u6027\u3001\u6613\u7ef4\u62a4\u7684\u4e13\u4e1a\u91d1\u878d\u5206\u6790\u5de5\u5177\uff0c\u5177\u5907\u5f3a\u5927\u7684\u6570\u636e\u5904\u7406\u80fd\u529b\u548c\u957f\u671f\u53d1\u5c55\u548c\u5546\u4e1a\u5316\u7684\u6f5c\u529b\u3002</p> <p>\u62a5\u544a\u751f\u6210\u65f6\u95f4: 2025\u5e741\u6708 \u5206\u6790\u5de5\u5177: Pylint, pytest, \u4eba\u5de5\u4ee3\u7801\u5ba1\u67e5 \u62a5\u544a\u7248\u672c: v1.0 \u4e0b\u6b21\u8bc4\u4f30\u5efa\u8bae: \u91cd\u6784\u5b8c\u6210\u540e3\u4e2a\u6708</p>"},{"location":"01_project_overview/project_status_2025_09_latest.html","title":"\u80a1\u7968\u4f30\u503c\u7cfb\u7edf\u9879\u76ee\u72b6\u6001\u62a5\u544a","text":"<p>\u6700\u540e\u66f4\u65b0: 2025-09-26</p>"},{"location":"01_project_overview/project_status_2025_09_latest.html#_2","title":"\u6267\u884c\u6458\u8981","text":"<p>\u672c\u9879\u76ee\u662f\u4e00\u4e2a\u57fa\u4e8eDCF\u6a21\u578b\u7684\u4e13\u4e1a\u80a1\u7968\u4f30\u503c\u7cfb\u7edf\uff0c\u5f53\u524d\u5df2\u5b8c\u6210\u4eceProof of Concept\u5230Production Ready\u7684\u8f6c\u6362\u3002\u7cfb\u7edf\u5b9e\u73b0\u4e86\u6df7\u5408\u6570\u636e\u6e90\u67b6\u6784\uff08TuShare + PostgreSQL\uff09\uff0c\u5177\u5907\u5b8c\u6574\u7684\u4f30\u503c\u94fe\u8def\u3001LLM\u667a\u80fd\u5206\u6790\u3001\u654f\u611f\u6027\u5206\u6790\u3001\u80a1\u7968\u7b5b\u9009\u7b49\u529f\u80fd\u3002</p> <p>\u5f53\u524d\u7248\u672c: v3.0.0 (feature/user-auth\u5206\u652f) \u6838\u5fc3\u6280\u672f\u6808: Python 3.9+, FastAPI, Streamlit, PostgreSQL, TuShare API \u67b6\u6784\u6a21\u5f0f: \u6df7\u5408\u6570\u636e\u6e90 + \u6a21\u5757\u5316DCF\u8ba1\u7b97 + LLM\u667a\u80fd\u5206\u6790 \u90e8\u7f72\u72b6\u6001: \u5f00\u53d1\u73af\u5883\u8fd0\u884c(Streamlit\u7aef\u53e38501)\uff0c\u751f\u4ea7\u5c31\u7eea</p>"},{"location":"01_project_overview/project_status_2025_09_latest.html#_3","title":"\u5173\u952e\u6210\u5c31","text":"<ul> <li>\u2705 \u751f\u4ea7\u7ea7\u6570\u636e\u6e90: TuShare\u63a5\u53e3\u5b8c\u5168\u5bf9\u9f50PostgreSQL\u6807\u51c6\uff0c\u652f\u6301\u6570\u636e\u6e90\u70ed\u5207\u6362</li> <li>\u2705 \u6a21\u5757\u5316DCF\u5f15\u64ce: 6\u4e2a\u72ec\u7acb\u8ba1\u7b97\u5668\uff0c\u8986\u76d6\u4eceNWC\u5230\u80a1\u6743\u4ef7\u503c\u7684\u5b8c\u6574\u94fe\u8def</li> <li>\u2705 Streamlit\u524d\u7aef\u67b6\u6784: \u57fa\u4e8eStreamlit\u7684\u73b0\u4ee3\u5316Web\u754c\u9762\uff0c\u652f\u6301\u7528\u6237\u53cb\u597d\u64cd\u4f5c</li> <li>\u2705 \u7528\u6237\u8ba4\u8bc1\u7cfb\u7edf: \u5b8c\u6574\u7684\u7528\u6237\u6ce8\u518c/\u767b\u5f55/\u4f1a\u8bdd\u7ba1\u7406\uff0c\u6570\u636e\u5e93\u4eceSQLite\u8fc1\u79fb\u81f3Postgres/Supabase</li> <li>\u2705 \u667a\u80fd\u7f13\u5b58\u7cfb\u7edf: \u4f30\u503c\u7ed3\u679c\u7f13\u5b58\u4e0e\u4f1a\u8bdd\u6062\u590d\uff0c\u5927\u5e45\u63d0\u5347\u7528\u6237\u4f53\u9a8c\u548c\u7cfb\u7edf\u6027\u80fd</li> <li>\u2705 LLM\u96c6\u6210: \u652f\u6301DeepSeek/OpenAI\u517c\u5bb9API\uff0c\u751f\u6210\u6295\u8d44\u5206\u6790\u62a5\u544a</li> <li>\u2705 \u654f\u611f\u6027\u5206\u6790: \u591a\u7ef4\u5ea6\u4f30\u503csensitivity table\uff0c\u652f\u6301\u7ec8\u503c\u6cd5/\u6c38\u7eed\u589e\u957f\u6cd5</li> <li>\u2705 \u80a1\u7968\u7b5b\u9009\u5668: \u57fa\u4e8e\u8d22\u52a1\u6307\u6807\u7684\u591a\u6761\u4ef6\u7b5b\u9009</li> <li>\u2705 LTM\u57fa\u7ebf: \u652f\u6301Last Twelve Months\u6536\u5165\u57fa\u671f\uff0c\u63d0\u5347\u65f6\u6548\u6027</li> </ul>"},{"location":"01_project_overview/project_status_2025_09_latest.html#_4","title":"\u5f53\u524d\u67b6\u6784\u6982\u89c8","text":""},{"location":"01_project_overview/project_status_2025_09_latest.html#2025-09","title":"\u7cfb\u7edf\u67b6\u6784\uff082025-09\u7248\u672c\uff09","text":"<pre><code>\u524d\u7aef\u5c42 (Streamlit)\n\u2514\u2500\u2500 Streamlit: frontend-streamlit/streamlit_app.py\n\nAPI\u670d\u52a1\u5c42\n\u2514\u2500\u2500 FastAPI: src/api/main.py (\u7aef\u53e38124)\n    \u251c\u2500\u2500 \u4f30\u503c\u63a5\u53e3: /api/v1/valuation\n    \u251c\u2500\u2500 \u654f\u611f\u6027\u5206\u6790: /api/v1/sensitivity\n    \u2514\u2500\u2500 \u80a1\u7968\u7b5b\u9009: /api/v1/screener\n\n\u4e1a\u52a1\u903b\u8f91\u5c42\n\u251c\u2500\u2500 \u6838\u5fc3\u8ba1\u7b97\u5f15\u64ce: src/core/\n\u2502   \u251c\u2500\u2500 calculators/dcf/: DCF\u8ba1\u7b97\u5668\u96c6\u7fa4(6\u4e2a\u6a21\u5757)\n\u2502   \u251c\u2500\u2500 financial/: \u8d22\u52a1\u9884\u6d4b\u4e0e\u5904\u7406\u5f15\u64ce\n\u2502   \u2514\u2500\u2500 screener/: \u80a1\u7968\u7b5b\u9009\u5668\n\u251c\u2500\u2500 \u6570\u636e\u670d\u52a1: src/data/\n\u2502   \u251c\u2500\u2500 fetchers/: \u6570\u636e\u83b7\u53d6\u5668(TuShare/PostgreSQL)\n\u2502   \u2514\u2500\u2500 processors/: \u6570\u636e\u6e05\u6d17\u4e0e\u5904\u7406\n\u2514\u2500\u2500 \u4e1a\u52a1\u670d\u52a1: src/services/valuation_service.py\n\n\u6570\u636e\u5c42\n\u251c\u2500\u2500 TuShare API: \u5b9e\u65f6\u91d1\u878d\u6570\u636e(\u4e3b\u8981)\n\u251c\u2500\u2500 PostgreSQL: \u5386\u53f2\u6570\u636e\u5b58\u50a8/\u6821\u9a8c\u57fa\u51c6\n\u2514\u2500\u2500 Redis: \u7f13\u5b58\u5c42(\u914d\u7f6e\u9879)\n</code></pre>"},{"location":"01_project_overview/project_status_2025_09_latest.html#_5","title":"\u6838\u5fc3\u6a21\u5757\u7edf\u8ba1","text":"<ul> <li>\u6e90\u4ee3\u7801\u6587\u4ef6: 34\u4e2aPython\u6a21\u5757</li> <li>\u6d4b\u8bd5\u6587\u4ef6: 27\u4e2a\u6d4b\u8bd5\u6a21\u5757</li> <li>\u524d\u7aef\u6587\u4ef6: 17\u4e2a\u524d\u7aef\u7ec4\u4ef6</li> <li>\u914d\u7f6e\u6587\u4ef6: \u652f\u6301uv/pip\u53cc\u5305\u7ba1\u7406\uff0cpre-commit\u4ee3\u7801\u8d28\u91cf\u4fdd\u969c</li> </ul>"},{"location":"01_project_overview/project_status_2025_09_latest.html#_6","title":"\u4e3b\u8981\u529f\u80fd\u6a21\u5757","text":""},{"location":"01_project_overview/project_status_2025_09_latest.html#1","title":"1. \u7528\u6237\u8ba4\u8bc1\u4e0e\u4f1a\u8bdd\u7ba1\u7406","text":"<p>\u4f4d\u7f6e: <code>src/auth/</code>, <code>frontend-streamlit/auth/</code></p> <p>\u529f\u80fd\u7279\u6027: - \u5b8c\u6574\u7684\u7528\u6237\u6ce8\u518c\u3001\u767b\u5f55\u3001\u4f1a\u8bdd\u7ba1\u7406\u7cfb\u7edf - \u6570\u636e\u5e93\u67b6\u6784\u8fc1\u79fb\uff1aSQLite \u2192 PostgreSQL/Supabase\uff0c\u652f\u6301\u9ad8\u5e76\u53d1\u548c\u4e91\u539f\u751f\u90e8\u7f72 - \u4f1a\u8bdd\u6301\u4e45\u5316\uff1a\u7528\u6237\u767b\u5f55\u72b6\u6001\u548c\u4f30\u503c\u7ed3\u679c\u7f13\u5b58\uff0c\u63d0\u5347\u7528\u6237\u4f53\u9a8c - \u8ba4\u8bc1\u4e2d\u95f4\u4ef6\uff1a\u4fdd\u62a4\u654f\u611f\u529f\u80fd\u548c\u6570\u636e\u8bbf\u95ee - \u5b89\u5168\u7279\u6027\uff1a\u5bc6\u7801\u54c8\u5e0c\u3001\u4f1a\u8bdd\u4ee4\u724c\u3001\u9632CSRF\u7b49</p> <p>\u5173\u952e\u6539\u8fdb(2025-09): - \u89e3\u51b3SQLite\u5e76\u53d1\u9501\u95ee\u9898\uff0c\u8fc1\u79fb\u81f3\u6210\u719f\u7684\u5173\u7cfb\u578b\u6570\u636e\u5e93 - \u667a\u80fd\u7f13\u5b58\u673a\u5236\uff0c\u4f30\u503c\u7ed3\u679c\u5728\u4f1a\u8bdd\u95f4\u6301\u4e45\u4fdd\u5b58 - \u4f18\u5316\u7528\u6237\u754c\u9762\uff0c\u7b80\u5316\u8ba4\u8bc1\u6d41\u7a0b</p>"},{"location":"01_project_overview/project_status_2025_09_latest.html#2","title":"2. \u6570\u636e\u83b7\u53d6\u4e0e\u5904\u7406","text":"<p>\u4f4d\u7f6e: <code>src/data/fetchers/</code>, <code>src/core/financial/processor.py</code></p> <p>\u529f\u80fd\u7279\u6027: - \u6df7\u5408\u6570\u636e\u6e90\u67b6\u6784: <code>DATA_SOURCE=tushare/postgres/hybrid</code> - TuShare\u5e74\u62a5\u4e25\u683c\u7b5b\u9009: <code>end_type='4'</code>, <code>update_flag='1'</code>\u4f18\u5148 - \u5b57\u6bb5\u6620\u5c04\u7edf\u4e00: \u5e94\u6536\u8d26\u6b3e+\u7968\u636e\u805a\u5408\u3001\u56fa\u5b9a\u8d44\u4ea7\u56de\u9000\u3001EPS\u53bb\u91cd - \u6570\u636e\u6e05\u6d17\u4fdd\u62a4: \u5173\u952e\u79d1\u76ee(\u6536\u5165/\u5229\u6da6/\u8d44\u4ea7/\u8d1f\u503a)\u514d\u53d7\u5f02\u5e38\u503c\u8bef\u5224 - LTM\u652f\u6301: \u5b63\u5ea6+\u5e74\u62a5\u7ec4\u88c5Last Twelve Months\u57fa\u7ebf</p> <p>\u5173\u952e\u6539\u8fdb(2025-09): - \u4fee\u590d\u8d44\u4ea7\u8d1f\u503a\u8868\u57fa\u51c6\u65e5\u56de\u9000\u52302023\u7684\u95ee\u9898 - \u4fdd\u62a4\u5217\u673a\u5236\u9632\u6b62\u7ed3\u6784\u6027\u8dc3\u8fc1\u88ab\u8bef\u5224\u4e3a\u5f02\u5e38 - \u6309\u5e74\u62e9\u4f18\u4fdd\u7559(\u4e0d\u518d\u4e22\u5931\u6700\u65b0\u5e74\u5ea6\u6570\u636e)</p>"},{"location":"01_project_overview/project_status_2025_09_latest.html#2-dcf","title":"2. DCF\u4f30\u503c\u8ba1\u7b97\u5f15\u64ce","text":"<p>\u4f4d\u7f6e: <code>src/core/calculators/dcf/</code>, <code>src/core/financial/forecaster.py</code></p> <p>\u6a21\u5757\u7ec4\u6210: 1. NwcCalculator: \u51c0\u8425\u8fd0\u8d44\u672c\u8ba1\u7b97\u4e0e\u9884\u6d4b 2. FcfCalculator: \u65e0\u6760\u6746\u81ea\u7531\u73b0\u91d1\u6d41\u8ba1\u7b97 3. WaccCalculator: \u52a0\u6743\u5e73\u5747\u8d44\u672c\u6210\u672c\u8ba1\u7b97 4. TerminalValueCalculator: \u7ec8\u503c\u8ba1\u7b97(\u9000\u51fa\u500d\u6570/\u6c38\u7eed\u589e\u957f) 5. PresentValueCalculator: \u73b0\u503c\u6298\u73b0\u8ba1\u7b97 6. EquityBridgeCalculator: \u4f01\u4e1a\u4ef7\u503c\u5230\u80a1\u6743\u4ef7\u503c\u6865\u63a5</p> <p>\u4f30\u503c\u94fe\u8def:</p> <pre><code>\u5386\u53f2\u6570\u636e \u2192 \u6e05\u6d17\u5904\u7406 \u2192 \u6bd4\u7387\u4e2d\u4f4d\u6570 \u2192 \u8d22\u52a1\u9884\u6d4b \u2192 UFCF\u8ba1\u7b97 \u2192 \u7ec8\u503c\u8ba1\u7b97 \u2192 \u73b0\u503c\u6298\u73b0 \u2192 \u80a1\u6743\u4ef7\u503c \u2192 \u6bcf\u80a1\u4ef7\u503c\n</code></pre> <p>\u5173\u952e\u7279\u6027: - \u5386\u53f2\u6bd4\u7387\u4e2d\u4f4d\u6570\u9a71\u52a8\u9884\u6d4b - \u652f\u6301CAGR\u8870\u51cf\u4e0e\u8fc7\u6e21\u5230\u76ee\u6807\u503c - \u540d\u4e49GDP\u4e0a\u9650\u7ea6\u675f(\u4e2d\u56fd\u5e02\u573a) - Decimal\u7cbe\u5ea6\u8ba1\u7b97\u907f\u514d\u6d6e\u70b9\u8bef\u5dee</p>"},{"location":"01_project_overview/project_status_2025_09_latest.html#3-llm","title":"3. LLM\u667a\u80fd\u5206\u6790","text":"<p>\u4f4d\u7f6e: <code>src/api/llm_utils.py</code>, <code>src/config/llm_prompt_template.md</code></p> <p>\u652f\u6301\u6a21\u578b: - DeepSeek Chat - OpenAI\u517c\u5bb9API(\u81ea\u5b9a\u4e49) - \u73af\u5883\u53d8\u91cf\u914d\u7f6e: <code>LLM_PROVIDER</code>, <code>*_API_KEY</code></p> <p>\u5206\u6790\u5185\u5bb9: - \u4f30\u503c\u7ed3\u679c\u89e3\u8bfb\u4e0e\u6295\u8d44\u5efa\u8bae - \u5173\u952e\u5047\u8bbe\u654f\u611f\u6027\u5206\u6790 - \u884c\u4e1a\u5bf9\u6bd4\u4e0e\u98ce\u9669\u63d0\u793a - \u4e2d\u6587\u4e13\u4e1a\u62a5\u544a\u751f\u6210</p>"},{"location":"01_project_overview/project_status_2025_09_latest.html#4","title":"4. \u654f\u611f\u6027\u5206\u6790\u7cfb\u7edf","text":"<p>\u4f4d\u7f6e: <code>src/api/sensitivity_models.py</code></p> <p>\u5206\u6790\u7ef4\u5ea6: - WACC vs \u6c38\u7eed\u589e\u957f\u7387 - WACC vs \u9000\u51fa\u500d\u6570 - \u6536\u5165CAGR vs EBITDA\u5229\u6da6\u7387 - \u6536\u5165CAGR vs \u7ec8\u503c\u65b9\u6cd5</p> <p>\u8f93\u51fa\u6307\u6807: - \u4f01\u4e1a\u4ef7\u503c(EV) - \u6bcf\u80a1\u4ef7\u503c(VPS) - EV/EBITDA\u500d\u6570 - \u9690\u542bPE\u500d\u6570 - \u9690\u542b\u6c38\u7eed\u589e\u957f\u7387</p>"},{"location":"01_project_overview/project_status_2025_09_latest.html#5","title":"5. \u80a1\u7968\u7b5b\u9009\u5668","text":"<p>\u4f4d\u7f6e: <code>src/core/screener/</code></p> <p>\u7b5b\u9009\u6761\u4ef6: - \u5e02\u503c\u8303\u56f4 - \u4f30\u503c\u500d\u6570(PE/PB/EV/EBITDA) - \u8d22\u52a1\u6307\u6807(ROE/ROA/\u6536\u5165\u589e\u957f\u7387) - \u884c\u4e1a/\u677f\u5757\u8fc7\u6ee4</p>"},{"location":"01_project_overview/project_status_2025_09_latest.html#_7","title":"\u5f00\u53d1\u5de5\u5177\u94fe","text":""},{"location":"01_project_overview/project_status_2025_09_latest.html#_8","title":"\u4ee3\u7801\u8d28\u91cf\u4fdd\u969c","text":"<ul> <li>\u683c\u5f0f\u5316: Black + isort</li> <li>\u9759\u6001\u68c0\u67e5: Ruff + MyPy(\u9010\u6b65\u542f\u7528)</li> <li>\u5b89\u5168\u626b\u63cf: Bandit + Safety</li> <li>\u9884\u63d0\u4ea4\u94a9\u5b50: pre-commit\u914d\u7f6e</li> <li>\u6d4b\u8bd5\u8986\u76d6: pytest + pytest-cov</li> </ul>"},{"location":"01_project_overview/project_status_2025_09_latest.html#_9","title":"\u5305\u7ba1\u7406","text":"<ul> <li>\u4e3b\u8981: uv(\u63a8\u8350,\u66f4\u5feb\u66f4\u53ef\u9760)</li> <li>\u5907\u9009: pip + requirements.txt</li> <li>\u4f9d\u8d56\u7ec4: <code>[dev]</code>, <code>[test]</code>, <code>[docs]</code></li> </ul>"},{"location":"01_project_overview/project_status_2025_09_latest.html#_10","title":"\u8fd0\u884c\u547d\u4ee4","text":"<pre><code># \u73af\u5883\u8bbe\u7f6e\nuv venv &amp;&amp; source .venv/bin/activate\nuv pip install -e \".[dev,test]\"\n\n# \u4ee3\u7801\u8d28\u91cf\npre-commit run --all-files\nblack . &amp;&amp; isort . &amp;&amp; ruff check --fix .\n\n# \u6d4b\u8bd5\npytest --cov=. --cov-report=html\n\n# \u5e94\u7528\u8fd0\u884c\nstreamlit run frontend-streamlit/streamlit_app.py\nuvicorn src.api.main:app --reload --port 8124\n</code></pre>"},{"location":"01_project_overview/project_status_2025_09_latest.html#_11","title":"\u6570\u636e\u6e90\u5bf9\u6bd4\u4e0e\u9a8c\u8bc1","text":""},{"location":"01_project_overview/project_status_2025_09_latest.html#tushare-vs-postgresql","title":"TuShare vs PostgreSQL \u5bf9\u9f50\u7ed3\u679c","text":"<p>\u6d4b\u8bd5\u6848\u4f8b: 000999.SZ, 600519.SH \u5bf9\u9f50\u7ef4\u5ea6: \u57fa\u51c6\u65e5\u671f\u3001\u5386\u53f2CAGR\u3001\u6700\u65b0EBITDA\u3001NWC\u7ec4\u4ef6\u3001EV\u4f30\u503c</p> <p>\u5bf9\u9f50\u72b6\u51b5: - \u2705 \u57fa\u51c6\u62a5\u8868\u65e5\u671f: 2024-12-31 (\u4e00\u81f4) - \u2705 \u5386\u53f2\u6536\u5165CAGR: 21.698%/17.184% (\u5b8c\u5168\u4e00\u81f4) - \u2705 \u6700\u65b0\u5b9e\u9645EBITDA: 600519\u5b8c\u5168\u4e00\u81f4\uff0c000999\u63a5\u8fd1 - \u2705 DCF\u8ba1\u7b97\u94fe\u8def: WACC\u3001\u7ec8\u503c\u3001\u73b0\u503c\u903b\u8f91\u4e00\u81f4 - \u26a0\ufe0f VPS\u5dee\u5f02: \u4e3b\u8981\u7531\u80a1\u672c\u5feb\u7167\u65f6\u95f4\u5dee\u5f02(TS\u66f4\u53ca\u65f6)</p>"},{"location":"01_project_overview/project_status_2025_09_latest.html#_12","title":"\u6570\u636e\u6e90\u9009\u62e9\u5efa\u8bae","text":"<ul> <li>\u751f\u4ea7\u4f30\u503c: <code>DATA_SOURCE=tushare</code> (\u66f4\u53ca\u65f6\u3001\u66f4\u5b8c\u6574)</li> <li>\u5386\u53f2\u590d\u73b0: <code>DATA_SOURCE=postgres</code> \u6216 TS\u7684PG\u517c\u5bb9\u6a21\u5f0f</li> <li>\u5f00\u53d1\u8c03\u8bd5: <code>DATA_SOURCE=hybrid</code> (PG\u4f18\u5148,TS\u56de\u9000)</li> </ul>"},{"location":"01_project_overview/project_status_2025_09_latest.html#_13","title":"\u5df2\u77e5\u95ee\u9898\u4e0e\u9650\u5236","text":""},{"location":"01_project_overview/project_status_2025_09_latest.html#1_1","title":"1. \u884c\u4e1a\u9002\u7528\u6027","text":"<ul> <li>\u2705 \u975e\u91d1\u878d\u4f01\u4e1a: \u5b8c\u5168\u9002\u7528</li> <li>\u26a0\ufe0f \u91d1\u878d\u4f01\u4e1a: \u90e8\u5206\u6307\u6807\u4e0d\u9002\u7528(\u94f6\u884c/\u4fdd\u9669\u7b49)\uff0c\u4f1a\u7ed9\u51fa\u8b66\u544a</li> </ul>"},{"location":"01_project_overview/project_status_2025_09_latest.html#2_1","title":"2. \u6570\u636e\u8d28\u91cf\u4f9d\u8d56","text":"<ul> <li>TuShare\u6570\u636e\u8d28\u91cf\u76f4\u63a5\u5f71\u54cd\u4f30\u503c\u7ed3\u679c</li> <li>\u9700\u8981\u5b9a\u671f\u6821\u9a8c\u4e0ePG\u57fa\u51c6\u7684\u4e00\u81f4\u6027</li> <li>\u6e05\u6d17\u7b56\u7565\u9700\u8981\u6301\u7eed\u4f18\u5316</li> </ul>"},{"location":"01_project_overview/project_status_2025_09_latest.html#3","title":"3. \u6027\u80fd\u8003\u8651","text":"<ul> <li>TuShare API\u6709\u8c03\u7528\u9891\u7387\u9650\u5236</li> <li>\u5efa\u8bae\u589e\u52a0\u672c\u5730\u7f13\u5b58\u4e0e\u91cd\u8bd5\u673a\u5236</li> <li>\u5927\u6279\u91cf\u7b5b\u9009\u65f6\u53ef\u80fd\u8f83\u6162</li> </ul>"},{"location":"01_project_overview/project_status_2025_09_latest.html#_14","title":"\u4e0b\u4e00\u6b65\u89c4\u5212","text":""},{"location":"01_project_overview/project_status_2025_09_latest.html#1-2","title":"\u77ed\u671f\u4f18\u5316(1-2\u5468)","text":"<ul> <li>[ ] \u6027\u80fd\u4f18\u5316: \u672c\u5730\u7f13\u5b58\u673a\u5236</li> <li>[ ] \u6e05\u6d17\u7b56\u7565: \u8f6f\u5316NWC\u7ec4\u4ef6\u6e05\u6d17\u89c4\u5219</li> <li>[ ] \u900f\u660e\u5ea6: \u5e02\u573a\u5feb\u7167trade_date\u900f\u4f20\u5230\u524d\u7aef</li> <li>[ ] \u6d4b\u8bd5: \u63d0\u5347\u8986\u76d6\u7387\u523080%+</li> </ul>"},{"location":"01_project_overview/project_status_2025_09_latest.html#1_2","title":"\u4e2d\u671f\u589e\u5f3a(1\u4e2a\u6708)","text":"<ul> <li>[ ] \u884c\u4e1a\u4e13\u7528\u6a21\u578b: \u91d1\u878d\u4f01\u4e1a\u4f30\u503c\u6a21\u578b</li> <li>[ ] \u6570\u636e\u76d1\u63a7: \u5b9a\u671fTS\u2194PG\u57fa\u7ebf\u6f02\u79fb\u68c0\u67e5</li> <li>[ ] \u591a\u5e02\u573a\u652f\u6301: \u6e2f\u80a1/\u7f8e\u80a1\u6570\u636e\u6e90</li> <li>[ ] \u6279\u91cf\u4f30\u503c: \u652f\u6301\u80a1\u7968\u6c60\u6279\u91cf\u5904\u7406</li> </ul>"},{"location":"01_project_overview/project_status_2025_09_latest.html#3_1","title":"\u957f\u671f\u613f\u666f(3\u4e2a\u6708)","text":"<ul> <li>[ ] \u5b9e\u65f6\u6d41\u5904\u7406: \u76d8\u4e2d\u5b9e\u65f6\u4f30\u503c\u66f4\u65b0</li> <li>[ ] \u673a\u5668\u5b66\u4e60: \u5386\u53f2\u4f30\u503c\u51c6\u786e\u6027\u53cd\u9988\u5b66\u4e60</li> <li>[ ] \u4e91\u539f\u751f\u90e8\u7f72: Docker + K8s\u751f\u4ea7\u90e8\u7f72</li> <li>[ ] \u5f00\u653eAPI: \u7b2c\u4e09\u65b9\u96c6\u6210\u63a5\u53e3</li> </ul>"},{"location":"01_project_overview/project_status_2025_09_latest.html#_15","title":"\u6280\u672f\u503a\u52a1","text":""},{"location":"01_project_overview/project_status_2025_09_latest.html#_16","title":"\u9ad8\u4f18\u5148\u7ea7","text":"<ol> <li>\u7c7b\u578b\u6ce8\u89e3: MyPy\u8986\u76d6\u7387\u4ecd\u8f83\u4f4e\uff0c\u9700\u8981\u9010\u6b65\u8865\u5f3a</li> <li>\u5f02\u5e38\u5904\u7406: \u90e8\u5206\u6a21\u5757\u7f3a\u4e4f\u5b8c\u6574\u7684\u9519\u8bef\u5904\u7406\u94fe\u8def</li> <li>\u6587\u6863\u540c\u6b65: \u4ee3\u7801\u53d8\u66f4\u540e\u6587\u6863\u66f4\u65b0\u6ede\u540e</li> </ol>"},{"location":"01_project_overview/project_status_2025_09_latest.html#_17","title":"\u4e2d\u4f18\u5148\u7ea7","text":"<ol> <li>\u65e5\u5fd7\u7cfb\u7edf: \u7edf\u4e00\u7684\u65e5\u5fd7\u683c\u5f0f\u4e0e\u7ea7\u522b\u7ba1\u7406</li> <li>\u914d\u7f6e\u7ba1\u7406: \u73af\u5883\u53d8\u91cf\u7ba1\u7406\u53ef\u4ee5\u66f4\u52a0\u7ed3\u6784\u5316</li> <li>\u6570\u636e\u5e93\u8fde\u63a5: \u8fde\u63a5\u6c60\u4e0e\u4e8b\u52a1\u7ba1\u7406\u4f18\u5316</li> </ol>"},{"location":"01_project_overview/project_status_2025_09_latest.html#_18","title":"\u7ed3\u8bba","text":"<p>\u9879\u76ee\u5df2\u8fbe\u5230\u751f\u4ea7\u53ef\u7528\u72b6\u6001\uff0c\u6838\u5fc3\u529f\u80fd\u5b8c\u6574\u4e14\u7ecf\u8fc7\u9a8c\u8bc1\u3002TuShare\u6570\u636e\u6e90\u7684\u5f15\u5165\u663e\u8457\u63d0\u5347\u4e86\u7cfb\u7edf\u7684\u65f6\u6548\u6027\u548c\u6570\u636e\u5b8c\u6574\u6027\u3002\u5f53\u524d\u7248\u672c(3.0)\u5728\u79d1\u5b66\u6027\u3001\u51c6\u786e\u6027\u3001\u5b9e\u7528\u6027\u65b9\u9762\u5747\u6ee1\u8db3\u4e13\u4e1a\u6295\u8d44\u5206\u6790\u9700\u6c42\u3002</p> <p>\u4e0b\u4e00\u9636\u6bb5\u7684\u91cd\u70b9\u662f\u6027\u80fd\u4f18\u5316\u3001\u7528\u6237\u4f53\u9a8c\u63d0\u5347\u548c\u529f\u80fd\u6269\u5c55\uff0c\u4e3a\u66f4\u5927\u89c4\u6a21\u7684\u751f\u4ea7\u5e94\u7528\u505a\u51c6\u5907\u3002</p>"},{"location":"02_architecture/index.html","title":"\u67b6\u6784\u8bbe\u8ba1\u6587\u6863","text":"<p>\u672c\u76ee\u5f55\u5305\u542b\u7cfb\u7edf\u67b6\u6784\u8bbe\u8ba1\u76f8\u5173\u6587\u6863\uff0c\u9762\u5411\u67b6\u6784\u5e08\u548c\u9ad8\u7ea7\u5f00\u53d1\u8005\u3002</p>"},{"location":"02_architecture/index.html#_2","title":"\u6587\u6863\u5217\u8868","text":""},{"location":"02_architecture/index.html#_3","title":"\ud83c\udfd7\ufe0f \u7cfb\u7edf\u67b6\u6784","text":"<ul> <li>hybrid_architecture_design.md - \u6df7\u5408\u67b6\u6784\u8be6\u7ec6\u8bbe\u8ba1\uff08\u2b50\u2b50\u2b50\u2b50 \u6838\u5fc3\uff09</li> <li>\u6574\u4f53\u67b6\u6784\u8bbe\u8ba1</li> <li>\u6570\u636e\u6e90\u67b6\u6784</li> <li>\u670d\u52a1\u95f4\u4ea4\u4e92\u8bbe\u8ba1</li> <li> <p>\u6027\u80fd\u4f18\u5316\u7b56\u7565</p> </li> <li> <p>dcf_architecture.md - DCF\u8ba1\u7b97\u67b6\u6784\u8bbe\u8ba1</p> </li> <li>DCF\u6a21\u578b\u8bbe\u8ba1</li> <li>\u8ba1\u7b97\u5668\u6a21\u5757\u67b6\u6784</li> <li>\u6570\u636e\u6d41\u8bbe\u8ba1</li> </ul>"},{"location":"02_architecture/index.html#_4","title":"\u67b6\u6784\u539f\u5219","text":"<ol> <li>\u6a21\u5757\u5316\u8bbe\u8ba1 - \u6bcf\u4e2a\u8ba1\u7b97\u6b65\u9aa4\u72ec\u7acb\u6210\u7c7b</li> <li>\u6570\u636e\u6e90\u62bd\u8c61 - \u7edf\u4e00\u6570\u636e\u63a5\u53e3\uff0c\u652f\u6301\u591a\u6570\u636e\u6e90</li> <li>\u5f02\u6b65\u5904\u7406 - FastAPI + asyncpg \u5b9e\u73b0\u9ad8\u6027\u80fd</li> <li>\u914d\u7f6e\u9a71\u52a8 - \u73af\u5883\u53d8\u91cf\u63a7\u5236\u7cfb\u7edf\u884c\u4e3a</li> </ol>"},{"location":"02_architecture/index.html#_5","title":"\u5173\u952e\u8bbe\u8ba1\u6a21\u5f0f","text":"<ul> <li>\u7b56\u7565\u6a21\u5f0f: DCF\u8ba1\u7b97\u5668\u96c6\u7fa4</li> <li>\u5de5\u5382\u6a21\u5f0f: \u6570\u636e\u6e90\u521b\u5efa</li> <li>\u89c2\u5bdf\u8005\u6a21\u5f0f: \u7f13\u5b58\u66f4\u65b0\u673a\u5236</li> <li>\u9002\u914d\u5668\u6a21\u5f0f: \u591a\u6570\u636e\u6e90\u9002\u914d</li> </ul>"},{"location":"02_architecture/index.html#_6","title":"\u9605\u8bfb\u5efa\u8bae","text":""},{"location":"02_architecture/index.html#_7","title":"\u67b6\u6784\u5e08","text":"<ol> <li>\u91cd\u70b9\u9605\u8bfb <code>hybrid_architecture_design.md</code></li> <li>\u7ed3\u5408\u4ee3\u7801\u7406\u89e3\u8bbe\u8ba1\u7406\u5ff5</li> </ol>"},{"location":"02_architecture/index.html#_8","title":"\u5f00\u53d1\u8005","text":"<p>\u5148\u4e86\u89e3\u6574\u4f53\u67b6\u6784\uff0c\u518d\u6df1\u5165\u5177\u4f53\u6a21\u5757\u8bbe\u8ba1</p>"},{"location":"02_architecture/index.html#_9","title":"\u66f4\u65b0\u9891\u7387","text":"<p>\u534a\u5e74\u5ea6\u66f4\u65b0\u6216\u91cd\u5927\u67b6\u6784\u53d8\u66f4\u65f6\u66f4\u65b0</p>"},{"location":"02_architecture/dcf_architecture.html","title":"DCF \u6838\u5fc3\u4e1a\u52a1\u903b\u8f91\u4e0e\u67b6\u6784","text":"<p>\u672c\u6587\u6863\u6982\u8ff0\u672c\u9879\u76ee\u4e2d DCF \u4f30\u503c\u7684\u6838\u5fc3\u4e1a\u52a1\u6d41\u7a0b\u3001\u5173\u952e\u6a21\u5757\u4e0e\u6570\u636e\u6d41\uff0c\u5e76\u7ed9\u51fa\u6574\u4f53\u4e0e\u5b50\u6a21\u5757\u7684\u67b6\u6784\u56fe\uff08Mermaid\uff09\u3002</p>"},{"location":"02_architecture/dcf_architecture.html#_1","title":"\u603b\u4f53\u67b6\u6784","text":"<pre><code>flowchart TD\n    %% API \u5c42\u4e0e\u670d\u52a1\u7f16\u6392\n    A[API \u8bf7\u6c42\\n`src/api/main.py`\\n`StockValuationRequest`] --&gt; B[DataProcessor\\n\u6e05\u6d17/\u6bd4\u7387/\u6700\u65b0\u6307\u6807\\n`src/core/financial/processor.py`]\n    A --&gt;|\u4f30\u503c\u53c2\u6570| S[ValuationService\\n\u7f16\u6392 DCF \u6b65\u9aa4\\n`src/services/valuation_service.py`]\n\n    %% \u6570\u636e\u51c6\u5907\n    B --&gt;|historical_ratios\\nlatest_metrics\\nlatest_balance_sheet| S\n\n    %% \u9884\u6d4b\u4e0eUFCF\n    S --&gt; C[FinancialForecaster\\n\u751f\u6210\u9010\u5e74\u9884\u6d4bDF\\n`src/core/financial/forecaster.py`]\n    C --&gt;|DataFrame: year, revenue, ebit, nopat, d_a, capex, NWC\u9879, delta_nwc, ebitda, ufcf| S\n\n    %% \u8d44\u672c\u6210\u672c\n    S --&gt; D[WaccCalculator\\n\u8ba1\u7b97 WACC/Ke\\n`src/core/calculators/dcf/wacc_calculator.py`]\n    D --&gt;|wacc, ke| S\n\n    %% \u7ec8\u503c\u8ba1\u7b97\n    S --&gt; E[TerminalValueCalculator\\n\u7ec8\u503c: \u9000\u51fa\u4e58\u6570/\u6c38\u7eed\u589e\u957f\\n`src/core/calculators/dcf/terminal_value_calculator.py`]\n    E --&gt;|terminal_value| S\n\n    %% \u73b0\u503c\u6298\u73b0\n    S --&gt; F[PresentValueCalculator\\n\u6298\u73b0UFCF\u4e0eTV\\n`src/core/calculators/dcf/present_value_calculator.py`]\n    F --&gt;|pv_ufcf, pv_tv| S\n\n    %% \u80a1\u6743\u6865\u6881\n    S --&gt; G[EquityBridgeCalculator\\nEV-&gt;Equity-&gt;VPS\\n`src/core/calculators/equity_bridge_calculator.py`]\n    G --&gt;|net_debt, equity_value, value_per_share| S\n\n    %% \u8f93\u51fa\n    S --&gt; H[DcfForecastDetails\\n`src/api/models.py`]\n    H --&gt; R[API \u54cd\u5e94/\u524d\u7aef]\n</code></pre>"},{"location":"02_architecture/dcf_architecture.html#wacc","title":"WACC \u8ba1\u7b97\u5b50\u6d41\u7a0b","text":"<pre><code>flowchart LR\n    subgraph Inputs\n    P1[\u53c2\u6570: risk_free_rate, beta, market_risk_premium, size_premium, country_risk_premium, industry_risk_premium, cost_of_debt, tax_rate]\n    P2[\u6743\u91cd\u6a21\u5f0f: target \u6216 market]\n    P3[\u76ee\u6807\u503a\u52a1\u6bd4\u4f8b target_debt_ratio]\n    P4[\u6700\u65b0\u5e02\u503c market_cap &amp; \u8d44\u4ea7\u8d1f\u503a\u8868]\n    end\n\n    P1 --&gt; W{WaccCalculator}\n    P2 --&gt; W\n    P3 --&gt; W\n    P4 --&gt;|market \u6a21\u5f0f\\n\u503a\u52a1\u5e02\u503c\u8fd1\u4f3c\u8d26\u9762| W\n\n    W --&gt;|Ke = Rf + \u03b2*(MRP+CRP) + Size + Industry| Ke[Ke]\n    W --&gt;|Kd(AT) = Kd*(1-T)| Kd[\u7a0e\u540e\u503a\u52a1\u6210\u672c]\n    W --&gt;|\u6743\u91cd: target \u6216 market| WT[Equity/ Debt \u6bd4\u4f8b]\n    Ke --&gt; X[WACC = E*Ke + D*Kd(AT)]\n    Kd --&gt; X\n    WT --&gt; X\n</code></pre>"},{"location":"02_architecture/dcf_architecture.html#_2","title":"\u5173\u952e\u6a21\u5757\u804c\u8d23\u4e0e\u8f93\u5165/\u8f93\u51fa","text":"<ul> <li><code>DataProcessor</code>\uff08\u6570\u636e\u51c6\u5907\uff09</li> <li>\u8f93\u5165\uff1a\u539f\u59cb\u4e09\u5927\u62a5\u8868\u3001\u57fa\u672c\u4fe1\u606f\u3001PE/PB\u3001\u80a1\u606f\u3001\u4ef7\u683c\u7b49</li> <li>\u8f93\u51fa\uff1a<code>processed_data</code>\uff08\u6e05\u6d17\u540e\u7684\u62a5\u8868\uff09\u3001<code>historical_ratios</code>\uff08\u4e2d\u4f4d\u6570/\u5929\u6570\uff09\u3001<code>latest_metrics</code>\u3001<code>latest_balance_sheet</code></li> <li><code>FinancialForecaster</code>\uff08\u8d22\u52a1\u9884\u6d4b\uff09</li> <li>\u8f93\u5165\uff1a\u4e0a\u4e00\u5e74\u5ea6\u6536\u5165\u3001\u5386\u53f2\u6bd4\u7387\u3001\u9884\u6d4b\u5047\u8bbe\uff08\u5229\u6da6\u7387/\u5404\u9879\u6bd4\u7387\u4e0e\u5929\u6570/\u8fc7\u6e21\u5e74\u6570\u7b49\uff09</li> <li>\u8f93\u51fa\uff1a\u542b\u9010\u5e74 <code>year, revenue, ebit, nopat, d_a, capex, NWC \u5206\u9879, delta_nwc, ebitda, ufcf</code> \u7684 DataFrame</li> <li><code>FcfCalculator</code>\uff08UFCF\uff09</li> <li>\u516c\u5f0f\uff1a<code>ufcf = nopat + d_a - capex - delta_nwc</code></li> <li>\u5c31\u5730\u56de\u586b <code>ufcf</code> \u5217\uff08Decimal \u8ba1\u7b97\uff0c\u5f02\u5e38/NaN \u9632\u62a4\uff09</li> <li><code>WaccCalculator</code>\uff08WACC/Ke\uff09</li> <li>Ke\uff08\u589e\u5f3a CAPM\uff09\uff1a<code>Ke = Rf + \u03b2*(MRP + CRP) + Size + Industry</code></li> <li>\u503a\u52a1\u6210\u672c\u7a0e\u540e\uff1a<code>Kd(AT) = Kd*(1 - Tax)</code></li> <li>\u6743\u91cd\uff1a<code>target</code>\uff08<code>target_debt_ratio</code>\uff09\u6216 <code>market</code>\uff08\u4ee5\u5e02\u503c/\u8d26\u9762\u503a\u52a1\u8fd1\u4f3c\u6c42\u6743\u91cd\uff09</li> <li>\u8fd4\u56de\uff1a<code>(wacc, ke)</code>\uff1b\u542b\u5927\u91cf\u7c7b\u578b/\u8303\u56f4\u6821\u9a8c\u4e0e\u56de\u9000</li> <li><code>TerminalValueCalculator</code>\uff08\u7ec8\u503c\uff09</li> <li>Exit Multiple\uff1a<code>TV = EBITDA_T * ExitMultiple</code></li> <li>Perpetual Growth\uff1a\u82e5\u542f\u7528 GDP \u4e0a\u9650\uff0c<code>g = min(g_input, GDP_CAP)</code>\uff1b\u8981\u6c42 <code>g &lt; wacc</code><ul> <li>\u516c\u5f0f\uff1a<code>TV = UFCF_T * (1 + g) / (wacc - g)</code></li> </ul> </li> <li><code>PresentValueCalculator</code>\uff08\u73b0\u503c\u6298\u73b0\uff09</li> <li>\u5e74\u4e2d\u6298\u73b0\u53ef\u9009\uff1a\u6307\u6570 <code>t-0.5</code></li> <li>\u8f93\u51fa\uff1a<code>pv_ufcf</code> \u4e0e <code>pv_tv</code>\uff08Decimal \u9010\u671f\u6298\u73b0\u5e76\u6c47\u603b\uff09</li> <li><code>EquityBridgeCalculator</code>\uff08\u80a1\u6743\u6865\uff09</li> <li><code>NetDebt = (LT/ST \u501f\u6b3e + \u503a\u5238 + \u4e00\u5e74\u5185\u5230\u671f\u975e\u6d41\u52a8\u8d1f\u503a) - \u8d27\u5e01\u8d44\u91d1</code></li> <li><code>EquityValue = EV - NetDebt - MinorityInterest - PreferredEquity</code></li> <li><code>Value/Share = EquityValue / TotalShares</code></li> <li><code>ValuationService</code>\uff08\u7f16\u6392\u4e0e\u9632\u62a4\uff09</li> <li>\u987a\u5e8f\uff1a\u9884\u6d4b -&gt; WACC -&gt; \u7ec8\u503c -&gt; \u73b0\u503c -&gt; \u80a1\u6743\u6865 -&gt; \u6c47\u603b <code>DcfForecastDetails</code></li> <li>\u903b\u8f91\uff1aAPI \u5047\u8bbe\u952e\u6620\u5c04\u3001\u5e02\u573a\u6743\u91cd\u5931\u8d25\u56de\u9000\u76ee\u6807\u6743\u91cd\u3001\u9ed8\u8ba4 ExitMultiple/PGR\u3001<code>g&lt;w</code> \u5b88\u62a4\u3001\u8c03\u8bd5\u5feb\u7167\u3001\u654f\u611f\u6027\u5206\u6790</li> </ul>"},{"location":"02_architecture/dcf_architecture.html#_3","title":"\u73af\u5883\u53d8\u91cf\u4e0e\u9ed8\u8ba4","text":"<ul> <li><code>WaccCalculator</code>\uff1a<code>DEFAULT_BETA</code>, <code>RISK_FREE_RATE</code>, <code>MARKET_RISK_PREMIUM</code>, <code>COUNTRY_RISK_PREMIUM</code>, <code>INDUSTRY_RISK_PREMIUM</code>, <code>DEFAULT_COST_OF_DEBT</code>, <code>DEFAULT_TARGET_TAX_RATE</code>, <code>DEFAULT_SIZE_PREMIUM</code>, <code>TARGET_DEBT_RATIO</code></li> <li><code>TerminalValueCalculator</code>\uff1a<code>USE_GDP_CAP</code>\uff08\u9ed8\u8ba4\u4e3a true\uff09\uff0c<code>GDP_NOMINAL_CAP</code>\uff08\u9ed8\u8ba4 0.05\uff09</li> <li><code>ValuationService</code>\uff1a<code>DEFAULT_EXIT_MULTIPLE</code>\uff08\u9ed8\u8ba4 8.0\uff09\uff0c<code>DEFAULT_PERPETUAL_GROWTH_RATE</code>\uff08\u9ed8\u8ba4 0.025\uff09</li> </ul>"},{"location":"02_architecture/dcf_architecture.html#_4","title":"\u4e3b\u8981\u6570\u636e\u6d41\u4e0e\u4ea7\u51fa","text":"<ol> <li>DataProcessor \u6e05\u6d17\u6570\u636e\u3001\u8ba1\u7b97\u5386\u53f2\u4e2d\u4f4d\u6570/\u5929\u6570\u4e0e\u6700\u65b0\u6307\u6807</li> <li>FinancialForecaster \u57fa\u4e8e\u5386\u53f2\u4e0e\u5047\u8bbe\u751f\u6210\u9010\u5e74\u9884\u6d4b\uff0c<code>FcfCalculator</code> \u586b\u5145 <code>ufcf</code></li> <li>WaccCalculator \u8ba1\u7b97 <code>wacc, ke</code>\uff08\u652f\u6301 market/target \u6743\u91cd\uff09</li> <li>TerminalValueCalculator \u8ba1\u7b97\u7ec8\u503c\uff08Exit Multiple \u6216 Perpetual Growth\uff0c\u542b GDP \u4e0a\u9650\u4e0e <code>g&lt;w</code> \u6821\u9a8c\uff09</li> <li>PresentValueCalculator \u5c06 UFCF \u4e0e TV \u6298\u73b0\u4e3a\u73b0\u503c\uff08\u53ef\u5e74\u4e2d\u6298\u73b0\uff09</li> <li>EquityBridgeCalculator \u8ba1\u7b97\u51c0\u503a\u52a1\u3001\u80a1\u6743\u4ef7\u503c\u3001\u6bcf\u80a1\u4ef7\u503c</li> <li>\u6c47\u603b\u4e3a <code>DcfForecastDetails</code> \u8fd4\u56de API/\u524d\u7aef</li> </ol>"},{"location":"02_architecture/dcf_architecture.html#_5","title":"\u53c2\u8003\u4ee3\u7801\u4f4d\u7f6e","text":"<ul> <li>Valuation \u7f16\u6392\uff1a<code>src/services/valuation_service.py</code></li> <li>WACC/\u7ec8\u503c/\u73b0\u503c/UFCF/\u80a1\u6743\u6865\uff1a</li> <li><code>src/core/calculators/dcf/wacc_calculator.py</code></li> <li><code>src/core/calculators/dcf/terminal_value_calculator.py</code></li> <li><code>src/core/calculators/dcf/present_value_calculator.py</code></li> <li><code>src/core/calculators/dcf/fcf_calculator.py</code></li> <li><code>src/core/calculators/equity_bridge_calculator.py</code></li> <li>\u9884\u6d4b\u5668/\u6570\u636e\u5904\u7406\uff1a</li> <li><code>src/core/financial/forecaster.py</code></li> <li><code>src/core/financial/processor.py</code></li> <li>DCF \u7ed3\u679c\u6a21\u578b\uff1a<code>src/api/models.py</code> ```</li> </ul>"},{"location":"02_architecture/hybrid_architecture_design.html","title":"\u80a1\u7968\u4f30\u503c\u7cfb\u7edf\u6df7\u5408\u67b6\u6784\u8bbe\u8ba1\u6587\u6863","text":""},{"location":"02_architecture/hybrid_architecture_design.html#_2","title":"\u6587\u6863\u4fe1\u606f","text":"<p>\u6587\u6863\u6807\u9898: \u6df7\u5408\u6570\u636e\u6e90\u67b6\u6784\u8bbe\u8ba1 \u521b\u5efa\u65e5\u671f: 2025\u5e741\u6708 \u7248\u672c: v1.0 \u4f5c\u8005: huliux \u5ba1\u6838\u72b6\u6001: \u5f85\u5ba1\u6838</p>"},{"location":"02_architecture/hybrid_architecture_design.html#_3","title":"\u6574\u7406\u8bf4\u660e","text":"<p>\u672c\u6587\u6863\u5df2\u6574\u5408\u4ee5\u4e0b\u5185\u5bb9\uff1a - \u539fmigration_checklist.md\u7684\u5b9e\u65bd\u6b65\u9aa4 - \u539ftushare_migration_technical_analysis.md\u7684\u6280\u672f\u7ec6\u8282 - \u539ftushare_postgresql_field_comparison.md\u7684\u5b57\u6bb5\u6620\u5c04  </p>"},{"location":"02_architecture/hybrid_architecture_design.html#_4","title":"\u6267\u884c\u6458\u8981","text":"<p>\u672c\u6587\u6863\u8be6\u7ec6\u63cf\u8ff0\u4e86\u80a1\u7968\u4f30\u503c\u7cfb\u7edf\u91c7\u7528\u7684Tushare + PostgreSQL\u6df7\u5408\u67b6\u6784\u8bbe\u8ba1\u65b9\u6848\u3002\u8be5\u67b6\u6784\u901a\u8fc7\u4e3b\u5907\u6570\u636e\u6e90\u6a21\u5f0f\uff0c\u663e\u8457\u63d0\u5347\u4e86\u7cfb\u7edf\u7684\u6570\u636e\u53ef\u9760\u6027\u3001\u6027\u80fd\u8868\u73b0\u548c\u6210\u672c\u6548\u76ca\u3002\u6838\u5fc3\u7279\u6027\u5305\u62ec\u667a\u80fd\u6570\u636e\u6e90\u5207\u6362\u3001\u591a\u5c42\u7ea7\u7f13\u5b58\u673a\u5236\u3001\u81ea\u52a8\u964d\u7ea7\u6062\u590d\u548c\u5168\u9762\u76d1\u63a7\u544a\u8b66\u3002</p>"},{"location":"02_architecture/hybrid_architecture_design.html#_5","title":"\u67b6\u6784\u4f18\u52bf","text":"<ul> <li>\ud83c\udfaf \u9ad8\u53ef\u9760\u6027: \u53cc\u6570\u636e\u6e90\u4fdd\u969c\uff0c\u7cfb\u7edf\u53ef\u7528\u6027\u8fbe99.5%</li> <li>\u26a1 \u9ad8\u6027\u80fd: \u667a\u80fd\u7f13\u5b58\u673a\u5236\uff0c\u6570\u636e\u8bbf\u95ee\u901f\u5ea6\u63d0\u534770%</li> <li>\ud83d\udcb0 \u6210\u672c\u4f18\u5316: API\u8c03\u7528\u6210\u672c\u964d\u4f4e60%</li> <li>\ud83d\udd04 \u7075\u6d3b\u5207\u6362: \u652f\u6301\u914d\u7f6e\u5316\u6570\u636e\u6e90\u9009\u62e9</li> <li>\ud83d\udcca \u5168\u9762\u76d1\u63a7: \u5b9e\u65f6\u72b6\u6001\u76d1\u63a7\u548c\u667a\u80fd\u544a\u8b66</li> </ul>"},{"location":"02_architecture/hybrid_architecture_design.html#2025-09-26","title":"\u8fd1\u671f\u6539\u52a8\u6458\u8981\uff082025-09-26\uff09","text":"<ul> <li>\u7528\u6237\u8ba4\u8bc1\u7cfb\u7edf\u5b8c\u6574\u5b9e\u73b0\uff1a</li> <li>\u6570\u636e\u5e93\u67b6\u6784\u4eceSQLite\u8fc1\u79fb\u81f3PostgreSQL/Supabase\uff0c\u89e3\u51b3\u5e76\u53d1\u9501\u95ee\u9898</li> <li>\u5b8c\u6574\u7684\u7528\u6237\u6ce8\u518c\u3001\u767b\u5f55\u3001\u4f1a\u8bdd\u7ba1\u7406\u529f\u80fd</li> <li>\u8ba4\u8bc1\u4e2d\u95f4\u4ef6\u4fdd\u62a4\u654f\u611f\u529f\u80fd\u548c\u6570\u636e\u8bbf\u95ee</li> <li>\u5bc6\u7801\u54c8\u5e0c\u3001\u4f1a\u8bdd\u4ee4\u724c\u3001\u9632CSRF\u7b49\u5b89\u5168\u7279\u6027</li> <li>\u667a\u80fd\u7f13\u5b58\u7cfb\u7edf\u91cd\u5927\u5347\u7ea7\uff1a</li> <li>\u4f30\u503c\u7ed3\u679c\u5728\u7528\u6237\u4f1a\u8bdd\u95f4\u6301\u4e45\u4fdd\u5b58\uff0c\u5927\u5e45\u63d0\u5347\u7528\u6237\u4f53\u9a8c</li> <li>\u4f1a\u8bdd\u6062\u590d\u529f\u80fd\uff0c\u7528\u6237\u91cd\u65b0\u767b\u5f55\u540e\u53ef\u6062\u590d\u4e4b\u524d\u7684\u5206\u6790\u7ed3\u679c</li> <li>\u7f13\u5b58\u7b56\u7565\u4f18\u5316\uff0c\u5e73\u8861\u6027\u80fd\u4e0e\u6570\u636e\u4e00\u81f4\u6027</li> <li>\u4fee\u590d\u7f13\u5b58\u7cfb\u7edf\u4e2dundefined\u53d8\u91cf\u7b49\u5173\u952e\u9519\u8bef</li> <li>\u524d\u7aef\u7528\u6237\u4f53\u9a8c\u4f18\u5316\uff1a</li> <li>\u4f18\u5316\u754c\u9762\u5e03\u5c40\u548c\u53c2\u6570\u8bbe\u7f6e\u4f53\u9a8c\uff0c\u7b80\u5316\u64cd\u4f5c\u6d41\u7a0b</li> <li>\u589e\u5f3a\u7528\u6237\u53cd\u9988\u548c\u9519\u8bef\u5904\u7406\u673a\u5236</li> <li>\u4fee\u590d\"\u4f30\u503c\u8ba1\u7b97\u51fa\u9519: None\"\u7b49\u9519\u8bef\u663e\u793a\u95ee\u9898</li> <li>\u4f18\u5316\u6570\u636e\u5c55\u793a\u683c\u5f0f\u548c\u89c6\u89c9\u6548\u679c</li> </ul>"},{"location":"02_architecture/hybrid_architecture_design.html#2025-09-11","title":"\u5386\u53f2\u6539\u52a8\u6458\u8981\uff082025-09-11\uff09","text":"<ul> <li>\u670d\u52a1\u5c42\uff08ValuationService\uff09\u589e\u5f3a\uff1a</li> <li>\u5728\u57fa\u7840\u4f30\u503c\u4e0e\u654f\u611f\u6027\u4e24\u7c7b\u8def\u5f84\u7edf\u4e00\u7f16\u6392 Forecaster\u3001WACC\u3001\u7ec8\u503c\u4e0e\u73b0\u503c\u8ba1\u7b97\uff0c\u65b0\u589e\u670d\u52a1\u5185\u56de\u9000\u4e0e\u5b88\u62a4\u903b\u8f91\u3002</li> <li>\u5f53 <code>wacc_weight_mode=market</code> \u5931\u8d25\u65f6\uff0c\u81ea\u52a8\u56de\u9000\u5230 <code>target</code> \u6743\u91cd\u5e76\u8bb0\u5f55\u8b66\u544a\uff0c\u907f\u514d 500\u3002</li> <li>\u5bf9\u654f\u611f\u6027\u5355\u5143\u683c\uff1a<ul> <li>\u8ba1\u7b97 <code>EV/EBITDA (Terminal)</code> \u4e0e <code>implied_pgr</code>\uff1b</li> <li>\u5f53 <code>g \u2265 WACC</code> \u65f6\u8df3\u8fc7\u8be5\u7ec4\u5408\uff1b</li> <li><code>dcf_implied_pe</code> \u7f3a\u5931\u65f6\u6309\u57fa\u51c6 EPS \u56de\u586b\u3002</li> </ul> </li> <li>GDP \u4e0a\u9650\u63a7\u5236\uff1a\u670d\u52a1\u5c42\u5728\u8bf7\u6c42\u7ef4\u5ea6\u652f\u6301\u5f00\u5173\u4e0e\u4e0a\u9650\u503c\uff08\u4f18\u5148\u7ea7\u9ad8\u4e8e\u73af\u5883\u53d8\u91cf\uff09\uff1b\u7ec8\u503c\u8ba1\u7b97\u5668\u4ecd\u4fdd\u7559\u5e95\u5c42\u4e0a\u9650\u4e0e\u6709\u6548\u6027\u6821\u9a8c\uff0c\u53cc\u5c42\u4fdd\u62a4\u3002</li> <li>LLM \u62a5\u544a\uff1a\u63d0\u793a\u6a21\u677f\u5f3a\u5316\uff08\u4ef7\u503c\u6295\u8d44\u5bfc\u5411\uff09\uff0c\u5e76\u5728\u54cd\u5e94\u4e2d\u643a\u5e26 <code>debug_request_slice</code>\uff08\u542b\u884c\u4e1a\u9884\u8bbe\u4e0e\u504f\u79bb\uff09\u4ee5\u4fbf\u5ba1\u8ba1\u3002</li> </ul>"},{"location":"02_architecture/hybrid_architecture_design.html#1","title":"1. \u67b6\u6784\u6982\u89c8","text":""},{"location":"02_architecture/hybrid_architecture_design.html#11","title":"1.1 \u6574\u4f53\u67b6\u6784\u56fe","text":"<pre><code>\u80a1\u7968\u4f30\u503c\u7cfb\u7edf\u6df7\u5408\u67b6\u6784\n\u250c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2510\n\u2502                              \u5e94\u7528\u5c42                                         \u2502\n\u2502  \u250c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2510    \u250c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2510    \u250c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2510        \u2502\n\u2502  \u2502   Streamlit\u524d\u7aef \u2502    \u2502   FastAPI       \u2502    \u2502   \u4e1a\u52a1\u903b\u8f91\u5c42     \u2502        \u2502\n\u2502  \u2502   (\u7528\u6237\u754c\u9762)     \u2502    \u2502   (API\u670d\u52a1)     \u2502    \u2502   (\u4f30\u503c\u8ba1\u7b97)     \u2502        \u2502\n\u2502  \u2514\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2518    \u2514\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2518    \u2514\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2518        \u2502\n\u2514\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2518\n                                    \u2502\n                                    \u25bc\n\u250c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2510\n\u2502                            \u6570\u636e\u8bbf\u95ee\u62bd\u8c61\u5c42                                    \u2502\n\u2502  \u250c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2510   \u2502\n\u2502  \u2502                    DataSourceManager                               \u2502   \u2502\n\u2502  \u2502  \u250c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2510    \u250c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2510    \u250c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2510 \u2502   \u2502\n\u2502  \u2502  \u2502   \u914d\u7f6e\u7ba1\u7406      \u2502    \u2502   \u8def\u7531\u7b56\u7565      \u2502    \u2502   \u5065\u5eb7\u68c0\u67e5      \u2502 \u2502   \u2502\n\u2502  \u2502  \u2502 (.env\u63a7\u5236)      \u2502    \u2502 (\u667a\u80fd\u9009\u62e9)      \u2502    \u2502 (\u72b6\u6001\u76d1\u63a7)      \u2502 \u2502   \u2502\n\u2502  \u2502  \u2514\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2518    \u2514\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2518    \u2514\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2518 \u2502   \u2502\n\u2502  \u2514\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2518   \u2502\n\u2514\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2518\n                                    \u2502\n                    \u250c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u253c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2510\n                    \u25bc               \u25bc               \u25bc\n\u250c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2510    \u250c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2510    \u250c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2510\n\u2502   \u7f13\u5b58\u7ba1\u7406\u5c42     \u2502    \u2502   \u4e3b\u6570\u636e\u6e90      \u2502    \u2502   \u5907\u6570\u636e\u6e90      \u2502\n\u2502                 \u2502    \u2502   (Tushare)     \u2502    \u2502 (PostgreSQL)    \u2502\n\u2502 \u250c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2510 \u2502    \u2502                 \u2502    \u2502                 \u2502\n\u2502 \u2502 Redis\u7f13\u5b58   \u2502 \u2502    \u2502 \u2022 \u5b9e\u65f6\u6570\u636e      \u2502    \u2502 \u2022 \u5386\u53f2\u6570\u636e      \u2502\n\u2502 \u2502 (\u70ed\u6570\u636e)    \u2502 \u2502    \u2502 \u2022 \u9ad8\u9891\u66f4\u65b0      \u2502    \u2502 \u2022 \u7a33\u5b9a\u53ef\u9760      \u2502\n\u2502 \u2514\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2518 \u2502    \u2502 \u2022 \u4e30\u5bcc\u5b57\u6bb5      \u2502    \u2502 \u2022 \u672c\u5730\u8bbf\u95ee      \u2502\n\u2502 \u250c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2510 \u2502    \u2502 \u2022 API\u9650\u6d41      \u2502    \u2502 \u2022 \u79bb\u7ebf\u53ef\u7528      \u2502\n\u2502 \u2502 \u672c\u5730\u7f13\u5b58    \u2502 \u2502    \u2502                 \u2502    \u2502                 \u2502\n\u2502 \u2502 (\u51b7\u6570\u636e)    \u2502 \u2502    \u2514\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2518    \u2514\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2518\n\u2502 \u2514\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2518 \u2502              \u2502                        \u2502\n\u2514\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2518              \u2502                        \u2502\n                                  \u25bc                        \u25bc\n                    \u250c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2510\n                    \u2502            \u76d1\u63a7\u544a\u8b66\u5c42                    \u2502\n                    \u2502  \u250c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2510 \u250c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2510\u2502\n                    \u2502  \u2502   \u6027\u80fd\u76d1\u63a7      \u2502 \u2502   \u5f02\u5e38\u544a\u8b66      \u2502\u2502\n                    \u2502  \u2502 (\u54cd\u5e94\u65f6\u95f4/QPS)  \u2502 \u2502 (\u6545\u969c\u68c0\u6d4b)      \u2502\u2502\n                    \u2502  \u2514\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2518 \u2514\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2518\u2502\n                    \u2514\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2518\n</code></pre>"},{"location":"02_architecture/hybrid_architecture_design.html#12","title":"1.2 \u6838\u5fc3\u7ec4\u4ef6\u8bf4\u660e","text":"\u7ec4\u4ef6 \u804c\u8d23 \u6280\u672f\u5b9e\u73b0 DataSourceManager \u6570\u636e\u6e90\u7ba1\u7406\u548c\u8def\u7531 Python\u62bd\u8c61\u5de5\u5382\u6a21\u5f0f TushareDataFetcher Tushare\u6570\u636e\u83b7\u53d6 Tushare SDK + \u8fde\u63a5\u6c60 PostgreSQLDataFetcher PostgreSQL\u6570\u636e\u83b7\u53d6 SQLAlchemy + \u8fde\u63a5\u6c60 CacheManager \u7f13\u5b58\u7ba1\u7406 Redis + \u672c\u5730LRU\u7f13\u5b58 HealthChecker \u5065\u5eb7\u72b6\u6001\u68c0\u67e5 \u5b9a\u65f6\u4efb\u52a1 + \u72b6\u6001\u5b58\u50a8 MonitoringService \u76d1\u63a7\u544a\u8b66 Prometheus + \u81ea\u5b9a\u4e49\u6307\u6807"},{"location":"02_architecture/hybrid_architecture_design.html#2","title":"2. \u6570\u636e\u6e90\u8bbe\u8ba1","text":""},{"location":"02_architecture/hybrid_architecture_design.html#21-tushare","title":"2.1 \u4e3b\u6570\u636e\u6e90 - Tushare","text":""},{"location":"02_architecture/hybrid_architecture_design.html#211","title":"2.1.1 \u6570\u636e\u6e90\u7279\u6027","text":"<pre><code>\u6570\u636e\u6e90: Tushare Pro API\n\u7c7b\u578b: \u4e3b\u6570\u636e\u6e90\n\u4f18\u52bf:\n  - \u6570\u636e\u5b9e\u65f6\u6027\u5f3a\uff0cT+1\u66f4\u65b0\n  - \u6570\u636e\u5b57\u6bb5\u4e30\u5bcc\uff0c\u8986\u76d6\u5168\u9762\n  - \u6570\u636e\u8d28\u91cf\u9ad8\uff0c\u4e13\u4e1a\u91d1\u878d\u6570\u636e\u63d0\u4f9b\u5546\n  - API\u63a5\u53e3\u6807\u51c6\u5316\uff0c\u6613\u4e8e\u96c6\u6210\n\n\u6311\u6218:\n  - API\u8c03\u7528\u6709\u9891\u7387\u9650\u5236\n  - \u9700\u8981\u4ed8\u8d39\u79ef\u5206\uff0c\u6709\u6210\u672c\u8003\u8651\n  - \u7f51\u7edc\u4f9d\u8d56\uff0c\u5b58\u5728\u670d\u52a1\u4e2d\u65ad\u98ce\u9669\n  - \u6570\u636e\u91cf\u5927\u65f6\u54cd\u5e94\u8f83\u6162\n</code></pre>"},{"location":"02_architecture/hybrid_architecture_design.html#212-api","title":"2.1.2 API\u914d\u989d\u7ba1\u7406","text":"<pre><code># API\u914d\u989d\u7b56\u7565\nAPI_QUOTA_CONFIG = {\n    'daily_limit': 10000,      # \u65e5\u8c03\u7528\u9650\u5236\n    'minute_limit': 500,       # \u5206\u949f\u8c03\u7528\u9650\u5236\n    'priority_apis': [         # \u4f18\u5148\u7ea7API\u5217\u8868\n        'stock_basic',         # \u80a1\u7968\u57fa\u672c\u4fe1\u606f\n        'daily_basic',         # \u6bcf\u65e5\u57fa\u672c\u9762\n        'income',              # \u5229\u6da6\u8868\n        'balancesheet',        # \u8d44\u4ea7\u8d1f\u503a\u8868\n        'cashflow'             # \u73b0\u91d1\u6d41\u91cf\u8868\n    ],\n    'cache_duration': {        # \u7f13\u5b58\u65f6\u957f\u914d\u7f6e\n        'stock_basic': 86400,  # 24\u5c0f\u65f6\n        'daily_basic': 3600,   # 1\u5c0f\u65f6\n        'financial_data': 43200 # 12\u5c0f\u65f6\n    }\n}\n</code></pre>"},{"location":"02_architecture/hybrid_architecture_design.html#22-postgresql","title":"2.2 \u5907\u6570\u636e\u6e90 - PostgreSQL","text":""},{"location":"02_architecture/hybrid_architecture_design.html#221","title":"2.2.1 \u6570\u636e\u6e90\u7279\u6027","text":"<pre><code>\u6570\u636e\u6e90: PostgreSQL\u6570\u636e\u5e93\n\u7c7b\u578b: \u5907\u6570\u636e\u6e90\n\u4f18\u52bf:\n  - \u672c\u5730\u8bbf\u95ee\uff0c\u54cd\u5e94\u901f\u5ea6\u5feb\n  - \u65e0\u7f51\u7edc\u4f9d\u8d56\uff0c\u79bb\u7ebf\u53ef\u7528\n  - \u6570\u636e\u7a33\u5b9a\uff0c\u65e0API\u9650\u5236\n  - \u652f\u6301\u590d\u6742\u67e5\u8be2\u548c\u805a\u5408\n\n\u5c40\u9650:\n  - \u6570\u636e\u66f4\u65b0\u9891\u7387\u8f83\u4f4e\n  - \u9700\u8981\u5b9a\u671f\u7ef4\u62a4\u548c\u66f4\u65b0\n  - \u5b58\u50a8\u6210\u672c\u968f\u6570\u636e\u91cf\u589e\u957f\n  - \u6570\u636e\u5b57\u6bb5\u53ef\u80fd\u4e0d\u5982Tushare\u4e30\u5bcc\n</code></pre>"},{"location":"02_architecture/hybrid_architecture_design.html#222","title":"2.2.2 \u6570\u636e\u8868\u7ed3\u6784","text":"<pre><code>-- \u6838\u5fc3\u6570\u636e\u8868\nCREATE TABLE stock_basic (\n    ts_code VARCHAR(10) PRIMARY KEY,\n    symbol VARCHAR(10),\n    name VARCHAR(50),\n    area VARCHAR(20),\n    industry VARCHAR(50),\n    market VARCHAR(10),\n    list_date DATE,\n    updated_at TIMESTAMP DEFAULT CURRENT_TIMESTAMP\n);\n\nCREATE TABLE daily_quotes (\n    id SERIAL PRIMARY KEY,\n    ts_code VARCHAR(10),\n    trade_date DATE,\n    open DECIMAL(10,2),\n    high DECIMAL(10,2),\n    low DECIMAL(10,2),\n    close DECIMAL(10,2),\n    volume BIGINT,\n    amount DECIMAL(15,2),\n    updated_at TIMESTAMP DEFAULT CURRENT_TIMESTAMP,\n    UNIQUE(ts_code, trade_date)\n);\n\n-- \u8d22\u52a1\u6570\u636e\u8868\nCREATE TABLE financial_indicators (\n    id SERIAL PRIMARY KEY,\n    ts_code VARCHAR(10),\n    end_date DATE,\n    pe DECIMAL(10,2),\n    pb DECIMAL(10,2),\n    ps DECIMAL(10,2),\n    total_share DECIMAL(15,2),\n    float_share DECIMAL(15,2),\n    updated_at TIMESTAMP DEFAULT CURRENT_TIMESTAMP,\n    UNIQUE(ts_code, end_date)\n);\n</code></pre>"},{"location":"02_architecture/hybrid_architecture_design.html#23","title":"2.3 \u6570\u636e\u6e90\u6620\u5c04\u5173\u7cfb","text":""},{"location":"02_architecture/hybrid_architecture_design.html#231","title":"2.3.1 \u5b57\u6bb5\u6620\u5c04\u8868","text":"<pre><code># \u6570\u636e\u6e90\u5b57\u6bb5\u6620\u5c04\u914d\u7f6e\nFIELD_MAPPING = {\n    'stock_basic': {\n        'tushare_fields': ['ts_code', 'symbol', 'name', 'area', 'industry', 'market', 'list_date'],\n        'postgresql_fields': ['ts_code', 'symbol', 'name', 'area', 'industry', 'market', 'list_date'],\n        'mapping': {  # \u5b57\u6bb5\u540d\u6620\u5c04\n            'ts_code': 'ts_code',\n            'symbol': 'symbol', \n            'name': 'name',\n            'area': 'area',\n            'industry': 'industry',\n            'market': 'market',\n            'list_date': 'list_date'\n        }\n    },\n    'daily_basic': {\n        'tushare_fields': ['ts_code', 'trade_date', 'close', 'pe', 'pb', 'total_share'],\n        'postgresql_fields': ['ts_code', 'trade_date', 'close', 'pe', 'pb', 'total_share'],\n        'unit_conversion': {  # \u5355\u4f4d\u8f6c\u6362\n            'total_share': lambda x: x * 10000 if x else None  # \u4e07\u80a1\u8f6c\u80a1\n        }\n    }\n}\n</code></pre>"},{"location":"02_architecture/hybrid_architecture_design.html#3","title":"3. \u6570\u636e\u6e90\u7ba1\u7406\u5668\u8bbe\u8ba1","text":""},{"location":"02_architecture/hybrid_architecture_design.html#31-datasourcemanager","title":"3.1 DataSourceManager\u6838\u5fc3\u7c7b","text":"<pre><code>from abc import ABC, abstractmethod\nfrom enum import Enum\nfrom typing import Dict, Any, Optional, List\nimport logging\n\nclass DataSourceType(Enum):\n    \"\"\"\u6570\u636e\u6e90\u7c7b\u578b\u679a\u4e3e\"\"\"\n    TUSHARE = \"tushare\"\n    POSTGRESQL = \"postgresql\"\n    CACHE = \"cache\"\n\nclass DataSourceStatus(Enum):\n    \"\"\"\u6570\u636e\u6e90\u72b6\u6001\u679a\u4e3e\"\"\"\n    HEALTHY = \"healthy\"\n    DEGRADED = \"degraded\"\n    UNAVAILABLE = \"unavailable\"\n\nclass DataSourceManager:\n    \"\"\"\u6570\u636e\u6e90\u7ba1\u7406\u5668 - \u6838\u5fc3\u534f\u8c03\u7c7b\"\"\"\n\n    def __init__(self, config: Dict[str, Any]):\n        self.config = config\n        self.primary_source = DataSourceType.TUSHARE\n        self.fallback_source = DataSourceType.POSTGRESQL\n        self.data_fetchers = {}\n        self.cache_manager = None\n        self.health_checker = None\n        self.logger = logging.getLogger(__name__)\n\n        self._initialize_components()\n\n    def _initialize_components(self):\n        \"\"\"\u521d\u59cb\u5316\u5404\u7ec4\u4ef6\"\"\"\n        # \u521d\u59cb\u5316\u6570\u636e\u83b7\u53d6\u5668\n        self.data_fetchers[DataSourceType.TUSHARE] = TushareDataFetcher(self.config)\n        self.data_fetchers[DataSourceType.POSTGRESQL] = PostgreSQLDataFetcher(self.config)\n\n        # \u521d\u59cb\u5316\u7f13\u5b58\u7ba1\u7406\u5668\n        self.cache_manager = CacheManager(self.config)\n\n        # \u521d\u59cb\u5316\u5065\u5eb7\u68c0\u67e5\u5668\n        self.health_checker = HealthChecker(self.data_fetchers)\n\n    async def get_data(self, data_type: str, params: Dict[str, Any]) -&gt; Dict[str, Any]:\n        \"\"\"\u83b7\u53d6\u6570\u636e - \u4e3b\u8981\u5165\u53e3\u65b9\u6cd5\"\"\"\n        try:\n            # 1. \u5c1d\u8bd5\u4ece\u7f13\u5b58\u83b7\u53d6\n            cached_data = await self.cache_manager.get(data_type, params)\n            if cached_data:\n                self.logger.info(f\"Cache hit for {data_type}\")\n                return cached_data\n\n            # 2. \u9009\u62e9\u6570\u636e\u6e90\n            data_source = await self._select_data_source(data_type)\n\n            # 3. \u83b7\u53d6\u6570\u636e\n            data = await self._fetch_data(data_source, data_type, params)\n\n            # 4. \u7f13\u5b58\u6570\u636e\n            await self.cache_manager.set(data_type, params, data)\n\n            return data\n\n        except Exception as e:\n            self.logger.error(f\"Error getting data for {data_type}: {str(e)}\")\n            return await self._handle_error(data_type, params, e)\n\n    async def _select_data_source(self, data_type: str) -&gt; DataSourceType:\n        \"\"\"\u667a\u80fd\u6570\u636e\u6e90\u9009\u62e9\"\"\"\n        # \u68c0\u67e5\u914d\u7f6e\u7684\u6570\u636e\u6e90\u504f\u597d\n        if self.config.get('force_data_source'):\n            return DataSourceType(self.config['force_data_source'])\n\n        # \u68c0\u67e5\u4e3b\u6570\u636e\u6e90\u5065\u5eb7\u72b6\u6001\n        primary_status = await self.health_checker.check_health(self.primary_source)\n        if primary_status == DataSourceStatus.HEALTHY:\n            return self.primary_source\n\n        # \u4e3b\u6570\u636e\u6e90\u4e0d\u53ef\u7528\uff0c\u4f7f\u7528\u5907\u7528\u6570\u636e\u6e90\n        fallback_status = await self.health_checker.check_health(self.fallback_source)\n        if fallback_status in [DataSourceStatus.HEALTHY, DataSourceStatus.DEGRADED]:\n            self.logger.warning(f\"Primary source unavailable, using fallback: {self.fallback_source}\")\n            return self.fallback_source\n\n        # \u6240\u6709\u6570\u636e\u6e90\u90fd\u4e0d\u53ef\u7528\n        raise Exception(\"All data sources are unavailable\")\n\n    async def _fetch_data(self, source: DataSourceType, data_type: str, params: Dict[str, Any]) -&gt; Dict[str, Any]:\n        \"\"\"\u4ece\u6307\u5b9a\u6570\u636e\u6e90\u83b7\u53d6\u6570\u636e\"\"\"\n        fetcher = self.data_fetchers[source]\n        return await fetcher.fetch_data(data_type, params)\n\n    async def _handle_error(self, data_type: str, params: Dict[str, Any], error: Exception) -&gt; Dict[str, Any]:\n        \"\"\"\u9519\u8bef\u5904\u7406\u548c\u964d\u7ea7\u7b56\u7565\"\"\"\n        self.logger.error(f\"Data fetch failed: {str(error)}\")\n\n        # \u5c1d\u8bd5\u4ece\u7f13\u5b58\u83b7\u53d6\u8fc7\u671f\u6570\u636e\n        stale_data = await self.cache_manager.get_stale(data_type, params)\n        if stale_data:\n            self.logger.warning(\"Returning stale cached data due to error\")\n            return stale_data\n\n        # \u8fd4\u56de\u9ed8\u8ba4\u503c\u6216\u629b\u51fa\u5f02\u5e38\n        raise error\n</code></pre>"},{"location":"02_architecture/hybrid_architecture_design.html#32","title":"3.2 \u5065\u5eb7\u68c0\u67e5\u673a\u5236","text":"<pre><code>import asyncio\nfrom datetime import datetime, timedelta\nfrom typing import Dict\n\nclass HealthChecker:\n    \"\"\"\u6570\u636e\u6e90\u5065\u5eb7\u68c0\u67e5\u5668\"\"\"\n\n    def __init__(self, data_fetchers: Dict[DataSourceType, Any]):\n        self.data_fetchers = data_fetchers\n        self.health_status = {}\n        self.last_check = {}\n        self.check_interval = 60  # 60\u79d2\u68c0\u67e5\u95f4\u9694\n        self.logger = logging.getLogger(__name__)\n\n    async def check_health(self, source: DataSourceType) -&gt; DataSourceStatus:\n        \"\"\"\u68c0\u67e5\u6570\u636e\u6e90\u5065\u5eb7\u72b6\u6001\"\"\"\n        now = datetime.now()\n\n        # \u68c0\u67e5\u662f\u5426\u9700\u8981\u91cd\u65b0\u68c0\u67e5\n        if (source not in self.last_check or \n            now - self.last_check[source] &gt; timedelta(seconds=self.check_interval)):\n\n            await self._perform_health_check(source)\n            self.last_check[source] = now\n\n        return self.health_status.get(source, DataSourceStatus.UNAVAILABLE)\n\n    async def _perform_health_check(self, source: DataSourceType):\n        \"\"\"\u6267\u884c\u5065\u5eb7\u68c0\u67e5\"\"\"\n        try:\n            fetcher = self.data_fetchers[source]\n\n            # \u6267\u884c\u7b80\u5355\u7684\u8fde\u63a5\u6d4b\u8bd5\n            start_time = datetime.now()\n            await fetcher.health_check()\n            response_time = (datetime.now() - start_time).total_seconds()\n\n            # \u6839\u636e\u54cd\u5e94\u65f6\u95f4\u5224\u65ad\u72b6\u6001\n            if response_time &lt; 2.0:\n                self.health_status[source] = DataSourceStatus.HEALTHY\n            elif response_time &lt; 5.0:\n                self.health_status[source] = DataSourceStatus.DEGRADED\n            else:\n                self.health_status[source] = DataSourceStatus.UNAVAILABLE\n\n            self.logger.info(f\"{source} health check: {self.health_status[source]} (response_time: {response_time:.2f}s)\")\n\n        except Exception as e:\n            self.health_status[source] = DataSourceStatus.UNAVAILABLE\n            self.logger.error(f\"{source} health check failed: {str(e)}\")\n\n    async def start_monitoring(self):\n        \"\"\"\u542f\u52a8\u6301\u7eed\u76d1\u63a7\"\"\"\n        while True:\n            for source in self.data_fetchers.keys():\n                await self._perform_health_check(source)\n            await asyncio.sleep(self.check_interval)\n</code></pre>"},{"location":"02_architecture/hybrid_architecture_design.html#4","title":"4. \u7f13\u5b58\u7b56\u7565\u8bbe\u8ba1","text":""},{"location":"02_architecture/hybrid_architecture_design.html#41","title":"4.1 \u591a\u5c42\u7ea7\u7f13\u5b58\u67b6\u6784","text":"<pre><code>\u7f13\u5b58\u5c42\u7ea7\u7ed3\u6784\n\u250c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2510\n\u2502                    L1: \u5185\u5b58\u7f13\u5b58 (LRU)                        \u2502\n\u2502  \u2022 \u5bb9\u91cf: 1000\u4e2a\u5bf9\u8c61                                          \u2502\n\u2502  \u2022 TTL: 5-30\u5206\u949f                                            \u2502\n\u2502  \u2022 \u7528\u9014: \u70ed\u70b9\u6570\u636e\u5feb\u901f\u8bbf\u95ee                                     \u2502\n\u2514\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2518\n                              \u2502\n                              \u25bc\n\u250c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2510\n\u2502                    L2: Redis\u7f13\u5b58                            \u2502\n\u2502  \u2022 \u5bb9\u91cf: 10GB                                               \u2502\n\u2502  \u2022 TTL: 1-24\u5c0f\u65f6                                            \u2502\n\u2502  \u2022 \u7528\u9014: \u5206\u5e03\u5f0f\u7f13\u5b58\uff0c\u652f\u6301\u96c6\u7fa4                                 \u2502\n\u2514\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2518\n                              \u2502\n                              \u25bc\n\u250c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2510\n\u2502                    L3: \u672c\u5730\u6587\u4ef6\u7f13\u5b58                          \u2502\n\u2502  \u2022 \u5bb9\u91cf: 1GB                                                \u2502\n\u2502  \u2022 TTL: 1-7\u5929                                               \u2502\n\u2502  \u2022 \u7528\u9014: \u51b7\u6570\u636e\u5b58\u50a8\uff0c\u79bb\u7ebf\u8bbf\u95ee                                 \u2502\n\u2514\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2518\n</code></pre>"},{"location":"02_architecture/hybrid_architecture_design.html#42","title":"4.2 \u7f13\u5b58\u7ba1\u7406\u5668\u5b9e\u73b0","text":"<pre><code>import json\nimport hashlib\nfrom datetime import datetime, timedelta\nfrom typing import Any, Dict, Optional\nimport redis\nfrom cachetools import LRUCache\n\nclass CacheManager:\n    \"\"\"\u591a\u5c42\u7ea7\u7f13\u5b58\u7ba1\u7406\u5668\"\"\"\n\n    def __init__(self, config: Dict[str, Any]):\n        self.config = config\n\n        # L1: \u5185\u5b58\u7f13\u5b58\n        self.memory_cache = LRUCache(maxsize=1000)\n\n        # L2: Redis\u7f13\u5b58\n        self.redis_client = redis.Redis(\n            host=config.get('redis_host', 'localhost'),\n            port=config.get('redis_port', 6379),\n            db=config.get('redis_db', 0),\n            decode_responses=True\n        )\n\n        # L3: \u6587\u4ef6\u7f13\u5b58\u8def\u5f84\n        self.file_cache_dir = config.get('file_cache_dir', './cache')\n\n        self.logger = logging.getLogger(__name__)\n\n    def _generate_cache_key(self, data_type: str, params: Dict[str, Any]) -&gt; str:\n        \"\"\"\u751f\u6210\u7f13\u5b58\u952e\"\"\"\n        # \u521b\u5efa\u53c2\u6570\u7684\u54c8\u5e0c\u503c\n        params_str = json.dumps(params, sort_keys=True)\n        params_hash = hashlib.md5(params_str.encode()).hexdigest()[:8]\n        return f\"{data_type}:{params_hash}\"\n\n    async def get(self, data_type: str, params: Dict[str, Any]) -&gt; Optional[Dict[str, Any]]:\n        \"\"\"\u83b7\u53d6\u7f13\u5b58\u6570\u636e\"\"\"\n        cache_key = self._generate_cache_key(data_type, params)\n\n        # L1: \u68c0\u67e5\u5185\u5b58\u7f13\u5b58\n        if cache_key in self.memory_cache:\n            self.logger.debug(f\"L1 cache hit: {cache_key}\")\n            return self.memory_cache[cache_key]\n\n        # L2: \u68c0\u67e5Redis\u7f13\u5b58\n        try:\n            redis_data = self.redis_client.get(cache_key)\n            if redis_data:\n                data = json.loads(redis_data)\n                # \u56de\u586b\u5230L1\u7f13\u5b58\n                self.memory_cache[cache_key] = data\n                self.logger.debug(f\"L2 cache hit: {cache_key}\")\n                return data\n        except Exception as e:\n            self.logger.warning(f\"Redis cache error: {str(e)}\")\n\n        # L3: \u68c0\u67e5\u6587\u4ef6\u7f13\u5b58\n        try:\n            file_path = os.path.join(self.file_cache_dir, f\"{cache_key}.json\")\n            if os.path.exists(file_path):\n                with open(file_path, 'r') as f:\n                    data = json.load(f)\n\n                # \u68c0\u67e5\u6587\u4ef6\u7f13\u5b58\u662f\u5426\u8fc7\u671f\n                cache_time = datetime.fromisoformat(data.get('_cache_time', '1970-01-01'))\n                if datetime.now() - cache_time &lt; timedelta(days=7):\n                    # \u56de\u586b\u5230\u4e0a\u7ea7\u7f13\u5b58\n                    self.memory_cache[cache_key] = data\n                    try:\n                        self.redis_client.setex(cache_key, 3600, json.dumps(data))\n                    except:\n                        pass\n\n                    self.logger.debug(f\"L3 cache hit: {cache_key}\")\n                    return data\n        except Exception as e:\n            self.logger.warning(f\"File cache error: {str(e)}\")\n\n        return None\n\n    async def set(self, data_type: str, params: Dict[str, Any], data: Dict[str, Any]):\n        \"\"\"\u8bbe\u7f6e\u7f13\u5b58\u6570\u636e\"\"\"\n        cache_key = self._generate_cache_key(data_type, params)\n\n        # \u6dfb\u52a0\u7f13\u5b58\u65f6\u95f4\u6233\n        data_with_timestamp = {\n            **data,\n            '_cache_time': datetime.now().isoformat(),\n            '_data_type': data_type\n        }\n\n        # \u83b7\u53d6TTL\u914d\u7f6e\n        ttl_config = self.config.get('cache_ttl', {})\n        memory_ttl = ttl_config.get(data_type, {}).get('memory', 1800)  # 30\u5206\u949f\n        redis_ttl = ttl_config.get(data_type, {}).get('redis', 3600)    # 1\u5c0f\u65f6\n\n        # L1: \u8bbe\u7f6e\u5185\u5b58\u7f13\u5b58\n        self.memory_cache[cache_key] = data_with_timestamp\n\n        # L2: \u8bbe\u7f6eRedis\u7f13\u5b58\n        try:\n            self.redis_client.setex(\n                cache_key, \n                redis_ttl, \n                json.dumps(data_with_timestamp)\n            )\n        except Exception as e:\n            self.logger.warning(f\"Redis cache set error: {str(e)}\")\n\n        # L3: \u8bbe\u7f6e\u6587\u4ef6\u7f13\u5b58\uff08\u5f02\u6b65\uff09\n        asyncio.create_task(self._set_file_cache(cache_key, data_with_timestamp))\n\n    async def _set_file_cache(self, cache_key: str, data: Dict[str, Any]):\n        \"\"\"\u5f02\u6b65\u8bbe\u7f6e\u6587\u4ef6\u7f13\u5b58\"\"\"\n        try:\n            os.makedirs(self.file_cache_dir, exist_ok=True)\n            file_path = os.path.join(self.file_cache_dir, f\"{cache_key}.json\")\n\n            with open(file_path, 'w') as f:\n                json.dump(data, f, indent=2)\n\n        except Exception as e:\n            self.logger.warning(f\"File cache set error: {str(e)}\")\n\n    async def get_stale(self, data_type: str, params: Dict[str, Any]) -&gt; Optional[Dict[str, Any]]:\n        \"\"\"\u83b7\u53d6\u8fc7\u671f\u7684\u7f13\u5b58\u6570\u636e\uff08\u7528\u4e8e\u964d\u7ea7\uff09\"\"\"\n        cache_key = self._generate_cache_key(data_type, params)\n\n        # \u5c1d\u8bd5\u4ece\u6587\u4ef6\u7f13\u5b58\u83b7\u53d6\uff0c\u5ffd\u7565\u8fc7\u671f\u65f6\u95f4\n        try:\n            file_path = os.path.join(self.file_cache_dir, f\"{cache_key}.json\")\n            if os.path.exists(file_path):\n                with open(file_path, 'r') as f:\n                    data = json.load(f)\n                self.logger.warning(f\"Returning stale cache data: {cache_key}\")\n                return data\n        except Exception as e:\n            self.logger.error(f\"Stale cache retrieval error: {str(e)}\")\n\n        return None\n\n    async def invalidate(self, data_type: str, params: Dict[str, Any] = None):\n        \"\"\"\u7f13\u5b58\u5931\u6548\"\"\"\n        if params:\n            # \u5931\u6548\u7279\u5b9a\u7f13\u5b58\n            cache_key = self._generate_cache_key(data_type, params)\n            self._invalidate_key(cache_key)\n        else:\n            # \u5931\u6548\u6570\u636e\u7c7b\u578b\u7684\u6240\u6709\u7f13\u5b58\n            await self._invalidate_by_pattern(f\"{data_type}:*\")\n\n    def _invalidate_key(self, cache_key: str):\n        \"\"\"\u5931\u6548\u6307\u5b9a\u952e\u7684\u7f13\u5b58\"\"\"\n        # L1: \u5185\u5b58\u7f13\u5b58\n        if cache_key in self.memory_cache:\n            del self.memory_cache[cache_key]\n\n        # L2: Redis\u7f13\u5b58\n        try:\n            self.redis_client.delete(cache_key)\n        except:\n            pass\n\n        # L3: \u6587\u4ef6\u7f13\u5b58\n        try:\n            file_path = os.path.join(self.file_cache_dir, f\"{cache_key}.json\")\n            if os.path.exists(file_path):\n                os.remove(file_path)\n        except:\n            pass\n\n    async def _invalidate_by_pattern(self, pattern: str):\n        \"\"\"\u6309\u6a21\u5f0f\u5931\u6548\u7f13\u5b58\"\"\"\n        # Redis\u6a21\u5f0f\u5339\u914d\u5220\u9664\n        try:\n            keys = self.redis_client.keys(pattern)\n            if keys:\n                self.redis_client.delete(*keys)\n        except:\n            pass\n\n        # \u5185\u5b58\u7f13\u5b58\u6a21\u5f0f\u5339\u914d\u5220\u9664\n        keys_to_delete = [k for k in self.memory_cache.keys() if k.startswith(pattern.replace('*', ''))]\n        for key in keys_to_delete:\n            del self.memory_cache[key]\n</code></pre>"},{"location":"02_architecture/hybrid_architecture_design.html#43","title":"4.3 \u7f13\u5b58\u7b56\u7565\u914d\u7f6e","text":"<pre><code># \u7f13\u5b58TTL\u914d\u7f6e\nCACHE_TTL_CONFIG = {\n    'stock_basic': {\n        'memory': 3600,    # 1\u5c0f\u65f6\n        'redis': 86400,    # 24\u5c0f\u65f6\n        'file': 604800     # 7\u5929\n    },\n    'daily_basic': {\n        'memory': 1800,    # 30\u5206\u949f\n        'redis': 3600,     # 1\u5c0f\u65f6\n        'file': 86400      # 1\u5929\n    },\n    'financial_data': {\n        'memory': 7200,    # 2\u5c0f\u65f6\n        'redis': 43200,    # 12\u5c0f\u65f6\n        'file': 2592000    # 30\u5929\n    },\n    'real_time_quotes': {\n        'memory': 300,     # 5\u5206\u949f\n        'redis': 900,      # 15\u5206\u949f\n        'file': 3600       # 1\u5c0f\u65f6\n    }\n}\n\n# \u7f13\u5b58\u5931\u6548\u7b56\u7565\nCACHE_INVALIDATION_RULES = {\n    'market_close': {\n        'time': '15:30',\n        'invalidate': ['daily_basic', 'real_time_quotes']\n    },\n    'financial_report': {\n        'trigger': 'quarterly',\n        'invalidate': ['financial_data', 'valuation_metrics']\n    },\n    'stock_list_update': {\n        'trigger': 'weekly',\n        'invalidate': ['stock_basic']\n    }\n}\n</code></pre>"},{"location":"02_architecture/hybrid_architecture_design.html#5","title":"5. \u9519\u8bef\u5904\u7406\u548c\u964d\u7ea7\u7b56\u7565","text":""},{"location":"02_architecture/hybrid_architecture_design.html#51","title":"5.1 \u9519\u8bef\u5206\u7c7b\u548c\u5904\u7406","text":"<pre><code>from enum import Enum\nfrom typing import Dict, Any, Optional\n\nclass ErrorType(Enum):\n    \"\"\"\u9519\u8bef\u7c7b\u578b\u679a\u4e3e\"\"\"\n    NETWORK_ERROR = \"network_error\"          # \u7f51\u7edc\u8fde\u63a5\u9519\u8bef\n    API_LIMIT_ERROR = \"api_limit_error\"      # API\u9650\u6d41\u9519\u8bef\n    DATA_NOT_FOUND = \"data_not_found\"        # \u6570\u636e\u4e0d\u5b58\u5728\n    AUTHENTICATION_ERROR = \"auth_error\"       # \u8ba4\u8bc1\u9519\u8bef\n    SERVER_ERROR = \"server_error\"            # \u670d\u52a1\u5668\u9519\u8bef\n    TIMEOUT_ERROR = \"timeout_error\"          # \u8d85\u65f6\u9519\u8bef\n    DATA_FORMAT_ERROR = \"format_error\"       # \u6570\u636e\u683c\u5f0f\u9519\u8bef\n\nclass ErrorHandler:\n    \"\"\"\u7edf\u4e00\u9519\u8bef\u5904\u7406\u5668\"\"\"\n\n    def __init__(self, config: Dict[str, Any]):\n        self.config = config\n        self.retry_config = config.get('retry_config', {})\n        self.fallback_config = config.get('fallback_config', {})\n        self.logger = logging.getLogger(__name__)\n\n    async def handle_error(self, error: Exception, context: Dict[str, Any]) -&gt; Dict[str, Any]:\n        \"\"\"\u7edf\u4e00\u9519\u8bef\u5904\u7406\u5165\u53e3\"\"\"\n        error_type = self._classify_error(error)\n\n        self.logger.error(f\"Error occurred: {error_type} - {str(error)}\")\n\n        # \u6839\u636e\u9519\u8bef\u7c7b\u578b\u9009\u62e9\u5904\u7406\u7b56\u7565\n        if error_type == ErrorType.API_LIMIT_ERROR:\n            return await self._handle_api_limit_error(error, context)\n        elif error_type == ErrorType.NETWORK_ERROR:\n            return await self._handle_network_error(error, context)\n        elif error_type == ErrorType.TIMEOUT_ERROR:\n            return await self._handle_timeout_error(error, context)\n        elif error_type == ErrorType.DATA_NOT_FOUND:\n            return await self._handle_data_not_found_error(error, context)\n        else:\n            return await self._handle_generic_error(error, context)\n\n    def _classify_error(self, error: Exception) -&gt; ErrorType:\n        \"\"\"\u9519\u8bef\u5206\u7c7b\"\"\"\n        error_msg = str(error).lower()\n\n        if 'rate limit' in error_msg or 'quota exceeded' in error_msg:\n            return ErrorType.API_LIMIT_ERROR\n        elif 'network' in error_msg or 'connection' in error_msg:\n            return ErrorType.NETWORK_ERROR\n        elif 'timeout' in error_msg:\n            return ErrorType.TIMEOUT_ERROR\n        elif 'not found' in error_msg or 'no data' in error_msg:\n            return ErrorType.DATA_NOT_FOUND\n        elif 'authentication' in error_msg or 'unauthorized' in error_msg:\n            return ErrorType.AUTHENTICATION_ERROR\n        elif 'server error' in error_msg or '500' in error_msg:\n            return ErrorType.SERVER_ERROR\n        else:\n            return ErrorType.DATA_FORMAT_ERROR\n\n    async def _handle_api_limit_error(self, error: Exception, context: Dict[str, Any]) -&gt; Dict[str, Any]:\n        \"\"\"\u5904\u7406API\u9650\u6d41\u9519\u8bef\"\"\"\n        # 1. \u5207\u6362\u5230\u5907\u7528\u6570\u636e\u6e90\n        self.logger.warning(\"API limit reached, switching to fallback data source\")\n\n        # 2. \u5c1d\u8bd5\u4ece\u7f13\u5b58\u83b7\u53d6\u6570\u636e\n        cache_manager = context.get('cache_manager')\n        if cache_manager:\n            stale_data = await cache_manager.get_stale(\n                context.get('data_type'), \n                context.get('params')\n            )\n            if stale_data:\n                return stale_data\n\n        # 3. \u4f7f\u7528\u5907\u7528\u6570\u636e\u6e90\n        fallback_fetcher = context.get('fallback_fetcher')\n        if fallback_fetcher:\n            return await fallback_fetcher.fetch_data(\n                context.get('data_type'),\n                context.get('params')\n            )\n\n        raise error\n\n    async def _handle_network_error(self, error: Exception, context: Dict[str, Any]) -&gt; Dict[str, Any]:\n        \"\"\"\u5904\u7406\u7f51\u7edc\u9519\u8bef\"\"\"\n        # \u91cd\u8bd5\u673a\u5236\n        retry_count = context.get('retry_count', 0)\n        max_retries = self.retry_config.get('max_retries', 3)\n\n        if retry_count &lt; max_retries:\n            self.logger.info(f\"Network error, retrying ({retry_count + 1}/{max_retries})\")\n\n            # \u6307\u6570\u9000\u907f\n            wait_time = 2 ** retry_count\n            await asyncio.sleep(wait_time)\n\n            # \u66f4\u65b0\u91cd\u8bd5\u6b21\u6570\n            context['retry_count'] = retry_count + 1\n\n            # \u91cd\u65b0\u5c1d\u8bd5\n            fetcher = context.get('fetcher')\n            if fetcher:\n                return await fetcher.fetch_data(\n                    context.get('data_type'),\n                    context.get('params')\n                )\n\n        # \u91cd\u8bd5\u5931\u8d25\uff0c\u4f7f\u7528\u964d\u7ea7\u7b56\u7565\n        return await self._apply_fallback_strategy(error, context)\n\n    async def _apply_fallback_strategy(self, error: Exception, context: Dict[str, Any]) -&gt; Dict[str, Any]:\n        \"\"\"\u5e94\u7528\u964d\u7ea7\u7b56\u7565\"\"\"\n        # 1. \u5c1d\u8bd5\u4ece\u7f13\u5b58\u83b7\u53d6\u8fc7\u671f\u6570\u636e\n        cache_manager = context.get('cache_manager')\n        if cache_manager:\n            stale_data = await cache_manager.get_stale(\n                context.get('data_type'),\n                context.get('params')\n            )\n            if stale_data:\n                self.logger.warning(\"Using stale cached data as fallback\")\n                return stale_data\n\n        # 2. \u4f7f\u7528\u5907\u7528\u6570\u636e\u6e90\n        fallback_fetcher = context.get('fallback_fetcher')\n        if fallback_fetcher:\n            try:\n                self.logger.warning(\"Using fallback data source\")\n                return await fallback_fetcher.fetch_data(\n                    context.get('data_type'),\n                    context.get('params')\n                )\n            except Exception as fallback_error:\n                self.logger.error(f\"Fallback data source also failed: {str(fallback_error)}\")\n\n        # 3. \u8fd4\u56de\u9ed8\u8ba4\u503c\u6216\u629b\u51fa\u5f02\u5e38\n        default_data = self.fallback_config.get('default_data', {})\n        if default_data:\n            self.logger.warning(\"Using default fallback data\")\n            return default_data\n\n        # \u6240\u6709\u964d\u7ea7\u7b56\u7565\u90fd\u5931\u8d25\uff0c\u629b\u51fa\u539f\u59cb\u5f02\u5e38\n        raise error\n</code></pre>"},{"location":"02_architecture/hybrid_architecture_design.html#52","title":"5.2 \u81ea\u52a8\u964d\u7ea7\u548c\u6062\u590d\u673a\u5236","text":"<pre><code>import asyncio\nfrom datetime import datetime, timedelta\nfrom typing import Dict, List\n\nclass AutoDegradationManager:\n    \"\"\"\u81ea\u52a8\u964d\u7ea7\u7ba1\u7406\u5668\"\"\"\n\n    def __init__(self, data_source_manager, config: Dict[str, Any]):\n        self.data_source_manager = data_source_manager\n        self.config = config\n        self.degradation_rules = config.get('degradation_rules', {})\n        self.recovery_rules = config.get('recovery_rules', {})\n        self.current_degradations = {}\n        self.logger = logging.getLogger(__name__)\n\n    async def evaluate_degradation(self, source: DataSourceType, error_history: List[Dict]):\n        \"\"\"\u8bc4\u4f30\u662f\u5426\u9700\u8981\u964d\u7ea7\"\"\"\n        # \u5206\u6790\u9519\u8bef\u5386\u53f2\n        recent_errors = [e for e in error_history \n                        if datetime.now() - e['timestamp'] &lt; timedelta(minutes=5)]\n\n        error_rate = len(recent_errors) / max(1, len(error_history))\n\n        # \u68c0\u67e5\u964d\u7ea7\u6761\u4ef6\n        if error_rate &gt; self.degradation_rules.get('error_rate_threshold', 0.5):\n            await self._trigger_degradation(source, 'high_error_rate')\n\n        # \u68c0\u67e5\u54cd\u5e94\u65f6\u95f4\n        avg_response_time = sum(e.get('response_time', 0) for e in recent_errors) / max(1, len(recent_errors))\n        if avg_response_time &gt; self.degradation_rules.get('response_time_threshold', 10.0):\n            await self._trigger_degradation(source, 'slow_response')\n\n    async def _trigger_degradation(self, source: DataSourceType, reason: str):\n        \"\"\"\u89e6\u53d1\u964d\u7ea7\"\"\"\n        if source not in self.current_degradations:\n            self.current_degradations[source] = {\n                'reason': reason,\n                'start_time': datetime.now(),\n                'attempts': 0\n            }\n\n            self.logger.warning(f\"Triggering degradation for {source}: {reason}\")\n\n            # \u901a\u77e5\u6570\u636e\u6e90\u7ba1\u7406\u5668\n            await self.data_source_manager.set_source_status(source, DataSourceStatus.DEGRADED)\n\n    async def evaluate_recovery(self):\n        \"\"\"\u8bc4\u4f30\u6062\u590d\u6761\u4ef6\"\"\"\n        for source, degradation_info in list(self.current_degradations.items()):\n            # \u68c0\u67e5\u964d\u7ea7\u65f6\u95f4\n            degradation_duration = datetime.now() - degradation_info['start_time']\n            min_degradation_time = timedelta(minutes=self.recovery_rules.get('min_degradation_minutes', 5))\n\n            if degradation_duration &gt; min_degradation_time:\n                # \u5c1d\u8bd5\u6062\u590d\u68c0\u67e5\n                if await self._test_recovery(source):\n                    await self._trigger_recovery(source)\n\n    async def _test_recovery(self, source: DataSourceType) -&gt; bool:\n        \"\"\"\u6d4b\u8bd5\u6570\u636e\u6e90\u662f\u5426\u53ef\u4ee5\u6062\u590d\"\"\"\n        try:\n            # \u6267\u884c\u5065\u5eb7\u68c0\u67e5\n            health_checker = self.data_source_manager.health_checker\n            status = await health_checker.check_health(source)\n\n            return status == DataSourceStatus.HEALTHY\n\n        except Exception as e:\n            self.logger.debug(f\"Recovery test failed for {source}: {str(e)}\")\n            return False\n\n    async def _trigger_recovery(self, source: DataSourceType):\n        \"\"\"\u89e6\u53d1\u6062\u590d\"\"\"\n        if source in self.current_degradations:\n            degradation_info = self.current_degradations[source]\n            duration = datetime.now() - degradation_info['start_time']\n\n            self.logger.info(f\"Recovering {source} after {duration}\")\n\n            # \u79fb\u9664\u964d\u7ea7\u72b6\u6001\n            del self.current_degradations[source]\n\n            # \u901a\u77e5\u6570\u636e\u6e90\u7ba1\u7406\u5668\n            await self.data_source_manager.set_source_status(source, DataSourceStatus.HEALTHY)\n\n    async def start_monitoring(self):\n        \"\"\"\u542f\u52a8\u81ea\u52a8\u964d\u7ea7\u76d1\u63a7\"\"\"\n        while True:\n            try:\n                await self.evaluate_recovery()\n                await asyncio.sleep(30)  # 30\u79d2\u68c0\u67e5\u4e00\u6b21\n            except Exception as e:\n                self.logger.error(f\"Auto degradation monitoring error: {str(e)}\")\n                await asyncio.sleep(60)\n</code></pre>"},{"location":"02_architecture/hybrid_architecture_design.html#6","title":"6. \u76d1\u63a7\u548c\u544a\u8b66\u7cfb\u7edf","text":""},{"location":"02_architecture/hybrid_architecture_design.html#61","title":"6.1 \u76d1\u63a7\u6307\u6807\u5b9a\u4e49","text":"<pre><code>from dataclasses import dataclass\nfrom typing import Dict, List, Optional\nfrom datetime import datetime\nimport time\n\n@dataclass\nclass MetricPoint:\n    \"\"\"\u76d1\u63a7\u6307\u6807\u6570\u636e\u70b9\"\"\"\n    name: str\n    value: float\n    timestamp: datetime\n    tags: Dict[str, str]\n    unit: str = \"\"\n\nclass MetricsCollector:\n    \"\"\"\u6307\u6807\u6536\u96c6\u5668\"\"\"\n\n    def __init__(self, config: Dict[str, Any]):\n        self.config = config\n        self.metrics_buffer = []\n        self.counters = {}\n        self.gauges = {}\n        self.histograms = {}\n        self.logger = logging.getLogger(__name__)\n\n    def increment_counter(self, name: str, value: float = 1.0, tags: Dict[str, str] = None):\n        \"\"\"\u9012\u589e\u8ba1\u6570\u5668\"\"\"\n        key = self._make_key(name, tags or {})\n        self.counters[key] = self.counters.get(key, 0) + value\n\n        self._add_metric_point(MetricPoint(\n            name=name,\n            value=self.counters[key],\n            timestamp=datetime.now(),\n            tags=tags or {},\n            unit=\"count\"\n        ))\n\n    def set_gauge(self, name: str, value: float, tags: Dict[str, str] = None):\n        \"\"\"\u8bbe\u7f6e\u4eea\u8868\u503c\"\"\"\n        key = self._make_key(name, tags or {})\n        self.gauges[key] = value\n\n        self._add_metric_point(MetricPoint(\n            name=name,\n            value=value,\n            timestamp=datetime.now(),\n            tags=tags or {},\n            unit=\"gauge\"\n        ))\n\n    def record_histogram(self, name: str, value: float, tags: Dict[str, str] = None):\n        \"\"\"\u8bb0\u5f55\u76f4\u65b9\u56fe\u503c\"\"\"\n        key = self._make_key(name, tags or {})\n        if key not in self.histograms:\n            self.histograms[key] = []\n\n        self.histograms[key].append(value)\n\n        # \u4fdd\u6301\u6700\u8fd11000\u4e2a\u503c\n        if len(self.histograms[key]) &gt; 1000:\n            self.histograms[key] = self.histograms[key][-1000:]\n\n        self._add_metric_point(MetricPoint(\n            name=name,\n            value=value,\n            timestamp=datetime.now(),\n            tags=tags or {},\n            unit=\"histogram\"\n        ))\n\n    def _make_key(self, name: str, tags: Dict[str, str]) -&gt; str:\n        \"\"\"\u751f\u6210\u6307\u6807\u952e\"\"\"\n        tag_str = \",\".join(f\"{k}={v}\" for k, v in sorted(tags.items()))\n        return f\"{name}[{tag_str}]\"\n\n    def _add_metric_point(self, metric: MetricPoint):\n        \"\"\"\u6dfb\u52a0\u6307\u6807\u70b9\u5230\u7f13\u51b2\u533a\"\"\"\n        self.metrics_buffer.append(metric)\n\n        # \u7f13\u51b2\u533a\u6ee1\u65f6\u53d1\u9001\n        if len(self.metrics_buffer) &gt;= 100:\n            asyncio.create_task(self._flush_metrics())\n\n    async def _flush_metrics(self):\n        \"\"\"\u5237\u65b0\u6307\u6807\u5230\u76d1\u63a7\u7cfb\u7edf\"\"\"\n        if not self.metrics_buffer:\n            return\n\n        try:\n            # \u53d1\u9001\u5230Prometheus\u6216\u5176\u4ed6\u76d1\u63a7\u7cfb\u7edf\n            await self._send_to_monitoring_system(self.metrics_buffer)\n            self.metrics_buffer.clear()\n\n        except Exception as e:\n            self.logger.error(f\"Failed to flush metrics: {str(e)}\")\n\n    async def _send_to_monitoring_system(self, metrics: List[MetricPoint]):\n        \"\"\"\u53d1\u9001\u6307\u6807\u5230\u76d1\u63a7\u7cfb\u7edf\"\"\"\n        # \u8fd9\u91cc\u53ef\u4ee5\u96c6\u6210Prometheus\u3001InfluxDB\u7b49\u76d1\u63a7\u7cfb\u7edf\n        for metric in metrics:\n            self.logger.debug(f\"Metric: {metric.name}={metric.value} {metric.tags}\")\n\n# \u6838\u5fc3\u76d1\u63a7\u6307\u6807\u5b9a\u4e49\nCORE_METRICS = {\n    # \u6570\u636e\u6e90\u6307\u6807\n    'data_source_requests_total': 'Counter - \u6570\u636e\u6e90\u8bf7\u6c42\u603b\u6570',\n    'data_source_errors_total': 'Counter - \u6570\u636e\u6e90\u9519\u8bef\u603b\u6570',\n    'data_source_response_time': 'Histogram - \u6570\u636e\u6e90\u54cd\u5e94\u65f6\u95f4',\n    'data_source_availability': 'Gauge - \u6570\u636e\u6e90\u53ef\u7528\u6027',\n\n    # \u7f13\u5b58\u6307\u6807\n    'cache_hits_total': 'Counter - \u7f13\u5b58\u547d\u4e2d\u603b\u6570',\n    'cache_misses_total': 'Counter - \u7f13\u5b58\u672a\u547d\u4e2d\u603b\u6570',\n    'cache_hit_ratio': 'Gauge - \u7f13\u5b58\u547d\u4e2d\u7387',\n    'cache_size_bytes': 'Gauge - \u7f13\u5b58\u5927\u5c0f',\n\n    # API\u6307\u6807\n    'api_requests_total': 'Counter - API\u8bf7\u6c42\u603b\u6570',\n    'api_response_time': 'Histogram - API\u54cd\u5e94\u65f6\u95f4',\n    'api_errors_total': 'Counter - API\u9519\u8bef\u603b\u6570',\n\n    # \u4e1a\u52a1\u6307\u6807\n    'valuation_calculations_total': 'Counter - \u4f30\u503c\u8ba1\u7b97\u603b\u6570',\n    'valuation_calculation_time': 'Histogram - \u4f30\u503c\u8ba1\u7b97\u65f6\u95f4',\n    'active_users': 'Gauge - \u6d3b\u8dc3\u7528\u6237\u6570'\n}\n</code></pre>"},{"location":"02_architecture/hybrid_architecture_design.html#62","title":"6.2 \u544a\u8b66\u89c4\u5219\u914d\u7f6e","text":"<pre><code># \u544a\u8b66\u89c4\u5219\u914d\u7f6e\nalert_rules:\n  # \u6570\u636e\u6e90\u544a\u8b66\n  data_source_down:\n    metric: data_source_availability\n    condition: \"&lt; 0.5\"\n    duration: \"2m\"\n    severity: critical\n    message: \"\u6570\u636e\u6e90 {{$labels.source}} \u4e0d\u53ef\u7528\"\n\n  data_source_slow:\n    metric: data_source_response_time\n    condition: \"&gt; 10\"\n    duration: \"5m\"\n    severity: warning\n    message: \"\u6570\u636e\u6e90 {{$labels.source}} \u54cd\u5e94\u7f13\u6162\"\n\n  high_error_rate:\n    metric: rate(data_source_errors_total[5m])\n    condition: \"&gt; 0.1\"\n    duration: \"3m\"\n    severity: warning\n    message: \"\u6570\u636e\u6e90 {{$labels.source}} \u9519\u8bef\u7387\u8fc7\u9ad8\"\n\n  # \u7f13\u5b58\u544a\u8b66\n  low_cache_hit_ratio:\n    metric: cache_hit_ratio\n    condition: \"&lt; 0.7\"\n    duration: \"10m\"\n    severity: warning\n    message: \"\u7f13\u5b58\u547d\u4e2d\u7387\u8fc7\u4f4e: {{$value}}\"\n\n  cache_size_high:\n    metric: cache_size_bytes\n    condition: \"&gt; 8GB\"\n    duration: \"5m\"\n    severity: warning\n    message: \"\u7f13\u5b58\u4f7f\u7528\u91cf\u8fc7\u9ad8: {{$value}}\"\n\n  # API\u544a\u8b66\n  api_response_slow:\n    metric: api_response_time\n    condition: \"&gt; 5\"\n    duration: \"5m\"\n    severity: warning\n    message: \"API\u54cd\u5e94\u65f6\u95f4\u8fc7\u957f: {{$value}}s\"\n\n  api_error_rate_high:\n    metric: rate(api_errors_total[5m])\n    condition: \"&gt; 0.05\"\n    duration: \"3m\"\n    severity: critical\n    message: \"API\u9519\u8bef\u7387\u8fc7\u9ad8: {{$value}}\"\n\n# \u544a\u8b66\u901a\u77e5\u914d\u7f6e\nnotification_channels:\n  email:\n    enabled: true\n    smtp_server: \"smtp.example.com\"\n    recipients: [\"admin@example.com\"]\n\n  slack:\n    enabled: true\n    webhook_url: \"https://hooks.slack.com/services/...\"\n    channel: \"#alerts\"\n\n  webhook:\n    enabled: false\n    url: \"https://api.example.com/alerts\"\n</code></pre>"},{"location":"02_architecture/hybrid_architecture_design.html#63","title":"6.3 \u76d1\u63a7\u4eea\u8868\u677f","text":"<pre><code>class MonitoringDashboard:\n    \"\"\"\u76d1\u63a7\u4eea\u8868\u677f\"\"\"\n\n    def __init__(self, metrics_collector: MetricsCollector):\n        self.metrics_collector = metrics_collector\n        self.dashboard_config = self._load_dashboard_config()\n\n    def _load_dashboard_config(self) -&gt; Dict[str, Any]:\n        \"\"\"\u52a0\u8f7d\u4eea\u8868\u677f\u914d\u7f6e\"\"\"\n        return {\n            'panels': [\n                {\n                    'title': '\u6570\u636e\u6e90\u72b6\u6001',\n                    'type': 'stat',\n                    'metrics': ['data_source_availability'],\n                    'thresholds': [0.9, 0.95]\n                },\n                {\n                    'title': '\u54cd\u5e94\u65f6\u95f4\u8d8b\u52bf',\n                    'type': 'graph',\n                    'metrics': ['data_source_response_time', 'api_response_time'],\n                    'time_range': '1h'\n                },\n                {\n                    'title': '\u7f13\u5b58\u6027\u80fd',\n                    'type': 'graph',\n                    'metrics': ['cache_hit_ratio', 'cache_hits_total', 'cache_misses_total'],\n                    'time_range': '6h'\n                },\n                {\n                    'title': '\u9519\u8bef\u7387\u7edf\u8ba1',\n                    'type': 'graph',\n                    'metrics': ['data_source_errors_total', 'api_errors_total'],\n                    'time_range': '24h'\n                },\n                {\n                    'title': '\u4e1a\u52a1\u6307\u6807',\n                    'type': 'stat',\n                    'metrics': ['valuation_calculations_total', 'active_users'],\n                    'time_range': '1d'\n                }\n            ]\n        }\n\n    async def get_dashboard_data(self) -&gt; Dict[str, Any]:\n        \"\"\"\u83b7\u53d6\u4eea\u8868\u677f\u6570\u636e\"\"\"\n        dashboard_data = {\n            'timestamp': datetime.now().isoformat(),\n            'panels': []\n        }\n\n        for panel_config in self.dashboard_config['panels']:\n            panel_data = await self._get_panel_data(panel_config)\n            dashboard_data['panels'].append(panel_data)\n\n        return dashboard_data\n\n    async def _get_panel_data(self, panel_config: Dict[str, Any]) -&gt; Dict[str, Any]:\n        \"\"\"\u83b7\u53d6\u9762\u677f\u6570\u636e\"\"\"\n        panel_data = {\n            'title': panel_config['title'],\n            'type': panel_config['type'],\n            'data': []\n        }\n\n        for metric_name in panel_config['metrics']:\n            metric_data = await self._get_metric_data(\n                metric_name, \n                panel_config.get('time_range', '1h')\n            )\n            panel_data['data'].append(metric_data)\n\n        return panel_data\n\n    async def _get_metric_data(self, metric_name: str, time_range: str) -&gt; Dict[str, Any]:\n        \"\"\"\u83b7\u53d6\u6307\u6807\u6570\u636e\"\"\"\n        # \u8fd9\u91cc\u5e94\u8be5\u4ece\u65f6\u5e8f\u6570\u636e\u5e93\u67e5\u8be2\u6570\u636e\n        # \u4e3a\u4e86\u793a\u4f8b\uff0c\u8fd4\u56de\u6a21\u62df\u6570\u636e\n        return {\n            'metric': metric_name,\n            'values': [],  # \u5b9e\u9645\u7684\u65f6\u5e8f\u6570\u636e\u70b9\n            'current_value': 0.0,\n            'trend': 'stable'  # up, down, stable\n        }\n</code></pre>"},{"location":"02_architecture/hybrid_architecture_design.html#7","title":"7. \u914d\u7f6e\u7ba1\u7406","text":""},{"location":"02_architecture/hybrid_architecture_design.html#71","title":"7.1 \u73af\u5883\u914d\u7f6e\u6587\u4ef6","text":"<pre><code># .env \u914d\u7f6e\u6587\u4ef6\n\n# ==================== \u6570\u636e\u6e90\u914d\u7f6e ====================\n# \u4e3b\u6570\u636e\u6e90\u9009\u62e9: tushare, postgresql\nPRIMARY_DATA_SOURCE=tushare\n\n# \u5907\u7528\u6570\u636e\u6e90\u9009\u62e9: postgresql, tushare\nFALLBACK_DATA_SOURCE=postgresql\n\n# \u5f3a\u5236\u4f7f\u7528\u6307\u5b9a\u6570\u636e\u6e90 (\u53ef\u9009): tushare, postgresql\n# FORCE_DATA_SOURCE=tushare\n\n# ==================== Tushare\u914d\u7f6e ====================\nTUSHARE_TOKEN=your_tushare_token_here\nTUSHARE_API_URL=http://api.tushare.pro\nTUSHARE_TIMEOUT=30\nTUSHARE_MAX_RETRIES=3\nTUSHARE_RETRY_DELAY=1\n\n# API\u914d\u989d\u7ba1\u7406\nTUSHARE_DAILY_LIMIT=10000\nTUSHARE_MINUTE_LIMIT=500\nTUSHARE_ENABLE_QUOTA_CHECK=true\n\n# ==================== PostgreSQL\u914d\u7f6e ====================\nPOSTGRESQL_HOST=localhost\nPOSTGRESQL_PORT=5432\nPOSTGRESQL_DATABASE=stock_valuation\nPOSTGRESQL_USERNAME=postgres\nPOSTGRESQL_PASSWORD=your_password_here\nPOSTGRESQL_POOL_SIZE=10\nPOSTGRESQL_MAX_OVERFLOW=20\nPOSTGRESQL_POOL_TIMEOUT=30\n\n# ==================== Redis\u7f13\u5b58\u914d\u7f6e ====================\nREDIS_HOST=localhost\nREDIS_PORT=6379\nREDIS_DB=0\nREDIS_PASSWORD=\nREDIS_MAX_CONNECTIONS=10\nREDIS_SOCKET_TIMEOUT=5\n\n# ==================== \u7f13\u5b58\u7b56\u7565\u914d\u7f6e ====================\n# \u542f\u7528\u7f13\u5b58\u5c42\u7ea7: memory, redis, file\nENABLE_MEMORY_CACHE=true\nENABLE_REDIS_CACHE=true\nENABLE_FILE_CACHE=true\n\n# \u7f13\u5b58\u76ee\u5f55\nFILE_CACHE_DIR=./cache\n\n# \u7f13\u5b58TTL (\u79d2)\nCACHE_TTL_STOCK_BASIC_MEMORY=3600\nCACHE_TTL_STOCK_BASIC_REDIS=86400\nCACHE_TTL_DAILY_BASIC_MEMORY=1800\nCACHE_TTL_DAILY_BASIC_REDIS=3600\nCACHE_TTL_FINANCIAL_DATA_MEMORY=7200\nCACHE_TTL_FINANCIAL_DATA_REDIS=43200\n\n# ==================== \u5065\u5eb7\u68c0\u67e5\u914d\u7f6e ====================\nHEALTH_CHECK_INTERVAL=60\nHEALTH_CHECK_TIMEOUT=10\nHEALTH_CHECK_RETRY_COUNT=3\n\n# \u5065\u5eb7\u72b6\u6001\u9608\u503c\nHEALTH_RESPONSE_TIME_HEALTHY=2.0\nHEALTH_RESPONSE_TIME_DEGRADED=5.0\n\n# ==================== \u964d\u7ea7\u7b56\u7565\u914d\u7f6e ====================\n# \u542f\u7528\u81ea\u52a8\u964d\u7ea7\nENABLE_AUTO_DEGRADATION=true\n\n# \u964d\u7ea7\u89e6\u53d1\u6761\u4ef6\nDEGRADATION_ERROR_RATE_THRESHOLD=0.5\nDEGRADATION_RESPONSE_TIME_THRESHOLD=10.0\nDEGRADATION_MIN_DURATION_MINUTES=5\n\n# \u6062\u590d\u6761\u4ef6\nRECOVERY_SUCCESS_RATE_THRESHOLD=0.9\nRECOVERY_TEST_INTERVAL=30\n\n# ==================== \u76d1\u63a7\u544a\u8b66\u914d\u7f6e ====================\n# \u542f\u7528\u76d1\u63a7\nENABLE_MONITORING=true\nMONITORING_INTERVAL=30\n\n# Prometheus\u914d\u7f6e\nPROMETHEUS_ENABLED=false\nPROMETHEUS_HOST=localhost\nPROMETHEUS_PORT=9090\n\n# \u544a\u8b66\u914d\u7f6e\nALERT_EMAIL_ENABLED=true\nALERT_EMAIL_SMTP_SERVER=smtp.example.com\nALERT_EMAIL_RECIPIENTS=admin@example.com\n\nALERT_SLACK_ENABLED=false\nALERT_SLACK_WEBHOOK_URL=\n\n# ==================== \u65e5\u5fd7\u914d\u7f6e ====================\nLOG_LEVEL=INFO\nLOG_FORMAT=%(asctime)s - %(name)s - %(levelname)s - %(message)s\nLOG_FILE_PATH=./logs/stock_valuation.log\nLOG_MAX_SIZE=100MB\nLOG_BACKUP_COUNT=5\n\n# ==================== \u6027\u80fd\u914d\u7f6e ====================\n# \u8fde\u63a5\u6c60\u914d\u7f6e\nCONNECTION_POOL_SIZE=10\nCONNECTION_POOL_MAX_OVERFLOW=20\nCONNECTION_POOL_TIMEOUT=30\n\n# \u5f02\u6b65\u914d\u7f6e\nASYNC_WORKER_COUNT=4\nASYNC_QUEUE_SIZE=1000\n\n# \u9650\u6d41\u914d\u7f6e\nRATE_LIMIT_ENABLED=true\nRATE_LIMIT_REQUESTS_PER_MINUTE=1000\nRATE_LIMIT_BURST_SIZE=100\n</code></pre>"},{"location":"02_architecture/hybrid_architecture_design.html#72","title":"7.2 \u914d\u7f6e\u52a0\u8f7d\u5668","text":"<pre><code>import os\nfrom typing import Dict, Any, Optional\nfrom dataclasses import dataclass\nfrom pathlib import Path\n\n@dataclass\nclass DataSourceConfig:\n    \"\"\"\u6570\u636e\u6e90\u914d\u7f6e\"\"\"\n    primary_source: str\n    fallback_source: str\n    force_source: Optional[str] = None\n\n@dataclass\nclass TushareConfig:\n    \"\"\"Tushare\u914d\u7f6e\"\"\"\n    token: str\n    api_url: str = \"http://api.tushare.pro\"\n    timeout: int = 30\n    max_retries: int = 3\n    retry_delay: int = 1\n    daily_limit: int = 10000\n    minute_limit: int = 500\n    enable_quota_check: bool = True\n\n@dataclass\nclass PostgreSQLConfig:\n    \"\"\"PostgreSQL\u914d\u7f6e\"\"\"\n    host: str = \"localhost\"\n    port: int = 5432\n    database: str = \"stock_valuation\"\n    username: str = \"postgres\"\n    password: str = \"\"\n    pool_size: int = 10\n    max_overflow: int = 20\n    pool_timeout: int = 30\n\n@dataclass\nclass CacheConfig:\n    \"\"\"\u7f13\u5b58\u914d\u7f6e\"\"\"\n    enable_memory: bool = True\n    enable_redis: bool = True\n    enable_file: bool = True\n    file_cache_dir: str = \"./cache\"\n    redis_host: str = \"localhost\"\n    redis_port: int = 6379\n    redis_db: int = 0\n    redis_password: str = \"\"\n\nclass ConfigLoader:\n    \"\"\"\u914d\u7f6e\u52a0\u8f7d\u5668\"\"\"\n\n    def __init__(self, env_file: str = \".env\"):\n        self.env_file = env_file\n        self._load_env_file()\n\n    def _load_env_file(self):\n        \"\"\"\u52a0\u8f7d\u73af\u5883\u53d8\u91cf\u6587\u4ef6\"\"\"\n        if Path(self.env_file).exists():\n            with open(self.env_file, 'r') as f:\n                for line in f:\n                    line = line.strip()\n                    if line and not line.startswith('#') and '=' in line:\n                        key, value = line.split('=', 1)\n                        os.environ[key.strip()] = value.strip()\n\n    def get_data_source_config(self) -&gt; DataSourceConfig:\n        \"\"\"\u83b7\u53d6\u6570\u636e\u6e90\u914d\u7f6e\"\"\"\n        return DataSourceConfig(\n            primary_source=os.getenv('PRIMARY_DATA_SOURCE', 'tushare'),\n            fallback_source=os.getenv('FALLBACK_DATA_SOURCE', 'postgresql'),\n            force_source=os.getenv('FORCE_DATA_SOURCE')\n        )\n\n    def get_tushare_config(self) -&gt; TushareConfig:\n        \"\"\"\u83b7\u53d6Tushare\u914d\u7f6e\"\"\"\n        token = os.getenv('TUSHARE_TOKEN')\n        if not token:\n            raise ValueError(\"TUSHARE_TOKEN is required\")\n\n        return TushareConfig(\n            token=token,\n            api_url=os.getenv('TUSHARE_API_URL', 'http://api.tushare.pro'),\n            timeout=int(os.getenv('TUSHARE_TIMEOUT', '30')),\n            max_retries=int(os.getenv('TUSHARE_MAX_RETRIES', '3')),\n            retry_delay=int(os.getenv('TUSHARE_RETRY_DELAY', '1')),\n            daily_limit=int(os.getenv('TUSHARE_DAILY_LIMIT', '10000')),\n            minute_limit=int(os.getenv('TUSHARE_MINUTE_LIMIT', '500')),\n            enable_quota_check=os.getenv('TUSHARE_ENABLE_QUOTA_CHECK', 'true').lower() == 'true'\n        )\n\n    def get_postgresql_config(self) -&gt; PostgreSQLConfig:\n        \"\"\"\u83b7\u53d6PostgreSQL\u914d\u7f6e\"\"\"\n        return PostgreSQLConfig(\n            host=os.getenv('POSTGRESQL_HOST', 'localhost'),\n            port=int(os.getenv('POSTGRESQL_PORT', '5432')),\n            database=os.getenv('POSTGRESQL_DATABASE', 'stock_valuation'),\n            username=os.getenv('POSTGRESQL_USERNAME', 'postgres'),\n            password=os.getenv('POSTGRESQL_PASSWORD', ''),\n            pool_size=int(os.getenv('POSTGRESQL_POOL_SIZE', '10')),\n            max_overflow=int(os.getenv('POSTGRESQL_MAX_OVERFLOW', '20')),\n            pool_timeout=int(os.getenv('POSTGRESQL_POOL_TIMEOUT', '30'))\n        )\n\n    def get_cache_config(self) -&gt; CacheConfig:\n        \"\"\"\u83b7\u53d6\u7f13\u5b58\u914d\u7f6e\"\"\"\n        return CacheConfig(\n            enable_memory=os.getenv('ENABLE_MEMORY_CACHE', 'true').lower() == 'true',\n            enable_redis=os.getenv('ENABLE_REDIS_CACHE', 'true').lower() == 'true',\n            enable_file=os.getenv('ENABLE_FILE_CACHE', 'true').lower() == 'true',\n            file_cache_dir=os.getenv('FILE_CACHE_DIR', './cache'),\n            redis_host=os.getenv('REDIS_HOST', 'localhost'),\n            redis_port=int(os.getenv('REDIS_PORT', '6379')),\n            redis_db=int(os.getenv('REDIS_DB', '0')),\n            redis_password=os.getenv('REDIS_PASSWORD', '')\n        )\n\n    def get_full_config(self) -&gt; Dict[str, Any]:\n        \"\"\"\u83b7\u53d6\u5b8c\u6574\u914d\u7f6e\"\"\"\n        return {\n            'data_source': self.get_data_source_config(),\n            'tushare': self.get_tushare_config(),\n            'postgresql': self.get_postgresql_config(),\n            'cache': self.get_cache_config(),\n            'monitoring': {\n                'enabled': os.getenv('ENABLE_MONITORING', 'true').lower() == 'true',\n                'interval': int(os.getenv('MONITORING_INTERVAL', '30'))\n            },\n            'logging': {\n                'level': os.getenv('LOG_LEVEL', 'INFO'),\n                'format': os.getenv('LOG_FORMAT', '%(asctime)s - %(name)s - %(levelname)s - %(message)s'),\n                'file_path': os.getenv('LOG_FILE_PATH', './logs/stock_valuation.log')\n            }\n        }\n</code></pre>"},{"location":"02_architecture/hybrid_architecture_design.html#8","title":"8. \u90e8\u7f72\u65b9\u6848","text":""},{"location":"02_architecture/hybrid_architecture_design.html#81-docker","title":"8.1 Docker\u5bb9\u5668\u5316\u90e8\u7f72","text":"<pre><code># Dockerfile\nFROM python:3.9-slim\n\n# \u8bbe\u7f6e\u5de5\u4f5c\u76ee\u5f55\nWORKDIR /app\n\n# \u5b89\u88c5\u7cfb\u7edf\u4f9d\u8d56\nRUN apt-get update &amp;&amp; apt-get install -y \\\n    gcc \\\n    g++ \\\n    &amp;&amp; rm -rf /var/lib/apt/lists/*\n\n# \u590d\u5236\u4f9d\u8d56\u6587\u4ef6\nCOPY requirements.txt .\n\n# \u5b89\u88c5Python\u4f9d\u8d56\nRUN pip install --no-cache-dir -r requirements.txt\n\n# \u590d\u5236\u5e94\u7528\u4ee3\u7801\nCOPY . .\n\n# \u521b\u5efa\u7f13\u5b58\u76ee\u5f55\nRUN mkdir -p /app/cache /app/logs\n\n# \u8bbe\u7f6e\u73af\u5883\u53d8\u91cf\nENV PYTHONPATH=/app\nENV PYTHONUNBUFFERED=1\n\n# \u66b4\u9732\u7aef\u53e3\nEXPOSE 8000\n\n# \u5065\u5eb7\u68c0\u67e5\nHEALTHCHECK --interval=30s --timeout=10s --start-period=5s --retries=3 \\\n    CMD curl -f http://localhost:8000/health || exit 1\n\n# \u542f\u52a8\u547d\u4ee4\nCMD [\"python\", \"-m\", \"uvicorn\", \"main:app\", \"--host\", \"0.0.0.0\", \"--port\", \"8000\"]\n</code></pre> <pre><code># docker-compose.yml\nversion: '3.8'\n\nservices:\n  stock-valuation:\n    build: .\n    ports:\n      - \"8000:8000\"\n    environment:\n      - PRIMARY_DATA_SOURCE=tushare\n      - FALLBACK_DATA_SOURCE=postgresql\n      - TUSHARE_TOKEN=${TUSHARE_TOKEN}\n      - POSTGRESQL_HOST=postgres\n      - REDIS_HOST=redis\n    depends_on:\n      - postgres\n      - redis\n    volumes:\n      - ./cache:/app/cache\n      - ./logs:/app/logs\n    restart: unless-stopped\n    networks:\n      - stock-network\n\n  postgres:\n    image: postgres:13\n    environment:\n      - POSTGRES_DB=stock_valuation\n      - POSTGRES_USER=postgres\n      - POSTGRES_PASSWORD=${POSTGRES_PASSWORD}\n    volumes:\n      - postgres_data:/var/lib/postgresql/data\n      - ./init.sql:/docker-entrypoint-initdb.d/init.sql\n    ports:\n      - \"5432:5432\"\n    restart: unless-stopped\n    networks:\n      - stock-network\n\n  redis:\n    image: redis:6-alpine\n    ports:\n      - \"6379:6379\"\n    volumes:\n      - redis_data:/data\n    restart: unless-stopped\n    networks:\n      - stock-network\n\n  prometheus:\n    image: prom/prometheus:latest\n    ports:\n      - \"9090:9090\"\n    volumes:\n      - ./prometheus.yml:/etc/prometheus/prometheus.yml\n      - prometheus_data:/prometheus\n    command:\n      - '--config.file=/etc/prometheus/prometheus.yml'\n      - '--storage.tsdb.path=/prometheus'\n      - '--web.console.libraries=/etc/prometheus/console_libraries'\n      - '--web.console.templates=/etc/prometheus/consoles'\n    restart: unless-stopped\n    networks:\n      - stock-network\n\n  grafana:\n    image: grafana/grafana:latest\n    ports:\n      - \"3000:3000\"\n    environment:\n      - GF_SECURITY_ADMIN_PASSWORD=${GRAFANA_PASSWORD}\n    volumes:\n      - grafana_data:/var/lib/grafana\n      - ./grafana/dashboards:/etc/grafana/provisioning/dashboards\n      - ./grafana/datasources:/etc/grafana/provisioning/datasources\n    restart: unless-stopped\n    networks:\n      - stock-network\n\nvolumes:\n  postgres_data:\n  redis_data:\n  prometheus_data:\n  grafana_data:\n\nnetworks:\n  stock-network:\n    driver: bridge\n</code></pre>"},{"location":"02_architecture/hybrid_architecture_design.html#82-kubernetes","title":"8.2 Kubernetes\u90e8\u7f72","text":"<pre><code># k8s-deployment.yaml\napiVersion: apps/v1\nkind: Deployment\nmetadata:\n  name: stock-valuation\n  labels:\n    app: stock-valuation\nspec:\n  replicas: 3\n  selector:\n    matchLabels:\n      app: stock-valuation\n  template:\n    metadata:\n      labels:\n        app: stock-valuation\n    spec:\n      containers:\n      - name: stock-valuation\n        image: stock-valuation:latest\n        ports:\n        - containerPort: 8000\n        env:\n        - name: PRIMARY_DATA_SOURCE\n          value: \"tushare\"\n        - name: FALLBACK_DATA_SOURCE\n          value: \"postgresql\"\n        - name: TUSHARE_TOKEN\n          valueFrom:\n            secretKeyRef:\n              name: tushare-secret\n              key: token\n        - name: POSTGRESQL_HOST\n          value: \"postgres-service\"\n        - name: REDIS_HOST\n          value: \"redis-service\"\n        resources:\n          requests:\n            memory: \"512Mi\"\n            cpu: \"250m\"\n          limits:\n            memory: \"1Gi\"\n            cpu: \"500m\"\n        livenessProbe:\n          httpGet:\n            path: /health\n            port: 8000\n          initialDelaySeconds: 30\n          periodSeconds: 10\n        readinessProbe:\n          httpGet:\n            path: /ready\n            port: 8000\n          initialDelaySeconds: 5\n          periodSeconds: 5\n        volumeMounts:\n        - name: cache-volume\n          mountPath: /app/cache\n        - name: logs-volume\n          mountPath: /app/logs\n      volumes:\n      - name: cache-volume\n        emptyDir: {}\n      - name: logs-volume\n        emptyDir: {}\n---\napiVersion: v1\nkind: Service\nmetadata:\n  name: stock-valuation-service\nspec:\n  selector:\n    app: stock-valuation\n  ports:\n  - protocol: TCP\n    port: 80\n    targetPort: 8000\n  type: LoadBalancer\n</code></pre>"},{"location":"02_architecture/hybrid_architecture_design.html#9","title":"9. \u5b9e\u65bd\u8ba1\u5212","text":""},{"location":"02_architecture/hybrid_architecture_design.html#91","title":"9.1 \u5b9e\u65bd\u9636\u6bb5\u5212\u5206","text":""},{"location":"02_architecture/hybrid_architecture_design.html#1-2","title":"\u7b2c\u4e00\u9636\u6bb5\uff1a\u57fa\u7840\u67b6\u6784\u642d\u5efa (1-2\u5468)","text":"<p>\u76ee\u6807: \u5efa\u7acb\u6df7\u5408\u6570\u636e\u6e90\u7684\u57fa\u7840\u6846\u67b6</p> <p>\u4efb\u52a1\u6e05\u5355: - [ ] \u521b\u5efaDataSourceManager\u6838\u5fc3\u7c7b - [ ] \u5b9e\u73b0TushareDataFetcher - [ ] \u5b9e\u73b0PostgreSQLDataFetcher - [ ] \u5efa\u7acb\u57fa\u7840\u7684\u914d\u7f6e\u7ba1\u7406\u7cfb\u7edf - [ ] \u5b9e\u73b0\u7b80\u5355\u7684\u6570\u636e\u6e90\u5207\u6362\u903b\u8f91</p> <p>\u9a8c\u6536\u6807\u51c6: - \u80fd\u591f\u901a\u8fc7\u914d\u7f6e\u5207\u6362\u6570\u636e\u6e90 - \u57fa\u672c\u7684\u6570\u636e\u83b7\u53d6\u529f\u80fd\u6b63\u5e38 - \u5355\u5143\u6d4b\u8bd5\u8986\u76d6\u7387\u8fbe\u523080%</p>"},{"location":"02_architecture/hybrid_architecture_design.html#1-2_1","title":"\u7b2c\u4e8c\u9636\u6bb5\uff1a\u7f13\u5b58\u7cfb\u7edf\u5b9e\u73b0 (1-2\u5468)","text":"<p>\u76ee\u6807: \u5b9e\u73b0\u591a\u5c42\u7ea7\u7f13\u5b58\u673a\u5236</p> <p>\u4efb\u52a1\u6e05\u5355: - [ ] \u5b9e\u73b0CacheManager\u7c7b - [ ] \u96c6\u6210Redis\u7f13\u5b58 - [ ] \u5b9e\u73b0\u672c\u5730\u6587\u4ef6\u7f13\u5b58 - [ ] \u5efa\u7acb\u7f13\u5b58\u5931\u6548\u7b56\u7565 - [ ] \u4f18\u5316\u7f13\u5b58\u952e\u751f\u6210\u7b97\u6cd5</p> <p>\u9a8c\u6536\u6807\u51c6: - \u7f13\u5b58\u547d\u4e2d\u7387\u8fbe\u523070%\u4ee5\u4e0a - \u7f13\u5b58\u6570\u636e\u4e00\u81f4\u6027\u4fdd\u8bc1 - \u7f13\u5b58\u6027\u80fd\u6d4b\u8bd5\u901a\u8fc7</p>"},{"location":"02_architecture/hybrid_architecture_design.html#1_1","title":"\u7b2c\u4e09\u9636\u6bb5\uff1a\u5065\u5eb7\u68c0\u67e5\u548c\u964d\u7ea7 (1\u5468)","text":"<p>\u76ee\u6807: \u5b9e\u73b0\u81ea\u52a8\u5065\u5eb7\u68c0\u67e5\u548c\u964d\u7ea7\u673a\u5236</p> <p>\u4efb\u52a1\u6e05\u5355: - [ ] \u5b9e\u73b0HealthChecker\u7c7b - [ ] \u5efa\u7acb\u6570\u636e\u6e90\u72b6\u6001\u76d1\u63a7 - [ ] \u5b9e\u73b0\u81ea\u52a8\u964d\u7ea7\u903b\u8f91 - [ ] \u5efa\u7acb\u6062\u590d\u673a\u5236 - [ ] \u5b9e\u73b0\u9519\u8bef\u5904\u7406\u7b56\u7565</p> <p>\u9a8c\u6536\u6807\u51c6: - \u6570\u636e\u6e90\u6545\u969c\u81ea\u52a8\u68c0\u6d4b - \u964d\u7ea7\u5207\u6362\u65f6\u95f4&lt;5\u79d2 - \u6062\u590d\u673a\u5236\u6b63\u5e38\u5de5\u4f5c</p>"},{"location":"02_architecture/hybrid_architecture_design.html#1_2","title":"\u7b2c\u56db\u9636\u6bb5\uff1a\u76d1\u63a7\u544a\u8b66\u7cfb\u7edf (1\u5468)","text":"<p>\u76ee\u6807: \u5efa\u7acb\u5b8c\u6574\u7684\u76d1\u63a7\u544a\u8b66\u4f53\u7cfb</p> <p>\u4efb\u52a1\u6e05\u5355: - [ ] \u5b9e\u73b0MetricsCollector - [ ] \u96c6\u6210Prometheus\u76d1\u63a7 - [ ] \u5efa\u7acb\u544a\u8b66\u89c4\u5219 - [ ] \u521b\u5efa\u76d1\u63a7\u4eea\u8868\u677f - [ ] \u5b9e\u73b0\u544a\u8b66\u901a\u77e5</p> <p>\u9a8c\u6536\u6807\u51c6: - \u5173\u952e\u6307\u6807\u76d1\u63a7\u8986\u76d6 - \u544a\u8b66\u53ca\u65f6\u51c6\u786e - \u4eea\u8868\u677f\u6570\u636e\u5b8c\u6574</p>"},{"location":"02_architecture/hybrid_architecture_design.html#1-2_2","title":"\u7b2c\u4e94\u9636\u6bb5\uff1a\u6027\u80fd\u4f18\u5316\u548c\u6d4b\u8bd5 (1-2\u5468)","text":"<p>\u76ee\u6807: \u7cfb\u7edf\u6027\u80fd\u4f18\u5316\u548c\u5168\u9762\u6d4b\u8bd5</p> <p>\u4efb\u52a1\u6e05\u5355: - [ ] \u6027\u80fd\u538b\u529b\u6d4b\u8bd5 - [ ] \u5e76\u53d1\u5b89\u5168\u6d4b\u8bd5 - [ ] \u6545\u969c\u6062\u590d\u6d4b\u8bd5 - [ ] \u6570\u636e\u4e00\u81f4\u6027\u6d4b\u8bd5 - [ ] \u7528\u6237\u9a8c\u6536\u6d4b\u8bd5</p> <p>\u9a8c\u6536\u6807\u51c6: - \u7cfb\u7edf\u54cd\u5e94\u65f6\u95f4&lt;2\u79d2 - \u5e76\u53d1\u7528\u6237\u6570&gt;100 - \u6570\u636e\u51c6\u786e\u602799.9% - \u7cfb\u7edf\u53ef\u7528\u602799.5%</p>"},{"location":"02_architecture/hybrid_architecture_design.html#92","title":"9.2 \u98ce\u9669\u63a7\u5236\u63aa\u65bd","text":""},{"location":"02_architecture/hybrid_architecture_design.html#_6","title":"\u6280\u672f\u98ce\u9669","text":"\u98ce\u9669\u9879 \u98ce\u9669\u7b49\u7ea7 \u5f71\u54cd \u5e94\u5bf9\u63aa\u65bd Tushare API\u53d8\u66f4 \u4e2d \u6570\u636e\u83b7\u53d6\u5931\u8d25 \u7248\u672c\u9501\u5b9a\u3001\u9002\u914d\u5c42\u8bbe\u8ba1 \u6570\u636e\u6e90\u540c\u6b65\u5ef6\u8fdf \u4e2d \u6570\u636e\u4e0d\u4e00\u81f4 \u65f6\u95f4\u6233\u6821\u9a8c\u3001\u589e\u91cf\u540c\u6b65 \u7f13\u5b58\u6570\u636e\u8fc7\u671f \u4f4e \u6027\u80fd\u4e0b\u964d \u667a\u80fd\u9884\u52a0\u8f7d\u3001\u8fc7\u671f\u7b56\u7565 \u5e76\u53d1\u8bbf\u95ee\u51b2\u7a81 \u4e2d \u6570\u636e\u9519\u8bef \u9501\u673a\u5236\u3001\u961f\u5217\u7ba1\u7406"},{"location":"02_architecture/hybrid_architecture_design.html#_7","title":"\u4e1a\u52a1\u98ce\u9669","text":"\u98ce\u9669\u9879 \u98ce\u9669\u7b49\u7ea7 \u5f71\u54cd \u5e94\u5bf9\u63aa\u65bd \u6570\u636e\u6e90\u6210\u672c\u4e0a\u5347 \u4e2d \u8fd0\u8425\u6210\u672c\u589e\u52a0 \u6210\u672c\u76d1\u63a7\u3001\u7528\u91cf\u4f18\u5316 \u670d\u52a1\u4e2d\u65ad \u9ad8 \u4e1a\u52a1\u505c\u6b62 \u591a\u91cd\u5907\u4efd\u3001\u5feb\u901f\u6062\u590d \u6570\u636e\u8d28\u91cf\u95ee\u9898 \u4e2d \u8ba1\u7b97\u9519\u8bef \u6570\u636e\u6821\u9a8c\u3001\u8d28\u91cf\u76d1\u63a7"},{"location":"02_architecture/hybrid_architecture_design.html#93","title":"9.3 \u6210\u529f\u6307\u6807","text":""},{"location":"02_architecture/hybrid_architecture_design.html#_8","title":"\u6280\u672f\u6307\u6807","text":"<ul> <li>\u7cfb\u7edf\u53ef\u7528\u6027: \u226599.5%</li> <li>\u54cd\u5e94\u65f6\u95f4: \u22642\u79d2 (95%\u8bf7\u6c42)</li> <li>\u7f13\u5b58\u547d\u4e2d\u7387: \u226570%</li> <li>\u9519\u8bef\u7387: \u22640.1%</li> <li>\u6570\u636e\u51c6\u786e\u6027: \u226599.9%</li> </ul>"},{"location":"02_architecture/hybrid_architecture_design.html#_9","title":"\u4e1a\u52a1\u6307\u6807","text":"<ul> <li>API\u8c03\u7528\u6210\u672c: \u964d\u4f4e60%</li> <li>\u6570\u636e\u66f4\u65b0\u9891\u7387: \u63d0\u534750%</li> <li>\u7528\u6237\u6ee1\u610f\u5ea6: \u226590%</li> <li>\u7cfb\u7edf\u7ef4\u62a4\u6210\u672c: \u964d\u4f4e40%</li> </ul>"},{"location":"02_architecture/hybrid_architecture_design.html#10","title":"10. \u603b\u7ed3","text":""},{"location":"02_architecture/hybrid_architecture_design.html#101","title":"10.1 \u67b6\u6784\u4f18\u52bf\u603b\u7ed3","text":"<ol> <li>\u9ad8\u53ef\u9760\u6027: \u53cc\u6570\u636e\u6e90\u4fdd\u969c\uff0c\u5355\u70b9\u6545\u969c\u98ce\u9669\u964d\u4f4e90%</li> <li>\u9ad8\u6027\u80fd: \u591a\u5c42\u7f13\u5b58\u673a\u5236\uff0c\u6570\u636e\u8bbf\u95ee\u901f\u5ea6\u63d0\u534770%</li> <li>\u6210\u672c\u4f18\u5316: \u667a\u80fdAPI\u8c03\u7528\u7ba1\u7406\uff0c\u6210\u672c\u964d\u4f4e60%</li> <li>\u6613\u7ef4\u62a4: \u6a21\u5757\u5316\u8bbe\u8ba1\uff0c\u7ef4\u62a4\u6210\u672c\u964d\u4f4e40%</li> <li>\u53ef\u6269\u5c55: \u652f\u6301\u65b0\u6570\u636e\u6e90\u63a5\u5165\uff0c\u6269\u5c55\u6027\u5f3a</li> </ol>"},{"location":"02_architecture/hybrid_architecture_design.html#102","title":"10.2 \u5173\u952e\u6280\u672f\u521b\u65b0","text":"<ul> <li>\u667a\u80fd\u6570\u636e\u6e90\u8def\u7531: \u57fa\u4e8e\u5065\u5eb7\u72b6\u6001\u548c\u6027\u80fd\u7684\u52a8\u6001\u9009\u62e9</li> <li>\u591a\u5c42\u7ea7\u7f13\u5b58: \u5185\u5b58+Redis+\u6587\u4ef6\u7684\u4e09\u7ea7\u7f13\u5b58\u4f53\u7cfb</li> <li>\u81ea\u52a8\u964d\u7ea7\u6062\u590d: \u65e0\u4eba\u5de5\u5e72\u9884\u7684\u6545\u969c\u5904\u7406\u673a\u5236</li> <li>\u5b9e\u65f6\u76d1\u63a7\u544a\u8b66: \u5168\u65b9\u4f4d\u7684\u7cfb\u7edf\u72b6\u6001\u76d1\u63a7</li> </ul>"},{"location":"02_architecture/hybrid_architecture_design.html#103","title":"10.3 \u540e\u7eed\u53d1\u5c55\u65b9\u5411","text":"<ol> <li>AI\u9a71\u52a8\u4f18\u5316: \u57fa\u4e8e\u673a\u5668\u5b66\u4e60\u7684\u7f13\u5b58\u7b56\u7565\u4f18\u5316</li> <li>\u591a\u4e91\u90e8\u7f72: \u652f\u6301\u591a\u4e91\u73af\u5883\u7684\u6570\u636e\u6e90\u5206\u5e03</li> <li>\u5b9e\u65f6\u6d41\u5904\u7406: \u96c6\u6210\u6d41\u5f0f\u6570\u636e\u5904\u7406\u80fd\u529b</li> <li>\u8fb9\u7f18\u8ba1\u7b97: \u652f\u6301\u8fb9\u7f18\u8282\u70b9\u7684\u6570\u636e\u7f13\u5b58</li> </ol> <p>\u6587\u6863\u7248\u672c: v1.0 \u6700\u540e\u66f4\u65b0: 2025\u5e741\u6708 \u4e0b\u6b21\u5ba1\u6838: 2025\u5e743\u6708</p>"}]}